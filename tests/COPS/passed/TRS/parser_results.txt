
++ File:".\\tests\\COPS\\passed\\TRS\\999.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(x)) -> b(c(x)),c(b(x)) -> b(c(x)),c(b(x)) -> c(c(x)),b(b(x)) -> a(c(x)),a(b(x)) -> a(b(x)),c(c(x)) -> c(b(x)),a(c(x)) -> c(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\998.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> a(c(x)),c(a(x)) -> a(a(x)),b(a(x)) -> a(c(x)),b(c(x)) -> b(b(x)),a(a(x)) -> b(b(x)),c(c(x)) -> b(c(x)),a(b(x)) -> a(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\997.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> c(a(x)),c(a(x)) -> b(b(x)),c(a(x)) -> a(b(x)),a(b(x)) -> b(b(x)),c(b(x)) -> a(b(x)),a(c(x)) -> c(c(x)),c(b(x)) -> b(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\996.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> a(a(x)),a(a(x)) -> b(c(x)),a(c(x)) -> b(a(x)),b(a(x)) -> a(c(x)),a(b(x)) -> a(b(x)),b(c(x)) -> a(a(x)),a(b(x)) -> b(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\995.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(c(x)) -> c(c(x)),a(a(x)) -> a(b(x)),c(b(x)) -> c(a(x)),b(a(x)) -> c(a(x)),a(c(x)) -> c(a(x)),c(a(x)) -> a(b(x)),a(b(x)) -> c(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\994.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(x)) -> a(c(x)),c(c(x)) -> c(b(x)),c(c(x)) -> c(c(x)),a(c(x)) -> c(b(x)),b(c(x)) -> a(c(x)),c(c(x)) -> c(c(x)),c(b(x)) -> a(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\993.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(c(x)) -> b(b(x)),c(b(x)) -> a(c(x)),c(a(x)) -> a(c(x)),b(a(x)) -> a(b(x)),b(b(x)) -> a(c(x)),a(b(x)) -> b(c(x)),c(c(x)) -> a(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\992.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(c(x)) -> b(b(x)),a(c(x)) -> b(a(x)),b(a(x)) -> c(c(x)),c(b(x)) -> c(b(x)),b(b(x)) -> b(c(x)),b(c(x)) -> c(b(x)),c(c(x)) -> b(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\991.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(c(x)) -> b(a(x)),b(a(x)) -> c(b(x)),a(c(x)) -> a(b(x)),c(b(x)) -> a(a(x)),b(a(x)) -> b(c(x)),a(a(x)) -> b(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\990.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> a(a(x)),a(a(x)) -> b(b(x)),a(c(x)) -> c(c(x)),a(b(x)) -> c(a(x)),c(c(x)) -> a(a(x)),a(a(x)) -> a(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\99.trs" :
TRS {trsSignature = fromList [("B",1),("F",2),("G",1),("H",1),("I",1),("W",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [W(W(x)) -> W(x),B(I(x)) -> W(x),W(B(x)) -> B(x),F(H(x),y) -> F(H(x),G(y)),F(x,I(y)) -> F(G(x),I(y)),G(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\989.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(c(x)) -> b(b(x)),a(c(x)) -> b(b(x)),c(a(x)) -> c(b(x)),b(b(x)) -> a(c(x)),b(a(x)) -> b(b(x)),c(b(x)) -> b(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\988.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(x)) -> c(c(x)),c(a(x)) -> a(a(x)),c(b(x)) -> a(c(x)),c(c(x)) -> c(a(x)),a(b(x)) -> a(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\987.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(b(x)) -> b(c(x)),c(c(x)) -> c(b(x)),b(b(x)) -> c(a(x)),a(b(x)) -> b(b(x)),a(c(x)) -> c(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\986.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(x)) -> b(x),b(a(x)) -> a(b(x)),b(b(c(x))) -> c(a(x)),b(b(x)) -> a(a(a(x))),c(a(x)) -> b(a(c(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\985.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(c(x)) -> a(x),b(b(x)) -> a(c(x)),a(x) -> c(b(x)),c(c(c(x))) -> b(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\984.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("s",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(s(x)) -> s(a(x)),b(a(b(s(x)))) -> a(b(s(a(x)))),b(a(b(b(x)))) -> a(b(a(b(x)))),a(b(a(a(x)))) -> b(a(b(a(x))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\983.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(a(a(a(a(a(a(a(a(a(x))))))))))) -> a(a(a(a(a(a(a(a(a(a(a(b(a(b(x))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\982.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(x) -> x,a(a(x)) -> b(c(x)),b(x) -> x,c(x) -> x,c(b(x)) -> b(a(c(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\981.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(x)) -> a(b(b(c(x)))),b(a(x)) -> x,c(b(x)) -> a(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\980.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(x) -> b(x),b(b(c(x))) -> c(a(c(a(a(x))))),c(c(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\98.trs" :
TRS {trsSignature = fromList [("B",1),("E",1),("F",2),("G",1),("I",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [I(x) -> I(B(x)),F(E(x),x) -> G(x),E(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\979.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(x) -> b(x),a(b(x)) -> b(a(c(a(x)))),b(x) -> c(x),c(c(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\978.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(a(a(b(b(x))))) -> b(a(a(a(a(b(b(x))))))),b(a(b(b(x)))) -> b(b(x)),b(a(b(a(a(a(a(b(x)))))))) -> b(a(a(a(a(b(a(a(a(a(b(a(b(a(a(a(b(a(a(a(a(b(x)))))))))))))))))))))),b(a(a(b(a(a(a(a(b(x))))))))) -> b(a(b(a(a(b(a(a(a(b(a(a(a(a(b(x))))))))))))))),b(a(a(a(b(a(a(a(a(b(x)))))))))) -> b(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\977.trs" :
TRS {trsSignature = fromList [("0",1),("bar",1),("foo",1),("p",1),("s",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [foo(0(x)) -> 0(s(p(p(p(s(s(s(p(s(x)))))))))),foo(s(x)) -> p(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x)))))))))))))))))))))))))),bar(0(x)) -> 0(p(s(s(s(x))))),bar(s(x)) -> p(s(p(p(s(s(foo(s(p(p(s(s(x)))))))))))),p(p(s(x))) -> p(x),p(s(x)) -> x,p(0(x)) -> 0(s(s(s(s(x)))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\976.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(2(1(x))) -> 0(4(0(1(4(5(1(5(0(1(x)))))))))),1(1(3(x))) -> 1(2(1(2(2(2(5(1(4(2(x)))))))))),0(0(0(3(x)))) -> 4(2(4(0(2(5(3(3(4(5(x)))))))))),1(0(2(3(x)))) -> 1(1(2(5(4(1(2(4(3(2(x)))))))))),1(3(5(3(x)))) -> 3(5(4(5(2(4(3(2(5(4(x)))))))))),0(2(3(1(3(x))))) -> 1(0(1(2(1(3(1(3(1(2(x)))))))))),0(3(4(5(3(x))))) -> 2(0(2(5(1(2(4(4(5(5(x)))))))))),0(5(2(1(3(x))))) -> 2(4(2(5(2(4(3(0(2(4(x)))))))))),2(1(3(1(0(x))))) -> 0(1(4(5(1(5(5(2(3(0(x)))))))))),0(5(2(2(2(0(x)))))) -> 2(5(4(3(0(2(5(1(2(1(x)))))))))),2(0(0(5(2(0(x)))))) -> 4(0(4(2(1(4(4(4(0(1(x)))))))))),2(0(5(3(0(2(x)))))) -> 2(5(3(5(1(4(5(0(0(2(x)))))))))),2(1(0(2(1(5(x)))))) -> 2(5(4(1(3(2(2(5(4(5(x)))))))))),5(1(5(1(0(2(x)))))) -> 4(5(0(0(4(3(1(1(0(4(x)))))))))),0(5(2(2(2(1(0(x))))))) -> 0(3(2(3(1(4(1(0(1(0(x)))))))))),0(5(3(5(3(1(5(x))))))) -> 0(1(3(4(0(1(4(5(1(5(x)))))))))),1(1(5(1(4(4(3(x))))))) -> 1(0(3(4(4(1(0(2(5(5(x)))))))))),1(3(2(3(0(5(3(x))))))) -> 1(4(0(1(5(4(0(3(2(5(x)))))))))),1(5(2(4(2(1(1(x))))))) -> 4(4(1(4(1(4(3(1(0(3(x)))))))))),2(0(2(0(2(1(0(x))))))) -> 2(0(2(3(4(2(4(4(4(0(x)))))))))),2(4(5(5(1(3(5(x))))))) -> 2(1(2(1(4(4(4(3(4(4(x)))))))))),3(0(0(5(5(2(1(x))))))) -> 0(2(4(3(2(3(2(1(0(3(x)))))))))),3(1(5(2(3(0(5(x))))))) -> 5(3(4(0(4(5(2(0(0(4(x))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\975.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [5(5(x)) -> 0(5(4(0(2(5(4(5(2(1(x)))))))))),5(5(x)) -> 3(4(1(1(1(1(4(4(0(4(x)))))))))),2(5(5(x))) -> 4(2(5(4(4(0(0(1(1(2(x)))))))))),5(2(4(x))) -> 0(5(0(2(3(3(4(2(4(2(x)))))))))),5(5(2(x))) -> 0(1(3(2(3(0(3(2(5(3(x)))))))))),5(5(3(x))) -> 0(3(5(4(4(1(0(1(5(0(x)))))))))),5(5(5(x))) -> 5(3(4(1(0(1(4(5(0(0(x)))))))))),2(5(0(4(x)))) -> 4(4(3(2(4(4(5(1(0(0(x)))))))))),4(5(2(4(x)))) -> 4(1(5(5(2(0(3(1(3(3(x)))))))))),4(5(5(5(x)))) -> 1(5(1(2(0(3(2(1(0(5(x)))))))))),0(2(5(3(4(x))))) -> 3(2(4(3(1(5(1(1(3(4(x)))))))))),2(5(5(3(4(x))))) -> 4(5(4(3(1(4(0(2(4(4(x)))))))))),5(5(5(1(4(x))))) -> 3(3(0(5(0(4(3(4(4(0(x)))))))))),0(4(4(5(5(5(x)))))) -> 0(4(4(4(3(3(4(1(3(1(x)))))))))),1(2(4(5(2(4(x)))))) -> 3(3(5(3(0(4(0(3(1(3(x)))))))))),4(1(5(5(0(4(x)))))) -> 1(0(3(0(4(2(4(4(3(4(x)))))))))),4(2(5(5(1(5(x)))))) -> 2(3(4(2(1(1(3(4(2(5(x)))))))))),5(2(5(5(0(4(x)))))) -> 0(4(2(3(3(5(2(1(4(4(x)))))))))),5(5(2(4(5(0(x)))))) -> 2(1(1(4(2(4(0(4(2(0(x)))))))))),0(1(5(5(5(3(5(x))))))) -> 5(3(2(5(1(0(1(2(0(5(x)))))))))),4(4(5(2(4(2(2(x))))))) -> 4(0(5(5(4(5(1(2(2(1(x))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\974.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(1(2(3(4(5(1(x))))))) -> 1(2(3(4(5(1(1(0(1(2(3(4(5(0(1(2(3(4(5(x))))))))))))))))))),0(1(2(3(4(5(1(x))))))) -> 1(2(3(4(5(1(1(0(1(2(3(4(5(0(1(2(3(4(5(0(1(2(3(4(5(x)))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\973.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 0(1(0(1(0(0(1(1(1(0(1(0(1(1(1(0(0(1(0(0(1(0(1(1(0(0(1(0(1(1(1(1(1(0(0(0(1(1(1(0(1(1(0(0(1(1(1(0(1(0(1(0(0(0(1(1(0(0(0(0(1(1(1(0(0(1(1(0(1(0(1(0(1(1(1(0(1(1(1(1(1(1(0(1(1(1(1(0(1(0(1(0(1(1(0(1(1(1(0(0(0(1(0(0(0(0(0(0(1(0(0(1(0(0(0(1(1(0(0(0(0(0(0(0(1(0(1(0(1(1(0(0(0(1(1(0(0(0(1(1(1(1(1(0(0(1(1(0(1(1(0(0(0(1(0(0(0(1(1(0(1(0(1(1(0(0(1(0(1(1(1(0(1(0(0(1(0(1(1(0(1(1(1(0(1(1(0(1(1(1(1(1(1(0(1(1(1(0(0(0(0(1(1(1(0(1(1(0(0(1(1(0(1(1(0(1(1(0(0(0(1(0(1(0(0(0(1(1(1(1(0(1(1(0(0(0(1(0(0(0(1(0(0(0(0(1(1(0(1(1(1(0(0(0(0(0(1(1(1(1(0(0(1(1(0(0(1(1(1(1(1(1(0(0(0(1(0(0(0(1(0(1(1(1(1(0(1(0(1(0(0(0(0(1(0(1(1(1(1(1(0(0(0(0(0(0(0(0(0(1(0(0(0(1(0(1(0(1(1(0(0(0(1(0(0(0(1(0(1(0(0(0(0(1(1(1(1(0(0(0(0(1(1(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),1(0(1(0(0(1(0(0(0(1(1(0(0(1(0(1(0(0(1(0(0(1(0(1(1(1(1(0(1(1(1(0(0(1(1(0(1(1(0(0(0(1(1(0(1(0(1(0(0(0(1(1(1(1(1(1(1(0(0(1(1(0(0(1(0(1(0(0(1(1(1(1(0(0(0(0(1(0(1(1(0(0(0(1(1(0(0(0(0(0(0(1(0(0(0(1(0(0(0(1(0(0(0(0(0(0(0(1(0(1(1(0(1(0(1(1(0(0(1(1(1(0(1(1(1(1(0(0(1(1(0(0(0(0(0(0(0(0(1(1(1(1(1(1(1(0(1(1(0(1(1(0(1(1(1(0(0(1(1(0(1(1(1(0(0(0(1(1(1(0(1(1(0(1(0(1(1(0(1(0(1(0(1(1(1(0(0(0(0(0(1(1(0(0(0(1(0(0(0(0(1(0(0(1(0(1(1(1(1(0(1(1(1(1(1(1(1(0(1(0(1(0(0(0(1(1(0(1(0(1(0(1(1(0(0(0(0(0(1(1(1(0(1(1(0(1(0(0(1(1(0(1(1(1(1(1(1(0(0(1(0(0(1(0(1(0(1(0(0(0(0(1(0(0(0(0(0(1(1(1(0(0(1(1(1(0(1(0(1(0(0(0(1(1(0(0(0(1(1(1(1(0(0(1(1(1(1(1(0(0(1(0(0(0(1(1(1(1(0(0(0(1(0(0(1(0(0(1(1(1(1(1(0(1(1(0(0(0(1(0(0(0(0(1(0(1(0(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\972.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 1(1(1(0(1(1(0(0(0(0(0(1(1(0(1(1(1(0(0(1(0(1(1(0(1(1(1(1(0(0(0(1(1(1(1(0(0(1(0(0(0(1(1(0(1(0(0(0(0(1(0(1(0(1(0(1(0(1(0(0(1(0(1(1(0(1(1(0(0(0(0(0(1(1(0(1(0(0(0(1(0(0(0(0(1(0(0(1(1(1(1(1(1(1(1(0(0(1(0(0(0(0(0(1(0(1(0(1(1(1(0(1(1(1(1(0(0(0(1(0(0(0(0(1(0(1(1(0(0(0(1(0(0(0(1(0(0(0(0(1(0(0(0(0(1(1(0(1(1(0(1(0(0(1(1(1(1(1(1(0(0(1(0(0(0(0(0(0(1(1(1(1(1(1(1(1(1(1(1(1(0(1(1(0(0(0(0(0(0(1(1(0(1(1(1(1(0(1(1(0(1(1(1(1(1(1(0(0(0(1(1(0(1(0(0(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),0(0(1(1(1(1(0(0(0(0(0(0(0(0(1(1(0(0(1(1(0(1(1(0(1(0(0(0(1(0(0(0(1(1(0(1(0(1(1(1(0(1(1(1(0(0(0(0(0(0(0(0(1(1(0(0(0(1(0(1(1(1(0(1(1(0(1(0(0(0(1(0(0(1(1(1(0(1(1(0(0(1(0(1(1(0(0(1(1(1(1(0(1(0(1(0(1(1(0(0(1(1(0(0(0(1(0(1(0(0(0(1(1(0(1(1(0(1(0(1(0(1(1(1(1(1(1(1(1(0(1(0(0(0(1(0(1(0(1(0(0(1(0(1(1(1(1(0(0(0(1(0(1(1(1(1(0(1(0(0(1(1(1(1(0(1(0(0(0(1(1(1(0(0(1(1(0(0(1(1(1(1(0(0(0(0(1(1(0(0(1(0(0(1(0(0(0(1(0(1(0(1(1(1(1(1(0(0(1(1(0(0(1(0(0(1(0(0(1(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\971.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 0(1(1(0(1(1(1(1(0(0(0(0(0(0(1(1(1(1(0(0(0(0(1(0(0(0(0(1(1(1(0(1(1(1(1(1(1(0(0(0(0(1(1(1(1(1(1(1(1(0(0(0(0(1(1(0(0(1(0(0(0(0(0(0(1(0(0(0(1(1(1(0(1(0(0(0(1(1(0(0(1(0(0(0(0(0(1(0(0(1(1(1(0(1(0(1(1(1(0(1(0(1(1(1(0(1(0(0(1(0(1(1(1(1(0(1(0(1(0(1(1(0(1(0(0(1(0(0(0(1(0(1(1(1(1(0(1(0(1(0(1(1(0(0(0(0(0(1(0(0(0(1(0(1(1(1(1(0(1(1(0(0(0(0(0(1(0(0(1(1(1(1(0(0(0(0(0(1(0(0(1(1(0(0(0(1(0(0(0(1(1(0(0(1(0(0(1(1(0(0(1(0(0(0(1(0(1(0(0(0(0(0(0(0(0(1(1(0(0(1(0(1(1(0(0(0(0(1(1(1(1(1(1(1(0(0(0(1(1(0(1(1(0(0(1(0(1(1(0(1(1(0(1(1(1(0(1(0(0(0(1(1(1(0(1(0(1(0(1(0(1(1(1(1(1(0(1(0(0(1(1(1(1(0(1(0(1(1(1(1(0(1(1(1(0(1(1(1(0(0(1(0(1(0(1(0(0(1(1(1(1(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),0(1(0(1(0(1(0(0(0(0(1(0(0(1(1(0(1(1(0(0(1(0(0(0(1(0(1(1(1(1(1(1(1(1(0(0(0(1(1(1(0(0(1(0(0(1(0(0(0(1(1(0(0(0(0(1(0(0(1(1(0(1(0(1(1(1(1(1(1(1(1(1(0(1(1(0(1(0(0(0(1(0(0(1(0(1(1(1(1(1(1(1(0(0(0(0(1(1(0(1(1(0(0(1(0(0(1(0(1(0(1(1(0(0(0(1(1(0(1(1(1(1(0(0(1(0(0(1(1(0(0(0(0(0(1(0(0(1(1(1(0(1(1(0(0(1(0(0(1(1(1(0(1(0(0(1(0(1(1(0(1(1(0(1(1(0(0(1(0(1(0(0(0(0(1(1(0(0(0(1(1(0(0(1(0(1(1(1(1(1(1(1(1(0(0(0(0(0(1(0(1(0(1(1(1(0(1(0(1(1(1(1(1(1(1(0(1(1(0(1(0(0(0(1(1(1(0(1(1(0(0(0(0(0(0(0(0(0(0(0(0(1(0(0(0(1(1(1(1(1(0(0(1(0(1(0(1(0(0(0(1(0(1(1(1(0(0(1(1(0(0(1(1(0(0(0(1(1(1(1(1(1(0(0(1(0(0(0(0(1(0(1(1(0(1(1(1(0(0(0(1(0(1(0(1(0(1(0(0(0(1(0(0(0(1(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\970.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 0(0(1(0(1(1(0(1(0(0(1(0(1(0(1(1(0(1(1(0(1(0(1(0(1(0(1(1(0(0(0(1(1(1(0(1(0(0(0(0(1(1(0(1(0(1(0(1(0(1(1(0(1(0(1(1(1(0(1(0(1(1(1(0(0(0(1(0(0(1(1(0(0(0(0(1(1(1(1(0(1(0(0(0(1(0(0(0(1(1(1(0(0(0(1(1(0(1(0(0(1(0(1(0(0(1(0(0(1(0(1(1(0(1(0(0(1(0(0(0(0(0(1(1(1(1(0(0(1(1(1(0(1(1(0(1(1(1(1(1(0(0(1(1(0(0(1(0(0(0(0(1(0(1(0(0(0(0(1(1(0(1(0(0(1(1(1(0(1(0(0(0(1(1(0(1(0(0(1(0(0(1(1(1(1(1(1(0(1(0(0(1(0(1(0(1(1(0(1(1(0(0(1(1(1(1(0(0(1(1(1(0(1(1(0(1(0(0(0(1(0(1(0(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),0(1(1(0(1(0(0(0(1(1(1(1(1(1(1(1(1(1(1(0(0(1(1(0(1(1(1(0(1(0(1(1(0(1(0(1(1(0(0(0(1(1(0(1(1(1(0(1(0(1(0(0(0(0(0(1(0(0(1(0(1(0(1(1(1(0(0(1(0(1(0(0(0(1(1(0(0(1(1(0(1(1(1(1(1(1(1(1(1(0(0(1(0(0(0(0(1(0(0(1(0(0(0(1(0(0(1(0(1(1(1(1(1(0(0(1(1(0(0(0(1(0(0(0(0(1(1(1(1(0(1(1(1(1(0(0(0(1(1(0(1(0(1(0(0(0(0(1(0(0(1(1(1(0(1(0(0(0(0(0(0(0(1(0(1(0(0(1(0(0(0(0(0(0(0(0(1(0(1(1(0(1(1(1(1(0(1(0(0(0(0(0(1(1(1(1(0(0(0(0(0(0(1(0(0(1(1(1(1(1(0(0(0(1(1(1(0(0(1(1(1(1(1(0(0(1(1(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\97.trs" :
TRS {trsSignature = fromList [("A",1),("B",1),("F",2),("G",1),("H",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [F(x,A(G(x))) -> G(F(x,x)),F(x,G(x)) -> G(F(x,x)),A(x) -> x,H(x) -> H(B(H(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\969.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 1(0(0(1(0(0(1(0(1(0(1(1(0(1(1(0(1(1(1(1(0(0(1(1(0(1(1(1(1(0(1(1(0(0(0(0(0(0(1(0(0(1(1(0(0(0(0(0(1(0(1(1(1(0(0(0(0(0(1(0(1(0(1(1(0(1(0(1(0(1(0(0(1(1(0(0(0(0(1(0(1(0(0(0(0(1(0(1(0(1(0(1(0(1(0(1(1(0(0(1(1(0(1(1(1(0(0(0(0(0(1(0(1(0(1(1(0(1(0(0(1(1(1(1(0(1(0(1(0(0(1(0(1(1(1(1(0(0(1(1(1(0(0(1(1(0(1(1(0(0(0(1(0(0(0(1(1(0(1(1(1(1(1(1(0(1(1(0(1(1(1(1(0(1(0(1(1(0(0(1(0(1(1(1(0(0(1(1(1(1(0(0(0(0(0(0(1(1(0(1(1(0(1(0(1(0(0(1(0(0(0(1(0(1(1(0(0(1(1(1(0(0(0(0(0(1(1(1(0(0(1(1(0(1(0(0(0(0(1(0(0(1(0(0(0(0(1(0(0(1(1(1(1(0(1(1(0(0(0(1(1(0(0(1(0(1(1(1(1(0(0(0(1(1(1(1(1(0(1(0(1(1(0(1(0(1(0(0(0(0(0(1(1(0(1(0(0(0(1(0(0(1(1(0(0(1(1(1(0(0(0(1(1(0(1(0(1(0(1(0(1(1(0(0(1(1(1(1(0(1(1(0(1(1(0(0(1(1(1(1(0(0(1(1(0(0(1(0(1(1(0(1(1(1(0(0(1(0(0(0(0(0(0(0(1(1(1(0(0(1(1(0(1(1(0(0(0(0(1(0(1(1(0(0(1(0(1(1(1(1(0(1(0(0(0(0(1(1(1(0(1(0(1(1(0(0(0(1(0(0(0(0(1(0(0(1(0(0(0(1(0(1(0(1(1(1(0(0(0(0(0(0(1(1(0(1(1(1(1(0(0(0(1(0(0(0(0(0(1(0(1(0(1(1(1(1(1(1(1(1(1(1(1(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),1(0(0(0(1(1(0(1(1(1(0(0(1(1(1(0(0(0(0(0(1(1(0(1(1(1(0(1(1(0(1(1(1(0(1(1(0(0(1(0(1(1(0(0(0(0(0(0(0(0(1(0(1(0(1(1(0(1(0(1(0(1(0(0(0(1(1(1(0(1(1(1(0(1(0(1(0(1(0(1(0(1(0(1(1(0(1(1(0(1(0(1(1(0(0(0(0(1(1(0(1(1(0(1(1(1(0(1(1(1(1(0(0(0(0(1(1(1(1(0(1(0(0(0(1(1(1(1(0(1(0(1(1(1(1(0(0(1(0(0(1(0(0(1(0(1(0(0(0(1(0(1(0(0(1(0(1(1(0(1(1(0(1(1(1(1(0(1(0(1(1(1(0(0(1(0(1(1(0(0(0(0(1(0(1(0(1(0(1(0(0(0(0(0(0(0(1(1(0(1(0(0(1(1(0(1(0(1(1(0(1(0(1(1(0(1(0(1(1(0(0(0(0(0(0(1(1(1(1(1(0(0(1(1(1(1(0(1(1(0(1(1(0(1(1(1(0(0(0(0(1(0(1(1(1(0(1(0(1(0(0(1(1(1(1(0(1(1(0(1(1(0(1(0(0(0(0(1(0(0(0(0(0(0(0(0(0(1(1(1(1(1(1(1(0(0(0(0(0(0(0(1(0(0(1(0(0(0(0(0(0(0(1(1(1(0(0(1(1(1(1(0(1(0(0(0(1(0(1(0(0(1(1(1(0(1(1(0(0(0(1(0(1(0(1(0(0(1(0(0(0(1(1(0(1(0(1(0(1(1(1(0(1(0(0(1(0(0(1(0(1(1(0(1(0(0(0(0(1(0(0(1(1(0(0(0(0(1(1(0(1(0(0(0(1(0(0(1(1(0(0(1(1(0(1(0(1(0(0(1(1(0(1(0(1(0(0(1(1(1(1(0(0(0(1(1(0(0(0(1(0(1(1(1(0(1(1(1(0(1(1(1(0(0(0(1(1(0(1(1(1(0(0(0(1(1(0(1(0(1(1(0(1(1(1(0(1(0(xx)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\968.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 0(0(1(1(1(1(0(0(1(0(0(1(0(1(1(1(0(0(1(0(1(1(0(0(0(0(1(1(1(1(0(0(0(1(1(1(0(1(1(0(0(0(1(0(0(0(0(1(0(0(0(1(1(0(0(1(1(0(0(0(1(0(1(1(0(1(1(0(1(0(1(0(0(0(1(1(0(0(0(1(1(1(0(1(1(0(0(1(1(1(1(0(0(0(1(1(0(0(1(0(0(1(1(0(1(0(0(0(0(0(0(1(1(1(0(0(0(1(0(0(1(0(1(1(1(1(0(0(0(0(1(1(0(1(0(0(1(1(1(1(1(1(1(0(1(1(0(1(0(0(1(0(0(1(1(1(1(0(1(1(0(1(0(0(1(1(0(1(0(0(1(1(0(1(0(1(1(1(0(0(1(0(1(1(0(1(0(0(0(0(1(0(1(0(1(1(1(0(0(1(1(0(1(0(0(0(1(1(1(1(0(0(0(0(0(0(1(0(0(1(1(0(1(0(1(0(1(1(1(0(0(1(1(0(0(1(1(1(1(1(0(1(1(1(0(1(1(1(1(0(0(1(1(1(0(0(1(0(0(0(0(1(1(1(0(0(0(1(1(0(0(0(1(1(1(0(0(1(1(1(0(0(1(1(0(1(0(0(0(1(0(1(1(0(0(0(0(0(0(0(0(0(0(0(1(0(1(1(0(0(0(1(1(1(1(1(1(0(0(0(0(0(1(0(0(1(1(0(0(0(0(1(0(1(0(0(0(0(1(1(0(0(1(1(0(0(0(1(0(1(0(1(1(1(1(1(1(1(1(1(1(0(0(1(1(0(1(0(0(1(0(1(1(1(1(0(0(1(1(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),1(1(1(1(1(0(1(0(1(1(1(1(1(0(1(1(0(1(1(1(0(0(0(0(0(0(0(0(1(1(0(1(0(0(1(0(1(0(1(0(0(0(1(1(1(1(1(0(1(0(0(1(1(0(0(0(0(0(0(1(1(1(1(0(0(1(0(1(0(1(0(0(0(1(0(0(0(1(1(1(0(0(0(0(1(1(0(1(0(0(1(1(1(1(1(1(0(0(0(1(0(1(0(1(0(0(0(1(0(1(0(1(1(1(0(1(0(1(1(1(1(0(1(0(1(1(1(1(0(0(0(1(1(1(0(1(0(1(0(1(0(0(0(1(1(0(0(1(0(0(0(0(0(1(1(0(0(1(0(0(0(0(1(1(0(0(0(1(1(0(1(0(0(1(1(0(0(1(1(0(0(1(1(0(1(0(0(0(0(0(1(0(1(0(0(1(1(1(0(0(0(0(0(1(0(0(1(1(1(0(1(0(1(0(0(1(0(1(0(1(0(1(0(1(0(0(1(0(0(1(0(0(1(0(1(0(0(0(1(1(1(0(0(1(1(0(0(1(0(1(1(1(0(1(1(0(1(0(0(1(1(1(0(1(1(1(1(1(0(0(1(1(1(0(1(0(0(1(1(1(0(0(1(0(1(0(0(0(1(0(0(0(1(0(0(1(0(1(0(1(1(0(0(1(1(0(0(1(0(0(1(1(0(0(0(1(1(0(1(0(1(1(1(1(0(0(0(0(1(1(0(0(1(1(1(1(1(1(1(1(0(1(0(0(1(0(1(1(1(0(0(0(0(1(0(0(0(1(1(0(1(1(0(1(1(1(1(1(1(0(0(0(1(0(1(0(0(1(1(1(0(1(0(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\967.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 0(0(0(1(1(0(1(1(0(0(0(1(0(1(0(1(0(1(1(1(1(0(1(1(0(0(0(1(0(1(1(0(0(1(1(1(0(1(1(1(1(0(0(1(1(0(0(0(0(0(1(1(1(1(0(1(1(1(1(1(0(0(1(1(0(0(1(0(1(0(0(1(0(0(1(1(1(1(0(0(1(1(1(0(1(1(1(0(1(0(0(0(1(0(1(1(0(0(1(0(1(0(1(0(1(1(1(1(0(0(0(0(1(0(0(0(0(0(0(1(1(1(1(0(0(0(0(1(0(1(0(1(0(0(1(1(0(1(1(1(1(1(0(1(0(1(0(0(0(1(0(1(0(1(0(0(1(1(1(0(1(0(0(1(0(0(1(0(1(1(0(0(0(1(1(0(0(1(0(0(1(0(1(1(0(1(0(0(0(0(0(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),1(1(0(0(1(0(0(1(1(1(1(0(1(1(0(0(1(1(0(0(0(0(1(0(1(0(1(1(1(1(0(0(1(1(0(1(0(0(0(0(0(1(0(1(0(0(1(1(1(1(1(0(1(1(0(1(0(1(1(1(1(0(0(1(0(0(1(1(0(0(1(0(0(0(1(0(0(1(1(0(0(0(1(1(0(0(1(0(1(1(0(0(0(0(0(1(1(0(1(0(0(0(1(1(0(1(0(1(0(0(1(1(1(0(0(1(0(1(0(0(1(0(0(1(0(1(0(1(1(1(0(1(0(1(0(1(1(1(1(0(1(0(0(0(0(0(1(0(1(1(0(0(0(0(1(0(1(0(1(1(1(1(1(1(0(1(0(1(0(1(0(1(0(0(0(0(0(1(1(1(1(0(0(1(1(1(1(1(1(1(0(0(0(0(0(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\966.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 1(0(0(0(1(1(0(0(0(0(1(0(0(0(1(1(0(0(0(1(1(0(0(1(1(1(1(0(0(1(1(1(1(1(1(0(1(1(1(1(0(0(1(1(0(0(0(0(1(1(1(1(0(0(0(1(1(1(0(1(1(0(1(1(0(0(1(0(1(1(1(1(1(0(1(1(1(0(0(0(1(0(0(0(1(1(0(1(1(1(0(0(1(0(0(0(0(0(0(0(1(0(1(0(0(1(0(1(0(0(1(0(1(1(1(1(0(0(0(0(0(1(0(1(0(0(1(0(1(1(0(1(0(0(1(0(1(0(1(0(1(1(0(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),1(0(1(1(1(0(0(1(0(0(0(1(0(1(1(0(1(1(1(0(1(0(0(0(0(1(1(1(0(0(1(0(0(1(1(0(1(0(0(1(1(1(1(0(1(1(0(1(1(0(1(1(0(1(0(1(1(0(1(0(1(1(0(0(1(1(1(0(0(0(1(0(1(1(1(0(0(0(1(0(1(0(1(0(0(0(1(0(1(0(1(0(1(0(1(1(0(0(1(1(1(1(1(1(0(0(0(0(0(0(0(1(0(0(0(0(1(1(0(1(0(0(1(0(0(1(0(0(1(1(0(0(1(1(1(0(1(0(1(1(1(1(0(1(0(0(0(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\965.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 1(1(0(1(1(0(0(1(1(1(1(0(0(1(0(0(1(1(1(1(1(1(1(1(1(1(1(0(1(0(0(1(1(0(0(0(0(1(0(1(1(0(0(1(1(1(1(0(1(0(1(1(1(1(1(1(1(0(1(0(1(0(0(1(1(0(1(1(0(1(1(0(0(0(0(0(0(1(1(1(0(0(1(0(1(0(0(0(1(1(1(0(0(0(1(1(1(0(0(0(1(1(0(0(0(0(0(1(1(0(1(0(0(0(0(0(1(0(1(0(0(1(0(1(0(1(1(1(0(1(0(0(0(0(1(1(0(1(0(0(0(0(1(0(1(1(0(0(0(1(0(0(1(1(1(0(0(1(1(0(0(0(0(1(0(1(0(1(1(0(1(1(0(1(1(0(0(1(1(1(1(0(1(0(0(1(0(1(0(1(0(1(0(0(1(0(0(0(0(0(0(1(0(0(1(0(1(0(1(1(0(0(0(1(1(1(0(0(1(0(1(1(0(1(1(1(0(1(0(0(1(1(0(0(1(0(1(0(1(1(1(1(1(0(1(1(1(1(0(0(0(0(0(0(1(0(0(1(0(0(1(0(0(0(1(1(0(1(1(0(1(0(0(0(0(1(1(1(1(0(0(0(1(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),0(0(1(1(0(0(1(0(0(1(0(1(1(1(0(1(0(1(1(0(1(1(0(0(1(0(0(1(1(0(0(1(0(1(0(0(1(1(1(0(1(0(1(0(0(0(1(1(1(0(0(1(0(1(1(0(0(0(1(0(0(0(1(0(1(1(0(0(0(0(0(0(1(0(0(0(0(0(1(1(1(1(0(1(0(0(0(1(0(0(0(1(0(1(1(1(1(1(0(0(1(1(0(0(0(1(1(0(1(1(0(0(0(1(1(1(1(0(1(1(1(1(1(1(0(1(1(0(1(1(0(1(1(0(1(1(0(0(1(0(1(0(0(0(1(0(0(1(0(0(1(0(1(1(0(0(0(1(0(1(0(1(0(1(1(1(0(0(0(1(0(1(1(1(1(0(0(1(1(1(0(1(1(0(1(0(0(0(0(0(0(1(1(1(1(0(1(1(1(0(0(0(0(1(1(1(1(1(0(1(1(1(1(0(1(1(0(0(0(1(0(1(1(1(1(1(1(0(1(1(1(0(0(1(0(0(1(0(1(1(0(0(1(0(1(0(1(0(0(0(0(0(0(0(0(0(1(0(0(0(1(0(1(0(0(1(0(0(0(1(0(0(1(1(0(0(1(1(0(0(1(0(1(1(1(1(1(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\964.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))) -> 0(0(0(1(0(1(1(1(0(1(1(1(1(0(0(0(0(1(0(0(1(1(1(1(0(0(0(0(0(0(0(0(1(0(0(0(1(1(1(1(1(1(1(1(1(0(0(0(0(1(1(1(1(1(1(1(0(0(0(1(0(1(1(1(0(0(0(1(1(1(1(1(1(1(1(0(1(0(0(1(0(0(1(1(0(0(0(1(0(1(0(1(0(0(1(1(1(0(1(0(0(0(0(1(0(1(1(1(1(0(0(0(0(1(0(0(0(0(0(0(0(0(0(1(1(1(1(0(1(0(1(0(0(0(0(1(1(0(0(1(1(1(1(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),1(1(0(0(1(1(0(1(0(0(1(0(1(1(1(1(1(0(0(1(0(1(1(1(0(1(0(0(0(0(1(0(1(1(1(1(1(0(0(1(0(0(1(1(0(0(0(0(1(1(0(0(1(0(1(0(0(0(0(0(0(1(0(0(0(1(0(1(1(0(0(1(1(0(1(1(0(1(1(0(1(0(0(1(1(1(0(1(0(0(1(0(0(0(0(0(0(1(1(1(0(1(1(0(0(1(1(0(1(0(0(1(1(0(0(1(0(1(1(0(1(0(1(1(1(0(1(0(1(1(0(0(0(1(0(1(1(0(1(1(0(1(1(0(0(0(1(1(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\963.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(a(a(x))) -> a(x),a(a(a(x))) -> b(b(b(x))),b(b(x)) -> a(b(a(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\962.trs" :
TRS {trsSignature = fromList [("A",1),("B",1),("C",1),("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(x)) -> C(x),b(c(x)) -> A(x),c(a(x)) -> B(x),A(C(x)) -> b(x),C(B(x)) -> a(x),B(A(x)) -> c(x),a(a(a(a(x)))) -> A(A(A(x))),A(A(A(A(x)))) -> a(a(a(x))),b(b(b(b(x)))) -> B(B(B(x))),B(B(B(B(x)))) -> b(b(b(x))),c(c(c(c(x)))) -> C(C(C(x))),C(C(C(C(x)))) -> c(c(c(x))),B(a(a(a(x)))) -> c(A(A(A(x)))),A(A(A(b(x)))) -> a(a(a(C(x)))),C(b(b(b(x)))) -> a(B(B(B(x)))),B(B(B(c(x)))) -> b(b(b(A(x)))),A(c(c(c(x)))) -> b(C(C(C(x)))),C(C(C(a(x)))) -> c(c(c(B(x)))),a(A(x)) -> x,A(a(x)) -> x,b(B(x)) -> x,B(b(x)) -> x,c(C(x)) -> x,C(c(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\961.trs" :
TRS {trsSignature = fromList [("1",1),("b",1),("h",1),("s",1),("t",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [h(1(1(x))) -> 1(h(x)),1(1(h(b(x)))) -> 1(1(s(b(x)))),1(s(x)) -> s(1(x)),b(s(x)) -> b(h(x)),h(1(b(x))) -> t(1(1(b(x)))),1(t(x)) -> t(1(1(1(x)))),b(t(x)) -> b(h(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\960.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(x) -> x,a(b(x)) -> c(b(b(a(a(x))))),b(x) -> c(x),c(c(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\96.trs" :
TRS {trsSignature = fromList [("F",2),("G",1),("H",1),("I",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [F(H(x),y) -> F(H(x),I(I(y))),F(x,G(y)) -> F(I(x),G(y)),I(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\959.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(a(b(b(x)))) -> b(b(b(a(b(x))))),b(a(a(b(b(x))))) -> b(a(b(b(a(a(b(x))))))),b(a(a(a(b(b(x)))))) -> b(a(a(b(b(a(a(a(b(x)))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\958.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(b(x))) -> a(a(a(x))),a(a(a(x))) -> b(a(b(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\957.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("d",1),("e",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(x)) -> c(d(x)),d(d(x)) -> b(e(x)),b(x) -> d(c(x)),d(x) -> x,e(c(x)) -> d(a(x)),a(x) -> e(d(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\956.trs" :
TRS {trsSignature = fromList [("e",1),("i",1),("r",1),("t",1),("w",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [r(e(x)) -> w(r(x)),i(t(x)) -> e(r(x)),e(w(x)) -> r(i(x)),t(e(x)) -> r(e(x)),w(r(x)) -> i(t(x)),e(r(x)) -> e(w(x)),r(i(t(e(r(x))))) -> e(w(r(i(t(e(x))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\955.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(a(x))) -> b(b(b(a(x)))),b(b(b(a(x)))) -> a(a(a(b(x))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\954.trs" :
TRS {trsSignature = fromList [("0",1),("p",1),("s",1),("sq",1),("twice",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [sq(0(x)) -> p(s(p(s(p(p(p(p(s(s(s(s(0(p(s(p(s(x))))))))))))))))),sq(s(x)) -> s(p(s(p(s(p(p(s(s(twice(p(s(p(s(p(p(p(s(s(s(sq(p(p(p(p(p(p(s(s(s(s(s(s(x))))))))))))))))))))))))))))))))),twice(0(x)) -> p(p(p(p(s(s(p(s(s(s(0(p(p(p(s(s(s(p(p(s(s(p(s(p(s(p(s(x))))))))))))))))))))))))))),twice(s(x)) -> p(p(s(s(s(p(p(s(s(s(twice(p(s(p(s(x))))))))))))))),p(p(s(x))) -> p(x),p(s(x)) -> x,p(0(x)) -> 0(s(s(s(s(s(s(s(s(s(s(s(x)))))))))))),0(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\953.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(x)) -> a(b(a(x))),b(a(b(x))) -> a(c(a(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\952.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(1(2(1(x)))) -> 1(2(1(1(0(1(2(0(1(2(x)))))))))),0(1(2(1(x)))) -> 1(2(1(1(0(1(2(0(1(2(0(1(2(x))))))))))))),0(1(2(1(x)))) -> 1(2(1(1(0(1(2(0(1(2(0(1(2(0(1(2(x)))))))))))))))),0(1(2(1(x)))) -> 1(2(1(1(0(1(2(0(1(2(0(1(2(0(1(2(0(1(2(x))))))))))))))))))),0(1(2(1(x)))) -> 1(2(1(1(0(1(2(0(1(2(0(1(2(0(1(2(0(1(2(0(1(2(x)))))))))))))))))))))),0(1(2(1(x)))) -> 1(2(1(1(0(1(2(0(1(2(0(1(2(0(1(2(0(1(2(0(1(2(0(1(2(x)))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\951.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(1(2(3(4(x))))) -> 0(2(1(3(4(x))))),0(5(1(2(4(3(x)))))) -> 0(5(2(1(4(3(x)))))),0(5(2(4(1(3(x)))))) -> 0(1(5(2(4(3(x)))))),0(5(3(1(2(4(x)))))) -> 0(1(5(3(2(4(x)))))),0(5(4(1(3(2(x)))))) -> 0(5(4(3(1(2(x))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\950.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(0(1(0(x)))) -> 0(2(0(0(3(1(x)))))),0(0(1(0(x)))) -> 0(2(0(4(1(0(x)))))),0(0(1(0(x)))) -> 2(0(0(0(2(1(x)))))),3(0(1(0(x)))) -> 0(2(3(1(0(x))))),3(0(1(0(x)))) -> 3(1(0(0(2(x))))),3(0(1(0(x)))) -> 3(1(1(0(0(x))))),3(0(1(0(x)))) -> 3(1(2(0(0(x))))),3(0(1(0(x)))) -> 3(1(5(0(0(x))))),3(0(1(0(x)))) -> 3(5(1(0(0(x))))),3(0(1(0(x)))) -> 5(0(3(1(0(x))))),3(0(1(0(x)))) -> 2(0(2(3(1(0(x)))))),3(0(1(0(x)))) -> 2(2(0(3(1(0(x)))))),3(0(1(0(x)))) -> 3(1(5(0(0(0(x)))))),3(0(1(0(x)))) -> 3(1(5(0(2(0(x)))))),3(0(1(0(x)))) -> 3(1(5(1(0(0(x)))))),3(0(1(0(x)))) -> 3(1(5(2(0(0(x)))))),3(0(1(0(x)))) -> 3(1(5(5(0(0(x)))))),3(0(1(0(x)))) -> 3(2(2(1(0(0(x)))))),3(0(1(0(x)))) -> 3(5(1(0(0(2(x)))))),3(0(1(0(x)))) -> 3(5(1(5(0(0(x)))))),3(0(1(0(x)))) -> 5(1(1(3(0(0(x)))))),3(4(1(0(x)))) -> 3(1(2(4(0(x))))),3(4(1(0(x)))) -> 3(1(4(0(2(x))))),3(4(1(0(x)))) -> 3(1(5(4(0(x))))),3(4(1(0(x)))) -> 3(4(2(1(0(x))))),3(4(1(0(x)))) -> 3(1(1(5(4(0(x)))))),3(4(1(0(x)))) -> 3(1(2(1(4(0(x)))))),3(4(1(0(x)))) -> 3(1(2(5(4(0(x)))))),3(4(1(0(x)))) -> 3(1(4(2(0(2(x)))))),3(4(1(0(x)))) -> 3(1(5(4(0(2(x)))))),3(4(1(0(x)))) -> 3(1(5(5(4(0(x)))))),3(4(1(0(x)))) -> 3(4(2(1(1(0(x)))))),3(4(1(0(x)))) -> 3(4(5(1(2(0(x)))))),0(1(4(1(0(x))))) -> 0(1(1(4(0(2(x)))))),0(2(0(1(0(x))))) -> 0(2(0(0(3(1(x)))))),0(2(0(1(0(x))))) -> 2(0(0(0(3(1(x)))))),0(3(0(1(0(x))))) -> 0(0(3(1(3(0(x)))))),0(3(0(1(0(x))))) -> 0(0(3(3(1(0(x)))))),0(3(0(1(0(x))))) -> 0(0(3(5(1(0(x)))))),0(3(0(1(0(x))))) -> 2(0(0(3(1(0(x)))))),0(3(4(1(0(x))))) -> 0(2(0(4(3(1(x)))))),0(5(0(1(0(x))))) -> 0(0(0(1(5(2(x)))))),0(5(0(1(0(x))))) -> 0(0(1(5(1(0(x)))))),0(5(0(1(0(x))))) -> 0(2(0(0(1(5(x)))))),3(0(1(0(0(x))))) -> 3(1(3(0(0(0(x)))))),3(0(1(1(0(x))))) -> 3(1(0(1(2(0(x)))))),3(0(2(1(0(x))))) -> 2(0(3(1(1(0(x)))))),3(0(2(1(0(x))))) -> 2(3(1(5(0(0(x)))))),3(0(2(1(0(x))))) -> 3(1(2(0(1(0(x)))))),3(0(2(1(0(x))))) -> 3(1(2(0(5(0(x)))))),3(0(5(1(0(x))))) -> 3(1(5(2(0(0(x)))))),3(1(0(1(0(x))))) -> 2(0(3(1(1(0(x)))))),3(1(0(1(0(x))))) -> 3(1(1(1(0(0(x)))))),3(1(0(1(0(x))))) -> 3(1(2(1(0(0(x)))))),3(1(4(1(0(x))))) -> 3(1(2(1(4(0(x)))))),3(1(4(1(0(x))))) -> 3(1(5(1(4(0(x)))))),3(2(0(1(0(x))))) -> 0(2(3(1(5(0(x)))))),3(2(0(1(0(x))))) -> 2(0(3(1(1(0(x)))))),3(3(0(1(0(x))))) -> 3(1(2(0(3(0(x)))))),3(3(0(1(0(x))))) -> 3(1(2(3(0(0(x)))))),3(3(4(1(0(x))))) -> 3(1(2(4(3(0(x)))))),3(3(4(1(0(x))))) -> 3(1(3(4(0(2(x)))))),3(3(4(1(0(x))))) -> 3(1(4(3(1(0(x)))))),3(4(0(1(0(x))))) -> 0(2(4(1(3(0(x)))))),3(4(0(1(0(x))))) -> 3(1(4(0(0(2(x)))))),3(4(0(1(0(x))))) -> 3(2(0(4(1(0(x)))))),3(4(4(1(0(x))))) -> 3(1(1(4(4(0(x))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\95.trs" :
TRS {trsSignature = fromList [("B",1),("I",1),("S",1),("W",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [W(B(x)) -> I(x),B(S(x)) -> S(x),W(x) -> I(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\949.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(0(0(1(2(1(1(1(0(0(1(0(1(x))))))))))))) -> 0(0(1(0(1(1(0(2(0(0(2(0(1(0(1(0(1(x))))))))))))))))),0(0(1(0(0(1(1(1(0(1(2(0(1(x))))))))))))) -> 0(1(1(0(0(1(0(1(1(1(1(0(2(0(1(1(1(x))))))))))))))))),0(0(1(0(1(0(1(0(0(1(0(2(0(x))))))))))))) -> 0(1(1(1(0(1(1(2(1(2(0(1(1(1(0(1(1(x))))))))))))))))),0(0(1(1(1(1(1(2(1(1(2(1(1(x))))))))))))) -> 0(1(2(0(1(0(0(1(2(1(0(0(1(0(1(1(1(x))))))))))))))))),0(1(0(2(0(2(1(0(0(1(0(1(1(x))))))))))))) -> 0(0(0(1(1(1(1(1(0(2(2(0(1(1(1(0(1(x))))))))))))))))),0(1(0(2(2(1(1(2(1(2(2(0(1(x))))))))))))) -> 0(1(2(2(0(0(1(0(1(0(2(1(0(2(2(0(1(x))))))))))))))))),0(1(1(0(1(1(0(1(0(2(1(0(0(x))))))))))))) -> 0(1(2(0(1(1(0(1(1(1(1(1(0(0(1(0(0(x))))))))))))))))),0(1(1(1(2(1(2(0(1(2(1(0(1(x))))))))))))) -> 0(1(0(1(0(1(1(0(0(1(0(2(0(1(0(0(1(x))))))))))))))))),0(2(0(0(1(1(2(0(1(0(1(0(2(x))))))))))))) -> 0(0(1(2(0(0(1(0(1(0(1(1(0(0(1(1(1(x))))))))))))))))),1(0(2(0(0(2(0(1(2(0(1(0(1(x))))))))))))) -> 1(1(0(0(1(0(2(1(2(0(1(1(1(0(1(1(1(x))))))))))))))))),1(0(2(0(2(1(0(2(0(1(1(2(0(x))))))))))))) -> 1(2(0(2(0(0(1(0(1(0(0(0(1(2(0(1(0(x))))))))))))))))),1(1(0(0(2(2(2(0(1(2(0(1(1(x))))))))))))) -> 1(0(1(1(1(0(0(1(2(0(1(2(0(0(0(0(1(x))))))))))))))))),1(2(0(1(0(2(0(1(0(1(2(1(0(x))))))))))))) -> 1(0(1(1(2(0(1(0(0(1(0(0(1(0(1(2(0(x))))))))))))))))),1(2(1(2(0(0(0(1(1(1(0(0(1(x))))))))))))) -> 1(1(1(1(0(2(0(1(1(0(1(1(2(2(0(0(1(x))))))))))))))))),2(0(0(0(2(2(0(2(2(0(1(0(1(x))))))))))))) -> 2(0(0(1(1(2(1(1(2(0(0(1(2(1(2(0(1(x))))))))))))))))),2(0(2(1(0(0(1(0(0(0(1(1(1(x))))))))))))) -> 0(2(1(2(1(0(1(1(1(0(1(0(1(0(0(1(1(x))))))))))))))))),2(0(2(1(1(1(1(0(2(0(1(0(1(x))))))))))))) -> 2(1(2(0(2(0(1(0(1(2(0(1(0(1(1(1(1(x))))))))))))))))),2(1(2(2(1(1(2(2(0(1(1(0(1(x))))))))))))) -> 2(1(1(1(2(0(1(2(2(0(0(0(1(1(1(0(1(x))))))))))))))))),2(2(1(1(1(1(0(1(1(2(0(1(0(x))))))))))))) -> 0(1(0(1(1(1(1(1(2(2(0(1(2(1(1(1(0(x)))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\948.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("s",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(s(x)) -> s(a(x)),b(a(b(s(x)))) -> a(b(s(a(x)))),b(a(b(b(x)))) -> c(s(x)),c(s(x)) -> a(b(a(b(x)))),a(b(a(a(x)))) -> b(a(b(a(x))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\947.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(b(b(x)))) -> b(b(b(a(a(a(x)))))),c(x) -> c(a(x)),c(x) -> c(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\946.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(x)) -> b(b(b(x))),b(b(b(b(x)))) -> a(a(a(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\945.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(b(b(x)))) -> b(b(b(b(b(a(a(a(a(a(x))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\944.trs" :
TRS {trsSignature = fromList [("B",1),("C",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [C(x) -> c(x),c(c(x)) -> x,b(b(x)) -> B(x),B(B(x)) -> b(x),c(B(c(b(c(x))))) -> B(c(b(c(B(c(b(x))))))),b(B(x)) -> x,B(b(x)) -> x,c(C(x)) -> x,C(c(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\943.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("d",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(x)) -> b(c(x)),b(b(x)) -> c(d(x)),c(c(x)) -> d(d(d(x))),d(d(d(x))) -> a(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\942.trs" :
TRS {trsSignature = fromList [("P",1),("Q",1),("p",1),("q",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [P(x) -> Q(Q(p(x))),p(p(x)) -> q(q(x)),p(Q(Q(x))) -> Q(Q(p(x))),Q(p(q(x))) -> q(p(Q(x))),q(q(p(x))) -> p(q(q(x))),q(Q(x)) -> x,Q(q(x)) -> x,p(P(x)) -> x,P(p(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\941.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(c(a(b(c(x)))))) -> a(b(b(c(b(c(a(x)))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\940.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(b(a(b(a(b(a(b(x))))))))) -> a(b(a(b(a(b(a(b(a(a(a(a(a(b(x))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\94.trs" :
TRS {trsSignature = fromList [("D",1),("E",1),("F",2),("G",1),("H",1),("I",1),("J",1),("K",1),("S",2),("T",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [F(D(x),y) -> F(D(x),G(G(y))),F(x,E(y)) -> F(G(x),E(y)),G(x) -> x,H(I(x)) -> K(J(x)),J(x) -> K(J(x)),I(x) -> I(J(x)),J(x) -> J(K(J(x))),S(x,T(x)) -> T(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\939.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(a(b(x))) -> b(a(a(a(b(x))))),b(a(a(a(b(a(a(b(x)))))))) -> b(a(a(b(a(a(b(a(a(a(b(b(x)))))))))))),b(a(a(a(b(a(a(a(b(x))))))))) -> b(x),b(a(a(a(b(b(b(x))))))) -> b(b(b(a(a(a(b(x))))))),b(a(a(b(b(x))))) -> b(x),b(b(a(a(b(x))))) -> b(x),b(a(a(a(b(a(b(x))))))) -> b(x),b(a(b(a(a(a(b(x))))))) -> b(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\938.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(c(x))) -> c(c(c(b(b(b(a(a(a(x))))))))),c(b(x)) -> a(a(a(x))),a(x) -> x,b(x) -> x,c(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\937.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("3",1),("4",1),("5",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [0(x) -> 1(x),0(0(x)) -> 0(x),3(4(5(x))) -> 4(3(5(x))),2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 0(0(1(0(0(0(1(1(1(0(1(1(1(1(1(0(0(1(0(0(1(0(1(1(0(1(0(0(1(1(0(0(0(1(0(1(1(0(0(0(1(0(0(0(1(1(0(0(0(1(1(1(0(1(1(0(0(1(0(1(1(1(0(1(0(0(0(1(1(0(0(1(1(1(1(1(0(1(0(0(0(1(0(0(0(0(0(1(0(1(1(0(1(1(0(0(0(1(0(0(0(0(0(1(1(1(0(1(1(0(1(1(1(0(1(0(0(1(0(0(0(0(0(0(1(0(0(1(0(1(1(0(1(0(1(1(1(1(1(1(1(1(1(0(1(1(1(1(1(1(0(1(1(1(1(0(1(0(1(1(1(0(1(1(0(0(1(1(0(1(0(1(0(0(1(0(0(0(0(0(1(0(0(0(1(1(1(0(1(0(1(0(1(1(1(0(0(1(0(1(0(0(0(1(1(0(0(0(1(1(1(0(0(0(0(0(1(0(1(1(0(1(1(1(0(0(0(0(1(1(0(0(0(1(1(1(0(0(0(1(1(0(1(0(0(1(0(0(0(1(0(0(0(1(0(0(1(1(0(0(0(0(1(1(1(0(0(0(1(1(1(0(1(1(1(1(1(1(1(1(1(1(1(0(0(0(1(0(0(0(1(1(0(1(0(0(1(1(1(1(0(1(1(1(1(1(0(0(0(0(0(0(1(1(0(0(0(1(0(0(1(1(1(1(0(0(0(0(1(0(0(1(1(0(1(0(1(1(0(0(0(1(1(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),0(1(0(0(1(1(1(1(1(1(0(1(1(0(1(1(0(1(0(0(0(1(0(0(0(1(1(1(1(0(1(0(1(0(1(1(0(1(1(1(1(1(0(0(1(0(1(1(0(1(0(0(1(0(1(1(0(1(0(1(1(1(0(1(1(1(0(0(0(0(1(0(0(1(1(0(0(1(1(0(0(1(0(0(1(1(1(1(1(1(1(0(1(0(0(0(1(0(1(0(0(0(1(1(0(1(0(1(1(1(1(0(0(0(0(1(0(1(1(1(1(1(0(1(1(1(0(0(1(0(1(1(1(1(0(1(1(0(0(0(1(0(0(1(0(1(0(1(1(0(0(1(1(0(1(0(0(1(1(1(0(1(0(1(0(1(1(0(1(0(1(0(0(1(0(0(0(0(1(1(1(1(0(1(0(0(0(0(0(0(0(1(1(0(1(1(0(1(0(0(1(1(1(1(0(1(0(1(0(0(0(1(0(1(0(0(1(0(1(0(0(1(1(0(1(1(1(0(1(0(1(0(0(0(1(0(0(1(0(1(0(0(1(1(1(0(1(0(1(1(0(1(0(0(0(1(1(1(1(1(0(0(0(0(1(0(1(0(1(0(0(0(1(0(0(0(0(0(1(0(1(1(0(0(0(0(0(1(0(1(0(0(0(0(1(1(1(0(0(0(0(0(1(1(1(0(1(0(1(0(0(0(0(1(1(1(0(0(1(1(1(1(0(1(0(0(1(0(1(0(1(0(1(0(0(1(1(1(1(1(0(0(0(1(0(0(0(0(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\93.trs" :
TRS {trsSignature = fromList [("F",2),("G",1),("H",1),("I",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [F(H(x),y) -> G(H(x)),H(I(x)) -> I(x),F(I(x),y) -> G(I(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\92.trs" :
TRS {trsSignature = fromList [("B",1),("I",1),("J",1),("W",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [W(B(x)) -> W(x),B(I(x)) -> J(x),W(I(x)) -> W(J(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\91.trs" :
TRS {trsSignature = fromList [("a",2),("b",1),("f",1),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [a(f(x),y) -> f(a(f(y),x)),a(b(x),y) -> a(x,b(x)),a(g(x),x) -> g(b(g(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\90.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x)) -> f(g(f(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\9.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(f(x))) -> g(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\89.trs" :
TRS {trsSignature = fromList [("a",1),("f",2),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,a(g(x))) -> g(f(x,x)),f(x,g(x)) -> g(f(x,x)),a(x) -> x,h(x) -> h(a(h(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\88.trs" :
TRS {trsSignature = fromList [("f",1),("p",1),("q",1),("r",1),("s",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [p(x) -> q(x),p(x) -> r(x),q(x) -> s(p(x)),r(x) -> s(p(x)),s(x) -> f(p(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\87.trs" :
TRS {trsSignature = fromList [("f",1),("g",1),("h",1),("p",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> g(f(x)),h(x) -> p(h(x)),f(x) -> h(f(x)),g(x) -> p(p(h(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\86.trs" :
TRS {trsSignature = fromList [("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> g(x),f(x) -> h(f(x)),h(f(x)) -> h(g(x)),g(x) -> h(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\85.trs" :
TRS {trsSignature = fromList [("f",1),("g",1),("h",2),("s",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(x)) -> h(g(x),g(x)),f(s(x)) -> h(s(x),s(x)),g(x) -> s(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\84.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1),("g",1)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> b,f(a) -> g(a),f(b) -> g(b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\83.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("d",1),("f",1),("g",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),d(0) -> 0,d(s(x)) -> s(s(d(x))),f(0) -> 0,f(s(x)) -> +(+(s(x),s(x)),s(x)),f(g(0)) -> +(+(g(0),g(0)),g(0)),g(x) -> s(d(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\82.trs" :
TRS {trsSignature = fromList [("a",0),("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a) -> f(f(a)),f(x) -> f(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\81.trs" :
TRS {trsSignature = fromList [("a",0),("f",1),("g",1)], trsVariables = fromList [], trsRMap = [], trsRules = [g(f(a)) -> f(g(f(a))),g(f(a)) -> f(f(a)),f(f(a)) -> f(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\804.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a) -> g(h(a,b)),g(g(a)) -> f(b),h(x,x) -> g(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\803.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2),("g",2),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [g(a,y) -> y,f(x,a) -> f(x,g(x,b)),g(h(x),y) -> g(x,h(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\802.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",3)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,b,x) -> f(x,x,x),a -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\801.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> f(a,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\800.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1),("g",1)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> b,f(g(a)) -> f(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\80.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> f(a,b),f(a,b) -> f(b,a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\8.trs" :
TRS {trsSignature = fromList [("+",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(x,y)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\797.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> c,a -> b,b -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\795.trs" :
TRS {trsSignature = fromList [("f",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(x,f(y,z)) -> f(f(x,y),f(x,z)),f(f(x,y),z) -> f(f(x,z),f(y,z)),f(f(x,y),f(y,z)) -> y], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\79.trs" :
TRS {trsSignature = fromList [("c",0),("f",3),("g",1),("h",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,x,y) -> h(y,c),g(x) -> f(x,c,g(c)),c -> h(c,c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\78.trs" :
TRS {trsSignature = fromList [("join",2),("joint",2),("meet",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [join(x,meet(x,y)) -> x,meet(x,joint(y,z)) -> join(meet(x,y),meet(x,z)),meet(x,x) -> x,join(x,x) -> x,meet(meet(x,y),z) -> meet(x,meet(y,z)),meet(x,y) -> meet(y,x),join(join(x,y),z) -> join(x,join(y,z)),join(x,y) -> join(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\77.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("-",1),("0",0),("1",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,x) -> x,+(-(x),x) -> 0,+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),-(0) -> 0,-(-(x)) -> x,-(+(x,y)) -> +(-(x),-(y)),*(1,x) -> x,*(x,+(y,z)) -> +(*(x,y),*(x,z)),*(*(x,y),z) -> *(x,*(y,z)),*(x,y) -> *(y,x),*(x,0) -> 0,*(x,-(y)) -> -(*(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\765.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("and",2),("xor",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [xor(x,0) -> x,xor(0,x) -> x,xor(x,x) -> 0,and(x,0) -> 0,and(0,x) -> 0,and(x,1) -> x,and(1,x) -> x,and(x,x) -> x,xor(xor(x,y),z) -> xor(x,xor(y,z)),xor(x,xor(y,z)) -> xor(y,xor(x,z)),xor(x,y) -> xor(y,x),xor(x,xor(x,y)) -> y,and(and(x,y),z) -> and(x,and(y,z)),and(x,and(y,z)) -> and(y,and(x,z)),and(x,y) -> and(y,x),and(x,and(x,y)) -> and(x,y),and(x,xor(y,z)) -> xor(and(x,y),xor(x,z)),and(xor(x,y),z) -> xor(and(x,z),and(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\763.trs" :
TRS {trsSignature = fromList [("f",1),("g",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x)) -> f(g(f(x),f(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\762.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",2),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> b,f(a,b) -> f(a,a),f(b,a) -> f(a,a),f(a,a) -> c,g(x) -> f(x,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\761.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> b,a -> d,b -> a,c -> a,c -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\760.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> f(f(x)),g(x) -> f(x),f(x) -> g(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\76.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,x) -> x,+(-(x),x) -> 0,+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),-(0) -> 0,-(-(x)) -> x,-(+(x,y)) -> +(-(x),-(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\75.trs" :
TRS {trsSignature = fromList [("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> x,f(x) -> f(f(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\741.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2),("false",0),("g",1),("if",3),("true",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [if(true,a,x) -> a,if(true,b,x) -> b,if(true,g(a),x) -> g(a),if(true,g(b),x) -> g(b),if(false,x,a) -> a,if(false,x,b) -> b,if(false,x,g(a)) -> g(a),if(false,x,g(b)) -> g(b),g(a) -> g(g(a)),g(b) -> a,f(a,b) -> b,f(g(g(a)),x) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\740.trs" :
TRS {trsSignature = fromList [("a",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,f(x,a)) -> f(a,f(f(a,a),a))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\74.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> c,b -> c,f(a,b) -> d,f(x,c) -> f(c,c),f(c,x) -> f(c,c),d -> f(a,c),d -> f(c,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\739.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> a,g(g(a)) -> b,g(g(x)) -> g(g(g(b)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\738.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> a,f(b,a) -> f(a,b),f(x,a) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\737.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,f(a,x)) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\736.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> a,f(f(x,a),a) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\735.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> a,a -> b,f(a,a) -> f(b,f(f(a,b),a))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\734.trs" :
TRS {trsSignature = fromList [("a",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,f(a,x)) -> f(f(a,a),a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\733.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x0"], trsRMap = [], trsRules = [a -> a,a -> b,a -> f(a,a),f(b,b) -> f(a,b),f(x0,a) -> f(b,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\732.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x0"], trsRMap = [], trsRules = [a -> a,a -> b,a -> f(a,a),f(b,b) -> f(a,a),f(x0,a) -> f(a,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\731.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> a,a -> b,f(b,b) -> f(a,b),f(x,a) -> f(a,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\73.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(g(x))) -> a,f(g(h(x))) -> b,f(h(g(x))) -> b,f(h(h(x))) -> c,g(x) -> h(x),a -> b,b -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\721.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> h(b,a),b -> h(f(b),f(h(b,a)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\720.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> f(f(b)),f(a) -> c,f(a) -> b,b -> f(h(a,b))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\72.trs" :
TRS {trsSignature = fromList [("F",1),("G",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [F(c(x)) -> G(x),G(x) -> F(x),c(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\719.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> f(b),c -> b,f(f(f(c))) -> a,f(h(b,b)) -> h(h(c,a),b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\718.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(c,c) -> h(b,f(b)),f(h(a,h(c,a))) -> c,h(c,b) -> f(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\717.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> c,f(f(c)) -> h(a,h(h(c,c),b)),f(f(a)) -> b,b -> f(f(b))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\716.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> h(a,f(b)),f(f(h(a,a))) -> f(f(f(a))),f(h(a,h(a,a))) -> f(a),f(h(h(b,a),h(f(c),c))) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\715.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> c,b -> f(c),h(b,h(a,f(h(a,f(f(f(b))))))) -> h(a,f(a)),b -> h(b,a),h(f(b),c) -> f(c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\714.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> h(f(a),c),a -> f(c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\713.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> c,h(h(b,b),a) -> a,f(a) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\712.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> a,f(c) -> f(h(b,c)),a -> c,c -> h(f(c),h(b,h(h(b,c),a))),c -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\711.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(h(f(b),a)) -> b,f(c) -> b,b -> f(b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\710.trs" :
TRS {trsSignature = fromList [("b",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> f(b),c -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\71.trs" :
TRS {trsSignature = fromList [("F",2),("G",1),("c",1),("f",1),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [F(x,y) -> c(y),G(x) -> x,f(x) -> g(x),g(x) -> c(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\709.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> c,a -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\708.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(f(f(c)),h(c,h(c,h(h(f(b),f(f(f(f(b))))),b)))) -> h(h(a,a),f(c)),h(b,h(c,h(b,h(a,b)))) -> a,f(c) -> f(f(a)),a -> f(f(b))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\707.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> a,f(f(c)) -> c,f(c) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\706.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(h(c,c)) -> a,a -> b,f(b) -> f(c),c -> f(c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\705.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> c,c -> a,c -> h(a,c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\704.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> f(a),h(c,a) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\703.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> f(f(h(a,c))),h(h(h(c,f(h(f(h(h(c,c),c)),b))),h(h(a,c),h(f(a),h(f(f(c)),h(c,b))))),h(f(a),c)) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\702.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(b,a) -> a,a -> c,h(c,c) -> a,f(b) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\701.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(h(b,c)) -> c,a -> h(h(h(f(a),b),h(c,c)),f(b)),h(f(a),a) -> h(c,a),b -> b,h(h(b,f(b)),h(a,c)) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\700.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> a,f(h(a,a)) -> f(b),c -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\70.trs" :
TRS {trsSignature = fromList [("A",0),("B",0),("C",1),("F",2),("a",0),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [F(x,C(x)) -> A,F(x,x) -> B,a -> g(C(a)),g(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\7.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x)) -> g(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\699.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(h(b,h(h(c,h(a,f(h(f(c),c)))),h(h(h(h(a,c),h(f(a),b)),b),f(f(a))))),f(h(a,c))) -> c,c -> h(f(h(f(h(b,h(c,b))),f(a))),h(c,h(f(h(b,h(a,h(h(h(c,c),a),b)))),c))),c -> h(h(c,h(a,f(h(c,c)))),a),a -> c,b -> h(c,h(a,c))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\698.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> f(h(b,b)),c -> b,b -> b,c -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\697.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(h(c,a),b) -> b,a -> h(a,b),a -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\696.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(a,c) -> b,c -> a,b -> f(b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\695.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(a,a) -> c,b -> h(b,a),b -> a,f(c) -> c,c -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\694.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> b,h(b,a) -> b,a -> f(a),h(a,h(c,c)) -> f(h(b,f(c))),f(h(b,f(c))) -> f(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\693.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> b,a -> a,b -> b,f(f(a)) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\692.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(a,b) -> a,f(c) -> f(c),c -> h(a,h(b,b))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\691.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(a,a) -> f(c),a -> a,a -> a,b -> h(c,a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\690.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(f(f(c)),b) -> f(h(h(h(c,h(f(h(c,f(b))),a)),b),c)),c -> c,f(f(h(h(f(a),a),c))) -> f(h(f(c),b)),h(f(h(f(b),h(h(f(h(c,f(c))),b),a))),h(a,c)) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\69.trs" :
TRS {trsSignature = fromList [("A",0),("F",2),("G",1),("c",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [F(x,y) -> c(A),G(x) -> x,h(x) -> c(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\689.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> h(h(b,a),f(a)),h(h(a,c),b) -> b,c -> h(h(a,h(a,h(c,b))),f(f(h(h(a,h(h(f(a),c),f(c))),f(h(b,a))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\688.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> h(c,c),f(c) -> c,f(b) -> b,a -> b,a -> h(h(a,a),h(c,b))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\687.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> f(b),h(a,c) -> b,f(a) -> c,c -> a,c -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\686.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> h(c,f(b)),a -> c,h(h(h(f(a),a),a),f(f(f(h(h(f(b),b),b))))) -> a,c -> h(f(h(c,f(f(c)))),f(b))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\685.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> c,a -> f(h(h(f(a),f(f(c))),b)),c -> a,h(c,f(b)) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\684.trs" :
TRS {trsSignature = fromList [("b",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> c,b -> f(c),c -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\683.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(h(b,a)) -> a,f(f(f(c))) -> c,b -> c,c -> c,a -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\682.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(a,a) -> b,b -> c,f(f(h(b,a))) -> a,a -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\681.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(f(f(f(h(c,h(b,c))))),h(f(f(b)),b)) -> f(h(b,f(a))),f(c) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\680.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> f(a),a -> c,a -> a,h(c,f(f(f(a)))) -> h(f(f(c)),h(b,a)),f(f(f(f(h(h(c,h(f(c),f(f(h(h(h(h(f(a),a),c),a),h(h(h(b,a),f(h(f(h(f(b),f(f(b)))),a))),h(c,f(h(b,f(f(h(h(c,f(a)),a)))))))))))),f(f(b))))))) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\68.trs" :
TRS {trsSignature = fromList [("b",1),("w",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(w(x)) -> w(w(w(b(x)))),w(b(x)) -> b(x),b(b(x)) -> w(w(w(w(x)))),w(w(x)) -> w(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\679.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [f(a) -> c,b -> c,b -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\678.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> a,b -> c,b -> h(h(c,a),f(f(b))),a -> f(a),b -> h(a,a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\677.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> h(b,c),c -> a,a -> f(a),b -> c,b -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\676.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> f(f(c)),h(h(h(b,b),f(f(a))),f(f(f(a)))) -> a,b -> h(h(f(a),c),f(a))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\675.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> c,h(h(b,b),f(f(h(h(c,c),c)))) -> c,f(b) -> b,f(h(a,c)) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\674.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> f(f(b)),c -> b,f(f(c)) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\673.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> c,h(b,b) -> a,h(c,c) -> c,c -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\672.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> a,a -> h(a,b),b -> h(b,f(f(b))),b -> b,h(b,h(f(a),a)) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\671.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(f(f(b))) -> b,h(h(a,a),h(f(f(a)),h(c,b))) -> f(c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\670.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> f(c),c -> c,f(a) -> b,a -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\67.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2),("g",1),("i",1),("j",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(i(x),g(a)) -> f(j(x,x),g(b)),b -> a,i(x) -> j(x,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\669.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> c,f(a) -> b,b -> b,b -> h(b,h(c,a))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\668.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> c,a -> h(c,a),h(b,f(c)) -> b,c -> h(a,h(h(b,a),a))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\667.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(h(a,c)) -> h(f(b),h(c,h(c,h(f(h(b,b)),a)))),h(h(h(f(b),c),b),h(a,h(a,c))) -> h(f(b),h(c,b)),a -> h(h(b,b),b),c -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\666.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> b,a -> h(f(c),h(a,f(c))),f(f(h(a,h(b,b)))) -> a,h(c,c) -> b,b -> h(f(b),b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\665.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> f(b),h(b,f(c)) -> c,b -> f(b),b -> f(c),h(c,c) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\664.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> f(h(c,b)),f(f(f(c))) -> b,c -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\663.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(c) -> a,f(a) -> c,c -> f(h(a,h(f(c),c))),h(f(c),f(b)) -> f(h(a,c))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\662.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [f(b) -> c,c -> c,f(c) -> b,a -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\661.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> f(h(f(f(b)),c)),h(h(c,c),b) -> c,h(f(a),b) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\660.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> f(b),f(a) -> f(h(h(h(h(c,b),a),f(c)),c)),c -> h(f(c),f(h(c,a))),c -> f(b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\66.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("f",1),("g",3),("h",2),("k1",1),("k2",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(g(x,a,b)) -> x,g(f(h(c,d)),x,y) -> h(k1(x),k2(y)),k1(a) -> c,k2(b) -> d,f(h(k1(a),k2(b))) -> f(h(c,d)),f(h(c,k2(b))) -> f(h(c,d)),f(h(k1(a),d)) -> f(h(c,d))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\659.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> a,b -> b,h(h(b,c),b) -> f(f(h(b,c))),h(h(a,f(f(f(a)))),a) -> h(h(f(h(c,h(c,f(b)))),b),c),a -> h(h(f(h(b,c)),f(h(a,a))),a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\658.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(f(f(f(a)))) -> a,c -> h(f(f(c)),f(f(h(f(f(a)),h(h(b,h(c,c)),f(c)))))),f(a) -> c,b -> f(a),f(a) -> f(c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\657.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [h(f(b),a) -> h(f(h(c,a)),f(a)),c -> f(c),c -> h(f(b),c),a -> c,f(a) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\656.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> f(c),c -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\655.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> a,f(h(b,f(a))) -> f(c),c -> h(c,c),h(f(f(b)),a) -> c,h(a,a) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\654.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> f(h(c,h(h(h(h(f(h(a,b)),a),h(h(h(f(f(a)),c),h(f(b),a)),a)),b),c))),h(f(f(b)),h(c,h(f(f(h(h(b,h(c,c)),h(f(a),c)))),f(a)))) -> h(b,b),f(c) -> c,f(f(h(f(h(c,h(a,f(a)))),f(c)))) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\653.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> a,b -> f(h(a,a)),f(a) -> b,h(a,b) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\652.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> c,h(a,h(f(b),c)) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\651.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> f(b),b -> f(b),h(h(h(h(h(h(h(a,h(c,h(f(c),b))),h(b,h(b,h(f(f(h(c,b))),a)))),h(a,a)),b),f(h(h(f(a),a),c))),a),h(c,a)) -> f(a),c -> h(b,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\650.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> h(a,h(f(f(f(f(c)))),h(a,h(b,b)))),h(h(c,f(f(a))),f(b)) -> a,h(c,f(f(c))) -> f(f(a)),h(f(h(c,b)),h(h(h(b,a),h(c,f(h(h(b,a),a)))),c)) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\65.trs" :
TRS {trsSignature = fromList [("a",0),("a'",0),("f",0),("g",0),("h",3)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [h(f,a,a) -> h(g,a,a),h(g,a,a) -> h(f,a,a),a -> a',h(x,a',y) -> h(x,y,y),g -> f,f -> g], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\649.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> a,b -> h(f(f(f(b))),h(b,f(a)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\648.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0)], trsVariables = fromList [], trsRMap = [], trsRules = [c -> b,b -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\647.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("h",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(b) -> b,b -> h(h(c,f(b)),a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\64.trs" :
TRS {trsSignature = fromList [("a",0),("a'",0),("f",0),("g",0),("h",3)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [h(f,a,a) -> h(g,a,a),h(g,a,a) -> h(f,a,a),a -> a',h(x,a',y) -> h(x,y,y),h(x,y,a') -> h(x,y,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\635.trs" :
TRS {trsSignature = fromList [("0",0),("plus",2),("qplus",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),qplus(0,y) -> y,qplus(s(x),y) -> qplus(x,s(y)),plus(x,y) -> qplus(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\632.trs" :
TRS {trsSignature = fromList [("0",0),("inv",1),("minus",2),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [inv(0) -> 0,inv(s(x)) -> p(inv(x)),inv(p(x)) -> s(inv(x)),minus(x,0) -> x,minus(x,p(y)) -> s(minus(x,y)),minus(x,s(y)) -> p(minus(x,y)),minus(0,x) -> inv(x),inv(x) -> minus(0,x),inv(minus(x,y)) -> minus(y,x),s(p(x)) -> x,p(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\631.trs" :
TRS {trsSignature = fromList [("0",0),("inv",1),("minus",2),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [inv(0) -> 0,inv(s(x)) -> p(inv(x)),inv(p(x)) -> s(inv(x)),minus(x,0) -> x,minus(x,p(y)) -> s(minus(x,y)),minus(x,s(y)) -> p(minus(x,y)),minus(0,x) -> inv(x),minus(s(x),s(y)) -> minus(x,y),minus(p(x),p(y)) -> minus(x,y),inv(x) -> minus(0,x),s(p(x)) -> x,p(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\630.trs" :
TRS {trsSignature = fromList [("0",0),("min",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [min(0,y) -> 0,min(x,0) -> 0,min(s(x),s(y)) -> min(x,y),min(x,x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\63.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("d",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [-(0,0) -> 0,-(s(x),0) -> s(x),-(x,s(y)) -> -(d(x),y),d(s(x)) -> x,-(s(x),s(y)) -> -(x,y),-(d(x),y) -> -(x,s(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\62.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("<",2),("false",0),("gcd",2),("if",3),("mod",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [if(true,x,y) -> x,if(false,x,y) -> y,-(s(x),s(y)) -> -(x,y),-(x,0) -> x,-(0,x) -> 0,<(s(x),s(y)) -> <(x,y),<(0,s(x)) -> true,<(x,0) -> false,mod(0,y) -> 0,mod(x,s(y)) -> if(<(x,s(y)),x,mod(-(x,s(y)),s(y))),mod(x,0) -> x,gcd(x,y) -> gcd(y,mod(x,y)),gcd(x,0) -> x,gcd(0,x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\614.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(p(x),y) -> +(x,p(y)),p(s(x)) -> s(p(x)),s(p(x)) -> p(s(x)),p(s(0)) -> 0], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\613.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(p(x),y) -> p(+(y,x)),p(s(x)) -> s(p(x)),s(p(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\61.trs" :
TRS {trsSignature = fromList [("a",0),("a'",0),("f",0),("g",0),("h",3)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [a -> a',h(x,a',y) -> h(x,y,y),h(x,y,a') -> h(x,y,y),g -> f,h(f,a,a) -> h(g,a,a),h(g,a,a) -> h(f,a,a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\606.trs" :
TRS {trsSignature = fromList [("false",0),("implies",2),("not",1),("or",2),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [not(true) -> false,not(false) -> true,or(true,y) -> true,or(x,true) -> true,or(false,false) -> false,implies(true,y) -> y,implies(false,y) -> true,implies(x,y) -> or(not(x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\60.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("s",1),("sq",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,+(y,z)) -> +(+(x,y),z),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),+(s(x),y) -> +(x,s(y)),+(x,s(y)) -> +(s(x),y),*(x,s(y)) -> +(x,*(x,y)),*(s(x),y) -> +(*(x,y),y),*(x,y) -> *(y,x),sq(x) -> *(x,x),sq(s(x)) -> +(*(x,x),s(+(x,x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\6.trs" :
TRS {trsSignature = fromList [("e",0),("f",2),("i",1)], trsVariables = fromList ["x","x1","y","z"], trsRMap = [], trsRules = [f(f(x,y),z) -> f(x,f(y,z)),f(i(x1),x1) -> e], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\599.trs" :
TRS {trsSignature = fromList [("+",2),("-",2),("0",0),("if",3),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,y) -> if(y,x,s(+(x,-(y,s(0))))),+(x,y) -> +(y,x),if(0,y,z) -> y,if(s(x),y,z) -> z,if(x,y,y) -> y,-(x,0) -> x,-(0,s(y)) -> 0,-(s(x),s(y)) -> -(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\598.trs" :
TRS {trsSignature = fromList [("+",2),("-",2),("0",0),("if",3),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,y) -> if(y,x,s(+(x,-(y,s(0))))),if(0,y,z) -> y,if(s(x),y,z) -> z,if(x,y,y) -> y,-(x,0) -> x,-(0,s(y)) -> 0,-(s(x),s(y)) -> -(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\592.trs" :
TRS {trsSignature = fromList [("and",2),("false",0),("not",1),("or",2),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [not(true) -> false,not(false) -> true,or(true,y) -> true,or(x,true) -> true,or(false,false) -> false,and(true,true) -> true,and(x,true) -> x,and(true,y) -> y,and(false,false) -> false,not(and(x,y)) -> or(not(x),not(y)),not(or(x,y)) -> and(not(x),not(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\591.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),*(0,y) -> 0,*(s(x),y) -> +(*(x,y),y),*(x,s(y)) -> +(x,*(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\590.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,0) -> 0,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(y,x)),s(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\59.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1),("g",2),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> g(h(x),x),g(x,x) -> a,b -> h(b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\589.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(y,x)),+(+(x,x),x) -> +(x,+(x,x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\588.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(0),y) -> s(y),+(s(s(x)),y) -> s(s(+(y,x))),+(x,+(y,z)) -> +(+(z,y),x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\587.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(x,+(y,z)) -> +(+(x,y),z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\586.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(0),y) -> s(y),+(s(s(x)),y) -> s(s(+(y,x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\585.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),s(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\584.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("br",3),("p",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [br(0,y,z) -> y,br(s(x),y,z) -> z,p(0) -> 0,p(s(x)) -> x,+(x,y) -> br(x,y,+(p(x),s(y))),+(x,y) -> br(y,x,+(s(x),p(y)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\583.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(y,x)),+(x,y) -> +(y,x),+(+(x,x),x) -> +(x,+(x,x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\582.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(x,+(y,z)) -> +(+(z,y),x),s(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\581.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(0),y) -> s(+(0,y)),+(x,y) -> +(y,x),s(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\580.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,0) -> 0,+(s(0),y) -> s(+(0,y)),+(x,s(y)) -> s(+(y,x)),s(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\58.trs" :
TRS {trsSignature = fromList [("Ap",2),("D",0),("D0",0),("D1",0),("I",0),("K",0),("S",0)], trsVariables = fromList ["x","y","z","z0","z1"], trsRMap = [], trsRules = [Ap(Ap(Ap(S,x),y),z) -> Ap(Ap(x,z),Ap(y,z)),Ap(Ap(K,x),y) -> x,Ap(I,x) -> x,Ap(D0,Ap(Ap(D,z0),z1)) -> z0,Ap(D1,Ap(Ap(D,z0),z1)) -> z1,Ap(Ap(D,Ap(D0,z)),Ap(D1,z)) -> z], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\579.trs" :
TRS {trsSignature = fromList [("+",2),("-",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),-(0,x) -> 0,-(x,0) -> x,-(s(x),s(y)) -> -(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\578.trs" :
TRS {trsSignature = fromList [("+",2),("-",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [s(p(x)) -> x,p(s(x)) -> x,+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),-(0,0) -> 0,-(x,s(y)) -> p(-(x,y)),-(x,p(y)) -> s(-(x,y)),-(p(x),y) -> p(-(x,y)),-(s(x),y) -> s(-(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\577.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [s(p(x)) -> x,p(s(x)) -> x,+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),+(0,y) -> y,+(p(x),y) -> p(+(x,y)),+(s(x),y) -> s(+(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\576.trs" :
TRS {trsSignature = fromList [("+",2),("-",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [s(p(x)) -> x,p(s(x)) -> x,+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),-(x,0) -> x,-(x,s(y)) -> p(-(x,y)),-(x,p(y)) -> s(-(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\574.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(0),y) -> s(y),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),s(s(x)) -> s(x),s(x) -> s(s(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\573.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(x,0) -> +(0,x),+(x,s(y)) -> +(s(y),x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\572.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(0),y) -> s(y),s(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\571.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,0) -> 0,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(y,x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\57.trs" :
TRS {trsSignature = fromList [("Ap",2),("Ds",0),("E",0),("I",0),("K",0),("S",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [Ap(Ap(Ap(S,x),y),z) -> Ap(Ap(x,z),Ap(y,z)),Ap(Ap(K,x),y) -> x,Ap(I,x) -> x,Ap(Ap(Ds,z),z) -> E], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\569.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("-",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [s(p(x)) -> x,p(s(x)) -> x,+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),-(x,0) -> x,-(x,s(y)) -> p(-(x,y)),-(x,p(y)) -> s(-(x,y)),*(x,0) -> 0,*(x,s(y)) -> +(*(x,y),x),*(x,p(y)) -> -(*(x,y),x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\568.trs" :
TRS {trsSignature = fromList [("e",0),("f",2),("i",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> x,f(x,e) -> x,f(e,x) -> x,f(x,i(x)) -> e,f(i(x),x) -> e], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\567.trs" :
TRS {trsSignature = fromList [("c",0),("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(f(x))) -> g(f(g(x))),f(c) -> c,g(c) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\56.trs" :
TRS {trsSignature = fromList [("Ap",2),("Dk",0),("E",0),("I",0),("K",0),("S",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [Ap(Ap(Ap(S,x),y),z) -> Ap(Ap(x,z),Ap(y,z)),Ap(Ap(K,x),y) -> x,Ap(I,x) -> x,Ap(Ap(Dk,z),z) -> Ap(E,z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\556.trs" :
TRS {trsSignature = fromList [("b",0),("f",2),("g",1),("h",1),("k",2),("q",3),("r",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [g(f(b,x)) -> g(h(h(f(f(h(k(k(x,x),x)),h(k(k(x,x),x))),h(k(k(x,x),x)))))),f(x,b) -> h(f(f(x,x),x)),k(x,y) -> q(x,y,y),q(x,y,b) -> r(x,y),r(x,b) -> f(x,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\555.trs" :
TRS {trsSignature = fromList [("b",0),("f",2),("g",1),("h",1),("k",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [g(f(b,x)) -> g(h(h(f(f(h(k(k(x,x),x)),h(k(k(x,x),x))),h(k(k(x,x),x)))))),f(x,b) -> h(f(f(x,x),x)),k(x,b) -> f(x,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\554.trs" :
TRS {trsSignature = fromList [("b",0),("f",2),("g",1),("h",1),("k",2),("q",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [g(f(b,x)) -> g(h(h(f(f(h(k(k(x,x),x)),h(k(k(x,x),x))),h(k(k(x,x),x)))))),f(x,b) -> h(f(f(x,x),x)),k(x,b) -> q(x),q(x) -> f(x,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\55.trs" :
TRS {trsSignature = fromList [("Ap",2),("Dh",2),("I",0),("K",0),("S",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [Ap(Ap(Ap(S,x),y),z) -> Ap(Ap(x,z),Ap(y,z)),Ap(Ap(K,x),y) -> x,Ap(I,x) -> x,Dh(z,z) -> z], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\545.trs" :
TRS {trsSignature = fromList [("c",0),("g",1),("h",2),("k",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [g(x) -> h(k(x),x),g(x) -> x,h(k(x),x) -> x,k(c) -> c,h(k(c),c) -> g(c),h(c,c) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\544.trs" :
TRS {trsSignature = fromList [("c",0),("f",1),("g",1),("h",1),("k",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [g(x) -> h(k(x)),g(x) -> x,h(k(x)) -> f(x),f(x) -> x,k(c) -> c,f(c) -> g(c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\543.trs" :
TRS {trsSignature = fromList [("c",0),("d",0),("f",1),("g",1)], trsVariables = fromList [], trsRMap = [], trsRules = [f(c) -> g(c),g(c) -> f(c),c -> d], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\542.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0),("1",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,x) -> x,+(1,-(1)) -> 0,+(+(x,1),-(1)) -> x,+(x,+(y,z)) -> +(+(x,y),z),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\541.trs" :
TRS {trsSignature = fromList [("+",2),("a",0),("b",0),("c",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(a,b) -> b,+(c,a) -> a,+(x,y) -> +(y,x),+(+(x,y),z) -> +(x,+(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\540.trs" :
TRS {trsSignature = fromList [("0",0),("L",1),("N",2),("max",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [max(L(x)) -> x,max(N(L(0),L(y))) -> y,max(N(L(s(x)),L(s(y)))) -> s(max(N(L(x),L(y)))),max(N(L(x),N(y,z))) -> max(N(L(x),L(max(N(y,z))))),N(x,N(y,z)) -> N(N(x,y),z),N(N(x,y),z) -> N(x,N(y,z)),N(x,y) -> N(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\54.trs" :
TRS {trsSignature = fromList [("Ap",2),("Dh",0),("I",0),("K",0),("S",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [Ap(Ap(Ap(S,x),y),z) -> Ap(Ap(x,z),Ap(y,z)),Ap(Ap(K,x),y) -> x,Ap(I,x) -> x,Ap(Ap(Dh,z),z) -> z], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\539.trs" :
TRS {trsSignature = fromList [("+",2),("0",1),("1",1),("j",1),("sharp",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [0(sharp) -> sharp,+(x,sharp) -> x,+(0(x),0(y)) -> 0(+(x,y)),+(0(x),1(y)) -> 1(+(x,y)),+(1(x),1(y)) -> j(+(x,+(y,1(sharp)))),+(0(x),j(y)) -> j(+(x,y)),+(j(x),1(y)) -> 0(+(x,y)),+(j(x),j(y)) -> 1(+(x,+(y,j(sharp)))),+(x,+(y,z)) -> +(+(x,y),z),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\538.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("a",0),("b",0),("g",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(a,x) -> a,+(b,g(a)) -> a,+(0,x) -> x,+(x,+(y,z)) -> +(+(x,y),z),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\537.trs" :
TRS {trsSignature = fromList [("*",2),("e",0),("f",1),("i",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [*(e,x) -> x,*(i(x),x) -> e,i(e) -> e,i(i(x)) -> x,i(*(x,y)) -> *(i(x),i(y)),f(*(x,y)) -> *(f(x),f(y)),f(e) -> e,f(i(x)) -> i(f(x)),*(*(x,y),z) -> *(x,*(y,z)),*(x,*(y,z)) -> *(*(x,y),z),*(x,y) -> *(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\536.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("and",2),("xor",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [xor(x,0) -> x,xor(0,x) -> x,xor(x,x) -> 0,and(x,0) -> 0,and(0,x) -> 0,and(x,1) -> x,and(1,x) -> x,and(x,x) -> x,xor(xor(x,y),z) -> xor(x,xor(y,z)),xor(x,xor(y,z)) -> xor(y,xor(x,z)),xor(x,y) -> xor(y,x),xor(x,xor(x,y)) -> and(x,y),and(and(x,y),z) -> and(x,and(y,z)),and(x,and(y,z)) -> and(y,and(x,z)),and(x,y) -> and(y,x),and(x,and(x,y)) -> and(x,y),and(x,xor(y,z)) -> xor(and(x,y),xor(x,z)),and(xor(x,y),z) -> xor(and(x,z),and(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\535.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(0,x) -> x,+(x,-(x)) -> 0,+(x,+(-(x),y)) -> y,-(+(x,y)) -> +(-(x),-(y)),-(0) -> 0,-(-(x)) -> x,+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(y,+(x,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\534.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("1",0),("equivalent",2),("implies",2),("not",1),("or",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,x) -> 0,*(x,1) -> x,*(x,x) -> x,*(x,0) -> 0,*(x,+(y,z)) -> +(*(x,y),*(x,z)),or(x,y) -> +(*(x,y),+(x,y)),implies(x,y) -> +(*(x,y),+(x,1)),equivalent(x,y) -> +(+(x,y),1),not(x) -> +(x,1),+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x),*(*(x,y),z) -> *(x,*(y,z)),*(x,*(y,z)) -> *(*(x,y),z),*(x,y) -> *(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\533.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("-",1),("0",0),("1",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,*(x,0) -> 0,*(x,1) -> x,*(x,x) -> x,*(+(x,y),z) -> +(*(x,z),*(y,z)),+(x,x) -> 0,-(x) -> x,+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x),*(*(x,y),z) -> *(x,*(y,z)),*(x,*(y,z)) -> *(*(x,y),z),*(x,y) -> *(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\532.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("-",1),("0",0),("1",0)], trsVariables = fromList ["w","x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,-(0) -> 0,-(-(x)) -> x,-(+(x,y)) -> +(-(x),-(y)),+(x,-(x)) -> 0,+(+(x,-(x)),y) -> y,*(x,0) -> 0,*(x,1) -> x,*(x,-(y)) -> -(*(x,y)),*(*(x,-(y)),z) -> *(-(*(x,y)),z),*(x,+(y,z)) -> +(*(x,y),*(x,z)),*(*(x,+(y,z)),w) -> +(*(*(x,y),w),*(*(x,z),w)),+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x),*(*(x,y),z) -> *(x,*(y,z)),*(x,*(y,z)) -> *(*(x,y),z),*(x,y) -> *(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\531.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,-(0) -> 0,-(-(x)) -> x,-(+(x,y)) -> +(-(x),-(y)),+(x,-(x)) -> 0,+(+(x,-(x)),y) -> y,+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\530.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("1",0),("E",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [E(+(x,y)) -> *(E(x),E(y)),E(0) -> 1,+(x,0) -> x,+(0,x) -> x,*(x,1) -> x,*(1,x) -> x,+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x),*(*(x,y),z) -> *(x,*(y,z)),*(x,*(y,z)) -> *(*(x,y),z),*(x,y) -> *(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\53.trs" :
TRS {trsSignature = fromList [("Ap",2),("B",3),("I",0),("K",0),("S",0),("false",0),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [Ap(Ap(Ap(S,x),y),z) -> Ap(Ap(x,z),Ap(y,z)),Ap(Ap(K,x),y) -> x,Ap(I,x) -> x,B(true,x,y) -> x,B(false,x,y) -> y,B(z,x,x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\526.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("e",0),("f",2),("g",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> g,a -> b,a -> c,d -> c,d -> e,c -> c,f(a,x) -> g,f(b,x) -> g,f(c,x) -> g,f(d,x) -> g,f(e,x) -> g,f(x,a) -> g,f(x,b) -> g,f(x,c) -> g,f(x,d) -> g,f(x,e) -> g], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\525.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",2),("g",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> g,a -> b,a -> c,b -> b,c -> c,f(a,x) -> g,f(b,x) -> g,f(c,x) -> g,f(x,a) -> g,f(x,b) -> g,f(x,c) -> g], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\52.trs" :
TRS {trsSignature = fromList [("Ap",2),("B",0),("I",0),("K",0),("S",0),("false",0),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [Ap(Ap(Ap(S,x),y),z) -> Ap(Ap(x,z),Ap(y,z)),Ap(Ap(K,x),y) -> x,Ap(I,x) -> x,Ap(Ap(Ap(B,true),x),y) -> x,Ap(Ap(Ap(B,false),x),y) -> y,Ap(Ap(Ap(B,z),x),x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\512.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [a -> b,f(x,a) -> f(b,b),f(b,x) -> f(b,b),f(f(x,y),z) -> f(b,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\511.trs" :
TRS {trsSignature = fromList [("A",0),("a",0),("b",0),("c",0),("d",0),("e",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b -> a,b -> c,c -> c,d -> c,d -> e,f(x,a) -> A,f(x,e) -> A,f(x,A) -> A,f(c,x) -> A], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\510.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> a,f(b,x) -> b,f(x,a) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\51.trs" :
TRS {trsSignature = fromList [("*",2),("-",1),("e",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [*(e,x) -> x,*(-(x),x) -> e,*(*(x,y),z) -> *(x,*(y,z)),*(-(x),*(x,y)) -> y,*(x,e) -> x,-(e) -> e,-(-(x)) -> x,*(x,-(x)) -> e,*(x,*(-(x),y)) -> y,-(*(x,y)) -> *(-(y),-(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\509.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> b,f(b,b) -> f(a,a),f(x,a) -> f(a,a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\508.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> b,b -> f(a,a),f(x,a) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\507.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> b,a -> f(a,a),f(x,a) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\506.trs" :
TRS {trsSignature = fromList [("a",0),("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(f(x))) -> a,f(f(a)) -> a,f(a) -> a,f(f(g(g(x)))) -> f(a),g(f(a)) -> a,g(a) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\505.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> b,f(x,a) -> b,f(b,b) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\504.trs" :
TRS {trsSignature = fromList [("*",2),("+",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,y) -> +(y,x),*(+(x,y),z) -> +(*(x,z),*(y,z)),*(+(y,x),z) -> +(*(x,z),*(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\503.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",4)], trsVariables = fromList [], trsRMap = [], trsRules = [f(a,a,b,b) -> f(c,c,c,c),a -> b,a -> c,b -> a,b -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\502.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> b,a -> f(a),f(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\50.trs" :
TRS {trsSignature = fromList [("A",0),("B",0),("C",0),("D",0),("F",1),("G",3),("H",2),("K1",1),("K2",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [F(G(x,A,B)) -> x,G(F(H(C,D)),x,y) -> H(K1(x),K2(y)),K1(A) -> C,K2(B) -> D], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\5.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("f",1),("g",3),("h",2),("p",1),("q",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(g(x,a,b)) -> x,p(a) -> c,g(f(h(c,d)),x,y) -> h(p(x),q(x)),q(b) -> d], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\498.trs" :
TRS {trsSignature = fromList [("c",0),("d",0),("f",2),("h",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(h(x,d),y) -> f(h(y,d),x),h(c,x) -> h(x,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\497.trs" :
TRS {trsSignature = fromList [("0",0),("c",0),("d",2),("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [d(x,x) -> 0,f(x) -> d(x,f(x)),c -> f(c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\496.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",1),("f",2),("g",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> a,f(x,c(x)) -> b,g -> c(g),a -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\49.trs" :
TRS {trsSignature = fromList [("A",0),("A'",0),("B",0),("B'",0),("F",2),("G",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [F(A,A) -> G(B,B),A -> A',F(A',x) -> F(x,x),F(x,A') -> F(x,x),G(B,B) -> F(A,A),B -> B',G(B',x) -> G(x,x),G(x,B') -> G(x,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\48.trs" :
TRS {trsSignature = fromList [("F",2),("G",2),("H",1),("K",2),("P",1),("Q",2),("R",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [H(F(x,y)) -> F(H(R(x)),y),F(x,K(y,z)) -> G(P(y),Q(z,x)),H(Q(x,y)) -> Q(x,H(R(y))),Q(x,H(R(y))) -> H(Q(x,y)),H(G(x,y)) -> G(x,H(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\47.trs" :
TRS {trsSignature = fromList [("A",0),("C",0),("F",2),("G",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [F(x,x) -> A,G(x) -> F(x,G(x)),C -> G(C)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\46.trs" :
TRS {trsSignature = fromList [("A",0),("B",0),("C",0),("F",2),("G",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [F(x,x) -> A,F(x,G(x)) -> B,C -> G(C)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\45.trs" :
TRS {trsSignature = fromList [("H",1),("K",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [H(H(x)) -> K(x),H(K(x)) -> K(H(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\442.trs" :
TRS {trsSignature = fromList [("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x)) -> x,f(x) -> f(f(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\44.trs" :
TRS {trsSignature = fromList [("H",1),("K",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [H(H(x)) -> K(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\43.trs" :
TRS {trsSignature = fromList [("A",0),("B",0),("F",1),("G",1),("H",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [F(x) -> A,F(x) -> G(F(x)),G(F(x)) -> F(H(x)),G(F(x)) -> B], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\425.trs" :
TRS {trsSignature = fromList [("a",0),("f",2),("g",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(a,f(a,f(a,f(a,y)))) -> f(a,f(a,f(a,g(y,f(a,y))))),f(x,y) -> g(y,f(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\424.trs" :
TRS {trsSignature = fromList [("f",1),("g",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(f(f(x)))) -> f(f(f(g(x,f(x))))),f(x) -> g(x,f(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\423.trs" :
TRS {trsSignature = fromList [("f",1),("g",2),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [g(f(f(h(x))),y) -> g(g(f(h(x)),f(f(h(x)))),y),f(x) -> g(x,f(x)),h(x) -> g(f(x),x),g(x,y) -> h(g(f(x),f(y)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\422.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,y) -> f(g(x),g(x)),f(g(x),x) -> f(x,g(x)),g(x) -> h(x),h(g(x)) -> g(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\421.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2),("h",1),("k",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(x,h(x)) -> f(h(x),h(x)),f(x,k(y,z)) -> f(h(y),h(y)),h(x) -> k(x,x),k(a,a) -> h(b),a -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\420.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1),("k",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(x),g(x)) -> f(h(x),k(x)),f(h(x),k(x)) -> f(h(x),h(x)),f(h(x),h(x)) -> f(g(x),g(x)),g(x) -> h(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\42.trs" :
TRS {trsSignature = fromList [("a",0),("f",1),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(x)) -> f(h(x,x)),g(a) -> g(g(a)),h(a,a) -> g(g(a))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\419.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,h(x)) -> f(h(x),x),f(g(x),y) -> f(g(y),g(x)),f(x,y) -> f(y,x),g(h(x)) -> h(h(x)),h(x) -> g(x),g(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\418.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1),("y",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,h(x)) -> f(h(x),x),f(g(x),y) -> f(g(y),g(x)),f(x,y) -> f(y,x),h(x) -> g(x),g(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\417.trs" :
TRS {trsSignature = fromList [("d",1),("f",2),("g",1),("h",1),("p",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,g(x)) -> f(h(x),h(x)),f(x,x) -> f(h(x),h(x)),f(h(x),y) -> p(d(x),d(y)),p(h(x),y) -> f(g(y),g(y)),d(x) -> h(x),g(h(x)) -> h(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\416.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,g(x)) -> f(g(x),g(x)),f(x,h(y)) -> f(h(y),h(y)),g(x) -> h(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\415.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,x) -> f(g(x),h(x)),f(x,g(y)) -> f(g(x),g(x)),f(x,h(y)) -> f(h(x),h(x)),g(x) -> h(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\414.trs" :
TRS {trsSignature = fromList [("a",0),("f",2),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,g(y)) -> f(g(y),g(x)),f(x,x) -> a,f(x,y) -> f(y,x),g(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\413.trs" :
TRS {trsSignature = fromList [("f",3),("g",1),("h",1),("p",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(x,g(x),y) -> p(h(x),y),f(x,y,z) -> f(x,g(x),z),g(x) -> h(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\412.trs" :
TRS {trsSignature = fromList [("a",0),("f",2),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,y) -> f(g(x),g(x)),f(x,x) -> a,g(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\41.trs" :
TRS {trsSignature = fromList [("a",0),("f",1),("g",1),("k",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> g(k(x)),f(x) -> a,g(x) -> a,k(a) -> k(k(a))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\40.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [f(a) -> b,f(a) -> f(c),a -> d,f(d) -> b,f(c) -> b,d -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\4.trs" :
TRS {trsSignature = fromList [("or",2),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [or(true,true) -> true,or(x,y) -> or(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\392.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [c -> f(a,b),c -> f(a,a),f(x,x) -> x,f(x,y) -> f(y,x),f(a,a) -> f(b,b),f(b,b) -> f(a,a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\39.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("e",0),("e'",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [f(b) -> a,f(b) -> f(c),f(c) -> f(b),f(c) -> d,b -> e,c -> e',f(e) -> a,f(e') -> d], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\38.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> a,b -> c,c -> b,c -> d], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\37.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,x) -> f(a,g(x)),a -> b,g(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\36.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a) -> f(f(a)),a -> b,f(x) -> f(b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\35.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,a) -> g(f(a,a)),a -> b,f(b,x) -> g(f(x,x)),f(x,b) -> g(f(x,x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\34.trs" :
TRS {trsSignature = fromList [("a",0),("a'",0),("b",0),("b'",0),("c",0),("f",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(a,b) -> c,a -> a',b -> b',c -> f(a',b),c -> f(a,b'),c -> f(a,b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\33.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("f",1),("g",2)], trsVariables = fromList [], trsRMap = [], trsRules = [f(a) -> f(g(b,b)),a -> g(c,c),c -> d,d -> b,b -> d], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\32.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("f",2),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(x),h(x)) -> a,g(b) -> d,h(c) -> d], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\31.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("e",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(g(x),h(x,y)) -> a,g(b) -> c,h(x,d) -> e], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\30.trs" :
TRS {trsSignature = fromList [("a",0),("a'",0),("b",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,a) -> b,a -> a',f(a',x) -> f(x,x),f(x,a') -> f(x,x),f(a',a') -> b,b -> f(a',a')], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\3.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("f",2),("g",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(a(x),x) -> f(x,a(x)),f(b(x),x) -> f(x,b(x)),g(b(x),y) -> g(a(a(x)),y),g(c(x),y) -> y,a(x) -> b(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\29.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [-(+(x,-(x))) -> 0,+(x,-(x)) -> 0,-(+(0,0)) -> 0,+(0,0) -> 0,-(0) -> 0], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\28.trs" :
TRS {trsSignature = fromList [("c",0),("f",2),("g",1),("g1",1),("g2",1),("g3",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> h(x,x),c -> h(c,g(c)),h(g3(x),g1(g2(x))) -> f(x,h(x,g(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\27.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> h(x,x),f(g(x),x) -> a,c -> g(c),h(g(x),x) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\261.trs" :
TRS {trsSignature = fromList [("+",2),("-",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [-(x,x) -> 0,-(s(x),s(y)) -> -(x,y),+(x,y) -> +(y,x),+(0,x) -> x,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(y,x)),+(p(x),y) -> p(+(x,y)),+(x,p(y)) -> p(+(y,x)),s(p(x)) -> x,p(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\260.trs" :
TRS {trsSignature = fromList [("+",2),("-",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [-(x,x) -> 0,-(x,0) -> x,+(x,y) -> +(y,x),+(0,x) -> x,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(y,x)),+(p(x),y) -> p(+(x,y)),+(x,p(y)) -> p(+(y,x)),s(p(x)) -> x,p(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\26.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(x),x) -> a,c -> h(c,g(c)),h(x,g(x)) -> f(g(x),h(x,g(c)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\259.trs" :
TRS {trsSignature = fromList [("+",2),("-",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [-(x,x) -> 0,+(x,y) -> +(y,x),+(0,x) -> x,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(y,x)),+(p(x),y) -> p(+(x,y)),+(x,p(y)) -> p(+(y,x)),s(p(x)) -> x,p(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\258.trs" :
TRS {trsSignature = fromList [("c",0),("f",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c -> f(c),c -> h(c),f(x) -> f(f(x)),h(x) -> h(h(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\257.trs" :
TRS {trsSignature = fromList [("c",0),("d",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [c -> f(c,d),c -> h(c,d),f(x,y) -> h(g(y),x),h(x,y) -> f(g(y),x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\256.trs" :
TRS {trsSignature = fromList [("c",0),("d",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [c -> f(c,d),c -> h(c,d),f(x,y) -> f(g(y),x),h(x,y) -> h(g(y),x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\255.trs" :
TRS {trsSignature = fromList [("c",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c -> f(c),c -> h(c),f(x) -> f(g(x)),h(x) -> h(g(x)),g(x) -> g(f(h(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\254.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> f(c),a -> f(h(c)),f(x) -> h(f(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\253.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c -> f(c),c -> f(h(a)),f(x) -> h(f(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\252.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1),("h",1),("k",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> h(c),a -> f(c),f(x) -> h(g(x)),h(x) -> f(k(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\251.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> h(a),a -> f(c),f(x) -> h(g(x)),h(x) -> f(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\250.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> f(c),a -> h(a,c),f(x) -> h(g(x),x),g(x) -> h(x,x),h(x,x) -> f(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\25.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> a,c -> h(c,g(c)),h(g(x),g(x)) -> f(x,h(x,g(c)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\249.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> h(a),a -> f(c),f(x) -> h(g(x)),h(x) -> h(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\248.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> h(c),a -> h(f(c)),h(f(x)) -> h(f(g(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\247.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> f(c),a -> h(c),f(x) -> h(g(x)),h(x) -> f(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\246.trs" :
TRS {trsSignature = fromList [("a",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> f(a),a -> g(h(a)),f(x) -> h(g(x)),h(x) -> f(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\245.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> h(c),a -> h(f(c)),h(x) -> h(h(x)),f(x) -> f(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\244.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> c,a -> f(c),f(x) -> h(g(x)),h(x) -> f(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\243.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> h(g(b)),a -> h(c),b -> g(b),h(g(x)) -> g(h(x)),g(x) -> h(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\242.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> h(c),a -> h(f(c)),g(x) -> g(x),h(f(x)) -> h(f(g(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\241.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> c,a -> f(c),f(x) -> f(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\240.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(x) -> b(x),a(x) -> c(c(x)),b(x) -> g(b(x)),c(x) -> c(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\24.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> a,c -> h(c,g(c)),h(x,g(x)) -> f(x,h(x,g(c)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\239.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(x) -> g(h(b(x))),a(x) -> g(c(x)),b(x) -> g(b(x)),g(a(x)) -> g(h(a(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\238.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(x) -> g(g(b(x))),a(x) -> g(c(x)),b(x) -> g(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\237.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(x) -> g(b(x)),a(x) -> c(x),b(x) -> g(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\236.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(x) -> b(b(b(x))),a(x) -> c(x),b(x) -> b(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\235.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,y) -> f(g(x),g(x)),f(g(x),x) -> f(x,g(x)),g(x) -> h(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\234.trs" :
TRS {trsSignature = fromList [("0",0),("eq",2),("false",0),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [eq(x,x) -> true,eq(0,s(x)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),eq(x,y) -> eq(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\233.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1),("p",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,x) -> f(g(x),g(x)),f(x,y) -> f(h(x),h(y)),g(x) -> p(x),h(x) -> p(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\232.trs" :
TRS {trsSignature = fromList [("a",0),("f",2),("g",1),("h",1),("p",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(g(x),x) -> f(a,x),f(h(x),y) -> f(h(x),h(x)),g(x) -> p(x),p(x) -> a], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\231.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("f",3)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [a(x) -> c(x),b(x) -> b(b(x)),f(x,x,y) -> f(a(x),x,b(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\230.trs" :
TRS {trsSignature = fromList [("a",2),("b",2),("c",2),("f",1),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x) -> g(x),a(x,y) -> a(f(x),f(x)),b(x,y) -> c(x,x),c(x,x) -> c(f(x),f(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\23.trs" :
TRS {trsSignature = fromList [("0",0),(":",2),("from",1),("s",1),("sel",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [from(x) -> :(x,from(s(x))),sel(0,:(y,z)) -> y,sel(s(x),:(y,z)) -> sel(x,z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\229.trs" :
TRS {trsSignature = fromList [("a",2),("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,x) -> g(x),g(h(x)) -> h(g(x)),a(x,y) -> a(h(x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\228.trs" :
TRS {trsSignature = fromList [("a",2),("b",2),("f",2),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> f(g(x),g(x)),a(g(x),x) -> f(x,x),b(x,g(x)) -> g(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\227.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> f(g(x),x),f(g(x),x) -> f(h(x),h(x)),h(g(x)) -> g(g(h(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\226.trs" :
TRS {trsSignature = fromList [("c",0),("f",2),("g",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c -> f(c,c),c -> g(c,c),f(x,f(x,x)) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\225.trs" :
TRS {trsSignature = fromList [("a",0),("a'",0),("b",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [f(a) -> b,a -> a',f(b) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\224.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0),("x",0)], trsVariables = fromList [], trsRMap = [], trsRules = [-(+(x,-(x))) -> 0,+(x,-(x)) -> 0,0 -> -(0)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\223.trs" :
TRS {trsSignature = fromList [("a",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [f(f(a)) -> f(f(f(a))),f(f(a)) -> f(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\222.trs" :
TRS {trsSignature = fromList [("c",0),("f",3),("g",1),("h",5)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x,x) -> h(x,x,x,x,g(c)),c -> g(c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\221.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",2),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> a,c -> g(c),g(x) -> f(x,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\220.trs" :
TRS {trsSignature = fromList [("c",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(x),g(x)) -> f(x,h(x,g(c)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\22.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",1),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [g(a) -> f(g(a)),g(b) -> c(a),a -> b,f(x) -> h(x),h(x) -> c(b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\219.trs" :
TRS {trsSignature = fromList [("c",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(x),g(g(x))) -> h(g(x),g(c)),c -> g(c)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\218.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",2),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> a,c -> g(c),g(x) -> f(x,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\217.trs" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",2),("g",1),("g1",1),("g2",1),("g3",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> a,c -> h(c,g(c)),h(g3(x),g1(g2(x))) -> f(x,h(x,g(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\216.trs" :
TRS {trsSignature = fromList [("A",0),("B",0),("O",0),("f",2),("u",1),("v",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(u(O),u(y)) -> A,f(v(x),v(O)) -> B,O -> u(O),O -> v(O),u(x) -> x,v(x) -> x,f(x,y) -> f(x,u(y)),f(x,y) -> f(v(x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\215.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> b,a -> f(a),b -> f(f(b)),f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(b))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\214.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> b,a -> f(a),b -> f(f(b)),f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(f(b)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\213.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> b,a -> f(a),b -> f(f(b)),f(f(f(b))) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\212.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [a -> b,a -> f(a),b -> f(f(b))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\211.trs" :
TRS {trsSignature = fromList [("+",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\210.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,s(y)) -> s(+(x,y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\21.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("h",1)], trsVariables = fromList [], trsRMap = [], trsRules = [b -> a,b -> c,c -> h(b),c -> d,a -> h(a),d -> h(d)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\209.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> +(s(y),x),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\208.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),*(x,0) -> 0,*(x,s(y)) -> +(*(x,y),x),*(0,y) -> 0,*(s(x),y) -> +(*(x,y),y),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),*(*(x,y),z) -> *(x,*(y,z)),*(x,y) -> *(y,x),*(x,+(y,z)) -> +(*(x,y),*(x,z)),*(+(x,y),z) -> +(*(x,z),*(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\207.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\206.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0),("1",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,x) -> x,+(1,-(1)) -> 0,+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\205.trs" :
TRS {trsSignature = fromList [("0",0),("max",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [max(x,0) -> x,max(0,y) -> y,max(s(x),s(y)) -> s(max(x,y)),max(x,y) -> max(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\204.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),s(s(x)) -> s(x),s(x) -> s(s(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\203.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),*(x,0) -> 0,*(x,s(y)) -> +(*(x,y),x),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),*(*(x,y),z) -> *(x,*(y,z)),*(x,y) -> *(y,x),*(x,+(y,z)) -> +(*(x,y),*(x,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\202.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(x,y)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\201.trs" :
TRS {trsSignature = fromList [("F",0),("T",0),("or",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [or(x,T) -> T,or(x,F) -> x,or(T,x) -> T,or(F,x) -> x,or(or(x,y),z) -> or(x,or(y,z)),or(x,y) -> or(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\200.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(y,x)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\20.trs" :
TRS {trsSignature = fromList [("0",0),(":",2),("hd",1),("inc",1),("nats",0),("s",1),("tl",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [nats -> :(0,inc(nats)),inc(:(x,y)) -> :(s(x),inc(y)),hd(:(x,y)) -> x,tl(:(x,y)) -> y,inc(tl(nats)) -> tl(inc(nats))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\2.trs" :
TRS {trsSignature = fromList [("F",2),("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,y) -> f(g(x),g(x)),g(x) -> h(x),F(g(x),x) -> F(x,g(x)),F(h(x),x) -> F(x,h(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\199.trs" :
TRS {trsSignature = fromList [("+",2),("0",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,x) -> x,+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\198.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1),("sum",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),sum(0) -> 0,sum(s(x)) -> +(s(x),sum(x)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\197.trs" :
TRS {trsSignature = fromList [("F",0),("T",0),("or",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [or(T,x) -> T,or(x,F) -> x,or(or(x,y),z) -> or(x,or(y,z)),or(x,y) -> or(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\196.trs" :
TRS {trsSignature = fromList [("*",2),("+",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),*(*(x,y),z) -> *(x,*(y,z)),*(x,y) -> *(y,x),*(+(x,y),z) -> +(*(x,z),*(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\195.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(y,x)),+(x,s(y)) -> s(+(x,y)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\194.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),*(x,0) -> 0,*(x,s(y)) -> +(*(x,y),x),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\193.trs" :
TRS {trsSignature = fromList [("F",0),("T",0),("exor",2),("not",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [not(T) -> F,not(F) -> T,not(not(x)) -> x,exor(x,T) -> not(x),exor(x,F) -> x,exor(not(x),y) -> not(exor(x,y)),exor(exor(x,y),z) -> exor(x,exor(y,z)),exor(x,y) -> exor(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\192.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),dbl(x) -> +(x,x),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\191.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(y,x)),+(x,s(y)) -> s(+(y,x)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\190.trs" :
TRS {trsSignature = fromList [("F",0),("T",0),("or",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [or(x,T) -> T,or(x,F) -> x,or(x,y) -> or(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\19.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",1),("g",1),("h",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [g(a) -> f(g(a)),g(b) -> c,a -> b,f(x) -> h(x,x),h(x,y) -> c], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\189.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),dbl(0) -> 0,dbl(s(x)) -> s(s(dbl(x))),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),dbl(+(x,y)) -> +(dbl(x),dbl(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\188.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\187.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(y,x)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\186.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\185.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0),("1",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,x) -> x,+(1,-(1)) -> 0,-(0) -> 0,-(-(x)) -> x,-(+(x,y)) -> +(-(x),-(y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\184.trs" :
TRS {trsSignature = fromList [("*",2),("+",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),*(+(x,y),z) -> +(*(x,z),*(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\183.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0),("1",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,x) -> x,+(x,0) -> x,+(1,-(1)) -> 0,+(-(1),1) -> 0,-(0) -> 0,-(-(x)) -> x,-(+(x,y)) -> +(-(x),-(y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\182.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),dbl(x) -> +(x,x),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),s(s(x)) -> s(x),s(x) -> s(s(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\181.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("k",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),*(k,0) -> 0,*(k,s(y)) -> +(k,*(k,y)),+(x,y) -> +(y,x),+(+(x,y),z) -> +(x,+(y,z)),*(k,+(x,y)) -> +(*(k,x),*(k,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\180.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,s(y)) -> s(+(y,x)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\18.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("a",0),("f",1),("g",1),("h",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> g(a),g(x) -> x,h(x,x) -> 0,a -> 1], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\179.trs" :
TRS {trsSignature = fromList [("+",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\178.trs" :
TRS {trsSignature = fromList [("+",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\177.trs" :
TRS {trsSignature = fromList [("+",2),("-",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [-(+(x,y)) -> +(-(x),-(y)),+(-(x),-(y)) -> -(+(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\176.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(p(x),y) -> p(+(x,y)),s(p(x)) -> x,p(s(x)) -> x,+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\175.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,x) -> x,+(-(x),x) -> 0,+(+(x,y),z) -> +(x,+(y,z)),+(-(x),+(x,y)) -> y,+(x,0) -> x,-(0) -> 0,-(-(x)) -> x,+(x,-(x)) -> 0,+(x,+(-(x),y)) -> y,-(+(x,y)) -> +(-(y),-(x)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\174.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(s(x),y) -> s(+(y,x)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\173.trs" :
TRS {trsSignature = fromList [("0",0),("max",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [max(x,0) -> x,max(0,y) -> y,max(s(x),s(y)) -> s(max(x,y)),max(x,y) -> max(y,x),max(x,x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\172.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),dbl(x) -> +(x,x),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\171.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> +(s(y),x),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x),dbl(x) -> +(x,x),dbl(+(x,y)) -> +(dbl(x),dbl(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\170.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),s(s(x)) -> s(x),s(x) -> s(s(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\17.trs" :
TRS {trsSignature = fromList [("0",0),("a",0),("b",0),("f",5),("g",3)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [g(x,x,y) -> y,g(x,y,y) -> x,f(x,y,x,y,z) -> f(a,b,z,z,z),a -> 0,b -> 0], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\169.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),*(x,0) -> 0,*(x,s(y)) -> +(*(x,y),x),*(0,y) -> 0,*(s(x),y) -> +(*(x,y),y),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),*(x,y) -> *(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\168.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(p(x),y) -> p(+(x,y)),s(p(x)) -> x,p(s(x)) -> x,+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(+(x,y),z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\167.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(g(x),g(y)) -> f(g(x),h(y)),f(h(x),g(y)) -> f(g(x),g(y)),f(g(x),h(y)) -> f(x,y),f(h(x),h(y)) -> f(y,x),f(x,y) -> f(y,x),g(x) -> h(x),h(x) -> g(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\166.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(y,x)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\165.trs" :
TRS {trsSignature = fromList [("0",0),("max",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [max(x,0) -> x,max(s(x),s(y)) -> s(max(x,y)),max(x,y) -> max(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\164.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(y,x)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\163.trs" :
TRS {trsSignature = fromList [("+",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(+(x,y),z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\162.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(y,x)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\161.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> +(s(y),x),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x),dbl(x) -> +(x,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\160.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,+(y,z)) -> +(+(x,y),z),+(+(x,y),z) -> +(x,+(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\16.trs" :
TRS {trsSignature = fromList [("b",0),("c",0),("f",2),("g",1),("h",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,x) -> g(x),f(x,g(x)) -> b,h(c,y) -> f(h(y,c),h(y,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\159.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("inc",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),inc(x) -> s(x),+(x,y) -> +(y,x),inc(+(x,y)) -> +(inc(x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\158.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(x,y)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\157.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),*(x,0) -> 0,*(x,s(y)) -> +(*(x,y),x),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\156.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("1",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),*(1,0) -> 0,*(1,s(y)) -> s(*(1,y)),+(x,y) -> +(y,x),+(+(x,y),z) -> +(x,+(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\155.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),dbl(x) -> +(x,x),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),dbl(+(x,y)) -> +(dbl(x),dbl(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\154.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(p(x),y) -> p(+(x,y)),s(p(x)) -> x,p(s(x)) -> x,-(0) -> 0,-(s(x)) -> p(-(x)),-(p(x)) -> s(-(x)),+(x,y) -> +(y,x),-(+(x,y)) -> +(-(x),-(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\153.trs" :
TRS {trsSignature = fromList [("F",0),("T",0),("or",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [or(x,T) -> T,or(x,F) -> x,or(or(x,y),z) -> or(x,or(y,z)),or(x,y) -> or(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\152.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(p(x),y) -> p(+(x,y)),s(p(x)) -> x,p(s(x)) -> x,-(0) -> 0,-(s(x)) -> p(-(x)),-(p(x)) -> s(-(x)),+(+(x,y),z) -> +(x,+(y,z)),+(x,+(y,z)) -> +(+(x,y),z),-(+(x,y)) -> +(-(x),-(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\151.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("k",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),*(k,0) -> 0,*(k,s(y)) -> +(k,*(k,y)),+(x,y) -> +(y,x),+(+(x,y),z) -> +(x,+(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\150.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("f",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(0,0) -> f(0,1),f(1,0) -> f(0,0),f(x,y) -> f(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\15.trs" :
TRS {trsSignature = fromList [("f",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(x,f(y,z)) -> f(f(x,y),f(x,z)),f(f(x,y),z) -> f(f(x,z),f(y,z)),f(f(x,y),f(y,z)) -> y], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\149.trs" :
TRS {trsSignature = fromList [("+",2),("-",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [-(+(x,y)) -> +(-(x),-(y)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\148.trs" :
TRS {trsSignature = fromList [("F",0),("T",0),("or",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [or(T,x) -> T,or(F,x) -> x,or(or(x,y),z) -> or(x,or(y,z)),or(x,y) -> or(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\147.trs" :
TRS {trsSignature = fromList [("+",2),("-",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [-(+(x,y)) -> +(-(x),-(y)),+(x,y) -> +(y,x),+(+(x,y),z) -> +(x,+(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\146.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,0) -> x,+(s(x),y) -> s(+(y,x)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\145.trs" :
TRS {trsSignature = fromList [("*",2),("+",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),*(*(x,y),z) -> *(x,*(y,z)),*(x,y) -> *(y,x),*(+(x,y),z) -> +(*(x,z),*(y,z)),*(x,+(y,z)) -> +(*(x,y),*(x,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\144.trs" :
TRS {trsSignature = fromList [("*",2),("+",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),*(+(x,y),z) -> +(*(x,z),*(y,z)),*(x,+(y,z)) -> +(*(x,y),*(x,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\143.trs" :
TRS {trsSignature = fromList [("join",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [join(x,x) -> x,join(x,y) -> join(y,x),join(join(x,y),z) -> join(x,join(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\142.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),*(x,0) -> 0,*(x,s(y)) -> +(*(x,y),x),*(0,y) -> 0,*(s(x),y) -> +(*(x,y),y),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\141.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("inc",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),inc(x) -> s(x),+(x,y) -> +(y,x),inc(+(x,y)) -> +(inc(x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\140.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,s(y)) -> s(+(y,x)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\14.trs" :
TRS {trsSignature = fromList [("1",0),("f",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(f(x,y),z) -> f(x,f(y,z)),f(1,x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\139.trs" :
TRS {trsSignature = fromList [("+",2),("-",1),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(p(x),y) -> p(+(x,y)),s(p(x)) -> x,p(s(x)) -> x,-(0) -> 0,-(s(x)) -> p(-(x)),-(p(x)) -> s(-(x)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),-(+(x,y)) -> +(-(x),-(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\138.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(x,y)),+(x,+(y,z)) -> +(+(x,y),z),+(+(x,y),z) -> +(x,+(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\137.trs" :
TRS {trsSignature = fromList [("0",0),("max",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [max(x,0) -> x,max(s(x),s(y)) -> s(max(y,x)),max(x,y) -> max(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\136.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\135.trs" :
TRS {trsSignature = fromList [("0",0),("max",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [max(x,0) -> x,max(0,y) -> y,max(s(x),s(y)) -> s(max(y,x)),max(x,y) -> max(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\134.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("p",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,p(y)) -> p(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(p(x),y) -> p(+(x,y)),s(p(x)) -> x,p(s(x)) -> x,+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\133.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\132.trs" :
TRS {trsSignature = fromList [("+",2),("-",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [-(+(x,y)) -> +(-(x),-(y)),-(-(x)) -> x,+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\131.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\130.trs" :
TRS {trsSignature = fromList [("F",0),("T",0),("and3",3)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [and3(x,y,F) -> F,and3(T,T,T) -> T,and3(x,y,z) -> and3(y,z,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\13.trs" :
TRS {trsSignature = fromList [("1",0),("f",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(f(x,y),z) -> f(x,f(y,z)),f(x,1) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\129.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("inc",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),inc(x) -> s(x),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),inc(+(x,y)) -> +(inc(x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1285.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("p",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(a(x))) -> b(a(b(x))),b(a(b(x))) -> a(b(a(x))),p -> a(p),p -> b(p)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1284.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("p",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(a(x))) -> b(a(b(x))),b(a(b(x))) -> a(b(a(x))),a(c(a(x))) -> c(a(c(x))),c(a(c(x))) -> a(c(a(x))),b(c(x)) -> c(b(x)),c(b(x)) -> b(c(x)),p -> a(p),p -> b(p),p -> c(p)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1283.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("d",1),("p",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(a(x))) -> b(a(b(x))),b(a(b(x))) -> a(b(a(x))),a(c(a(x))) -> c(a(c(x))),c(a(c(x))) -> a(c(a(x))),a(d(a(x))) -> d(a(d(x))),d(a(d(x))) -> a(d(a(x))),b(c(x)) -> c(b(x)),c(b(x)) -> b(c(x)),b(d(x)) -> d(b(x)),d(b(x)) -> b(d(x)),d(c(x)) -> c(d(x)),c(d(x)) -> d(c(x)),p -> a(p),p -> b(p),p -> c(p),p -> d(p)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1282.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("p",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(a(x))) -> b(a(b(x))),b(a(b(x))) -> a(b(a(x))),a(c(a(x))) -> c(a(c(x))),c(a(c(x))) -> a(c(a(x))),b(c(b(x))) -> c(b(c(x))),c(b(c(x))) -> b(c(b(x))),p -> a(p),p -> b(p),p -> c(p)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1281.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("d",1),("p",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(a(x))) -> b(a(b(x))),b(a(b(x))) -> a(b(a(x))),a(c(a(x))) -> c(a(c(x))),c(a(c(x))) -> a(c(a(x))),b(d(b(x))) -> d(b(d(x))),d(b(d(x))) -> b(d(b(x))),c(d(c(x))) -> d(c(d(x))),d(c(d(x))) -> c(d(c(x))),b(c(x)) -> c(b(x)),c(b(x)) -> b(c(x)),a(d(x)) -> d(a(x)),d(a(x)) -> a(d(x)),p -> a(p),p -> b(p),p -> c(p),p -> d(p)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1280.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x)) -> f(g(f(f(x)))),f(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\128.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,s(y)) -> s(+(x,y)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1279.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(x)) -> g(f(f(x))),g(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\127.trs" :
TRS {trsSignature = fromList [("F",0),("T",0),("and",2),("imply",2),("not",1),("or",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [not(T) -> F,not(F) -> T,or(x,T) -> T,or(x,F) -> x,or(x,y) -> or(y,x),or(or(x,y),z) -> or(x,or(y,z)),and(x,T) -> x,and(x,F) -> F,and(x,y) -> and(y,x),and(and(x,y),z) -> and(x,and(y,z)),imply(x,y) -> or(not(x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\126.trs" :
TRS {trsSignature = fromList [("f",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(f(x,y),z) -> f(f(x,z),f(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\125.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> s(+(x,y)),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\124.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),s(s(x)) -> s(x),s(x) -> s(s(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\123.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),dbl(x) -> +(x,x),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\122.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,y) -> y,+(x,0) -> x,+(s(x),y) -> s(+(x,y)),+(x,s(y)) -> +(s(x),y),+(x,+(y,z)) -> +(+(x,y),z),+(x,y) -> +(y,x),dbl(x) -> +(x,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\121.trs" :
TRS {trsSignature = fromList [("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(g(x),g(y)) -> f(g(x),h(y)),f(h(x),g(y)) -> f(g(x),g(y)),f(g(x),h(y)) -> f(x,y),f(h(x),h(y)) -> f(y,x),f(x,y) -> f(y,x),g(x) -> h(x),h(x) -> g(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\120.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("dbl",1),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(0,y) -> y,+(s(x),y) -> s(+(x,y)),dbl(x) -> +(x,x),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x),s(x) -> s(s(x)),s(s(x)) -> s(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\12.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> a,f(x,g(x)) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\119.trs" :
TRS {trsSignature = fromList [("f",2),("infty",0),("s",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> s(s(x)),infty -> s(infty)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\118.trs" :
TRS {trsSignature = fromList [("0",0),("T",0),("c",2),("eq",3),("inc",1),("nats",0),("s",1)], trsVariables = fromList ["n","x","xs","y","ys"], trsRMap = [], trsRules = [eq(n,xs,xs) -> T,eq(s(n),c(x,xs),c(x,ys)) -> eq(n,xs,ys),nats -> c(0,inc(nats)),inc(c(x,xs)) -> c(s(x),inc(xs))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\117.trs" :
TRS {trsSignature = fromList [("f",2),("plus",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,x) -> plus(plus(x,x),x),plus(x,y) -> plus(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1160.trs" :
TRS {trsSignature = fromList [("a",0),("d",2),("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [d(x,x) -> x,f(x) -> d(x,f(x)),a -> f(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\116.trs" :
TRS {trsSignature = fromList [("a1",0),("a2",0),("a3",0),("a4",0),("a5",0),("a6",0),("b1",0),("b2",0),("b3",0),("b4",0),("b5",0),("b6",0),("b7",0),("c1",0),("c2",0),("c3",0),("c4",0),("c5",0),("c6",0)], trsVariables = fromList [], trsRMap = [], trsRules = [a1 -> b1,a1 -> c1,b1 -> b2,c1 -> c2,a2 -> b2,a2 -> c2,b2 -> b3,c2 -> c3,a3 -> b3,a3 -> c3,b3 -> b4,c3 -> c4,a4 -> b4,a4 -> c4,b4 -> b5,c4 -> c5,a5 -> b5,a5 -> c5,b5 -> b6,c5 -> c6,a6 -> b6,a6 -> c6,b6 -> b7,c6 -> b7,b7 -> b1,b7 -> c1], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1157.trs" :
TRS {trsSignature = fromList [("P",1),("Q",1),("a",1),("b",1),("c",1),("p",1),("q",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(x)) -> b(c(x)),a(c(x)) -> c(a(x)),b(b(x)) -> a(c(x)),c(b(x)) -> b(c(x)),c(b(x)) -> c(c(x)),c(c(x)) -> c(b(x)),P(x) -> Q(Q(p(x))),p(p(x)) -> q(q(x)),p(Q(Q(x))) -> Q(Q(p(x))),Q(p(q(x))) -> q(p(Q(x))),q(q(p(x))) -> p(q(q(x))),q(Q(x)) -> x,Q(q(x)) -> x,p(P(x)) -> x,P(p(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1156.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("2",1),("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(x)) -> b(c(x)),a(c(x)) -> c(a(x)),b(b(x)) -> a(c(x)),c(b(x)) -> b(c(x)),c(b(x)) -> c(c(x)),c(c(x)) -> c(b(x)),0(1(2(x))) -> 2(0(1(x))),2(2(2(2(2(2(2(1(1(1(1(2(x)))))))))))) -> 2(1(2(2(0(1(2(1(1(0(1(0(x))))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1155.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("m",1),("plus",2),("times",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [plus(x,0) -> x,plus(0,1) -> 1,plus(x,plus(y,1)) -> plus(plus(x,y),1),times(x,0) -> 0,times(x,1) -> x,times(x,plus(y,1)) -> plus(times(x,y),x),m(0) -> 0,plus(m(1),1) -> 0,plus(m(plus(x,1)),1) -> m(x),m(m(x)) -> x,plus(x,m(y)) -> m(plus(m(x),y)),times(x,m(y)) -> m(times(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1154.trs" :
TRS {trsSignature = fromList [("a",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x,a),a) -> f(f(a,f(f(f(a,x),a),a)),a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1153.trs" :
TRS {trsSignature = fromList [("a",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x,a),a) -> f(f(f(f(f(a,a),x),a),a),a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1152.trs" :
TRS {trsSignature = fromList [("a",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x,a),a) -> f(f(f(f(a,f(a,x)),a),a),a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1151.trs" :
TRS {trsSignature = fromList [("a",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x,a),a) -> f(f(f(f(f(a,x),a),a),a),a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1150.trs" :
TRS {trsSignature = fromList [("a",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x,a),a) -> f(f(f(f(x,f(a,a)),a),a),a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\115.trs" :
TRS {trsSignature = fromList [("a1",0),("a10",0),("a2",0),("a3",0),("a4",0),("a5",0),("a6",0),("a7",0),("a8",0),("a9",0),("b1",0),("b10",0),("b11",0),("b2",0),("b3",0),("b4",0),("b5",0),("b6",0),("b7",0),("b8",0),("b9",0),("c1",0),("c10",0),("c2",0),("c3",0),("c4",0),("c5",0),("c6",0),("c7",0),("c8",0),("c9",0)], trsVariables = fromList [], trsRMap = [], trsRules = [a1 -> b1,a1 -> c1,b1 -> b2,c1 -> c2,a2 -> b2,a2 -> c2,b2 -> b3,c2 -> c3,a3 -> b3,a3 -> c3,b3 -> b4,c3 -> c4,a4 -> b4,a4 -> c4,b4 -> b5,c4 -> c5,a5 -> b5,a5 -> c5,b5 -> b6,c5 -> c6,a6 -> b6,a6 -> c6,b6 -> b7,c6 -> c7,a7 -> b7,a7 -> c7,b7 -> b8,c7 -> c8,a8 -> b8,a8 -> c8,b8 -> b9,c8 -> c9,a9 -> b9,a9 -> c9,b9 -> b10,c9 -> c10,a10 -> b11,b10 -> b11,c10 -> b11], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1149.trs" :
TRS {trsSignature = fromList [("a",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x,a),a) -> f(f(f(f(a,x),a),a),a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1148.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(a(x))) -> a(b(a(a(b(x)))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1147.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(a(x))) -> a(a(b(a(b(x)))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\114.trs" :
TRS {trsSignature = fromList [("a1",0),("a2",0),("a3",0),("a4",0),("a5",0),("b1",0),("b2",0),("b3",0),("b4",0),("b5",0),("b6",0),("c1",0),("c2",0),("c3",0),("c4",0),("c5",0)], trsVariables = fromList [], trsRMap = [], trsRules = [a1 -> b1,a1 -> c1,b1 -> b2,c1 -> c2,a2 -> b2,a2 -> c2,b2 -> b3,c2 -> c3,a3 -> b3,a3 -> c3,b3 -> b4,c3 -> c4,a4 -> b4,a4 -> c4,b4 -> b5,c4 -> c5,a5 -> b6,b5 -> b6,c5 -> b6], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1133.trs" :
TRS {trsSignature = fromList [("c",1),("t",3),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [c(t(x,y,z)) -> c(t(y,x,z)),c(t(x,y,z)) -> c(t(x,z,y)),c(t(x,x,z)) -> true], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1132.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1),("d",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(x) -> c(d(x)),d(x) -> c(b(x)),c(x) -> b(d(x)),b(x) -> c(d(x)),a(x) -> a(b(x)),a(x) -> b(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1131.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(x) -> b(a(b(x))),a(x) -> c(a(a(x))),b(x) -> a(c(a(x))),c(x) -> c(a(c(x))),b(x) -> a(c(b(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\113.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("f",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,a) -> c,f(b,x) -> f(x,x),f(x,b) -> f(x,x),a -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1129.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,x) -> x,+(s(x),y) -> s(+(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1127.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [-(0,x) -> 0,-(x,0) -> x,-(s(x),s(y)) -> -(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1124.trs" :
TRS {trsSignature = fromList [("0",0),("BIT0",1),("BIT1",1),("EVEN",1),("F",0),("NUMERAL",1),("ODD",1),("PRE",1),("SUC",1),("T",0),("eq",2),("exp",2),("ge",2),("gt",2),("if",3),("le",2),("lt",2),("minus",2),("mult",2),("plus",2)], trsVariables = fromList ["m","n"], trsRMap = [], trsRules = [NUMERAL(0) -> 0,BIT0(0) -> 0,SUC(NUMERAL(n)) -> NUMERAL(SUC(n)),SUC(0) -> BIT1(0),SUC(BIT0(n)) -> BIT1(n),SUC(BIT1(n)) -> BIT0(SUC(n)),PRE(NUMERAL(n)) -> NUMERAL(PRE(n)),PRE(0) -> 0,PRE(BIT0(n)) -> if(eq(n,0),0,BIT1(PRE(n))),PRE(BIT1(n)) -> BIT0(n),plus(NUMERAL(m),NUMERAL(n)) -> NUMERAL(plus(m,n)),plus(0,0) -> 0,plus(0,BIT0(n)) -> BIT0(n),plus(0,BIT1(n)) -> BIT1(n),plus(BIT0(n),0) -> BIT0(n),plus(BIT1(n),0) -> BIT1(n),plus(BIT0(m),BIT0(n)) -> BIT0(plus(m,n)),plus(BIT0(m),BIT1(n)) -> BIT1(plus(m,n)),plus(BIT1(m),BIT0(n)) -> BIT1(plus(m,n)),plus(BIT1(m),BIT1(n)) -> BIT0(SUC(plus(m,n))),mult(NUMERAL(m),NUMERAL(n)) -> NUMERAL(mult(m,n)),mult(0,0) -> 0,mult(0,BIT0(n)) -> 0,mult(0,BIT1(n)) -> 0,mult(BIT0(n),0) -> 0,mult(BIT1(n),0) -> 0,mult(BIT0(m),BIT0(n)) -> BIT0(BIT0(mult(m,n))),mult(BIT0(m),BIT1(n)) -> plus(BIT0(m),BIT0(BIT0(mult(m,n)))),mult(BIT1(m),BIT0(n)) -> plus(BIT0(n),BIT0(BIT0(mult(m,n)))),mult(BIT1(m),BIT1(n)) -> plus(plus(BIT1(m),BIT0(n)),BIT0(BIT0(mult(m,n)))),exp(NUMERAL(m),NUMERAL(n)) -> NUMERAL(exp(m,n)),exp(0,0) -> BIT1(0),exp(BIT0(m),0) -> BIT1(0),exp(BIT1(m),0) -> BIT1(0),exp(0,BIT0(n)) -> mult(exp(0,n),exp(0,n)),exp(BIT0(m),BIT0(n)) -> mult(exp(BIT0(m),n),exp(BIT0(m),n)),exp(BIT1(m),BIT0(n)) -> mult(exp(BIT1(m),n),exp(BIT1(m),n)),exp(0,BIT1(n)) -> 0,exp(BIT0(m),BIT1(n)) -> mult(mult(BIT0(m),exp(BIT0(m),n)),exp(BIT0(m),n)),exp(BIT1(m),BIT1(n)) -> mult(mult(BIT1(m),exp(BIT1(m),n)),exp(BIT1(m),n)),EVEN(NUMERAL(n)) -> EVEN(n),EVEN(0) -> T,EVEN(BIT0(n)) -> T,EVEN(BIT1(n)) -> F,ODD(NUMERAL(n)) -> ODD(n),ODD(0) -> F,ODD(BIT0(n)) -> F,ODD(BIT1(n)) -> T,eq(NUMERAL(m),NUMERAL(n)) -> eq(m,n),eq(0,0) -> T,eq(BIT0(n),0) -> eq(n,0),eq(BIT1(n),0) -> F,eq(0,BIT0(n)) -> eq(0,n),eq(0,BIT1(n)) -> F,eq(BIT0(m),BIT0(n)) -> eq(m,n),eq(BIT0(m),BIT1(n)) -> F,eq(BIT1(m),BIT0(n)) -> F,eq(BIT1(m),BIT1(n)) -> eq(m,n),le(NUMERAL(m),NUMERAL(n)) -> le(m,n),le(0,0) -> T,le(BIT0(n),0) -> le(n,0),le(BIT1(n),0) -> F,le(0,BIT0(n)) -> T,le(0,BIT1(n)) -> T,le(BIT0(m),BIT0(n)) -> le(m,n),le(BIT0(m),BIT1(n)) -> le(m,n),le(BIT1(m),BIT0(n)) -> lt(m,n),le(BIT1(m),BIT1(n)) -> le(m,n),lt(NUMERAL(m),NUMERAL(n)) -> lt(m,n),lt(0,0) -> F,lt(BIT0(n),0) -> F,lt(BIT1(n),0) -> F,lt(0,BIT0(n)) -> lt(0,n),lt(0,BIT1(n)) -> T,lt(BIT0(m),BIT0(n)) -> lt(m,n),lt(BIT0(m),BIT1(n)) -> le(m,n),lt(BIT1(m),BIT0(n)) -> lt(m,n),lt(BIT1(m),BIT1(n)) -> lt(m,n),ge(NUMERAL(n),NUMERAL(m)) -> ge(n,m),ge(0,0) -> T,ge(0,BIT0(n)) -> ge(0,n),ge(0,BIT1(n)) -> F,ge(BIT0(n),0) -> T,ge(BIT1(n),0) -> T,ge(BIT0(n),BIT0(m)) -> ge(n,m),ge(BIT1(n),BIT0(m)) -> ge(n,m),ge(BIT0(n),BIT1(m)) -> gt(n,m),ge(BIT1(n),BIT1(m)) -> ge(n,m),gt(NUMERAL(n),NUMERAL(m)) -> gt(n,m),gt(0,0) -> F,gt(0,BIT0(n)) -> F,gt(0,BIT1(n)) -> F,gt(BIT0(n),0) -> gt(n,0),gt(BIT1(n),0) -> T,gt(BIT0(n),BIT0(m)) -> gt(n,m),gt(BIT1(n),BIT0(m)) -> ge(n,m),gt(BIT0(n),BIT1(m)) -> gt(n,m),gt(BIT1(n),BIT1(m)) -> gt(n,m),minus(NUMERAL(m),NUMERAL(n)) -> NUMERAL(minus(m,n)),minus(0,0) -> 0,minus(0,BIT0(n)) -> 0,minus(0,BIT1(n)) -> 0,minus(BIT0(n),0) -> BIT0(n),minus(BIT1(n),0) -> BIT1(n),minus(BIT0(m),BIT0(n)) -> BIT0(minus(m,n)),minus(BIT0(m),BIT1(n)) -> PRE(BIT0(minus(m,n))),minus(BIT1(m),BIT0(n)) -> if(le(n,m),BIT1(minus(m,n)),0),minus(BIT1(m),BIT1(n)) -> BIT0(minus(m,n))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\112.trs" :
TRS {trsSignature = fromList [("0",0),(":",2),("d",1),("hd",1),("inc",1),("nats",0),("s",1),("tl",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [nats -> :(0,inc(nats)),inc(:(x,y)) -> :(s(x),inc(y)),inc(tl(nats)) -> tl(inc(nats)),hd(:(x,y)) -> x,tl(:(x,y)) -> y,d(:(x,y)) -> :(x,:(x,d(y)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\111.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("c",0),("d",0),("e",0),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a -> b,a -> c,a -> e,b -> d,c -> a,d -> a,d -> e,g(x) -> h(a),h(x) -> e], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\110.trs" :
TRS {trsSignature = fromList [(".",2),("and",2),("c",0),("e",0),("i",0),("id",0),("sub",2),("w1",0),("w2",0)], trsVariables = fromList ["R","T","U","V","W"], trsRMap = [], trsRules = [.(R,.(T,U)) -> .(.(R,T),U),.(R,id) -> R,.(id,R) -> R,and(id,id) -> id,sub(id,id) -> id,.(and(R,T),and(U,V)) -> and(.(R,U),.(T,V)),.(sub(R,T),sub(U,V)) -> sub(.(U,R),.(T,V)),.(and(R,T),w1) -> .(w1,R),.(and(R,T),w2) -> .(w2,T),.(R,c) -> .(c,and(R,R)),.(c,w1) -> id,.(c,w2) -> id,.(R,i) -> .(i,sub(id,and(R,id))),.(and(.(i,sub(id,R)),T),e) -> .(and(id,T),R),.(.(W,and(R,T)),and(U,V)) -> .(W,and(.(R,U),.(T,V))),.(.(W,sub(R,T)),sub(U,V)) -> .(W,sub(.(U,R),.(T,V))),.(.(W,and(R,T)),w1) -> .(.(W,w1),R),.(.(W,and(R,T)),w2) -> .(.(W,w2),T),.(and(i,R),e) -> and(id,R),.(.(W,and(i,R)),e) -> .(W,and(id,R)),.(.(W,and(.(i,sub(id,R)),T)),e) -> .(.(W,and(id,T)),R)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\11.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) -> y,+(s(x),y) -> s(+(x,y)),+(x,0) -> x,+(x,s(y)) -> s(+(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\109.trs" :
TRS {trsSignature = fromList [("join",2),("meet",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [join(x,meet(x,y)) -> x,meet(x,join(y,z)) -> join(meet(x,y),meet(x,z)),meet(x,x) -> x,join(x,x) -> x,meet(meet(x,y),z) -> meet(x,meet(y,z)),meet(x,y) -> meet(y,x),join(join(x,y),z) -> join(x,join(y,z)),join(x,y) -> join(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\108.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",2),("g",2),("i",1),("j",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x,x) -> g(i(b),x),g(x,x) -> f(x,i(a)),i(x) -> j(x),a -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\107.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1),("g",2),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> g(x,h(x)),g(x,x) -> a,b -> h(b)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\106.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\105.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(x,0) -> x,+(x,s(y)) -> s(+(x,y)),+(+(x,y),z) -> +(x,+(y,z)),+(x,y) -> +(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\104.trs" :
TRS {trsSignature = fromList [("Ap",2),("I",0),("K",0),("S",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [Ap(Ap(Ap(S,x),y),z) -> Ap(Ap(x,z),Ap(y,z)),Ap(Ap(K,x),y) -> x,Ap(I,x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1036.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(c(x)) -> b(b(x)),a(a(x)) -> b(a(x)),c(c(x)) -> a(a(x)),b(b(x)) -> c(b(x)),b(c(x)) -> a(c(x)),a(a(x)) -> a(a(x)),a(a(x)) -> b(c(x)),b(c(x)) -> b(a(x)),a(a(x)) -> c(b(x)),b(b(x)) -> c(c(x)),c(b(x)) -> c(c(x)),a(c(x)) -> b(c(x)),c(b(x)) -> a(c(x)),b(b(x)) -> b(b(x)),c(b(x)) -> b(c(x)),b(c(x)) -> b(c(x)),c(a(x)) -> a(a(x)),a(c(x)) -> c(a(x)),a(b(x)) -> a(a(x)),c(c(x)) -> a(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1035.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(a(x)) -> b(c(x)),a(b(x)) -> c(b(x)),a(a(x)) -> b(a(x)),a(c(x)) -> a(b(x)),c(c(x)) -> c(a(x)),c(c(x)) -> c(b(x)),a(c(x)) -> c(b(x)),c(c(x)) -> a(c(x)),b(a(x)) -> c(a(x)),b(c(x)) -> a(a(x)),b(a(x)) -> a(c(x)),a(c(x)) -> a(a(x)),b(c(x)) -> c(a(x)),b(b(x)) -> c(a(x)),b(a(x)) -> a(a(x)),a(c(x)) -> a(a(x)),a(c(x)) -> a(c(x)),b(b(x)) -> c(a(x)),b(a(x)) -> b(a(x)),c(b(x)) -> c(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1034.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(a(x)) -> b(a(x)),b(a(x)) -> a(a(x)),b(c(x)) -> a(a(x)),c(b(x)) -> a(c(x)),a(c(x)) -> a(b(x)),a(a(x)) -> c(a(x)),c(c(x)) -> a(a(x)),c(c(x)) -> c(c(x)),c(a(x)) -> b(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1033.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> c(a(x)),c(c(x)) -> b(a(x)),b(c(x)) -> b(a(x)),a(b(x)) -> c(a(x)),a(b(x)) -> a(b(x)),a(c(x)) -> b(b(x)),a(a(x)) -> b(c(x)),a(a(x)) -> b(a(x)),c(a(x)) -> a(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1032.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(a(x)) -> b(c(x)),b(c(x)) -> a(b(x)),b(a(x)) -> a(a(x)),c(c(x)) -> a(a(x)),c(a(x)) -> c(a(x)),a(a(x)) -> a(a(x)),c(b(x)) -> a(b(x)),b(b(x)) -> b(a(x)),a(c(x)) -> c(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1031.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(a(x)) -> b(a(x)),c(c(x)) -> a(a(x)),c(a(x)) -> c(a(x)),b(a(x)) -> c(a(x)),c(b(x)) -> c(b(x)),c(a(x)) -> a(c(x)),a(a(x)) -> a(a(x)),a(a(x)) -> b(b(x)),b(b(x)) -> a(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1030.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> b(c(x)),b(c(x)) -> a(c(x)),a(b(x)) -> b(a(x)),a(c(x)) -> a(b(x)),b(a(x)) -> a(c(x)),b(a(x)) -> b(b(x)),b(a(x)) -> b(c(x)),b(b(x)) -> b(b(x)),c(a(x)) -> b(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\103.trs" :
TRS {trsSignature = fromList [("f",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(f(x,y),z) -> f(x,f(y,z)),f(x,y) -> f(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1029.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(x)) -> c(a(x)),b(a(x)) -> a(b(x)),a(c(x)) -> b(b(x)),b(c(x)) -> c(b(x)),c(b(x)) -> b(a(x)),b(a(x)) -> c(c(x)),c(a(x)) -> b(c(x)),b(a(x)) -> c(c(x)),b(b(x)) -> c(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1028.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(c(x)) -> b(c(x)),a(b(x)) -> c(c(x)),a(a(x)) -> c(c(x)),a(b(x)) -> c(a(x)),b(b(x)) -> a(a(x)),c(b(x)) -> c(a(x)),c(c(x)) -> a(b(x)),c(b(x)) -> c(c(x)),b(c(x)) -> a(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1027.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(a(x)) -> a(b(x)),c(b(x)) -> b(b(x)),b(b(x)) -> a(a(x)),a(a(x)) -> b(a(x)),c(c(x)) -> a(a(x)),a(b(x)) -> c(c(x)),a(b(x)) -> b(a(x)),b(c(x)) -> c(c(x)),c(a(x)) -> a(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1026.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(a(x)) -> c(c(x)),c(c(x)) -> a(b(x)),c(a(x)) -> c(c(x)),b(c(x)) -> a(b(x)),a(c(x)) -> a(b(x)),c(b(x)) -> a(c(x)),b(c(x)) -> b(b(x)),b(b(x)) -> b(a(x)),a(c(x)) -> c(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1025.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(c(x)) -> b(a(x)),b(b(x)) -> c(c(x)),b(a(x)) -> a(a(x)),a(b(x)) -> a(b(x)),b(c(x)) -> c(a(x)),b(b(x)) -> b(b(x)),a(b(x)) -> b(b(x)),a(b(x)) -> b(b(x)),a(c(x)) -> c(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1024.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(c(x)) -> a(a(x)),b(c(x)) -> c(b(x)),a(c(x)) -> a(b(x)),b(c(x)) -> a(c(x)),c(b(x)) -> b(c(x)),a(b(x)) -> b(a(x)),a(b(x)) -> c(a(x)),a(a(x)) -> a(c(x)),c(a(x)) -> a(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1023.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(a(x)) -> c(c(x)),a(b(x)) -> b(c(x)),c(b(x)) -> b(c(x)),a(a(x)) -> b(c(x)),a(c(x)) -> c(a(x)),c(c(x)) -> a(a(x)),b(b(x)) -> a(b(x)),a(a(x)) -> b(a(x)),b(b(x)) -> c(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1022.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(x)) -> c(a(x)),c(a(x)) -> a(b(x)),b(b(x)) -> b(a(x)),c(b(x)) -> a(c(x)),a(a(x)) -> b(b(x)),c(c(x)) -> b(b(x)),b(b(x)) -> b(b(x)),b(c(x)) -> a(a(x)),b(c(x)) -> a(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1021.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> a(a(x)),b(b(x)) -> c(b(x)),a(b(x)) -> c(b(x)),b(c(x)) -> a(a(x)),b(a(x)) -> a(a(x)),c(a(x)) -> c(b(x)),a(a(x)) -> c(b(x)),c(a(x)) -> c(a(x)),c(c(x)) -> a(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1020.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(c(x)) -> b(a(x)),b(c(x)) -> c(b(x)),c(b(x)) -> b(a(x)),a(b(x)) -> a(b(x)),b(b(x)) -> b(c(x)),c(a(x)) -> c(a(x)),a(a(x)) -> a(b(x)),a(c(x)) -> a(b(x)),c(c(x)) -> b(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\102.trs" :
TRS {trsSignature = fromList [("H",1),("I",1),("J",1),("K",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [I(x) -> I(J(x)),J(x) -> J(K(J(x))),H(I(x)) -> K(J(x)),J(x) -> K(J(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1019.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(c(x)) -> c(a(x)),a(a(x)) -> a(a(x)),a(b(x)) -> c(a(x)),a(a(x)) -> a(c(x)),c(a(x)) -> c(b(x)),b(b(x)) -> a(c(x)),b(a(x)) -> a(c(x)),c(b(x)) -> a(b(x)),a(a(x)) -> c(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1018.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(a(x)) -> c(b(x)),b(a(x)) -> c(a(x)),b(c(x)) -> b(a(x)),c(b(x)) -> b(c(x)),b(c(x)) -> b(a(x)),c(b(x)) -> c(a(x)),b(a(x)) -> c(b(x)),b(b(x)) -> c(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1017.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(b(x)) -> a(b(x)),c(a(x)) -> b(a(x)),a(b(x)) -> b(c(x)),b(a(x)) -> b(c(x)),c(b(x)) -> a(c(x)),b(c(x)) -> c(b(x)),a(b(x)) -> b(a(x)),a(a(x)) -> b(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1016.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(b(x)) -> c(a(x)),b(b(x)) -> b(b(x)),b(b(x)) -> c(a(x)),a(a(x)) -> c(a(x)),c(c(x)) -> a(c(x)),b(a(x)) -> c(b(x)),c(a(x)) -> a(c(x)),c(c(x)) -> c(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1015.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(b(x)) -> c(a(x)),a(b(x)) -> b(a(x)),b(b(x)) -> c(a(x)),c(c(x)) -> c(b(x)),a(a(x)) -> b(b(x)),c(a(x)) -> a(a(x)),b(a(x)) -> b(a(x)),a(a(x)) -> b(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1014.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(a(x)) -> a(a(x)),c(c(x)) -> a(c(x)),c(b(x)) -> a(c(x)),a(a(x)) -> c(a(x)),b(b(x)) -> b(b(x)),c(a(x)) -> b(a(x)),a(b(x)) -> c(c(x)),a(c(x)) -> b(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1013.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> b(a(x)),a(c(x)) -> b(a(x)),a(c(x)) -> c(b(x)),c(c(x)) -> b(c(x)),b(c(x)) -> b(c(x)),c(b(x)) -> b(a(x)),a(b(x)) -> a(c(x)),a(a(x)) -> a(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1012.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(c(x)) -> a(c(x)),c(b(x)) -> c(c(x)),b(a(x)) -> c(b(x)),a(b(x)) -> b(a(x)),c(a(x)) -> c(a(x)),b(c(x)) -> c(c(x)),c(c(x)) -> b(c(x)),c(a(x)) -> b(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1011.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> a(b(x)),c(a(x)) -> c(c(x)),b(b(x)) -> b(b(x)),b(c(x)) -> c(c(x)),b(a(x)) -> b(b(x)),b(a(x)) -> b(a(x)),c(b(x)) -> c(a(x)),c(c(x)) -> b(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1010.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> c(a(x)),c(a(x)) -> b(a(x)),c(a(x)) -> b(a(x)),b(a(x)) -> b(c(x)),a(b(x)) -> b(c(x)),c(b(x)) -> b(c(x)),a(a(x)) -> a(b(x)),c(c(x)) -> b(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\101.trs" :
TRS {trsSignature = fromList [("A",0),("B",0),("F",2),("G",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [F(x,x) -> G(x),A -> B], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1009.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(c(x)) -> b(a(x)),c(b(x)) -> a(c(x)),c(a(x)) -> c(b(x)),a(a(x)) -> a(b(x)),a(c(x)) -> b(c(x)),a(c(x)) -> a(c(x)),a(b(x)) -> c(a(x)),c(c(x)) -> b(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1008.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [a(c(x)) -> b(a(x)),a(c(x)) -> a(c(x)),a(a(x)) -> a(b(x)),b(b(x)) -> a(c(x)),c(c(x)) -> c(a(x)),c(b(x)) -> a(c(x)),a(b(x)) -> a(c(x)),a(c(x)) -> a(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1007.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(b(x)) -> c(a(x)),b(c(x)) -> c(b(x)),a(b(x)) -> c(c(x)),a(a(x)) -> a(b(x)),a(c(x)) -> a(a(x)),c(c(x)) -> a(a(x)),a(a(x)) -> b(c(x)),b(b(x)) -> c(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1006.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(a(x)) -> c(c(x)),c(c(x)) -> a(b(x)),a(a(x)) -> b(c(x)),b(a(x)) -> c(c(x)),c(a(x)) -> b(a(x)),b(c(x)) -> a(b(x)),c(c(x)) -> a(b(x)),b(c(x)) -> c(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1005.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(c(x)) -> a(a(x)),c(b(x)) -> a(c(x)),a(b(x)) -> a(a(x)),b(b(x)) -> a(b(x)),b(c(x)) -> b(c(x)),c(a(x)) -> a(b(x)),a(c(x)) -> c(b(x)),b(a(x)) -> c(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1004.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(b(x)) -> a(c(x)),b(a(x)) -> c(c(x)),b(c(x)) -> c(a(x)),c(c(x)) -> a(b(x)),b(c(x)) -> a(c(x)),c(a(x)) -> b(c(x)),b(b(x)) -> c(a(x)),a(a(x)) -> a(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1003.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(b(x)) -> c(b(x)),b(c(x)) -> b(b(x)),a(b(x)) -> b(a(x)),c(b(x)) -> a(a(x)),a(c(x)) -> a(b(x)),b(c(x)) -> c(a(x)),b(a(x)) -> b(b(x)),a(a(x)) -> b(c(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1002.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(a(x)) -> b(c(x)),c(b(x)) -> b(b(x)),c(c(x)) -> a(c(x)),a(c(x)) -> c(b(x)),b(a(x)) -> c(b(x)),b(b(x)) -> a(c(x)),c(c(x)) -> c(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1001.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(c(x)) -> b(a(x)),c(a(x)) -> b(a(x)),c(a(x)) -> a(b(x)),b(a(x)) -> c(c(x)),a(a(x)) -> a(c(x)),c(c(x)) -> a(b(x)),b(b(x)) -> a(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1000.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("c",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [c(a(x)) -> c(b(x)),b(a(x)) -> b(a(x)),a(b(x)) -> c(c(x)),c(c(x)) -> b(a(x)),c(b(x)) -> a(b(x)),a(c(x)) -> c(c(x)),a(a(x)) -> b(a(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\100.trs" :
TRS {trsSignature = fromList [("H",1),("I",1),("J",1),("K",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [H(I(x)) -> K(J(x)),J(x) -> K(J(x)),I(x) -> I(J(x)),J(x) -> J(K(J(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\10.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(f(x))) -> x,f(g(x)) -> g(f(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\COPS\\passed\\TRS\\1.trs" :
TRS {trsSignature = fromList [("F",2),("f",2),("g",1),("h",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,y) -> x,f(x,y) -> f(x,g(y)),g(x) -> h(x),F(g(x),x) -> F(x,g(x)),F(h(x),x) -> F(x,h(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}
