
++ File:".\\tests\\TPDB\\traditional\\passed\\Koprowski\\rt-rw4.trs" :
TRS {trsSignature = fromList [("R",0),("RAn",1),("RAo",1),("RIn",1),("RIo",1),("Rw",0),("W",0),("WAn",1),("WAo",1),("WIn",1),("WIo",1),("Ww",0),("check",1),("ok",1),("read",2),("sys_r",2),("sys_w",2),("top",1),("write",2)], trsVariables = fromList ["p","r","v1","v2","v3","v4","v5","x","y"], trsRMap = [], trsRules = [Rw ->= RIn(Rw),Ww ->= WIn(Ww),RAo(R) -> R,RAn(R) -> R,WAo(W) -> W,WAn(W) -> W,top(ok(sys_r(read(r,RIo(x)),write(W,Ww)))) ->= top(check(sys_r(read(RAo(r),x),write(W,Ww)))),top(ok(sys_w(read(r,RIo(x)),write(W,Ww)))) ->= top(check(sys_w(read(RAo(r),x),write(W,Ww)))),top(ok(sys_r(read(r,RIn(x)),write(W,Ww)))) ->= top(check(sys_r(read(RAn(r),x),write(W,Ww)))),top(ok(sys_w(read(r,RIn(x)),write(W,Ww)))) ->= top(check(sys_w(read(RAn(r),x),write(W,Ww)))),top(ok(sys_r(read(R,Rw),write(W,WIn(y))))) ->= top(check(sys_r(read(R,Rw),write(WAn(W),y)))),top(ok(sys_w(read(R,Rw),write(W,WIn(y))))) ->= top(check(sys_w(read(R,Rw),write(WAn(W),y)))),top(ok(sys_r(read(R,Rw),write(W,WIo(y))))) ->= top(check(sys_r(read(R,Rw),write(WAo(W),y)))),top(ok(sys_w(read(R,Rw),write(W,WIo(y))))) ->= top(check(sys_w(read(R,Rw),write(WAo(W),y)))),top(ok(sys_r(read(r,RIo(x)),write(W,y)))) ->= top(check(sys_w(read(RAo(r),x),write(W,y)))),top(ok(sys_r(read(r,RIn(x)),write(W,y)))) ->= top(check(sys_w(read(RAn(r),x),write(W,y)))),top(ok(sys_w(read(R,x),write(W,WIo(y))))) ->= top(check(sys_r(read(R,x),write(WAo(W),y)))),top(ok(sys_w(read(R,x),write(W,WIn(y))))) ->= top(check(sys_r(read(R,x),write(WAn(W),y)))),check(RIo(x)) ->= ok(RIo(x)),check(RAo(x)) ->= RAo(check(x)),check(RAn(x)) ->= RAn(check(x)),check(WAo(x)) ->= WAo(check(x)),check(WAn(x)) ->= WAn(check(x)),check(RIo(x)) ->= RIo(check(x)),check(RIn(x)) ->= RIn(check(x)),check(WIo(x)) ->= WIo(check(x)),check(WIn(x)) ->= WIn(check(x)),check(sys_r(x,y)) ->= sys_r(check(x),y),check(sys_r(x,y)) ->= sys_r(x,check(y)),check(sys_w(x,y)) ->= sys_w(check(x),y),check(sys_w(x,y)) ->= sys_w(x,check(y)),RAo(ok(x)) ->= ok(RAo(x)),RAn(ok(x)) ->= ok(RAn(x)),WAo(ok(x)) ->= ok(WAo(x)),WAn(ok(x)) ->= ok(WAn(x)),RIn(ok(x)) ->= ok(RIn(x)),WIo(ok(x)) ->= ok(WIo(x)),WIn(ok(x)) ->= ok(WIn(x)),sys_r(ok(x),y) ->= ok(sys_r(x,y)),sys_r(x,ok(y)) ->= ok(sys_r(x,y)),sys_w(ok(x),y) ->= ok(sys_w(x,y)),sys_w(x,ok(y)) ->= ok(sys_w(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\Koprowski\\relsubst.trs" :
TRS {trsSignature = fromList [("1",0),("d",2),("lambda",1),("o",2),("p",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [o(lambda(x),y) -> lambda(o(x,d(1,o(y,p)))),o(d(x,y),z) -> d(o(x,z),o(y,z)),o(o(x,y),z) -> o(x,o(y,z)),lambda(x) -> x,o(x,y) -> x,o(x,y) -> y,d(x,y) -> x,d(x,y) -> y,o(x,y) ->= d(x,y),o(x,y) ->= d(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\Koprowski\\gcd_triple.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("gcd",3),("max",2),("min",2),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [min(x,0) -> 0,min(0,y) -> 0,min(s(x),s(y)) -> s(min(x,y)),max(x,0) -> x,max(0,y) -> y,max(s(x),s(y)) -> s(max(x,y)),-(x,0) -> x,-(s(x),s(y)) -> -(x,y),gcd(s(x),s(y),z) -> gcd(-(max(x,y),min(x,y)),s(min(x,y)),z),gcd(x,s(y),s(z)) -> gcd(x,-(max(y,z),min(y,z)),s(min(y,z))),gcd(s(x),y,s(z)) -> gcd(-(max(x,z),min(x,z)),y,s(min(x,z))),gcd(x,0,0) -> x,gcd(0,y,0) -> y,gcd(0,0,z) -> z], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\Koprowski\\gcd_many.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("cons",2),("gcd",1),("max",2),("min",2),("nil",0),("s",1),("z",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [min(x,0) -> 0,min(0,y) -> 0,min(s(x),s(y)) -> s(min(x,y)),max(x,0) -> x,max(0,y) -> y,max(s(x),s(y)) -> s(max(x,y)),-(x,0) -> x,-(s(x),s(y)) -> -(x,y),gcd(nil) -> 0,gcd(cons(x,nil)) -> x,gcd(cons(0,y)) -> gcd(y),gcd(cons(x,cons(y,z))) ->= gcd(cons(max(x,y),cons(min(x,y),z))),gcd(cons(x,cons(y,z))) -> gcd(cons(-(x,y),cons(y,z)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\Koprowski\\gcd_list.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("cons",2),("gcd",1),("max",2),("min",2),("nil",0),("s",1),("z",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [min(x,0) -> 0,min(0,y) -> 0,min(s(x),s(y)) -> s(min(x,y)),max(x,0) -> x,max(0,y) -> y,max(s(x),s(y)) -> s(max(x,y)),-(x,0) -> x,-(s(x),s(y)) -> -(x,y),gcd(nil) -> 0,gcd(cons(x,nil)) -> x,gcd(cons(0,y)) -> gcd(y),gcd(cons(x,cons(0,y))) -> gcd(cons(x,y)),gcd(cons(s(x),cons(s(y),z))) -> gcd(cons(-(max(x,y),min(x,y)),cons(s(min(x,y)),z))),cons(x,cons(y,z)) ->= cons(y,cons(x,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\Koprowski\\gcd.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("gcd",2),("max",2),("min",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [min(x,0) -> 0,min(0,y) -> 0,min(s(x),s(y)) -> s(min(x,y)),max(x,0) -> x,max(0,y) -> y,max(s(x),s(y)) -> s(max(x,y)),-(x,0) -> x,-(s(x),s(y)) -> -(x,y),gcd(s(x),s(y)) -> gcd(-(max(x,y),min(x,y)),s(min(x,y))),gcd(s(x),0) -> s(x),gcd(0,s(y)) -> s(y),min(x,y) ->= min(y,x),max(x,y) ->= max(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\Koprowski\\abp2.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("F",1),("P",2),("R",1),("S",2),("T",1),("bot",0),("c",2),("check",1),("f",1),("new",0),("nils",0),("not",1),("ok",1),("old",0),("p",2),("sys",4),("v2",0),("v3",0)], trsVariables = fromList ["b","c2","c3","d","ds","v1","v4","v5","w","x","y","z"], trsRMap = [], trsRules = [T(ok(sys(S(b,c(d,ds)),bot,y,z))) ->= T(check(sys(S(b,c(d,ds)),P(d,b),y,z))),T(ok(sys(S(b,c(d,ds)),x,y,F(b)))) ->= T(check(sys(S(not(b),ds),x,y,bot))),T(ok(sys(x,y,R(b),bot))) ->= T(check(sys(x,y,R(b),F(not(b))))),T(ok(sys(x,P(d,b),R(b),y))) -> T(check(sys(x,bot,R(not(b)),y))),not(1) ->= 0,not(0) ->= 1,nils ->= c(new,nils),p(d,b) ->= bot,f(b) ->= bot,check(old) ->= ok(old),check(f(v1)) ->= f(check(v1)),f(ok(v1)) ->= ok(f(v1)),check(p(v1,v2)) ->= p(v1,check(v2)),check(p(v1,v2)) ->= p(check(v1),v2),p(v1,ok(v2)) ->= ok(p(v1,v2)),p(ok(v1),v2) ->= ok(p(v1,v2)),check(R(v1)) ->= R(check(v1)),R(ok(v1)) ->= ok(R(v1)),check(not(v1)) ->= not(check(v1)),not(ok(v1)) ->= ok(not(v1)),check(F(v1)) ->= F(check(v1)),F(ok(v1)) ->= ok(F(v1)),check(P(v1,v2)) ->= P(v1,check(v2)),check(P(v1,v2)) ->= P(check(v1),v2),P(v1,ok(v2)) ->= ok(P(v1,v2)),P(ok(v1),v2) ->= ok(P(v1,v2)),check(c(v1,v2)) ->= c(v1,check(v2)),check(c(v1,v2)) ->= c(check(v1),v2),c(v1,ok(v2)) ->= ok(c(v1,v2)),c(ok(v1),v2) ->= ok(c(v1,v2)),check(S(v1,v2)) ->= S(v1,check(v2)),check(S(v1,v2)) ->= S(check(v1),v2),S(v1,ok(v2)) ->= ok(S(v1,v2)),S(ok(v1),v2) ->= ok(S(v1,v2)),check(sys(v1,v2,v3,v4)) ->= sys(v1,v2,v3,check(v4)),check(sys(v1,v2,v3,v4)) ->= sys(v1,v2,check(v3),v4),check(sys(v1,v2,v3,v4)) ->= sys(v1,check(v2),v3,v4),check(sys(v1,v2,v3,v4)) ->= sys(check(v1),v2,v3,v4),sys(v1,v2,v3,ok(v4)) ->= ok(sys(v1,v2,v3,v4)),sys(v1,v2,ok(v3),v4) ->= ok(sys(v1,v2,v3,v4)),sys(v1,ok(v2),v3,v4) ->= ok(sys(v1,v2,v3,v4)),sys(ok(v1),v2,v3,v4) ->= ok(sys(v1,v2,v3,v4))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\Koprowski\\abp.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("S",2),("T",1),("bot",0),("c",2),("check",1),("f",1),("new",0),("nils",0),("ok",1),("old",0),("p",2),("r",1),("sys",4)], trsVariables = fromList ["b","d","ds","v1","v2","v3","v4","v5","w","x","y","z"], trsRMap = [], trsRules = [T(ok(sys(S(0,c(d,ds)),bot,y,z))) ->= T(check(sys(S(0,c(d,ds)),p(d,0),y,z))),T(ok(sys(S(1,c(d,ds)),bot,y,z))) ->= T(check(sys(S(0,c(d,ds)),p(d,1),y,z))),T(ok(sys(S(0,c(d,ds)),x,y,f(0)))) ->= T(check(sys(S(1,ds),x,y,bot))),T(ok(sys(S(1,c(d,ds)),x,y,f(1)))) ->= T(check(sys(S(0,ds),x,y,bot))),T(ok(sys(x,y,r(0),bot))) ->= T(check(sys(x,y,r(0),f(1)))),T(ok(sys(x,y,r(1),bot))) ->= T(check(sys(x,y,r(1),f(0)))),T(ok(sys(x,p(d,0),r(0),y))) -> T(check(sys(x,bot,r(1),y))),T(ok(sys(x,p(d,1),r(1),y))) -> T(check(sys(x,bot,r(0),y))),nils ->= c(new,nils),p(d,b) ->= bot,f(b) ->= bot,check(old) ->= ok(old),check(r(v1)) ->= r(check(v1)),r(ok(v1)) ->= ok(r(v1)),check(f(v1)) ->= f(check(v1)),f(ok(v1)) ->= ok(f(v1)),check(p(v1,v2)) ->= p(v1,check(v2)),check(p(v1,v2)) ->= p(check(v1),v2),p(v1,ok(v2)) ->= ok(p(v1,v2)),p(ok(v1),v2) ->= ok(p(v1,v2)),check(c(v1,v2)) ->= c(v1,check(v2)),check(c(v1,v2)) ->= c(check(v1),v2),c(v1,ok(v2)) ->= ok(c(v1,v2)),c(ok(v1),v2) ->= ok(c(v1,v2)),check(S(v1,v2)) ->= S(v1,check(v2)),check(S(v1,v2)) ->= S(check(v1),v2),S(v1,ok(v2)) ->= ok(S(v1,v2)),S(ok(v1),v2) ->= ok(S(v1,v2)),check(sys(v1,v2,v3,v4)) ->= sys(v1,v2,v3,check(v4)),check(sys(v1,v2,v3,v4)) ->= sys(v1,v2,check(v3),v4),check(sys(v1,v2,v3,v4)) ->= sys(v1,check(v2),v3,v4),check(sys(v1,v2,v3,v4)) ->= sys(check(v1),v2,v3,v4),sys(v1,v2,v3,ok(v4)) ->= ok(sys(v1,v2,v3,v4)),sys(v1,v2,ok(v3),v4) ->= ok(sys(v1,v2,v3,v4)),sys(v1,ok(v2),v3,v4) ->= ok(sys(v1,v2,v3,v4)),sys(ok(v1),v2,v3,v4) ->= ok(sys(v1,v2,v3,v4))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}
