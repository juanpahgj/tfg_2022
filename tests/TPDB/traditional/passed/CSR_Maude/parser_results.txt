
++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\RENAMED-BOOL_nosorts.trs" :
TRS {trsSignature = fromList [("U11",3),("U12",1),("U21",3),("U22",2),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("and",2),("equal",2),("false",0),("if_then_else_fi",3),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","X","Y","Z"], trsRMap = [], trsRules = [U11(tt,U',U) -> U12(equal(_isNotEqualTo_(U,U'),true)),U12(tt) -> false,U21(tt,B,U') -> U22(equal(_isNotEqualTo_(B,true),true),U'),U22(tt,U') -> U',_and_(A,A) -> A,_and_(A,_xor_(B,C)) -> _xor_(_and_(A,B),_and_(A,C)),_and_(false,A) -> false,_and_(true,A) -> A,_implies_(A,B) -> not_(_xor_(A,_and_(A,B))),_isEqualTo_(U,U') -> U11(tt,U',U),_isEqualTo_(U,U) -> true,_isNotEqualTo_(U,U') -> if_then_else_fi(_isEqualTo_(U,U'),false,true),_isNotEqualTo_(U,U) -> false,_or_(A,B) -> _xor_(_and_(A,B),_xor_(A,B)),_xor_(A,A) -> false,_xor_(false,A) -> A,and(tt,X) -> X,equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U21(tt,B,U'),if_then_else_fi(true,U,U') -> U,not_(A) -> _xor_(A,true),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\RENAMED-BOOL_nosorts-noand.trs" :
TRS {trsSignature = fromList [("U11",4),("U12",4),("U13",4),("U21",3),("U22",3),("U31",3),("U32",3),("U33",1),("U41",3),("U42",3),("U51",3),("U52",3),("U61",3),("U62",3),("U63",3),("U64",2),("U71",2),("U72",2),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("equal",2),("false",0),("if_then_else_fi",3),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","X","Y","Z"], trsRMap = [], trsRules = [U11(tt,A,B,C) -> U12(tt,A,B,C),U12(tt,A,B,C) -> U13(tt,A,B,C),U13(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U21(tt,A,B) -> U22(tt,A,B),U22(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U31(tt,U',U) -> U32(tt,U',U),U32(tt,U',U) -> U33(equal(_isNotEqualTo_(U,U'),true)),U33(tt) -> false,U41(tt,U',U) -> U42(tt,U',U),U42(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U51(tt,A,B) -> U52(tt,A,B),U52(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U61(tt,B,U') -> U62(tt,B,U'),U62(tt,B,U') -> U63(tt,B,U'),U63(tt,B,U') -> U64(equal(_isNotEqualTo_(B,true),true),U'),U64(tt,U') -> U',U71(tt,U) -> U72(tt,U),U72(tt,U) -> U,_and_(A,A) -> A,_and_(A,_xor_(B,C)) -> U11(tt,A,B,C),_and_(false,A) -> false,_and_(true,A) -> A,_implies_(A,B) -> U21(tt,A,B),_isEqualTo_(U,U') -> U31(tt,U',U),_isEqualTo_(U,U) -> true,_isNotEqualTo_(U,U') -> U41(tt,U',U),_isNotEqualTo_(U,U) -> false,_or_(A,B) -> U51(tt,A,B),_xor_(A,A) -> false,_xor_(false,A) -> A,equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U61(tt,B,U'),if_then_else_fi(true,U,U') -> U71(tt,U),not_(A) -> _xor_(A,true),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\RENAMED-BOOL_nokinds.trs" :
TRS {trsSignature = fromList [("U101",3),("U11",2),("U111",1),("U121",2),("U131",3),("U132",2),("U141",2),("U151",2),("U21",4),("U31",1),("U41",2),("U51",3),("U61",3),("U62",1),("U71",1),("U81",3),("U91",1),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("and",2),("equal",2),("false",0),("if_then_else_fi",3),("isBool",1),("isS",1),("isUniversal",1),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [U101(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U11(tt,A) -> A,U111(tt) -> false,U121(tt,A) -> A,U131(tt,B,U') -> U132(equal(_isNotEqualTo_(B,true),true),U'),U132(tt,U') -> U',U141(tt,U) -> U,U151(tt,A) -> _xor_(A,true),U21(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U31(tt) -> false,U41(tt,A) -> A,U51(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U61(tt,U',U) -> U62(equal(_isNotEqualTo_(U,U'),true)),U62(tt) -> false,U71(tt) -> true,U81(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U91(tt) -> false,_and_(A,A) -> U11(isBool(A),A),_and_(A,_xor_(B,C)) -> U21(and(isBool(A),and(isBool(B),isBool(C))),A,B,C),_and_(false,A) -> U31(isBool(A)),_and_(true,A) -> U41(isBool(A),A),_implies_(A,B) -> U51(and(isBool(A),isBool(B)),A,B),_isEqualTo_(U,U') -> U61(and(isS(U'),isS(U)),U',U),_isEqualTo_(U,U) -> U71(isS(U)),_isNotEqualTo_(U,U') -> U81(and(isS(U'),isS(U)),U',U),_isNotEqualTo_(U,U) -> U91(isS(U)),_or_(A,B) -> U101(and(isBool(A),isBool(B)),A,B),_xor_(A,A) -> U111(isBool(A)),_xor_(false,A) -> U121(isBool(A),A),and(tt,X) -> X,equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U131(and(isBool(B),and(isS(U'),isS(U))),B,U'),if_then_else_fi(true,U,U') -> U141(and(isS(U'),isS(U)),U),isBool(false) -> tt,isBool(true) -> tt,isBool(_and_(V1,V2)) -> and(isBool(V1),isBool(V2)),isBool(_implies_(V1,V2)) -> and(isBool(V1),isBool(V2)),isBool(_isEqualTo_(V1,V2)) -> and(isUniversal(V1),isUniversal(V2)),isBool(_isNotEqualTo_(V1,V2)) -> and(isUniversal(V1),isUniversal(V2)),isBool(_or_(V1,V2)) -> and(isBool(V1),isBool(V2)),isBool(_xor_(V1,V2)) -> and(isBool(V1),isBool(V2)),isBool(not_(V1)) -> isBool(V1),not_(A) -> U151(isBool(A),A),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\RENAMED-BOOL_nokinds-noand.trs" :
TRS {trsSignature = fromList [("U101",3),("U102",3),("U11",2),("U111",1),("U121",2),("U131",4),("U132",4),("U133",3),("U134",2),("U141",2),("U142",2),("U151",2),("U152",1),("U161",2),("U162",1),("U171",2),("U172",1),("U181",2),("U182",1),("U191",2),("U192",1),("U201",2),("U202",1),("U21",4),("U211",1),("U22",4),("U221",2),("U23",4),("U31",1),("U41",2),("U51",3),("U52",3),("U61",3),("U62",3),("U63",1),("U71",1),("U81",3),("U82",3),("U91",1),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("equal",2),("false",0),("if_then_else_fi",3),("isBool",1),("isS",1),("isUniversal",1),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [U101(tt,A,B) -> U102(isBool(B),A,B),U102(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U11(tt,A) -> A,U111(tt) -> false,U121(tt,A) -> A,U131(tt,B,U',U) -> U132(isS(U'),B,U',U),U132(tt,B,U',U) -> U133(isS(U),B,U'),U133(tt,B,U') -> U134(equal(_isNotEqualTo_(B,true),true),U'),U134(tt,U') -> U',U141(tt,U) -> U142(isS(U),U),U142(tt,U) -> U,U151(tt,V2) -> U152(isBool(V2)),U152(tt) -> tt,U161(tt,V2) -> U162(isBool(V2)),U162(tt) -> tt,U171(tt,V2) -> U172(isUniversal(V2)),U172(tt) -> tt,U181(tt,V2) -> U182(isUniversal(V2)),U182(tt) -> tt,U191(tt,V2) -> U192(isBool(V2)),U192(tt) -> tt,U201(tt,V2) -> U202(isBool(V2)),U202(tt) -> tt,U21(tt,A,B,C) -> U22(isBool(B),A,B,C),U211(tt) -> tt,U22(tt,A,B,C) -> U23(isBool(C),A,B,C),U221(tt,A) -> _xor_(A,true),U23(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U31(tt) -> false,U41(tt,A) -> A,U51(tt,A,B) -> U52(isBool(B),A,B),U52(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U61(tt,U',U) -> U62(isS(U),U',U),U62(tt,U',U) -> U63(equal(_isNotEqualTo_(U,U'),true)),U63(tt) -> false,U71(tt) -> true,U81(tt,U',U) -> U82(isS(U),U',U),U82(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U91(tt) -> false,_and_(A,A) -> U11(isBool(A),A),_and_(A,_xor_(B,C)) -> U21(isBool(A),A,B,C),_and_(false,A) -> U31(isBool(A)),_and_(true,A) -> U41(isBool(A),A),_implies_(A,B) -> U51(isBool(A),A,B),_isEqualTo_(U,U') -> U61(isS(U'),U',U),_isEqualTo_(U,U) -> U71(isS(U)),_isNotEqualTo_(U,U') -> U81(isS(U'),U',U),_isNotEqualTo_(U,U) -> U91(isS(U)),_or_(A,B) -> U101(isBool(A),A,B),_xor_(A,A) -> U111(isBool(A)),_xor_(false,A) -> U121(isBool(A),A),equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U131(isBool(B),B,U',U),if_then_else_fi(true,U,U') -> U141(isS(U'),U),isBool(false) -> tt,isBool(true) -> tt,isBool(_and_(V1,V2)) -> U151(isBool(V1),V2),isBool(_implies_(V1,V2)) -> U161(isBool(V1),V2),isBool(_isEqualTo_(V1,V2)) -> U171(isUniversal(V1),V2),isBool(_isNotEqualTo_(V1,V2)) -> U181(isUniversal(V1),V2),isBool(_or_(V1,V2)) -> U191(isBool(V1),V2),isBool(_xor_(V1,V2)) -> U201(isBool(V1),V2),isBool(not_(V1)) -> U211(isBool(V1)),not_(A) -> U221(isBool(A),A),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\RENAMED-BOOL_complete.trs" :
TRS {trsSignature = fromList [("U101",3),("U11",2),("U111",1),("U121",2),("U131",3),("U132",2),("U141",2),("U151",3),("U152",2),("U153",1),("U161",3),("U162",2),("U163",1),("U171",3),("U172",2),("U173",1),("U181",3),("U182",2),("U183",1),("U191",2),("U192",1),("U201",2),("U21",4),("U31",1),("U41",2),("U51",3),("U61",3),("U62",1),("U71",1),("U81",3),("U91",1),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("and",2),("equal",2),("false",0),("if_then_else_fi",3),("isBool",1),("isBoolKind",1),("isS",1),("isSKind",1),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [U101(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U11(tt,A) -> A,U111(tt) -> false,U121(tt,A) -> A,U131(tt,B,U') -> U132(equal(_isNotEqualTo_(B,true),true),U'),U132(tt,U') -> U',U141(tt,U) -> U,U151(tt,V1,V2) -> U152(isBool(V1),V2),U152(tt,V2) -> U153(isBool(V2)),U153(tt) -> tt,U161(tt,V1,V2) -> U162(isBool(V1),V2),U162(tt,V2) -> U163(isBool(V2)),U163(tt) -> tt,U171(tt,V1,V2) -> U172(isBool(V1),V2),U172(tt,V2) -> U173(isBool(V2)),U173(tt) -> tt,U181(tt,V1,V2) -> U182(isBool(V1),V2),U182(tt,V2) -> U183(isBool(V2)),U183(tt) -> tt,U191(tt,V1) -> U192(isBool(V1)),U192(tt) -> tt,U201(tt,A) -> _xor_(A,true),U21(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U31(tt) -> false,U41(tt,A) -> A,U51(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U61(tt,U',U) -> U62(equal(_isNotEqualTo_(U,U'),true)),U62(tt) -> false,U71(tt) -> true,U81(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U91(tt) -> false,_and_(A,A) -> U11(and(isBool(A),isBoolKind(A)),A),_and_(A,_xor_(B,C)) -> U21(and(and(isBool(A),isBoolKind(A)),and(and(isBool(B),isBoolKind(B)),and(isBool(C),isBoolKind(C)))),A,B,C),_and_(false,A) -> U31(and(isBool(A),isBoolKind(A))),_and_(true,A) -> U41(and(isBool(A),isBoolKind(A)),A),_implies_(A,B) -> U51(and(and(isBool(A),isBoolKind(A)),and(isBool(B),isBoolKind(B))),A,B),_isEqualTo_(U,U') -> U61(and(and(isS(U'),isSKind(U')),and(isS(U),isSKind(U))),U',U),_isEqualTo_(U,U) -> U71(and(isS(U),isSKind(U))),_isNotEqualTo_(U,U') -> U81(and(and(isS(U'),isSKind(U')),and(isS(U),isSKind(U))),U',U),_isNotEqualTo_(U,U) -> U91(and(isS(U),isSKind(U))),_or_(A,B) -> U101(and(and(isBool(A),isBoolKind(A)),and(isBool(B),isBoolKind(B))),A,B),_xor_(A,A) -> U111(and(isBool(A),isBoolKind(A))),_xor_(false,A) -> U121(and(isBool(A),isBoolKind(A)),A),and(tt,X) -> X,equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U131(and(and(isBool(B),isBoolKind(B)),and(and(isS(U'),isSKind(U')),and(isS(U),isSKind(U)))),B,U'),if_then_else_fi(true,U,U') -> U141(and(and(isS(U'),isSKind(U')),and(isS(U),isSKind(U))),U),isBool(false) -> tt,isBool(true) -> tt,isBool(_and_(V1,V2)) -> U151(and(isBoolKind(V1),isBoolKind(V2)),V1,V2),isBool(_implies_(V1,V2)) -> U161(and(isBoolKind(V1),isBoolKind(V2)),V1,V2),isBool(_isEqualTo_(V1,V2)) -> tt,isBool(_isNotEqualTo_(V1,V2)) -> tt,isBool(_or_(V1,V2)) -> U171(and(isBoolKind(V1),isBoolKind(V2)),V1,V2),isBool(_xor_(V1,V2)) -> U181(and(isBoolKind(V1),isBoolKind(V2)),V1,V2),isBool(not_(V1)) -> U191(isBoolKind(V1),V1),isBoolKind(false) -> tt,isBoolKind(true) -> tt,isBoolKind(_and_(V1,V2)) -> and(isBoolKind(V1),isBoolKind(V2)),isBoolKind(_implies_(V1,V2)) -> and(isBoolKind(V1),isBoolKind(V2)),isBoolKind(_isEqualTo_(V1,V2)) -> tt,isBoolKind(_isNotEqualTo_(V1,V2)) -> tt,isBoolKind(_or_(V1,V2)) -> and(isBoolKind(V1),isBoolKind(V2)),isBoolKind(_xor_(V1,V2)) -> and(isBoolKind(V1),isBoolKind(V2)),isBoolKind(not_(V1)) -> isBoolKind(V1),not_(A) -> U201(and(isBool(A),isBoolKind(A)),A),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\RENAMED-BOOL_complete-noand.trs" :
TRS {trsSignature = fromList [("U101",3),("U102",3),("U103",3),("U104",3),("U11",2),("U111",2),("U112",1),("U12",2),("U121",2),("U122",2),("U131",4),("U132",4),("U133",4),("U134",4),("U135",4),("U136",3),("U137",2),("U141",3),("U142",2),("U143",2),("U144",2),("U151",3),("U152",3),("U153",3),("U154",3),("U155",2),("U156",1),("U161",3),("U162",3),("U163",3),("U164",3),("U165",2),("U166",1),("U171",3),("U172",3),("U173",3),("U174",3),("U175",2),("U176",1),("U181",3),("U182",3),("U183",3),("U184",3),("U185",2),("U186",1),("U191",2),("U192",2),("U193",1),("U201",2),("U202",1),("U21",4),("U211",2),("U212",1),("U22",4),("U221",2),("U222",1),("U23",4),("U231",2),("U232",1),("U24",4),("U241",1),("U25",4),("U251",2),("U252",2),("U26",4),("U31",2),("U32",1),("U41",2),("U42",2),("U51",3),("U52",3),("U53",3),("U54",3),("U61",3),("U62",3),("U63",3),("U64",3),("U65",1),("U71",2),("U72",1),("U81",3),("U82",3),("U83",3),("U84",3),("U91",2),("U92",1),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("equal",2),("false",0),("if_then_else_fi",3),("isBool",1),("isBoolKind",1),("isS",1),("isSKind",1),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [U101(tt,A,B) -> U102(isBoolKind(A),A,B),U102(tt,A,B) -> U103(isBool(B),A,B),U103(tt,A,B) -> U104(isBoolKind(B),A,B),U104(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U11(tt,A) -> U12(isBoolKind(A),A),U111(tt,A) -> U112(isBoolKind(A)),U112(tt) -> false,U12(tt,A) -> A,U121(tt,A) -> U122(isBoolKind(A),A),U122(tt,A) -> A,U131(tt,B,U',U) -> U132(isBoolKind(B),B,U',U),U132(tt,B,U',U) -> U133(isS(U'),B,U',U),U133(tt,B,U',U) -> U134(isSKind(U'),B,U',U),U134(tt,B,U',U) -> U135(isS(U),B,U',U),U135(tt,B,U',U) -> U136(isSKind(U),B,U'),U136(tt,B,U') -> U137(equal(_isNotEqualTo_(B,true),true),U'),U137(tt,U') -> U',U141(tt,U',U) -> U142(isSKind(U'),U),U142(tt,U) -> U143(isS(U),U),U143(tt,U) -> U144(isSKind(U),U),U144(tt,U) -> U,U151(tt,V1,V2) -> U152(isBoolKind(V1),V1,V2),U152(tt,V1,V2) -> U153(isBoolKind(V2),V1,V2),U153(tt,V1,V2) -> U154(isBoolKind(V2),V1,V2),U154(tt,V1,V2) -> U155(isBool(V1),V2),U155(tt,V2) -> U156(isBool(V2)),U156(tt) -> tt,U161(tt,V1,V2) -> U162(isBoolKind(V1),V1,V2),U162(tt,V1,V2) -> U163(isBoolKind(V2),V1,V2),U163(tt,V1,V2) -> U164(isBoolKind(V2),V1,V2),U164(tt,V1,V2) -> U165(isBool(V1),V2),U165(tt,V2) -> U166(isBool(V2)),U166(tt) -> tt,U171(tt,V1,V2) -> U172(isBoolKind(V1),V1,V2),U172(tt,V1,V2) -> U173(isBoolKind(V2),V1,V2),U173(tt,V1,V2) -> U174(isBoolKind(V2),V1,V2),U174(tt,V1,V2) -> U175(isBool(V1),V2),U175(tt,V2) -> U176(isBool(V2)),U176(tt) -> tt,U181(tt,V1,V2) -> U182(isBoolKind(V1),V1,V2),U182(tt,V1,V2) -> U183(isBoolKind(V2),V1,V2),U183(tt,V1,V2) -> U184(isBoolKind(V2),V1,V2),U184(tt,V1,V2) -> U185(isBool(V1),V2),U185(tt,V2) -> U186(isBool(V2)),U186(tt) -> tt,U191(tt,V1) -> U192(isBoolKind(V1),V1),U192(tt,V1) -> U193(isBool(V1)),U193(tt) -> tt,U201(tt,V2) -> U202(isBoolKind(V2)),U202(tt) -> tt,U21(tt,A,B,C) -> U22(isBoolKind(A),A,B,C),U211(tt,V2) -> U212(isBoolKind(V2)),U212(tt) -> tt,U22(tt,A,B,C) -> U23(isBool(B),A,B,C),U221(tt,V2) -> U222(isBoolKind(V2)),U222(tt) -> tt,U23(tt,A,B,C) -> U24(isBoolKind(B),A,B,C),U231(tt,V2) -> U232(isBoolKind(V2)),U232(tt) -> tt,U24(tt,A,B,C) -> U25(isBool(C),A,B,C),U241(tt) -> tt,U25(tt,A,B,C) -> U26(isBoolKind(C),A,B,C),U251(tt,A) -> U252(isBoolKind(A),A),U252(tt,A) -> _xor_(A,true),U26(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U31(tt,A) -> U32(isBoolKind(A)),U32(tt) -> false,U41(tt,A) -> U42(isBoolKind(A),A),U42(tt,A) -> A,U51(tt,A,B) -> U52(isBoolKind(A),A,B),U52(tt,A,B) -> U53(isBool(B),A,B),U53(tt,A,B) -> U54(isBoolKind(B),A,B),U54(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U61(tt,U',U) -> U62(isSKind(U'),U',U),U62(tt,U',U) -> U63(isS(U),U',U),U63(tt,U',U) -> U64(isSKind(U),U',U),U64(tt,U',U) -> U65(equal(_isNotEqualTo_(U,U'),true)),U65(tt) -> false,U71(tt,U) -> U72(isSKind(U)),U72(tt) -> true,U81(tt,U',U) -> U82(isSKind(U'),U',U),U82(tt,U',U) -> U83(isS(U),U',U),U83(tt,U',U) -> U84(isSKind(U),U',U),U84(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U91(tt,U) -> U92(isSKind(U)),U92(tt) -> false,_and_(A,A) -> U11(isBool(A),A),_and_(A,_xor_(B,C)) -> U21(isBool(A),A,B,C),_and_(false,A) -> U31(isBool(A),A),_and_(true,A) -> U41(isBool(A),A),_implies_(A,B) -> U51(isBool(A),A,B),_isEqualTo_(U,U') -> U61(isS(U'),U',U),_isEqualTo_(U,U) -> U71(isS(U),U),_isNotEqualTo_(U,U') -> U81(isS(U'),U',U),_isNotEqualTo_(U,U) -> U91(isS(U),U),_or_(A,B) -> U101(isBool(A),A,B),_xor_(A,A) -> U111(isBool(A),A),_xor_(false,A) -> U121(isBool(A),A),equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U131(isBool(B),B,U',U),if_then_else_fi(true,U,U') -> U141(isS(U'),U',U),isBool(false) -> tt,isBool(true) -> tt,isBool(_and_(V1,V2)) -> U151(isBoolKind(V1),V1,V2),isBool(_implies_(V1,V2)) -> U161(isBoolKind(V1),V1,V2),isBool(_isEqualTo_(V1,V2)) -> tt,isBool(_isNotEqualTo_(V1,V2)) -> tt,isBool(_or_(V1,V2)) -> U171(isBoolKind(V1),V1,V2),isBool(_xor_(V1,V2)) -> U181(isBoolKind(V1),V1,V2),isBool(not_(V1)) -> U191(isBoolKind(V1),V1),isBoolKind(false) -> tt,isBoolKind(true) -> tt,isBoolKind(_and_(V1,V2)) -> U201(isBoolKind(V1),V2),isBoolKind(_implies_(V1,V2)) -> U211(isBoolKind(V1),V2),isBoolKind(_isEqualTo_(V1,V2)) -> tt,isBoolKind(_isNotEqualTo_(V1,V2)) -> tt,isBoolKind(_or_(V1,V2)) -> U221(isBoolKind(V1),V2),isBoolKind(_xor_(V1,V2)) -> U231(isBoolKind(V1),V2),isBoolKind(not_(V1)) -> U241(isBoolKind(V1)),not_(A) -> U251(isBool(A),A),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PEANO-NAT_nosorts.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U11",3),("U12",3),("U21",3),("U22",1),("U31",3),("U32",3),("_*_",2),("_+_",2),("_<_",2),("_>_",2),("and",2),("d",2),("equal",2),("false",0),("gcd",2),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","X","Y","Z"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U11(tt,M',N') -> U12(equal(_>_(N',M'),true),M',N'),U12(tt,M',N') -> gcd(d(N',M'),M'),U21(tt,M',N) -> U22(equal(_>_(M',N),true)),U22(tt) -> 0,U31(tt,M',N) -> U32(equal(_>_(N,M'),true),M',N),U32(tt,M',N) -> s_(quot(d(N,M'),M')),_*_(N,0) -> 0,_*_(s_(N),s_(M)) -> s_(_+_(N,_+_(M,_*_(N,M)))),_+_(N,0) -> N,_+_(s_(N),s_(M)) -> s_(s_(_+_(N,M))),_<_(N,M) -> _>_(M,N),_>_(0,M) -> false,_>_(N',0) -> true,_>_(s_(N),s_(M)) -> _>_(N,M),and(tt,X) -> X,d(0,N) -> N,d(s_(N),s_(M)) -> d(N,M),equal(X,X) -> tt,gcd(0,N) -> 0,gcd(N',M') -> U11(tt,M',N'),gcd(N',N') -> N',p_(s_(N)) -> N,quot(M',M') -> s_(0),quot(N,M') -> U21(tt,M',N),quot(N,M') -> U31(tt,M',N)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PEANO-NAT_nosorts-noand.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U11",3),("U12",3),("U21",3),("U22",3),("U31",3),("U32",3),("U41",3),("U42",3),("U51",3),("U52",3),("U61",3),("U62",3),("U63",3),("U71",3),("U72",3),("U73",1),("U81",3),("U82",3),("U83",3),("_*_",2),("_+_",2),("_<_",2),("_>_",2),("d",2),("equal",2),("false",0),("gcd",2),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","X","Y","Z"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U11(tt,M,N) -> U12(tt,M,N),U12(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U21(tt,M,N) -> U22(tt,M,N),U22(tt,M,N) -> s_(s_(_+_(N,M))),U31(tt,M,N) -> U32(tt,M,N),U32(tt,M,N) -> _>_(M,N),U41(tt,M,N) -> U42(tt,M,N),U42(tt,M,N) -> _>_(N,M),U51(tt,M,N) -> U52(tt,M,N),U52(tt,M,N) -> d(N,M),U61(tt,M',N') -> U62(tt,M',N'),U62(tt,M',N') -> U63(equal(_>_(N',M'),true),M',N'),U63(tt,M',N') -> gcd(d(N',M'),M'),U71(tt,M',N) -> U72(tt,M',N),U72(tt,M',N) -> U73(equal(_>_(M',N),true)),U73(tt) -> 0,U81(tt,M',N) -> U82(tt,M',N),U82(tt,M',N) -> U83(equal(_>_(N,M'),true),M',N),U83(tt,M',N) -> s_(quot(d(N,M'),M')),_*_(N,0) -> 0,_*_(s_(N),s_(M)) -> U11(tt,M,N),_+_(N,0) -> N,_+_(s_(N),s_(M)) -> U21(tt,M,N),_<_(N,M) -> U31(tt,M,N),_>_(0,M) -> false,_>_(N',0) -> true,_>_(s_(N),s_(M)) -> U41(tt,M,N),d(0,N) -> N,d(s_(N),s_(M)) -> U51(tt,M,N),equal(X,X) -> tt,gcd(0,N) -> 0,gcd(N',M') -> U61(tt,M',N'),gcd(N',N') -> N',p_(s_(N)) -> N,quot(M',M') -> s_(0),quot(N,M') -> U71(tt,M',N),quot(N,M') -> U81(tt,M',N)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PEANO-NAT_nokinds.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U101",3),("U11",1),("U111",1),("U121",3),("U122",3),("U131",2),("U141",2),("U151",1),("U161",3),("U162",1),("U171",3),("U172",3),("U21",3),("U31",2),("U41",3),("U51",3),("U61",1),("U71",1),("U81",3),("U91",2),("_*_",2),("_+_",2),("_<_",2),("_>_",2),("and",2),("d",2),("equal",2),("false",0),("gcd",2),("isBoolean",1),("isNat",1),("isNzNat",1),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","V","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U101(tt,M,N) -> d(N,M),U11(tt) -> 0,U111(tt) -> 0,U121(tt,M',N') -> U122(equal(_>_(N',M'),true),M',N'),U122(tt,M',N') -> gcd(d(N',M'),M'),U131(tt,N') -> N',U141(tt,N) -> N,U151(tt) -> s_(0),U161(tt,M',N) -> U162(equal(_>_(M',N),true)),U162(tt) -> 0,U171(tt,M',N) -> U172(equal(_>_(N,M'),true),M',N),U172(tt,M',N) -> s_(quot(d(N,M'),M')),U21(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U31(tt,N) -> N,U41(tt,M,N) -> s_(s_(_+_(N,M))),U51(tt,M,N) -> _>_(M,N),U61(tt) -> false,U71(tt) -> true,U81(tt,M,N) -> _>_(N,M),U91(tt,N) -> N,_*_(N,0) -> U11(isNat(N)),_*_(s_(N),s_(M)) -> U21(and(isNat(M),isNat(N)),M,N),_+_(N,0) -> U31(isNat(N),N),_+_(s_(N),s_(M)) -> U41(and(isNat(M),isNat(N)),M,N),_<_(N,M) -> U51(and(isNat(M),isNat(N)),M,N),_>_(0,M) -> U61(isNat(M)),_>_(N',0) -> U71(isNzNat(N')),_>_(s_(N),s_(M)) -> U81(and(isNat(M),isNat(N)),M,N),and(tt,X) -> X,d(0,N) -> U91(isNat(N),N),d(s_(N),s_(M)) -> U101(and(isNat(M),isNat(N)),M,N),equal(X,X) -> tt,gcd(0,N) -> U111(isNat(N)),gcd(N',M') -> U121(and(isNzNat(M'),isNzNat(N')),M',N'),gcd(N',N') -> U131(isNzNat(N'),N'),isBoolean(false) -> tt,isBoolean(true) -> tt,isBoolean(_<_(V1,V2)) -> and(isNat(V1),isNat(V2)),isBoolean(_>_(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(0) -> tt,isNat(V) -> isNzNat(V),isNat(_*_(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(_+_(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(d(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(gcd(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(p_(V1)) -> isNzNat(V1),isNat(quot(V1,V2)) -> and(isNat(V1),isNzNat(V2)),isNzNat(1) -> tt,isNzNat(2) -> tt,isNzNat(3) -> tt,isNzNat(4) -> tt,isNzNat(5) -> tt,isNzNat(6) -> tt,isNzNat(7) -> tt,isNzNat(_*_(V1,V2)) -> and(isNzNat(V1),isNzNat(V2)),isNzNat(gcd(V1,V2)) -> and(isNzNat(V1),isNzNat(V2)),isNzNat(s_(V1)) -> isNat(V1),p_(s_(N)) -> U141(isNat(N),N),quot(M',M') -> U151(isNzNat(M')),quot(N,M') -> U161(and(isNzNat(M'),isNat(N)),M',N),quot(N,M') -> U171(and(isNzNat(M'),isNat(N)),M',N)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PEANO-NAT_nokinds-noand.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U101",3),("U102",3),("U11",1),("U111",1),("U121",3),("U122",3),("U123",3),("U131",2),("U141",2),("U142",1),("U151",2),("U152",1),("U161",1),("U171",2),("U172",1),("U181",2),("U182",1),("U191",2),("U192",1),("U201",2),("U202",1),("U21",3),("U211",1),("U22",3),("U221",2),("U222",1),("U231",2),("U232",1),("U241",2),("U242",1),("U251",1),("U261",2),("U271",1),("U281",3),("U282",3),("U283",1),("U291",3),("U292",3),("U293",3),("U31",2),("U41",3),("U42",3),("U51",3),("U52",3),("U61",1),("U71",1),("U81",3),("U82",3),("U91",2),("_*_",2),("_+_",2),("_<_",2),("_>_",2),("d",2),("equal",2),("false",0),("gcd",2),("isBoolean",1),("isNat",1),("isNzNat",1),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","V","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U101(tt,M,N) -> U102(isNat(N),M,N),U102(tt,M,N) -> d(N,M),U11(tt) -> 0,U111(tt) -> 0,U121(tt,M',N') -> U122(isNzNat(N'),M',N'),U122(tt,M',N') -> U123(equal(_>_(N',M'),true),M',N'),U123(tt,M',N') -> gcd(d(N',M'),M'),U131(tt,N') -> N',U141(tt,V2) -> U142(isNat(V2)),U142(tt) -> tt,U151(tt,V2) -> U152(isNat(V2)),U152(tt) -> tt,U161(tt) -> tt,U171(tt,V2) -> U172(isNat(V2)),U172(tt) -> tt,U181(tt,V2) -> U182(isNat(V2)),U182(tt) -> tt,U191(tt,V2) -> U192(isNat(V2)),U192(tt) -> tt,U201(tt,V2) -> U202(isNat(V2)),U202(tt) -> tt,U21(tt,M,N) -> U22(isNat(N),M,N),U211(tt) -> tt,U22(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U221(tt,V2) -> U222(isNzNat(V2)),U222(tt) -> tt,U231(tt,V2) -> U232(isNzNat(V2)),U232(tt) -> tt,U241(tt,V2) -> U242(isNzNat(V2)),U242(tt) -> tt,U251(tt) -> tt,U261(tt,N) -> N,U271(tt) -> s_(0),U281(tt,M',N) -> U282(isNat(N),M',N),U282(tt,M',N) -> U283(equal(_>_(M',N),true)),U283(tt) -> 0,U291(tt,M',N) -> U292(isNat(N),M',N),U292(tt,M',N) -> U293(equal(_>_(N,M'),true),M',N),U293(tt,M',N) -> s_(quot(d(N,M'),M')),U31(tt,N) -> N,U41(tt,M,N) -> U42(isNat(N),M,N),U42(tt,M,N) -> s_(s_(_+_(N,M))),U51(tt,M,N) -> U52(isNat(N),M,N),U52(tt,M,N) -> _>_(M,N),U61(tt) -> false,U71(tt) -> true,U81(tt,M,N) -> U82(isNat(N),M,N),U82(tt,M,N) -> _>_(N,M),U91(tt,N) -> N,_*_(N,0) -> U11(isNat(N)),_*_(s_(N),s_(M)) -> U21(isNat(M),M,N),_+_(N,0) -> U31(isNat(N),N),_+_(s_(N),s_(M)) -> U41(isNat(M),M,N),_<_(N,M) -> U51(isNat(M),M,N),_>_(0,M) -> U61(isNat(M)),_>_(N',0) -> U71(isNzNat(N')),_>_(s_(N),s_(M)) -> U81(isNat(M),M,N),d(0,N) -> U91(isNat(N),N),d(s_(N),s_(M)) -> U101(isNat(M),M,N),equal(X,X) -> tt,gcd(0,N) -> U111(isNat(N)),gcd(N',M') -> U121(isNzNat(M'),M',N'),gcd(N',N') -> U131(isNzNat(N'),N'),isBoolean(false) -> tt,isBoolean(true) -> tt,isBoolean(_<_(V1,V2)) -> U141(isNat(V1),V2),isBoolean(_>_(V1,V2)) -> U151(isNat(V1),V2),isNat(0) -> tt,isNat(V) -> U161(isNzNat(V)),isNat(_*_(V1,V2)) -> U171(isNat(V1),V2),isNat(_+_(V1,V2)) -> U181(isNat(V1),V2),isNat(d(V1,V2)) -> U191(isNat(V1),V2),isNat(gcd(V1,V2)) -> U201(isNat(V1),V2),isNat(p_(V1)) -> U211(isNzNat(V1)),isNat(quot(V1,V2)) -> U221(isNat(V1),V2),isNzNat(1) -> tt,isNzNat(2) -> tt,isNzNat(3) -> tt,isNzNat(4) -> tt,isNzNat(5) -> tt,isNzNat(6) -> tt,isNzNat(7) -> tt,isNzNat(_*_(V1,V2)) -> U231(isNzNat(V1),V2),isNzNat(gcd(V1,V2)) -> U241(isNzNat(V1),V2),isNzNat(s_(V1)) -> U251(isNat(V1)),p_(s_(N)) -> U261(isNat(N),N),quot(M',M') -> U271(isNzNat(M')),quot(N,M') -> U281(isNzNat(M'),M',N),quot(N,M') -> U291(isNzNat(M'),M',N)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PEANO-NAT_complete.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U101",3),("U11",1),("U111",1),("U121",3),("U122",3),("U131",2),("U141",3),("U142",2),("U143",1),("U151",3),("U152",2),("U153",1),("U161",2),("U162",1),("U171",3),("U172",2),("U173",1),("U181",3),("U182",2),("U183",1),("U191",3),("U192",2),("U193",1),("U201",3),("U202",2),("U203",1),("U21",3),("U211",2),("U212",1),("U221",3),("U222",2),("U223",1),("U231",3),("U232",2),("U233",1),("U241",3),("U242",2),("U243",1),("U251",2),("U252",1),("U261",2),("U271",1),("U281",3),("U282",1),("U291",3),("U292",3),("U31",2),("U41",3),("U51",3),("U61",1),("U71",1),("U81",3),("U91",2),("_*_",2),("_+_",2),("_<_",2),("_>_",2),("and",2),("d",2),("equal",2),("false",0),("gcd",2),("isBoolean",1),("isBooleanKind",1),("isNat",1),("isNatKind",1),("isNzNat",1),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","V","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U101(tt,M,N) -> d(N,M),U11(tt) -> 0,U111(tt) -> 0,U121(tt,M',N') -> U122(equal(_>_(N',M'),true),M',N'),U122(tt,M',N') -> gcd(d(N',M'),M'),U131(tt,N') -> N',U141(tt,V1,V2) -> U142(isNat(V1),V2),U142(tt,V2) -> U143(isNat(V2)),U143(tt) -> tt,U151(tt,V1,V2) -> U152(isNat(V1),V2),U152(tt,V2) -> U153(isNat(V2)),U153(tt) -> tt,U161(tt,V) -> U162(isNzNat(V)),U162(tt) -> tt,U171(tt,V1,V2) -> U172(isNat(V1),V2),U172(tt,V2) -> U173(isNat(V2)),U173(tt) -> tt,U181(tt,V1,V2) -> U182(isNat(V1),V2),U182(tt,V2) -> U183(isNat(V2)),U183(tt) -> tt,U191(tt,V1,V2) -> U192(isNat(V1),V2),U192(tt,V2) -> U193(isNat(V2)),U193(tt) -> tt,U201(tt,V1,V2) -> U202(isNat(V1),V2),U202(tt,V2) -> U203(isNat(V2)),U203(tt) -> tt,U21(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U211(tt,V1) -> U212(isNzNat(V1)),U212(tt) -> tt,U221(tt,V1,V2) -> U222(isNat(V1),V2),U222(tt,V2) -> U223(isNzNat(V2)),U223(tt) -> tt,U231(tt,V1,V2) -> U232(isNzNat(V1),V2),U232(tt,V2) -> U233(isNzNat(V2)),U233(tt) -> tt,U241(tt,V1,V2) -> U242(isNzNat(V1),V2),U242(tt,V2) -> U243(isNzNat(V2)),U243(tt) -> tt,U251(tt,V1) -> U252(isNat(V1)),U252(tt) -> tt,U261(tt,N) -> N,U271(tt) -> s_(0),U281(tt,M',N) -> U282(equal(_>_(M',N),true)),U282(tt) -> 0,U291(tt,M',N) -> U292(equal(_>_(N,M'),true),M',N),U292(tt,M',N) -> s_(quot(d(N,M'),M')),U31(tt,N) -> N,U41(tt,M,N) -> s_(s_(_+_(N,M))),U51(tt,M,N) -> _>_(M,N),U61(tt) -> false,U71(tt) -> true,U81(tt,M,N) -> _>_(N,M),U91(tt,N) -> N,_*_(N,0) -> U11(and(isNat(N),isNatKind(N))),_*_(s_(N),s_(M)) -> U21(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),_+_(N,0) -> U31(and(isNat(N),isNatKind(N)),N),_+_(s_(N),s_(M)) -> U41(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),_<_(N,M) -> U51(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),_>_(0,M) -> U61(and(isNat(M),isNatKind(M))),_>_(N',0) -> U71(and(isNzNat(N'),isNatKind(N'))),_>_(s_(N),s_(M)) -> U81(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),and(tt,X) -> X,d(0,N) -> U91(and(isNat(N),isNatKind(N)),N),d(s_(N),s_(M)) -> U101(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),equal(X,X) -> tt,gcd(0,N) -> U111(and(isNat(N),isNatKind(N))),gcd(N',M') -> U121(and(and(isNzNat(M'),isNatKind(M')),and(isNzNat(N'),isNatKind(N'))),M',N'),gcd(N',N') -> U131(and(isNzNat(N'),isNatKind(N')),N'),isBoolean(false) -> tt,isBoolean(true) -> tt,isBoolean(_<_(V1,V2)) -> U141(and(isNatKind(V1),isNatKind(V2)),V1,V2),isBoolean(_>_(V1,V2)) -> U151(and(isNatKind(V1),isNatKind(V2)),V1,V2),isBooleanKind(false) -> tt,isBooleanKind(true) -> tt,isBooleanKind(_<_(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isBooleanKind(_>_(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNat(0) -> tt,isNat(V) -> U161(isNatKind(V),V),isNat(_*_(V1,V2)) -> U171(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(_+_(V1,V2)) -> U181(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(d(V1,V2)) -> U191(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(gcd(V1,V2)) -> U201(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(p_(V1)) -> U211(isNatKind(V1),V1),isNat(quot(V1,V2)) -> U221(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNatKind(0) -> tt,isNatKind(1) -> tt,isNatKind(2) -> tt,isNatKind(3) -> tt,isNatKind(4) -> tt,isNatKind(5) -> tt,isNatKind(6) -> tt,isNatKind(7) -> tt,isNatKind(_*_(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(_+_(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(d(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(gcd(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(p_(V1)) -> isNatKind(V1),isNatKind(quot(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(s_(V1)) -> isNatKind(V1),isNzNat(1) -> tt,isNzNat(2) -> tt,isNzNat(3) -> tt,isNzNat(4) -> tt,isNzNat(5) -> tt,isNzNat(6) -> tt,isNzNat(7) -> tt,isNzNat(_*_(V1,V2)) -> U231(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNzNat(gcd(V1,V2)) -> U241(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNzNat(s_(V1)) -> U251(isNatKind(V1),V1),p_(s_(N)) -> U261(and(isNat(N),isNatKind(N)),N),quot(M',M') -> U271(and(isNzNat(M'),isNatKind(M'))),quot(N,M') -> U281(and(and(isNzNat(M'),isNatKind(M')),and(isNat(N),isNatKind(N))),M',N),quot(N,M') -> U291(and(and(isNzNat(M'),isNatKind(M')),and(isNat(N),isNatKind(N))),M',N)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PEANO-NAT_complete-noand.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U101",3),("U102",3),("U103",3),("U104",3),("U11",2),("U111",2),("U112",1),("U12",1),("U121",3),("U122",3),("U123",3),("U124",3),("U125",3),("U131",2),("U132",2),("U141",3),("U142",3),("U143",3),("U144",3),("U145",2),("U146",1),("U151",3),("U152",3),("U153",3),("U154",3),("U155",2),("U156",1),("U161",2),("U162",1),("U171",2),("U172",1),("U181",2),("U182",2),("U183",1),("U191",3),("U192",3),("U193",3),("U194",3),("U195",2),("U196",1),("U201",3),("U202",3),("U203",3),("U204",3),("U205",2),("U206",1),("U21",3),("U211",3),("U212",3),("U213",3),("U214",3),("U215",2),("U216",1),("U22",3),("U221",3),("U222",3),("U223",3),("U224",3),("U225",2),("U226",1),("U23",3),("U231",2),("U232",2),("U233",1),("U24",3),("U241",3),("U242",3),("U243",3),("U244",3),("U245",2),("U246",1),("U251",2),("U252",1),("U261",2),("U262",1),("U271",2),("U272",1),("U281",2),("U282",1),("U291",1),("U301",2),("U302",1),("U31",2),("U311",1),("U32",2),("U321",3),("U322",3),("U323",3),("U324",3),("U325",2),("U326",1),("U331",3),("U332",3),("U333",3),("U334",3),("U335",2),("U336",1),("U341",2),("U342",2),("U343",1),("U351",2),("U352",2),("U361",2),("U362",1),("U371",3),("U372",3),("U373",3),("U374",3),("U375",1),("U381",3),("U382",3),("U383",3),("U384",3),("U385",3),("U41",3),("U42",3),("U43",3),("U44",3),("U51",3),("U52",3),("U53",3),("U54",3),("U61",2),("U62",1),("U71",2),("U72",1),("U81",3),("U82",3),("U83",3),("U84",3),("U91",2),("U92",2),("_*_",2),("_+_",2),("_<_",2),("_>_",2),("d",2),("equal",2),("false",0),("gcd",2),("isBoolean",1),("isBooleanKind",1),("isNat",1),("isNatKind",1),("isNzNat",1),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","V","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U101(tt,M,N) -> U102(isNatKind(M),M,N),U102(tt,M,N) -> U103(isNat(N),M,N),U103(tt,M,N) -> U104(isNatKind(N),M,N),U104(tt,M,N) -> d(N,M),U11(tt,N) -> U12(isNatKind(N)),U111(tt,N) -> U112(isNatKind(N)),U112(tt) -> 0,U12(tt) -> 0,U121(tt,M',N') -> U122(isNatKind(M'),M',N'),U122(tt,M',N') -> U123(isNzNat(N'),M',N'),U123(tt,M',N') -> U124(isNatKind(N'),M',N'),U124(tt,M',N') -> U125(equal(_>_(N',M'),true),M',N'),U125(tt,M',N') -> gcd(d(N',M'),M'),U131(tt,N') -> U132(isNatKind(N'),N'),U132(tt,N') -> N',U141(tt,V1,V2) -> U142(isNatKind(V1),V1,V2),U142(tt,V1,V2) -> U143(isNatKind(V2),V1,V2),U143(tt,V1,V2) -> U144(isNatKind(V2),V1,V2),U144(tt,V1,V2) -> U145(isNat(V1),V2),U145(tt,V2) -> U146(isNat(V2)),U146(tt) -> tt,U151(tt,V1,V2) -> U152(isNatKind(V1),V1,V2),U152(tt,V1,V2) -> U153(isNatKind(V2),V1,V2),U153(tt,V1,V2) -> U154(isNatKind(V2),V1,V2),U154(tt,V1,V2) -> U155(isNat(V1),V2),U155(tt,V2) -> U156(isNat(V2)),U156(tt) -> tt,U161(tt,V2) -> U162(isNatKind(V2)),U162(tt) -> tt,U171(tt,V2) -> U172(isNatKind(V2)),U172(tt) -> tt,U181(tt,V) -> U182(isNatKind(V),V),U182(tt,V) -> U183(isNzNat(V)),U183(tt) -> tt,U191(tt,V1,V2) -> U192(isNatKind(V1),V1,V2),U192(tt,V1,V2) -> U193(isNatKind(V2),V1,V2),U193(tt,V1,V2) -> U194(isNatKind(V2),V1,V2),U194(tt,V1,V2) -> U195(isNat(V1),V2),U195(tt,V2) -> U196(isNat(V2)),U196(tt) -> tt,U201(tt,V1,V2) -> U202(isNatKind(V1),V1,V2),U202(tt,V1,V2) -> U203(isNatKind(V2),V1,V2),U203(tt,V1,V2) -> U204(isNatKind(V2),V1,V2),U204(tt,V1,V2) -> U205(isNat(V1),V2),U205(tt,V2) -> U206(isNat(V2)),U206(tt) -> tt,U21(tt,M,N) -> U22(isNatKind(M),M,N),U211(tt,V1,V2) -> U212(isNatKind(V1),V1,V2),U212(tt,V1,V2) -> U213(isNatKind(V2),V1,V2),U213(tt,V1,V2) -> U214(isNatKind(V2),V1,V2),U214(tt,V1,V2) -> U215(isNat(V1),V2),U215(tt,V2) -> U216(isNat(V2)),U216(tt) -> tt,U22(tt,M,N) -> U23(isNat(N),M,N),U221(tt,V1,V2) -> U222(isNatKind(V1),V1,V2),U222(tt,V1,V2) -> U223(isNatKind(V2),V1,V2),U223(tt,V1,V2) -> U224(isNatKind(V2),V1,V2),U224(tt,V1,V2) -> U225(isNat(V1),V2),U225(tt,V2) -> U226(isNat(V2)),U226(tt) -> tt,U23(tt,M,N) -> U24(isNatKind(N),M,N),U231(tt,V1) -> U232(isNatKind(V1),V1),U232(tt,V1) -> U233(isNzNat(V1)),U233(tt) -> tt,U24(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U241(tt,V1,V2) -> U242(isNatKind(V1),V1,V2),U242(tt,V1,V2) -> U243(isNatKind(V2),V1,V2),U243(tt,V1,V2) -> U244(isNatKind(V2),V1,V2),U244(tt,V1,V2) -> U245(isNat(V1),V2),U245(tt,V2) -> U246(isNzNat(V2)),U246(tt) -> tt,U251(tt,V2) -> U252(isNatKind(V2)),U252(tt) -> tt,U261(tt,V2) -> U262(isNatKind(V2)),U262(tt) -> tt,U271(tt,V2) -> U272(isNatKind(V2)),U272(tt) -> tt,U281(tt,V2) -> U282(isNatKind(V2)),U282(tt) -> tt,U291(tt) -> tt,U301(tt,V2) -> U302(isNatKind(V2)),U302(tt) -> tt,U31(tt,N) -> U32(isNatKind(N),N),U311(tt) -> tt,U32(tt,N) -> N,U321(tt,V1,V2) -> U322(isNatKind(V1),V1,V2),U322(tt,V1,V2) -> U323(isNatKind(V2),V1,V2),U323(tt,V1,V2) -> U324(isNatKind(V2),V1,V2),U324(tt,V1,V2) -> U325(isNzNat(V1),V2),U325(tt,V2) -> U326(isNzNat(V2)),U326(tt) -> tt,U331(tt,V1,V2) -> U332(isNatKind(V1),V1,V2),U332(tt,V1,V2) -> U333(isNatKind(V2),V1,V2),U333(tt,V1,V2) -> U334(isNatKind(V2),V1,V2),U334(tt,V1,V2) -> U335(isNzNat(V1),V2),U335(tt,V2) -> U336(isNzNat(V2)),U336(tt) -> tt,U341(tt,V1) -> U342(isNatKind(V1),V1),U342(tt,V1) -> U343(isNat(V1)),U343(tt) -> tt,U351(tt,N) -> U352(isNatKind(N),N),U352(tt,N) -> N,U361(tt,M') -> U362(isNatKind(M')),U362(tt) -> s_(0),U371(tt,M',N) -> U372(isNatKind(M'),M',N),U372(tt,M',N) -> U373(isNat(N),M',N),U373(tt,M',N) -> U374(isNatKind(N),M',N),U374(tt,M',N) -> U375(equal(_>_(M',N),true)),U375(tt) -> 0,U381(tt,M',N) -> U382(isNatKind(M'),M',N),U382(tt,M',N) -> U383(isNat(N),M',N),U383(tt,M',N) -> U384(isNatKind(N),M',N),U384(tt,M',N) -> U385(equal(_>_(N,M'),true),M',N),U385(tt,M',N) -> s_(quot(d(N,M'),M')),U41(tt,M,N) -> U42(isNatKind(M),M,N),U42(tt,M,N) -> U43(isNat(N),M,N),U43(tt,M,N) -> U44(isNatKind(N),M,N),U44(tt,M,N) -> s_(s_(_+_(N,M))),U51(tt,M,N) -> U52(isNatKind(M),M,N),U52(tt,M,N) -> U53(isNat(N),M,N),U53(tt,M,N) -> U54(isNatKind(N),M,N),U54(tt,M,N) -> _>_(M,N),U61(tt,M) -> U62(isNatKind(M)),U62(tt) -> false,U71(tt,N') -> U72(isNatKind(N')),U72(tt) -> true,U81(tt,M,N) -> U82(isNatKind(M),M,N),U82(tt,M,N) -> U83(isNat(N),M,N),U83(tt,M,N) -> U84(isNatKind(N),M,N),U84(tt,M,N) -> _>_(N,M),U91(tt,N) -> U92(isNatKind(N),N),U92(tt,N) -> N,_*_(N,0) -> U11(isNat(N),N),_*_(s_(N),s_(M)) -> U21(isNat(M),M,N),_+_(N,0) -> U31(isNat(N),N),_+_(s_(N),s_(M)) -> U41(isNat(M),M,N),_<_(N,M) -> U51(isNat(M),M,N),_>_(0,M) -> U61(isNat(M),M),_>_(N',0) -> U71(isNzNat(N'),N'),_>_(s_(N),s_(M)) -> U81(isNat(M),M,N),d(0,N) -> U91(isNat(N),N),d(s_(N),s_(M)) -> U101(isNat(M),M,N),equal(X,X) -> tt,gcd(0,N) -> U111(isNat(N),N),gcd(N',M') -> U121(isNzNat(M'),M',N'),gcd(N',N') -> U131(isNzNat(N'),N'),isBoolean(false) -> tt,isBoolean(true) -> tt,isBoolean(_<_(V1,V2)) -> U141(isNatKind(V1),V1,V2),isBoolean(_>_(V1,V2)) -> U151(isNatKind(V1),V1,V2),isBooleanKind(false) -> tt,isBooleanKind(true) -> tt,isBooleanKind(_<_(V1,V2)) -> U161(isNatKind(V1),V2),isBooleanKind(_>_(V1,V2)) -> U171(isNatKind(V1),V2),isNat(0) -> tt,isNat(V) -> U181(isNatKind(V),V),isNat(_*_(V1,V2)) -> U191(isNatKind(V1),V1,V2),isNat(_+_(V1,V2)) -> U201(isNatKind(V1),V1,V2),isNat(d(V1,V2)) -> U211(isNatKind(V1),V1,V2),isNat(gcd(V1,V2)) -> U221(isNatKind(V1),V1,V2),isNat(p_(V1)) -> U231(isNatKind(V1),V1),isNat(quot(V1,V2)) -> U241(isNatKind(V1),V1,V2),isNatKind(0) -> tt,isNatKind(1) -> tt,isNatKind(2) -> tt,isNatKind(3) -> tt,isNatKind(4) -> tt,isNatKind(5) -> tt,isNatKind(6) -> tt,isNatKind(7) -> tt,isNatKind(_*_(V1,V2)) -> U251(isNatKind(V1),V2),isNatKind(_+_(V1,V2)) -> U261(isNatKind(V1),V2),isNatKind(d(V1,V2)) -> U271(isNatKind(V1),V2),isNatKind(gcd(V1,V2)) -> U281(isNatKind(V1),V2),isNatKind(p_(V1)) -> U291(isNatKind(V1)),isNatKind(quot(V1,V2)) -> U301(isNatKind(V1),V2),isNatKind(s_(V1)) -> U311(isNatKind(V1)),isNzNat(1) -> tt,isNzNat(2) -> tt,isNzNat(3) -> tt,isNzNat(4) -> tt,isNzNat(5) -> tt,isNzNat(6) -> tt,isNzNat(7) -> tt,isNzNat(_*_(V1,V2)) -> U321(isNatKind(V1),V1,V2),isNzNat(gcd(V1,V2)) -> U331(isNatKind(V1),V1,V2),isNzNat(s_(V1)) -> U341(isNatKind(V1),V1),p_(s_(N)) -> U351(isNat(N),N),quot(M',M') -> U361(isNzNat(M'),M'),quot(N,M') -> U371(isNzNat(M'),M',N),quot(N,M') -> U381(isNzNat(M'),M',N)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PALINDROME_nosorts.trs" :
TRS {trsSignature = fromList [("__",2),("and",2),("isNePal",1),("nil",0),("tt",0)], trsVariables = fromList ["I","P","X","Y","Z"], trsRMap = [("and",[1])], trsRules = [__(__(X,Y),Z) -> __(X,__(Y,Z)),__(X,nil) -> X,__(nil,X) -> X,and(tt,X) -> X,isNePal(__(I,__(P,I))) -> tt], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PALINDROME_nosorts-noand.trs" :
TRS {trsSignature = fromList [("U11",1),("U12",1),("__",2),("isNePal",1),("nil",0),("tt",0)], trsVariables = fromList ["I","P","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1])], trsRules = [__(__(X,Y),Z) -> __(X,__(Y,Z)),__(X,nil) -> X,__(nil,X) -> X,U11(tt) -> U12(tt),U12(tt) -> tt,isNePal(__(I,__(P,I))) -> U11(tt)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PALINDROME_nokinds.trs" :
TRS {trsSignature = fromList [("__",2),("a",0),("and",2),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isQid",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","Y","Z"], trsRMap = [("and",[1]),("isList",[]),("isNeList",[]),("isNePal",[]),("isPal",[]),("isQid",[])], trsRules = [__(__(X,Y),Z) -> __(X,__(Y,Z)),__(X,nil) -> X,__(nil,X) -> X,and(tt,X) -> X,isList(V) -> isNeList(V),isList(nil) -> tt,isList(__(V1,V2)) -> and(isList(V1),isList(V2)),isNeList(V) -> isQid(V),isNeList(__(V1,V2)) -> and(isList(V1),isNeList(V2)),isNeList(__(V1,V2)) -> and(isNeList(V1),isList(V2)),isNePal(V) -> isQid(V),isNePal(__(I,__(P,I))) -> and(isQid(I),isPal(P)),isPal(V) -> isNePal(V),isPal(nil) -> tt,isQid(a) -> tt,isQid(e) -> tt,isQid(i) -> tt,isQid(o) -> tt,isQid(u) -> tt], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PALINDROME_nokinds-noand.trs" :
TRS {trsSignature = fromList [("U11",1),("U21",2),("U22",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",1),("U71",2),("U72",1),("U81",1),("__",2),("a",0),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isQid",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U21",[1]),("U22",[1]),("U31",[1]),("U41",[1]),("U42",[1]),("U51",[1]),("U52",[1]),("U61",[1]),("U71",[1]),("U72",[1]),("U81",[1]),("isList",[]),("isNeList",[]),("isNePal",[]),("isPal",[]),("isQid",[])], trsRules = [__(__(X,Y),Z) -> __(X,__(Y,Z)),__(X,nil) -> X,__(nil,X) -> X,U11(tt) -> tt,U21(tt,V2) -> U22(isList(V2)),U22(tt) -> tt,U31(tt) -> tt,U41(tt,V2) -> U42(isNeList(V2)),U42(tt) -> tt,U51(tt,V2) -> U52(isList(V2)),U52(tt) -> tt,U61(tt) -> tt,U71(tt,P) -> U72(isPal(P)),U72(tt) -> tt,U81(tt) -> tt,isList(V) -> U11(isNeList(V)),isList(nil) -> tt,isList(__(V1,V2)) -> U21(isList(V1),V2),isNeList(V) -> U31(isQid(V)),isNeList(__(V1,V2)) -> U41(isList(V1),V2),isNeList(__(V1,V2)) -> U51(isNeList(V1),V2),isNePal(V) -> U61(isQid(V)),isNePal(__(I,__(P,I))) -> U71(isQid(I),P),isPal(V) -> U81(isNePal(V)),isPal(nil) -> tt,isQid(a) -> tt,isQid(e) -> tt,isQid(i) -> tt,isQid(o) -> tt,isQid(u) -> tt], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PALINDROME_complete.trs" :
TRS {trsSignature = fromList [("U11",2),("U12",1),("U21",3),("U22",2),("U23",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("U62",1),("U71",2),("U72",1),("__",2),("a",0),("and",2),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isPalListKind",1),("isQid",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U21",[1]),("U22",[1]),("U23",[1]),("U31",[1]),("U32",[1]),("U41",[1]),("U42",[1]),("U43",[1]),("U51",[1]),("U52",[1]),("U53",[1]),("U61",[1]),("U62",[1]),("U71",[1]),("U72",[1]),("and",[1]),("isList",[]),("isNeList",[]),("isNePal",[]),("isPal",[]),("isPalListKind",[]),("isQid",[])], trsRules = [__(__(X,Y),Z) -> __(X,__(Y,Z)),__(X,nil) -> X,__(nil,X) -> X,U11(tt,V) -> U12(isNeList(V)),U12(tt) -> tt,U21(tt,V1,V2) -> U22(isList(V1),V2),U22(tt,V2) -> U23(isList(V2)),U23(tt) -> tt,U31(tt,V) -> U32(isQid(V)),U32(tt) -> tt,U41(tt,V1,V2) -> U42(isList(V1),V2),U42(tt,V2) -> U43(isNeList(V2)),U43(tt) -> tt,U51(tt,V1,V2) -> U52(isNeList(V1),V2),U52(tt,V2) -> U53(isList(V2)),U53(tt) -> tt,U61(tt,V) -> U62(isQid(V)),U62(tt) -> tt,U71(tt,V) -> U72(isNePal(V)),U72(tt) -> tt,and(tt,X) -> X,isList(V) -> U11(isPalListKind(V),V),isList(nil) -> tt,isList(__(V1,V2)) -> U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2),isNeList(V) -> U31(isPalListKind(V),V),isNeList(__(V1,V2)) -> U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2),isNeList(__(V1,V2)) -> U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2),isNePal(V) -> U61(isPalListKind(V),V),isNePal(__(I,__(P,I))) -> and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))),isPal(V) -> U71(isPalListKind(V),V),isPal(nil) -> tt,isPalListKind(a) -> tt,isPalListKind(e) -> tt,isPalListKind(i) -> tt,isPalListKind(nil) -> tt,isPalListKind(o) -> tt,isPalListKind(u) -> tt,isPalListKind(__(V1,V2)) -> and(isPalListKind(V1),isPalListKind(V2)),isQid(a) -> tt,isQid(e) -> tt,isQid(i) -> tt,isQid(o) -> tt,isQid(u) -> tt], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\PALINDROME_complete-noand.trs" :
TRS {trsSignature = fromList [("U11",2),("U12",2),("U13",1),("U21",3),("U22",3),("U23",3),("U24",3),("U25",2),("U26",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",3),("U52",3),("U53",3),("U54",3),("U55",2),("U56",1),("U61",2),("U62",2),("U63",1),("U71",3),("U72",2),("U73",2),("U74",1),("U81",2),("U82",2),("U83",1),("U91",2),("U92",1),("__",2),("a",0),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isPalListKind",1),("isQid",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U13",[1]),("U21",[1]),("U22",[1]),("U23",[1]),("U24",[1]),("U25",[1]),("U26",[1]),("U31",[1]),("U32",[1]),("U33",[1]),("U41",[1]),("U42",[1]),("U43",[1]),("U44",[1]),("U45",[1]),("U46",[1]),("U51",[1]),("U52",[1]),("U53",[1]),("U54",[1]),("U55",[1]),("U56",[1]),("U61",[1]),("U62",[1]),("U63",[1]),("U71",[1]),("U72",[1]),("U73",[1]),("U74",[1]),("U81",[1]),("U82",[1]),("U83",[1]),("U91",[1]),("U92",[1]),("isList",[]),("isNeList",[]),("isNePal",[]),("isPal",[]),("isPalListKind",[]),("isQid",[])], trsRules = [__(__(X,Y),Z) -> __(X,__(Y,Z)),__(X,nil) -> X,__(nil,X) -> X,U11(tt,V) -> U12(isPalListKind(V),V),U12(tt,V) -> U13(isNeList(V)),U13(tt) -> tt,U21(tt,V1,V2) -> U22(isPalListKind(V1),V1,V2),U22(tt,V1,V2) -> U23(isPalListKind(V2),V1,V2),U23(tt,V1,V2) -> U24(isPalListKind(V2),V1,V2),U24(tt,V1,V2) -> U25(isList(V1),V2),U25(tt,V2) -> U26(isList(V2)),U26(tt) -> tt,U31(tt,V) -> U32(isPalListKind(V),V),U32(tt,V) -> U33(isQid(V)),U33(tt) -> tt,U41(tt,V1,V2) -> U42(isPalListKind(V1),V1,V2),U42(tt,V1,V2) -> U43(isPalListKind(V2),V1,V2),U43(tt,V1,V2) -> U44(isPalListKind(V2),V1,V2),U44(tt,V1,V2) -> U45(isList(V1),V2),U45(tt,V2) -> U46(isNeList(V2)),U46(tt) -> tt,U51(tt,V1,V2) -> U52(isPalListKind(V1),V1,V2),U52(tt,V1,V2) -> U53(isPalListKind(V2),V1,V2),U53(tt,V1,V2) -> U54(isPalListKind(V2),V1,V2),U54(tt,V1,V2) -> U55(isNeList(V1),V2),U55(tt,V2) -> U56(isList(V2)),U56(tt) -> tt,U61(tt,V) -> U62(isPalListKind(V),V),U62(tt,V) -> U63(isQid(V)),U63(tt) -> tt,U71(tt,I,P) -> U72(isPalListKind(I),P),U72(tt,P) -> U73(isPal(P),P),U73(tt,P) -> U74(isPalListKind(P)),U74(tt) -> tt,U81(tt,V) -> U82(isPalListKind(V),V),U82(tt,V) -> U83(isNePal(V)),U83(tt) -> tt,U91(tt,V2) -> U92(isPalListKind(V2)),U92(tt) -> tt,isList(V) -> U11(isPalListKind(V),V),isList(nil) -> tt,isList(__(V1,V2)) -> U21(isPalListKind(V1),V1,V2),isNeList(V) -> U31(isPalListKind(V),V),isNeList(__(V1,V2)) -> U41(isPalListKind(V1),V1,V2),isNeList(__(V1,V2)) -> U51(isPalListKind(V1),V1,V2),isNePal(V) -> U61(isPalListKind(V),V),isNePal(__(I,__(P,I))) -> U71(isQid(I),I,P),isPal(V) -> U81(isPalListKind(V),V),isPal(nil) -> tt,isPalListKind(a) -> tt,isPalListKind(e) -> tt,isPalListKind(i) -> tt,isPalListKind(nil) -> tt,isPalListKind(o) -> tt,isPalListKind(u) -> tt,isPalListKind(__(V1,V2)) -> U91(isPalListKind(V1),V2),isQid(a) -> tt,isQid(e) -> tt,isQid(i) -> tt,isQid(o) -> tt,isQid(u) -> tt], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\OvConsOS_nosorts.trs" :
TRS {trsSignature = fromList [("0",0),("and",2),("cons",2),("length",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","X","Y","Z"], trsRMap = [("and",[1]),("cons",[1])], trsRules = [zeros -> cons(0,zeros),and(tt,X) -> X,length(nil) -> 0,length(cons(N,L)) -> s(length(L)),take(0,IL) -> nil,take(s(M),cons(N,IL)) -> cons(N,take(M,IL))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\OvConsOS_nosorts-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("U21",4),("U22",4),("U23",4),("cons",2),("length",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U21",[1]),("U22",[1]),("U23",[1]),("cons",[1])], trsRules = [zeros -> cons(0,zeros),U11(tt,L) -> U12(tt,L),U12(tt,L) -> s(length(L)),U21(tt,IL,M,N) -> U22(tt,IL,M,N),U22(tt,IL,M,N) -> U23(tt,IL,M,N),U23(tt,IL,M,N) -> cons(N,take(M,IL)),length(nil) -> 0,length(cons(N,L)) -> U11(tt,L),take(0,IL) -> nil,take(s(M),cons(N,IL)) -> U21(tt,IL,M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\OvConsOS_nokinds.trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",1),("U31",4),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U21",[1]),("U31",[1]),("and",[1]),("cons",[1]),("isNat",[]),("isNatIList",[]),("isNatList",[])], trsRules = [zeros -> cons(0,zeros),U11(tt,L) -> s(length(L)),U21(tt) -> nil,U31(tt,IL,M,N) -> cons(N,take(M,IL)),and(tt,X) -> X,isNat(0) -> tt,isNat(length(V1)) -> isNatList(V1),isNat(s(V1)) -> isNat(V1),isNatIList(V) -> isNatList(V),isNatIList(zeros) -> tt,isNatIList(cons(V1,V2)) -> and(isNat(V1),isNatIList(V2)),isNatList(nil) -> tt,isNatList(cons(V1,V2)) -> and(isNat(V1),isNatList(V2)),isNatList(take(V1,V2)) -> and(isNat(V1),isNatIList(V2)),length(nil) -> 0,length(cons(N,L)) -> U11(and(isNatList(L),isNat(N)),L),take(0,IL) -> U21(isNatIList(IL)),take(s(M),cons(N,IL)) -> U31(and(isNatIList(IL),and(isNat(M),isNat(N))),IL,M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\OvConsOS_nokinds-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U11",1),("U21",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",3),("U72",2),("U81",1),("U91",4),("U92",4),("U93",4),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U21",[1]),("U31",[1]),("U41",[1]),("U42",[1]),("U51",[1]),("U52",[1]),("U61",[1]),("U62",[1]),("U71",[1]),("U72",[1]),("U81",[1]),("U91",[1]),("U92",[1]),("U93",[1]),("cons",[1]),("isNat",[]),("isNatIList",[]),("isNatList",[])], trsRules = [zeros -> cons(0,zeros),U11(tt) -> tt,U21(tt) -> tt,U31(tt) -> tt,U41(tt,V2) -> U42(isNatIList(V2)),U42(tt) -> tt,U51(tt,V2) -> U52(isNatList(V2)),U52(tt) -> tt,U61(tt,V2) -> U62(isNatIList(V2)),U62(tt) -> tt,U71(tt,L,N) -> U72(isNat(N),L),U72(tt,L) -> s(length(L)),U81(tt) -> nil,U91(tt,IL,M,N) -> U92(isNat(M),IL,M,N),U92(tt,IL,M,N) -> U93(isNat(N),IL,M,N),U93(tt,IL,M,N) -> cons(N,take(M,IL)),isNat(0) -> tt,isNat(length(V1)) -> U11(isNatList(V1)),isNat(s(V1)) -> U21(isNat(V1)),isNatIList(V) -> U31(isNatList(V)),isNatIList(zeros) -> tt,isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2),isNatList(nil) -> tt,isNatList(cons(V1,V2)) -> U51(isNat(V1),V2),isNatList(take(V1,V2)) -> U61(isNat(V1),V2),length(nil) -> 0,length(cons(N,L)) -> U71(isNatList(L),L,N),take(0,IL) -> U81(isNatIList(IL)),take(s(M),cons(N,IL)) -> U91(isNatIList(IL),IL,M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\OvConsOS_complete.trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",2),("U22",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",3),("U62",2),("U63",1),("U71",2),("U81",1),("U91",4),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U21",[1]),("U22",[1]),("U31",[1]),("U32",[1]),("U41",[1]),("U42",[1]),("U43",[1]),("U51",[1]),("U52",[1]),("U53",[1]),("U61",[1]),("U62",[1]),("U63",[1]),("U71",[1]),("U81",[1]),("U91",[1]),("and",[1]),("cons",[1]),("isNat",[]),("isNatIList",[]),("isNatIListKind",[]),("isNatKind",[]),("isNatList",[])], trsRules = [zeros -> cons(0,zeros),U11(tt,V1) -> U12(isNatList(V1)),U12(tt) -> tt,U21(tt,V1) -> U22(isNat(V1)),U22(tt) -> tt,U31(tt,V) -> U32(isNatList(V)),U32(tt) -> tt,U41(tt,V1,V2) -> U42(isNat(V1),V2),U42(tt,V2) -> U43(isNatIList(V2)),U43(tt) -> tt,U51(tt,V1,V2) -> U52(isNat(V1),V2),U52(tt,V2) -> U53(isNatList(V2)),U53(tt) -> tt,U61(tt,V1,V2) -> U62(isNat(V1),V2),U62(tt,V2) -> U63(isNatIList(V2)),U63(tt) -> tt,U71(tt,L) -> s(length(L)),U81(tt) -> nil,U91(tt,IL,M,N) -> cons(N,take(M,IL)),and(tt,X) -> X,isNat(0) -> tt,isNat(length(V1)) -> U11(isNatIListKind(V1),V1),isNat(s(V1)) -> U21(isNatKind(V1),V1),isNatIList(V) -> U31(isNatIListKind(V),V),isNatIList(zeros) -> tt,isNatIList(cons(V1,V2)) -> U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2),isNatIListKind(nil) -> tt,isNatIListKind(zeros) -> tt,isNatIListKind(cons(V1,V2)) -> and(isNatKind(V1),isNatIListKind(V2)),isNatIListKind(take(V1,V2)) -> and(isNatKind(V1),isNatIListKind(V2)),isNatKind(0) -> tt,isNatKind(length(V1)) -> isNatIListKind(V1),isNatKind(s(V1)) -> isNatKind(V1),isNatList(nil) -> tt,isNatList(cons(V1,V2)) -> U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2),isNatList(take(V1,V2)) -> U61(and(isNatKind(V1),isNatIListKind(V2)),V1,V2),length(nil) -> 0,length(cons(N,L)) -> U71(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L),take(0,IL) -> U81(and(isNatIList(IL),isNatIListKind(IL))),take(s(M),cons(N,IL)) -> U91(and(and(isNatIList(IL),isNatIListKind(IL)),and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))),IL,M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\OvConsOS_complete-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U105",2),("U106",1),("U11",2),("U111",3),("U112",3),("U113",3),("U114",2),("U12",2),("U121",2),("U122",1),("U13",1),("U131",4),("U132",4),("U133",4),("U134",4),("U135",4),("U136",4),("U21",2),("U22",2),("U23",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",1),("U81",1),("U91",3),("U92",3),("U93",3),("U94",3),("U95",2),("U96",1),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","Y","Z"], trsRMap = [("U101",[1]),("U102",[1]),("U103",[1]),("U104",[1]),("U105",[1]),("U106",[1]),("U11",[1]),("U111",[1]),("U112",[1]),("U113",[1]),("U114",[1]),("U12",[1]),("U121",[1]),("U122",[1]),("U13",[1]),("U131",[1]),("U132",[1]),("U133",[1]),("U134",[1]),("U135",[1]),("U136",[1]),("U21",[1]),("U22",[1]),("U23",[1]),("U31",[1]),("U32",[1]),("U33",[1]),("U41",[1]),("U42",[1]),("U43",[1]),("U44",[1]),("U45",[1]),("U46",[1]),("U51",[1]),("U52",[1]),("U61",[1]),("U62",[1]),("U71",[1]),("U81",[1]),("U91",[1]),("U92",[1]),("U93",[1]),("U94",[1]),("U95",[1]),("U96",[1]),("cons",[1]),("isNat",[]),("isNatIList",[]),("isNatIListKind",[]),("isNatKind",[]),("isNatList",[])], trsRules = [zeros -> cons(0,zeros),U101(tt,V1,V2) -> U102(isNatKind(V1),V1,V2),U102(tt,V1,V2) -> U103(isNatIListKind(V2),V1,V2),U103(tt,V1,V2) -> U104(isNatIListKind(V2),V1,V2),U104(tt,V1,V2) -> U105(isNat(V1),V2),U105(tt,V2) -> U106(isNatIList(V2)),U106(tt) -> tt,U11(tt,V1) -> U12(isNatIListKind(V1),V1),U111(tt,L,N) -> U112(isNatIListKind(L),L,N),U112(tt,L,N) -> U113(isNat(N),L,N),U113(tt,L,N) -> U114(isNatKind(N),L),U114(tt,L) -> s(length(L)),U12(tt,V1) -> U13(isNatList(V1)),U121(tt,IL) -> U122(isNatIListKind(IL)),U122(tt) -> nil,U13(tt) -> tt,U131(tt,IL,M,N) -> U132(isNatIListKind(IL),IL,M,N),U132(tt,IL,M,N) -> U133(isNat(M),IL,M,N),U133(tt,IL,M,N) -> U134(isNatKind(M),IL,M,N),U134(tt,IL,M,N) -> U135(isNat(N),IL,M,N),U135(tt,IL,M,N) -> U136(isNatKind(N),IL,M,N),U136(tt,IL,M,N) -> cons(N,take(M,IL)),U21(tt,V1) -> U22(isNatKind(V1),V1),U22(tt,V1) -> U23(isNat(V1)),U23(tt) -> tt,U31(tt,V) -> U32(isNatIListKind(V),V),U32(tt,V) -> U33(isNatList(V)),U33(tt) -> tt,U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2),U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2),U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2),U44(tt,V1,V2) -> U45(isNat(V1),V2),U45(tt,V2) -> U46(isNatIList(V2)),U46(tt) -> tt,U51(tt,V2) -> U52(isNatIListKind(V2)),U52(tt) -> tt,U61(tt,V2) -> U62(isNatIListKind(V2)),U62(tt) -> tt,U71(tt) -> tt,U81(tt) -> tt,U91(tt,V1,V2) -> U92(isNatKind(V1),V1,V2),U92(tt,V1,V2) -> U93(isNatIListKind(V2),V1,V2),U93(tt,V1,V2) -> U94(isNatIListKind(V2),V1,V2),U94(tt,V1,V2) -> U95(isNat(V1),V2),U95(tt,V2) -> U96(isNatList(V2)),U96(tt) -> tt,isNat(0) -> tt,isNat(length(V1)) -> U11(isNatIListKind(V1),V1),isNat(s(V1)) -> U21(isNatKind(V1),V1),isNatIList(V) -> U31(isNatIListKind(V),V),isNatIList(zeros) -> tt,isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2),isNatIListKind(nil) -> tt,isNatIListKind(zeros) -> tt,isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2),isNatIListKind(take(V1,V2)) -> U61(isNatKind(V1),V2),isNatKind(0) -> tt,isNatKind(length(V1)) -> U71(isNatIListKind(V1)),isNatKind(s(V1)) -> U81(isNatKind(V1)),isNatList(nil) -> tt,isNatList(cons(V1,V2)) -> U91(isNatKind(V1),V1,V2),isNatList(take(V1,V2)) -> U101(isNatKind(V1),V1,V2),length(nil) -> 0,length(cons(N,L)) -> U111(isNatList(L),L,N),take(0,IL) -> U121(isNatIList(IL),IL),take(s(M),cons(N,IL)) -> U131(isNatIList(IL),IL,M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_nosorts.trs" :
TRS {trsSignature = fromList [("0",0),("and",2),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","X","Y","Z"], trsRMap = [("and",[1])], trsRules = [and(tt,X) -> X,plus(N,0) -> N,plus(N,s(M)) -> s(plus(N,M)),x(N,0) -> 0,x(N,s(M)) -> plus(x(N,M),N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_nosorts-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U21",3),("U22",3),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U21",[1]),("U22",[1])], trsRules = [U11(tt,M,N) -> U12(tt,M,N),U12(tt,M,N) -> s(plus(N,M)),U21(tt,M,N) -> U22(tt,M,N),U22(tt,M,N) -> plus(x(N,M),N),plus(N,0) -> N,plus(N,s(M)) -> U11(tt,M,N),x(N,0) -> 0,x(N,s(M)) -> U21(tt,M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_nosorts-noand (2).trs" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1])], trsRules = [U11(tt,M,N) -> U12(tt,M,N),U12(tt,M,N) -> s(plus(N,M)),plus(N,0) -> N,plus(N,s(M)) -> U11(tt,M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_nosorts (2).trs" :
TRS {trsSignature = fromList [("0",0),("and",2),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","X","Y","Z"], trsRMap = [("and",[1])], trsRules = [and(tt,X) -> X,plus(N,0) -> N,plus(N,s(M)) -> s(plus(N,M))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_nokinds.trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",3),("U31",1),("U41",3),("and",2),("isNat",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U21",[1]),("U31",[1]),("U41",[1]),("and",[1]),("isNat",[])], trsRules = [U11(tt,N) -> N,U21(tt,M,N) -> s(plus(N,M)),U31(tt) -> 0,U41(tt,M,N) -> plus(x(N,M),N),and(tt,X) -> X,isNat(0) -> tt,isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(s(V1)) -> isNat(V1),isNat(x(V1,V2)) -> and(isNat(V1),isNat(V2)),plus(N,0) -> U11(isNat(N),N),plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N),x(N,0) -> U31(isNat(N)),x(N,s(M)) -> U41(and(isNat(M),isNat(N)),M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_nokinds-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",1),("U31",2),("U32",1),("U41",2),("U51",3),("U52",3),("U61",1),("U71",3),("U72",3),("isNat",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U21",[1]),("U31",[1]),("U32",[1]),("U41",[1]),("U51",[1]),("U52",[1]),("U61",[1]),("U71",[1]),("U72",[1]),("isNat",[])], trsRules = [U11(tt,V2) -> U12(isNat(V2)),U12(tt) -> tt,U21(tt) -> tt,U31(tt,V2) -> U32(isNat(V2)),U32(tt) -> tt,U41(tt,N) -> N,U51(tt,M,N) -> U52(isNat(N),M,N),U52(tt,M,N) -> s(plus(N,M)),U61(tt) -> 0,U71(tt,M,N) -> U72(isNat(N),M,N),U72(tt,M,N) -> plus(x(N,M),N),isNat(0) -> tt,isNat(plus(V1,V2)) -> U11(isNat(V1),V2),isNat(s(V1)) -> U21(isNat(V1)),isNat(x(V1,V2)) -> U31(isNat(V1),V2),plus(N,0) -> U41(isNat(N),N),plus(N,s(M)) -> U51(isNat(M),M,N),x(N,0) -> U61(isNat(N)),x(N,s(M)) -> U71(isNat(M),M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_nokinds-noand (2).trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",1),("U31",2),("U41",3),("U42",3),("isNat",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U21",[1]),("U31",[1]),("U41",[1]),("U42",[1]),("isNat",[])], trsRules = [U11(tt,V2) -> U12(isNat(V2)),U12(tt) -> tt,U21(tt) -> tt,U31(tt,N) -> N,U41(tt,M,N) -> U42(isNat(N),M,N),U42(tt,M,N) -> s(plus(N,M)),isNat(0) -> tt,isNat(plus(V1,V2)) -> U11(isNat(V1),V2),isNat(s(V1)) -> U21(isNat(V1)),plus(N,0) -> U31(isNat(N),N),plus(N,s(M)) -> U41(isNat(M),M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_nokinds (2).trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",3),("and",2),("isNat",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U21",[1]),("and",[1]),("isNat",[])], trsRules = [U11(tt,N) -> N,U21(tt,M,N) -> s(plus(N,M)),and(tt,X) -> X,isNat(0) -> tt,isNat(plus(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(s(V1)) -> isNat(V1),plus(N,0) -> U11(isNat(N),N),plus(N,s(M)) -> U21(and(isNat(M),isNat(N)),M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_complete.trs" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",2),("U13",1),("U21",2),("U22",1),("U31",3),("U32",2),("U33",1),("U41",2),("U51",3),("U61",1),("U71",3),("and",2),("isNat",1),("isNatKind",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U13",[1]),("U21",[1]),("U22",[1]),("U31",[1]),("U32",[1]),("U33",[1]),("U41",[1]),("U51",[1]),("U61",[1]),("U71",[1]),("and",[1]),("isNat",[]),("isNatKind",[])], trsRules = [U11(tt,V1,V2) -> U12(isNat(V1),V2),U12(tt,V2) -> U13(isNat(V2)),U13(tt) -> tt,U21(tt,V1) -> U22(isNat(V1)),U22(tt) -> tt,U31(tt,V1,V2) -> U32(isNat(V1),V2),U32(tt,V2) -> U33(isNat(V2)),U33(tt) -> tt,U41(tt,N) -> N,U51(tt,M,N) -> s(plus(N,M)),U61(tt) -> 0,U71(tt,M,N) -> plus(x(N,M),N),and(tt,X) -> X,isNat(0) -> tt,isNat(plus(V1,V2)) -> U11(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(s(V1)) -> U21(isNatKind(V1),V1),isNat(x(V1,V2)) -> U31(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNatKind(0) -> tt,isNatKind(plus(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(s(V1)) -> isNatKind(V1),isNatKind(x(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),plus(N,0) -> U41(and(isNat(N),isNatKind(N)),N),plus(N,s(M)) -> U51(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),x(N,0) -> U61(and(isNat(N),isNatKind(N))),x(N,s(M)) -> U71(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_complete-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U11",3),("U12",3),("U13",3),("U14",3),("U15",2),("U16",1),("U21",2),("U22",2),("U23",1),("U31",3),("U32",3),("U33",3),("U34",3),("U35",2),("U36",1),("U41",2),("U42",1),("U51",1),("U61",2),("U62",1),("U71",2),("U72",2),("U81",3),("U82",3),("U83",3),("U84",3),("U91",2),("U92",1),("isNat",1),("isNatKind",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","Y","Z"], trsRMap = [("U101",[1]),("U102",[1]),("U103",[1]),("U104",[1]),("U11",[1]),("U12",[1]),("U13",[1]),("U14",[1]),("U15",[1]),("U16",[1]),("U21",[1]),("U22",[1]),("U23",[1]),("U31",[1]),("U32",[1]),("U33",[1]),("U34",[1]),("U35",[1]),("U36",[1]),("U41",[1]),("U42",[1]),("U51",[1]),("U61",[1]),("U62",[1]),("U71",[1]),("U72",[1]),("U81",[1]),("U82",[1]),("U83",[1]),("U84",[1]),("U91",[1]),("U92",[1]),("isNat",[]),("isNatKind",[])], trsRules = [U101(tt,M,N) -> U102(isNatKind(M),M,N),U102(tt,M,N) -> U103(isNat(N),M,N),U103(tt,M,N) -> U104(isNatKind(N),M,N),U104(tt,M,N) -> plus(x(N,M),N),U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2),U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2),U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2),U14(tt,V1,V2) -> U15(isNat(V1),V2),U15(tt,V2) -> U16(isNat(V2)),U16(tt) -> tt,U21(tt,V1) -> U22(isNatKind(V1),V1),U22(tt,V1) -> U23(isNat(V1)),U23(tt) -> tt,U31(tt,V1,V2) -> U32(isNatKind(V1),V1,V2),U32(tt,V1,V2) -> U33(isNatKind(V2),V1,V2),U33(tt,V1,V2) -> U34(isNatKind(V2),V1,V2),U34(tt,V1,V2) -> U35(isNat(V1),V2),U35(tt,V2) -> U36(isNat(V2)),U36(tt) -> tt,U41(tt,V2) -> U42(isNatKind(V2)),U42(tt) -> tt,U51(tt) -> tt,U61(tt,V2) -> U62(isNatKind(V2)),U62(tt) -> tt,U71(tt,N) -> U72(isNatKind(N),N),U72(tt,N) -> N,U81(tt,M,N) -> U82(isNatKind(M),M,N),U82(tt,M,N) -> U83(isNat(N),M,N),U83(tt,M,N) -> U84(isNatKind(N),M,N),U84(tt,M,N) -> s(plus(N,M)),U91(tt,N) -> U92(isNatKind(N)),U92(tt) -> 0,isNat(0) -> tt,isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2),isNat(s(V1)) -> U21(isNatKind(V1),V1),isNat(x(V1,V2)) -> U31(isNatKind(V1),V1,V2),isNatKind(0) -> tt,isNatKind(plus(V1,V2)) -> U41(isNatKind(V1),V2),isNatKind(s(V1)) -> U51(isNatKind(V1)),isNatKind(x(V1,V2)) -> U61(isNatKind(V1),V2),plus(N,0) -> U71(isNat(N),N),plus(N,s(M)) -> U81(isNat(M),M,N),x(N,0) -> U91(isNat(N),N),x(N,s(M)) -> U101(isNat(M),M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_complete-noand (2).trs" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U13",3),("U14",3),("U15",2),("U16",1),("U21",2),("U22",2),("U23",1),("U31",2),("U32",1),("U41",1),("U51",2),("U52",2),("U61",3),("U62",3),("U63",3),("U64",3),("isNat",1),("isNatKind",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U13",[1]),("U14",[1]),("U15",[1]),("U16",[1]),("U21",[1]),("U22",[1]),("U23",[1]),("U31",[1]),("U32",[1]),("U41",[1]),("U51",[1]),("U52",[1]),("U61",[1]),("U62",[1]),("U63",[1]),("U64",[1]),("isNat",[]),("isNatKind",[])], trsRules = [U11(tt,V1,V2) -> U12(isNatKind(V1),V1,V2),U12(tt,V1,V2) -> U13(isNatKind(V2),V1,V2),U13(tt,V1,V2) -> U14(isNatKind(V2),V1,V2),U14(tt,V1,V2) -> U15(isNat(V1),V2),U15(tt,V2) -> U16(isNat(V2)),U16(tt) -> tt,U21(tt,V1) -> U22(isNatKind(V1),V1),U22(tt,V1) -> U23(isNat(V1)),U23(tt) -> tt,U31(tt,V2) -> U32(isNatKind(V2)),U32(tt) -> tt,U41(tt) -> tt,U51(tt,N) -> U52(isNatKind(N),N),U52(tt,N) -> N,U61(tt,M,N) -> U62(isNatKind(M),M,N),U62(tt,M,N) -> U63(isNat(N),M,N),U63(tt,M,N) -> U64(isNatKind(N),M,N),U64(tt,M,N) -> s(plus(N,M)),isNat(0) -> tt,isNat(plus(V1,V2)) -> U11(isNatKind(V1),V1,V2),isNat(s(V1)) -> U21(isNatKind(V1),V1),isNatKind(0) -> tt,isNatKind(plus(V1,V2)) -> U31(isNatKind(V1),V2),isNatKind(s(V1)) -> U41(isNatKind(V1)),plus(N,0) -> U51(isNat(N),N),plus(N,s(M)) -> U61(isNat(M),M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\MYNAT_complete (2).trs" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",2),("U13",1),("U21",2),("U22",1),("U31",2),("U41",3),("and",2),("isNat",1),("isNatKind",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U13",[1]),("U21",[1]),("U22",[1]),("U31",[1]),("U41",[1]),("and",[1]),("isNat",[]),("isNatKind",[])], trsRules = [U11(tt,V1,V2) -> U12(isNat(V1),V2),U12(tt,V2) -> U13(isNat(V2)),U13(tt) -> tt,U21(tt,V1) -> U22(isNat(V1)),U22(tt) -> tt,U31(tt,N) -> N,U41(tt,M,N) -> s(plus(N,M)),and(tt,X) -> X,isNat(0) -> tt,isNat(plus(V1,V2)) -> U11(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(s(V1)) -> U21(isNatKind(V1),V1),isNatKind(0) -> tt,isNatKind(plus(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(s(V1)) -> isNatKind(V1),plus(N,0) -> U31(and(isNat(N),isNatKind(N)),N),plus(N,s(M)) -> U41(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LISTUTILITIES_nosorts.trs" :
TRS {trsSignature = fromList [("0",0),("U11",4),("U12",2),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","X","XS","Y","YS","Z","ZS"], trsRMap = [("U11",[1]),("U12",[1]),("and",[1]),("cons",[1])], trsRules = [U11(tt,N,X,XS) -> U12(splitAt(N,XS),X),U12(pair(YS,ZS),X) -> pair(cons(X,YS),ZS),afterNth(N,XS) -> snd(splitAt(N,XS)),and(tt,X) -> X,fst(pair(X,Y)) -> X,head(cons(N,XS)) -> N,natsFrom(N) -> cons(N,natsFrom(s(N))),sel(N,XS) -> head(afterNth(N,XS)),snd(pair(X,Y)) -> Y,splitAt(0,XS) -> pair(nil,XS),splitAt(s(N),cons(X,XS)) -> U11(tt,N,X,XS),tail(cons(N,XS)) -> XS,take(N,XS) -> fst(splitAt(N,XS))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LISTUTILITIES_nosorts-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U21",2),("U22",2),("U31",2),("U32",2),("U41",3),("U42",3),("U51",2),("U52",2),("U61",4),("U62",4),("U63",4),("U64",2),("U71",2),("U72",2),("U81",3),("U82",3),("afterNth",2),("cons",2),("fst",1),("head",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","X","XS","Y","YS","Z","ZS"], trsRMap = [("U11",[1]),("U12",[1]),("U21",[1]),("U22",[1]),("U31",[1]),("U32",[1]),("U41",[1]),("U42",[1]),("U51",[1]),("U52",[1]),("U61",[1]),("U62",[1]),("U63",[1]),("U64",[1]),("U71",[1]),("U72",[1]),("U81",[1]),("U82",[1]),("cons",[1])], trsRules = [U11(tt,N,XS) -> U12(tt,N,XS),U12(tt,N,XS) -> snd(splitAt(N,XS)),U21(tt,X) -> U22(tt,X),U22(tt,X) -> X,U31(tt,N) -> U32(tt,N),U32(tt,N) -> N,U41(tt,N,XS) -> U42(tt,N,XS),U42(tt,N,XS) -> head(afterNth(N,XS)),U51(tt,Y) -> U52(tt,Y),U52(tt,Y) -> Y,U61(tt,N,X,XS) -> U62(tt,N,X,XS),U62(tt,N,X,XS) -> U63(tt,N,X,XS),U63(tt,N,X,XS) -> U64(splitAt(N,XS),X),U64(pair(YS,ZS),X) -> pair(cons(X,YS),ZS),U71(tt,XS) -> U72(tt,XS),U72(tt,XS) -> XS,U81(tt,N,XS) -> U82(tt,N,XS),U82(tt,N,XS) -> fst(splitAt(N,XS)),afterNth(N,XS) -> U11(tt,N,XS),fst(pair(X,Y)) -> U21(tt,X),head(cons(N,XS)) -> U31(tt,N),natsFrom(N) -> cons(N,natsFrom(s(N))),sel(N,XS) -> U41(tt,N,XS),snd(pair(X,Y)) -> U51(tt,Y),splitAt(0,XS) -> pair(nil,XS),splitAt(s(N),cons(X,XS)) -> U61(tt,N,X,XS),tail(cons(N,XS)) -> U71(tt,XS),take(N,XS) -> U81(tt,N,XS)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LISTUTILITIES_nokinds.trs" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U11",3),("U21",2),("U31",2),("U41",2),("U51",3),("U61",2),("U71",2),("U81",4),("U82",2),("U91",2),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isNatural",1),("isPLNat",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","XS","Y","YS","Z","ZS"], trsRMap = [("U101",[1]),("U11",[1]),("U21",[1]),("U31",[1]),("U41",[1]),("U51",[1]),("U61",[1]),("U71",[1]),("U81",[1]),("U82",[1]),("U91",[1]),("and",[1]),("cons",[1]),("isLNat",[]),("isNatural",[]),("isPLNat",[])], trsRules = [U101(tt,N,XS) -> fst(splitAt(N,XS)),U11(tt,N,XS) -> snd(splitAt(N,XS)),U21(tt,X) -> X,U31(tt,N) -> N,U41(tt,N) -> cons(N,natsFrom(s(N))),U51(tt,N,XS) -> head(afterNth(N,XS)),U61(tt,Y) -> Y,U71(tt,XS) -> pair(nil,XS),U81(tt,N,X,XS) -> U82(splitAt(N,XS),X),U82(pair(YS,ZS),X) -> pair(cons(X,YS),ZS),U91(tt,XS) -> XS,afterNth(N,XS) -> U11(and(isNatural(N),isLNat(XS)),N,XS),and(tt,X) -> X,fst(pair(X,Y)) -> U21(and(isLNat(X),isLNat(Y)),X),head(cons(N,XS)) -> U31(and(isNatural(N),isLNat(XS)),N),isLNat(nil) -> tt,isLNat(afterNth(V1,V2)) -> and(isNatural(V1),isLNat(V2)),isLNat(cons(V1,V2)) -> and(isNatural(V1),isLNat(V2)),isLNat(fst(V1)) -> isPLNat(V1),isLNat(natsFrom(V1)) -> isNatural(V1),isLNat(snd(V1)) -> isPLNat(V1),isLNat(tail(V1)) -> isLNat(V1),isLNat(take(V1,V2)) -> and(isNatural(V1),isLNat(V2)),isNatural(0) -> tt,isNatural(head(V1)) -> isLNat(V1),isNatural(s(V1)) -> isNatural(V1),isNatural(sel(V1,V2)) -> and(isNatural(V1),isLNat(V2)),isPLNat(pair(V1,V2)) -> and(isLNat(V1),isLNat(V2)),isPLNat(splitAt(V1,V2)) -> and(isNatural(V1),isLNat(V2)),natsFrom(N) -> U41(isNatural(N),N),sel(N,XS) -> U51(and(isNatural(N),isLNat(XS)),N,XS),snd(pair(X,Y)) -> U61(and(isLNat(X),isLNat(Y)),Y),splitAt(0,XS) -> U71(isLNat(XS),XS),splitAt(s(N),cons(X,XS)) -> U81(and(isNatural(N),and(isNatural(X),isLNat(XS))),N,X,XS),tail(cons(N,XS)) -> U91(and(isNatural(N),isLNat(XS)),XS),take(N,XS) -> U101(and(isNatural(N),isLNat(XS)),N,XS)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LISTUTILITIES_nokinds-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U101",2),("U102",1),("U11",3),("U111",1),("U12",3),("U121",1),("U131",2),("U132",1),("U141",2),("U142",1),("U151",2),("U152",1),("U161",2),("U171",3),("U172",3),("U181",2),("U182",2),("U191",2),("U201",4),("U202",4),("U203",4),("U204",2),("U21",3),("U211",2),("U212",2),("U22",2),("U221",3),("U222",3),("U31",3),("U32",2),("U41",2),("U42",1),("U51",2),("U52",1),("U61",1),("U71",1),("U81",1),("U91",1),("afterNth",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isNatural",1),("isPLNat",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","XS","Y","YS","Z","ZS"], trsRMap = [("U101",[1]),("U102",[1]),("U11",[1]),("U111",[1]),("U12",[1]),("U121",[1]),("U131",[1]),("U132",[1]),("U141",[1]),("U142",[1]),("U151",[1]),("U152",[1]),("U161",[1]),("U171",[1]),("U172",[1]),("U181",[1]),("U182",[1]),("U191",[1]),("U201",[1]),("U202",[1]),("U203",[1]),("U204",[1]),("U21",[1]),("U211",[1]),("U212",[1]),("U22",[1]),("U221",[1]),("U222",[1]),("U31",[1]),("U32",[1]),("U41",[1]),("U42",[1]),("U51",[1]),("U52",[1]),("U61",[1]),("U71",[1]),("U81",[1]),("U91",[1]),("cons",[1]),("isLNat",[]),("isNatural",[]),("isPLNat",[])], trsRules = [U101(tt,V2) -> U102(isLNat(V2)),U102(tt) -> tt,U11(tt,N,XS) -> U12(isLNat(XS),N,XS),U111(tt) -> tt,U12(tt,N,XS) -> snd(splitAt(N,XS)),U121(tt) -> tt,U131(tt,V2) -> U132(isLNat(V2)),U132(tt) -> tt,U141(tt,V2) -> U142(isLNat(V2)),U142(tt) -> tt,U151(tt,V2) -> U152(isLNat(V2)),U152(tt) -> tt,U161(tt,N) -> cons(N,natsFrom(s(N))),U171(tt,N,XS) -> U172(isLNat(XS),N,XS),U172(tt,N,XS) -> head(afterNth(N,XS)),U181(tt,Y) -> U182(isLNat(Y),Y),U182(tt,Y) -> Y,U191(tt,XS) -> pair(nil,XS),U201(tt,N,X,XS) -> U202(isNatural(X),N,X,XS),U202(tt,N,X,XS) -> U203(isLNat(XS),N,X,XS),U203(tt,N,X,XS) -> U204(splitAt(N,XS),X),U204(pair(YS,ZS),X) -> pair(cons(X,YS),ZS),U21(tt,X,Y) -> U22(isLNat(Y),X),U211(tt,XS) -> U212(isLNat(XS),XS),U212(tt,XS) -> XS,U22(tt,X) -> X,U221(tt,N,XS) -> U222(isLNat(XS),N,XS),U222(tt,N,XS) -> fst(splitAt(N,XS)),U31(tt,N,XS) -> U32(isLNat(XS),N),U32(tt,N) -> N,U41(tt,V2) -> U42(isLNat(V2)),U42(tt) -> tt,U51(tt,V2) -> U52(isLNat(V2)),U52(tt) -> tt,U61(tt) -> tt,U71(tt) -> tt,U81(tt) -> tt,U91(tt) -> tt,afterNth(N,XS) -> U11(isNatural(N),N,XS),fst(pair(X,Y)) -> U21(isLNat(X),X,Y),head(cons(N,XS)) -> U31(isNatural(N),N,XS),isLNat(nil) -> tt,isLNat(afterNth(V1,V2)) -> U41(isNatural(V1),V2),isLNat(cons(V1,V2)) -> U51(isNatural(V1),V2),isLNat(fst(V1)) -> U61(isPLNat(V1)),isLNat(natsFrom(V1)) -> U71(isNatural(V1)),isLNat(snd(V1)) -> U81(isPLNat(V1)),isLNat(tail(V1)) -> U91(isLNat(V1)),isLNat(take(V1,V2)) -> U101(isNatural(V1),V2),isNatural(0) -> tt,isNatural(head(V1)) -> U111(isLNat(V1)),isNatural(s(V1)) -> U121(isNatural(V1)),isNatural(sel(V1,V2)) -> U131(isNatural(V1),V2),isPLNat(pair(V1,V2)) -> U141(isLNat(V1),V2),isPLNat(splitAt(V1,V2)) -> U151(isNatural(V1),V2),natsFrom(N) -> U161(isNatural(N),N),sel(N,XS) -> U171(isNatural(N),N,XS),snd(pair(X,Y)) -> U181(isLNat(X),Y),splitAt(0,XS) -> U191(isLNat(XS),XS),splitAt(s(N),cons(X,XS)) -> U201(isNatural(N),N,X,XS),tail(cons(N,XS)) -> U211(isNatural(N),XS),take(N,XS) -> U221(isNatural(N),N,XS)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LISTUTILITIES_complete.trs" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",2),("U103",1),("U11",3),("U111",2),("U112",1),("U121",2),("U122",1),("U131",3),("U132",2),("U133",1),("U141",3),("U142",2),("U143",1),("U151",3),("U152",2),("U153",1),("U161",2),("U171",3),("U181",2),("U191",2),("U201",4),("U202",2),("U21",2),("U211",2),("U221",3),("U31",2),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("U62",1),("U71",2),("U72",1),("U81",2),("U82",1),("U91",2),("U92",1),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isLNatKind",1),("isNatural",1),("isNaturalKind",1),("isPLNat",1),("isPLNatKind",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","XS","Y","YS","Z","ZS"], trsRMap = [("U101",[1]),("U102",[1]),("U103",[1]),("U11",[1]),("U111",[1]),("U112",[1]),("U121",[1]),("U122",[1]),("U131",[1]),("U132",[1]),("U133",[1]),("U141",[1]),("U142",[1]),("U143",[1]),("U151",[1]),("U152",[1]),("U153",[1]),("U161",[1]),("U171",[1]),("U181",[1]),("U191",[1]),("U201",[1]),("U202",[1]),("U21",[1]),("U211",[1]),("U221",[1]),("U31",[1]),("U41",[1]),("U42",[1]),("U43",[1]),("U51",[1]),("U52",[1]),("U53",[1]),("U61",[1]),("U62",[1]),("U71",[1]),("U72",[1]),("U81",[1]),("U82",[1]),("U91",[1]),("U92",[1]),("and",[1]),("cons",[1]),("isLNat",[]),("isLNatKind",[]),("isNatural",[]),("isNaturalKind",[]),("isPLNat",[]),("isPLNatKind",[])], trsRules = [U101(tt,V1,V2) -> U102(isNatural(V1),V2),U102(tt,V2) -> U103(isLNat(V2)),U103(tt) -> tt,U11(tt,N,XS) -> snd(splitAt(N,XS)),U111(tt,V1) -> U112(isLNat(V1)),U112(tt) -> tt,U121(tt,V1) -> U122(isNatural(V1)),U122(tt) -> tt,U131(tt,V1,V2) -> U132(isNatural(V1),V2),U132(tt,V2) -> U133(isLNat(V2)),U133(tt) -> tt,U141(tt,V1,V2) -> U142(isLNat(V1),V2),U142(tt,V2) -> U143(isLNat(V2)),U143(tt) -> tt,U151(tt,V1,V2) -> U152(isNatural(V1),V2),U152(tt,V2) -> U153(isLNat(V2)),U153(tt) -> tt,U161(tt,N) -> cons(N,natsFrom(s(N))),U171(tt,N,XS) -> head(afterNth(N,XS)),U181(tt,Y) -> Y,U191(tt,XS) -> pair(nil,XS),U201(tt,N,X,XS) -> U202(splitAt(N,XS),X),U202(pair(YS,ZS),X) -> pair(cons(X,YS),ZS),U21(tt,X) -> X,U211(tt,XS) -> XS,U221(tt,N,XS) -> fst(splitAt(N,XS)),U31(tt,N) -> N,U41(tt,V1,V2) -> U42(isNatural(V1),V2),U42(tt,V2) -> U43(isLNat(V2)),U43(tt) -> tt,U51(tt,V1,V2) -> U52(isNatural(V1),V2),U52(tt,V2) -> U53(isLNat(V2)),U53(tt) -> tt,U61(tt,V1) -> U62(isPLNat(V1)),U62(tt) -> tt,U71(tt,V1) -> U72(isNatural(V1)),U72(tt) -> tt,U81(tt,V1) -> U82(isPLNat(V1)),U82(tt) -> tt,U91(tt,V1) -> U92(isLNat(V1)),U92(tt) -> tt,afterNth(N,XS) -> U11(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS),and(tt,X) -> X,fst(pair(X,Y)) -> U21(and(and(isLNat(X),isLNatKind(X)),and(isLNat(Y),isLNatKind(Y))),X),head(cons(N,XS)) -> U31(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N),isLNat(nil) -> tt,isLNat(afterNth(V1,V2)) -> U41(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2),isLNat(cons(V1,V2)) -> U51(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2),isLNat(fst(V1)) -> U61(isPLNatKind(V1),V1),isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1),V1),isLNat(snd(V1)) -> U81(isPLNatKind(V1),V1),isLNat(tail(V1)) -> U91(isLNatKind(V1),V1),isLNat(take(V1,V2)) -> U101(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2),isLNatKind(nil) -> tt,isLNatKind(afterNth(V1,V2)) -> and(isNaturalKind(V1),isLNatKind(V2)),isLNatKind(cons(V1,V2)) -> and(isNaturalKind(V1),isLNatKind(V2)),isLNatKind(fst(V1)) -> isPLNatKind(V1),isLNatKind(natsFrom(V1)) -> isNaturalKind(V1),isLNatKind(snd(V1)) -> isPLNatKind(V1),isLNatKind(tail(V1)) -> isLNatKind(V1),isLNatKind(take(V1,V2)) -> and(isNaturalKind(V1),isLNatKind(V2)),isNatural(0) -> tt,isNatural(head(V1)) -> U111(isLNatKind(V1),V1),isNatural(s(V1)) -> U121(isNaturalKind(V1),V1),isNatural(sel(V1,V2)) -> U131(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2),isNaturalKind(0) -> tt,isNaturalKind(head(V1)) -> isLNatKind(V1),isNaturalKind(s(V1)) -> isNaturalKind(V1),isNaturalKind(sel(V1,V2)) -> and(isNaturalKind(V1),isLNatKind(V2)),isPLNat(pair(V1,V2)) -> U141(and(isLNatKind(V1),isLNatKind(V2)),V1,V2),isPLNat(splitAt(V1,V2)) -> U151(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2),isPLNatKind(pair(V1,V2)) -> and(isLNatKind(V1),isLNatKind(V2)),isPLNatKind(splitAt(V1,V2)) -> and(isNaturalKind(V1),isLNatKind(V2)),natsFrom(N) -> U161(and(isNatural(N),isNaturalKind(N)),N),sel(N,XS) -> U171(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS),snd(pair(X,Y)) -> U181(and(and(isLNat(X),isLNatKind(X)),and(isLNat(Y),isLNatKind(Y))),Y),splitAt(0,XS) -> U191(and(isLNat(XS),isLNatKind(XS)),XS),splitAt(s(N),cons(X,XS)) -> U201(and(and(isNatural(N),isNaturalKind(N)),and(and(isNatural(X),isNaturalKind(X)),and(isLNat(XS),isLNatKind(XS)))),N,X,XS),tail(cons(N,XS)) -> U211(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),XS),take(N,XS) -> U221(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LISTUTILITIES_complete-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U105",2),("U106",1),("U11",3),("U111",2),("U112",1),("U12",3),("U121",2),("U122",1),("U13",3),("U131",1),("U14",3),("U141",1),("U151",1),("U161",1),("U171",2),("U172",1),("U181",2),("U182",2),("U183",1),("U191",2),("U192",2),("U193",1),("U201",3),("U202",3),("U203",3),("U204",3),("U205",2),("U206",1),("U21",3),("U211",1),("U22",3),("U221",1),("U23",3),("U231",2),("U232",1),("U24",2),("U241",3),("U242",3),("U243",3),("U244",3),("U245",2),("U246",1),("U251",3),("U252",3),("U253",3),("U254",3),("U255",2),("U256",1),("U261",2),("U262",1),("U271",2),("U272",1),("U281",2),("U282",2),("U291",3),("U292",3),("U293",3),("U294",3),("U301",3),("U302",2),("U303",2),("U304",2),("U31",3),("U311",2),("U312",2),("U32",3),("U321",4),("U322",4),("U323",4),("U324",4),("U325",4),("U326",4),("U327",2),("U33",3),("U331",3),("U332",2),("U333",2),("U334",2),("U34",2),("U341",3),("U342",3),("U343",3),("U344",3),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",3),("U52",3),("U53",3),("U54",3),("U55",2),("U56",1),("U61",2),("U62",2),("U63",1),("U71",2),("U72",2),("U73",1),("U81",2),("U82",2),("U83",1),("U91",2),("U92",2),("U93",1),("afterNth",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isLNatKind",1),("isNatural",1),("isNaturalKind",1),("isPLNat",1),("isPLNatKind",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","XS","Y","YS","Z","ZS"], trsRMap = [("U101",[1]),("U102",[1]),("U103",[1]),("U104",[1]),("U105",[1]),("U106",[1]),("U11",[1]),("U111",[1]),("U112",[1]),("U12",[1]),("U121",[1]),("U122",[1]),("U13",[1]),("U131",[1]),("U14",[1]),("U141",[1]),("U151",[1]),("U161",[1]),("U171",[1]),("U172",[1]),("U181",[1]),("U182",[1]),("U183",[1]),("U191",[1]),("U192",[1]),("U193",[1]),("U201",[1]),("U202",[1]),("U203",[1]),("U204",[1]),("U205",[1]),("U206",[1]),("U21",[1]),("U211",[1]),("U22",[1]),("U221",[1]),("U23",[1]),("U231",[1]),("U232",[1]),("U24",[1]),("U241",[1]),("U242",[1]),("U243",[1]),("U244",[1]),("U245",[1]),("U246",[1]),("U251",[1]),("U252",[1]),("U253",[1]),("U254",[1]),("U255",[1]),("U256",[1]),("U261",[1]),("U262",[1]),("U271",[1]),("U272",[1]),("U281",[1]),("U282",[1]),("U291",[1]),("U292",[1]),("U293",[1]),("U294",[1]),("U301",[1]),("U302",[1]),("U303",[1]),("U304",[1]),("U31",[1]),("U311",[1]),("U312",[1]),("U32",[1]),("U321",[1]),("U322",[1]),("U323",[1]),("U324",[1]),("U325",[1]),("U326",[1]),("U327",[1]),("U33",[1]),("U331",[1]),("U332",[1]),("U333",[1]),("U334",[1]),("U34",[1]),("U341",[1]),("U342",[1]),("U343",[1]),("U344",[1]),("U41",[1]),("U42",[1]),("U43",[1]),("U44",[1]),("U45",[1]),("U46",[1]),("U51",[1]),("U52",[1]),("U53",[1]),("U54",[1]),("U55",[1]),("U56",[1]),("U61",[1]),("U62",[1]),("U63",[1]),("U71",[1]),("U72",[1]),("U73",[1]),("U81",[1]),("U82",[1]),("U83",[1]),("U91",[1]),("U92",[1]),("U93",[1]),("cons",[1]),("isLNat",[]),("isLNatKind",[]),("isNatural",[]),("isNaturalKind",[]),("isPLNat",[]),("isPLNatKind",[])], trsRules = [U101(tt,V1,V2) -> U102(isNaturalKind(V1),V1,V2),U102(tt,V1,V2) -> U103(isLNatKind(V2),V1,V2),U103(tt,V1,V2) -> U104(isLNatKind(V2),V1,V2),U104(tt,V1,V2) -> U105(isNatural(V1),V2),U105(tt,V2) -> U106(isLNat(V2)),U106(tt) -> tt,U11(tt,N,XS) -> U12(isNaturalKind(N),N,XS),U111(tt,V2) -> U112(isLNatKind(V2)),U112(tt) -> tt,U12(tt,N,XS) -> U13(isLNat(XS),N,XS),U121(tt,V2) -> U122(isLNatKind(V2)),U122(tt) -> tt,U13(tt,N,XS) -> U14(isLNatKind(XS),N,XS),U131(tt) -> tt,U14(tt,N,XS) -> snd(splitAt(N,XS)),U141(tt) -> tt,U151(tt) -> tt,U161(tt) -> tt,U171(tt,V2) -> U172(isLNatKind(V2)),U172(tt) -> tt,U181(tt,V1) -> U182(isLNatKind(V1),V1),U182(tt,V1) -> U183(isLNat(V1)),U183(tt) -> tt,U191(tt,V1) -> U192(isNaturalKind(V1),V1),U192(tt,V1) -> U193(isNatural(V1)),U193(tt) -> tt,U201(tt,V1,V2) -> U202(isNaturalKind(V1),V1,V2),U202(tt,V1,V2) -> U203(isLNatKind(V2),V1,V2),U203(tt,V1,V2) -> U204(isLNatKind(V2),V1,V2),U204(tt,V1,V2) -> U205(isNatural(V1),V2),U205(tt,V2) -> U206(isLNat(V2)),U206(tt) -> tt,U21(tt,X,Y) -> U22(isLNatKind(X),X,Y),U211(tt) -> tt,U22(tt,X,Y) -> U23(isLNat(Y),X,Y),U221(tt) -> tt,U23(tt,X,Y) -> U24(isLNatKind(Y),X),U231(tt,V2) -> U232(isLNatKind(V2)),U232(tt) -> tt,U24(tt,X) -> X,U241(tt,V1,V2) -> U242(isLNatKind(V1),V1,V2),U242(tt,V1,V2) -> U243(isLNatKind(V2),V1,V2),U243(tt,V1,V2) -> U244(isLNatKind(V2),V1,V2),U244(tt,V1,V2) -> U245(isLNat(V1),V2),U245(tt,V2) -> U246(isLNat(V2)),U246(tt) -> tt,U251(tt,V1,V2) -> U252(isNaturalKind(V1),V1,V2),U252(tt,V1,V2) -> U253(isLNatKind(V2),V1,V2),U253(tt,V1,V2) -> U254(isLNatKind(V2),V1,V2),U254(tt,V1,V2) -> U255(isNatural(V1),V2),U255(tt,V2) -> U256(isLNat(V2)),U256(tt) -> tt,U261(tt,V2) -> U262(isLNatKind(V2)),U262(tt) -> tt,U271(tt,V2) -> U272(isLNatKind(V2)),U272(tt) -> tt,U281(tt,N) -> U282(isNaturalKind(N),N),U282(tt,N) -> cons(N,natsFrom(s(N))),U291(tt,N,XS) -> U292(isNaturalKind(N),N,XS),U292(tt,N,XS) -> U293(isLNat(XS),N,XS),U293(tt,N,XS) -> U294(isLNatKind(XS),N,XS),U294(tt,N,XS) -> head(afterNth(N,XS)),U301(tt,X,Y) -> U302(isLNatKind(X),Y),U302(tt,Y) -> U303(isLNat(Y),Y),U303(tt,Y) -> U304(isLNatKind(Y),Y),U304(tt,Y) -> Y,U31(tt,N,XS) -> U32(isNaturalKind(N),N,XS),U311(tt,XS) -> U312(isLNatKind(XS),XS),U312(tt,XS) -> pair(nil,XS),U32(tt,N,XS) -> U33(isLNat(XS),N,XS),U321(tt,N,X,XS) -> U322(isNaturalKind(N),N,X,XS),U322(tt,N,X,XS) -> U323(isNatural(X),N,X,XS),U323(tt,N,X,XS) -> U324(isNaturalKind(X),N,X,XS),U324(tt,N,X,XS) -> U325(isLNat(XS),N,X,XS),U325(tt,N,X,XS) -> U326(isLNatKind(XS),N,X,XS),U326(tt,N,X,XS) -> U327(splitAt(N,XS),X),U327(pair(YS,ZS),X) -> pair(cons(X,YS),ZS),U33(tt,N,XS) -> U34(isLNatKind(XS),N),U331(tt,N,XS) -> U332(isNaturalKind(N),XS),U332(tt,XS) -> U333(isLNat(XS),XS),U333(tt,XS) -> U334(isLNatKind(XS),XS),U334(tt,XS) -> XS,U34(tt,N) -> N,U341(tt,N,XS) -> U342(isNaturalKind(N),N,XS),U342(tt,N,XS) -> U343(isLNat(XS),N,XS),U343(tt,N,XS) -> U344(isLNatKind(XS),N,XS),U344(tt,N,XS) -> fst(splitAt(N,XS)),U41(tt,V1,V2) -> U42(isNaturalKind(V1),V1,V2),U42(tt,V1,V2) -> U43(isLNatKind(V2),V1,V2),U43(tt,V1,V2) -> U44(isLNatKind(V2),V1,V2),U44(tt,V1,V2) -> U45(isNatural(V1),V2),U45(tt,V2) -> U46(isLNat(V2)),U46(tt) -> tt,U51(tt,V1,V2) -> U52(isNaturalKind(V1),V1,V2),U52(tt,V1,V2) -> U53(isLNatKind(V2),V1,V2),U53(tt,V1,V2) -> U54(isLNatKind(V2),V1,V2),U54(tt,V1,V2) -> U55(isNatural(V1),V2),U55(tt,V2) -> U56(isLNat(V2)),U56(tt) -> tt,U61(tt,V1) -> U62(isPLNatKind(V1),V1),U62(tt,V1) -> U63(isPLNat(V1)),U63(tt) -> tt,U71(tt,V1) -> U72(isNaturalKind(V1),V1),U72(tt,V1) -> U73(isNatural(V1)),U73(tt) -> tt,U81(tt,V1) -> U82(isPLNatKind(V1),V1),U82(tt,V1) -> U83(isPLNat(V1)),U83(tt) -> tt,U91(tt,V1) -> U92(isLNatKind(V1),V1),U92(tt,V1) -> U93(isLNat(V1)),U93(tt) -> tt,afterNth(N,XS) -> U11(isNatural(N),N,XS),fst(pair(X,Y)) -> U21(isLNat(X),X,Y),head(cons(N,XS)) -> U31(isNatural(N),N,XS),isLNat(nil) -> tt,isLNat(afterNth(V1,V2)) -> U41(isNaturalKind(V1),V1,V2),isLNat(cons(V1,V2)) -> U51(isNaturalKind(V1),V1,V2),isLNat(fst(V1)) -> U61(isPLNatKind(V1),V1),isLNat(natsFrom(V1)) -> U71(isNaturalKind(V1),V1),isLNat(snd(V1)) -> U81(isPLNatKind(V1),V1),isLNat(tail(V1)) -> U91(isLNatKind(V1),V1),isLNat(take(V1,V2)) -> U101(isNaturalKind(V1),V1,V2),isLNatKind(nil) -> tt,isLNatKind(afterNth(V1,V2)) -> U111(isNaturalKind(V1),V2),isLNatKind(cons(V1,V2)) -> U121(isNaturalKind(V1),V2),isLNatKind(fst(V1)) -> U131(isPLNatKind(V1)),isLNatKind(natsFrom(V1)) -> U141(isNaturalKind(V1)),isLNatKind(snd(V1)) -> U151(isPLNatKind(V1)),isLNatKind(tail(V1)) -> U161(isLNatKind(V1)),isLNatKind(take(V1,V2)) -> U171(isNaturalKind(V1),V2),isNatural(0) -> tt,isNatural(head(V1)) -> U181(isLNatKind(V1),V1),isNatural(s(V1)) -> U191(isNaturalKind(V1),V1),isNatural(sel(V1,V2)) -> U201(isNaturalKind(V1),V1,V2),isNaturalKind(0) -> tt,isNaturalKind(head(V1)) -> U211(isLNatKind(V1)),isNaturalKind(s(V1)) -> U221(isNaturalKind(V1)),isNaturalKind(sel(V1,V2)) -> U231(isNaturalKind(V1),V2),isPLNat(pair(V1,V2)) -> U241(isLNatKind(V1),V1,V2),isPLNat(splitAt(V1,V2)) -> U251(isNaturalKind(V1),V1,V2),isPLNatKind(pair(V1,V2)) -> U261(isLNatKind(V1),V2),isPLNatKind(splitAt(V1,V2)) -> U271(isNaturalKind(V1),V2),natsFrom(N) -> U281(isNatural(N),N),sel(N,XS) -> U291(isNatural(N),N,XS),snd(pair(X,Y)) -> U301(isLNat(X),X,Y),splitAt(0,XS) -> U311(isLNat(XS),XS),splitAt(s(N),cons(X,XS)) -> U321(isNatural(N),N,X,XS),tail(cons(N,XS)) -> U331(isNatural(N),N,XS),take(N,XS) -> U341(isNatural(N),N,XS)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LengthOfFiniteLists_nosorts.trs" :
TRS {trsSignature = fromList [("0",0),("and",2),("cons",2),("length",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","X","Y","Z"], trsRMap = [("and",[1]),("cons",[1])], trsRules = [zeros -> cons(0,zeros),and(tt,X) -> X,length(nil) -> 0,length(cons(N,L)) -> s(length(L))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LengthOfFiniteLists_nosorts-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("cons",2),("length",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("cons",[1])], trsRules = [zeros -> cons(0,zeros),U11(tt,L) -> U12(tt,L),U12(tt,L) -> s(length(L)),length(nil) -> 0,length(cons(N,L)) -> U11(tt,L)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LengthOfFiniteLists_nokinds.trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("and",[1]),("cons",[1]),("isNat",[]),("isNatIList",[]),("isNatList",[])], trsRules = [zeros -> cons(0,zeros),U11(tt,L) -> s(length(L)),and(tt,X) -> X,isNat(0) -> tt,isNat(length(V1)) -> isNatList(V1),isNat(s(V1)) -> isNat(V1),isNatIList(V) -> isNatList(V),isNatIList(zeros) -> tt,isNatIList(cons(V1,V2)) -> and(isNat(V1),isNatIList(V2)),isNatList(nil) -> tt,isNatList(cons(V1,V2)) -> and(isNat(V1),isNatList(V2)),length(nil) -> 0,length(cons(N,L)) -> U11(and(isNatList(L),isNat(N)),L)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LengthOfFiniteLists_nokinds-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U11",1),("U21",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",3),("U62",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U21",[1]),("U31",[1]),("U41",[1]),("U42",[1]),("U51",[1]),("U52",[1]),("U61",[1]),("U62",[1]),("cons",[1]),("isNat",[]),("isNatIList",[]),("isNatList",[])], trsRules = [zeros -> cons(0,zeros),U11(tt) -> tt,U21(tt) -> tt,U31(tt) -> tt,U41(tt,V2) -> U42(isNatIList(V2)),U42(tt) -> tt,U51(tt,V2) -> U52(isNatList(V2)),U52(tt) -> tt,U61(tt,L,N) -> U62(isNat(N),L),U62(tt,L) -> s(length(L)),isNat(0) -> tt,isNat(length(V1)) -> U11(isNatList(V1)),isNat(s(V1)) -> U21(isNat(V1)),isNatIList(V) -> U31(isNatList(V)),isNatIList(zeros) -> tt,isNatIList(cons(V1,V2)) -> U41(isNat(V1),V2),isNatList(nil) -> tt,isNatList(cons(V1,V2)) -> U51(isNat(V1),V2),length(nil) -> 0,length(cons(N,L)) -> U61(isNatList(L),L,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LengthOfFiniteLists_complete.trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",2),("U22",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U21",[1]),("U22",[1]),("U31",[1]),("U32",[1]),("U41",[1]),("U42",[1]),("U43",[1]),("U51",[1]),("U52",[1]),("U53",[1]),("U61",[1]),("and",[1]),("cons",[1]),("isNat",[]),("isNatIList",[]),("isNatIListKind",[]),("isNatKind",[]),("isNatList",[])], trsRules = [zeros -> cons(0,zeros),U11(tt,V1) -> U12(isNatList(V1)),U12(tt) -> tt,U21(tt,V1) -> U22(isNat(V1)),U22(tt) -> tt,U31(tt,V) -> U32(isNatList(V)),U32(tt) -> tt,U41(tt,V1,V2) -> U42(isNat(V1),V2),U42(tt,V2) -> U43(isNatIList(V2)),U43(tt) -> tt,U51(tt,V1,V2) -> U52(isNat(V1),V2),U52(tt,V2) -> U53(isNatList(V2)),U53(tt) -> tt,U61(tt,L) -> s(length(L)),and(tt,X) -> X,isNat(0) -> tt,isNat(length(V1)) -> U11(isNatIListKind(V1),V1),isNat(s(V1)) -> U21(isNatKind(V1),V1),isNatIList(V) -> U31(isNatIListKind(V),V),isNatIList(zeros) -> tt,isNatIList(cons(V1,V2)) -> U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2),isNatIListKind(nil) -> tt,isNatIListKind(zeros) -> tt,isNatIListKind(cons(V1,V2)) -> and(isNatKind(V1),isNatIListKind(V2)),isNatKind(0) -> tt,isNatKind(length(V1)) -> isNatIListKind(V1),isNatKind(s(V1)) -> isNatKind(V1),isNatList(nil) -> tt,isNatList(cons(V1,V2)) -> U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2),length(nil) -> 0,length(cons(N,L)) -> U61(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\LengthOfFiniteLists_complete-noand.trs" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("U13",1),("U21",2),("U22",2),("U23",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",2),("U52",1),("U61",1),("U71",1),("U81",3),("U82",3),("U83",3),("U84",3),("U85",2),("U86",1),("U91",3),("U92",3),("U93",3),("U94",2),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","Y","Z"], trsRMap = [("U11",[1]),("U12",[1]),("U13",[1]),("U21",[1]),("U22",[1]),("U23",[1]),("U31",[1]),("U32",[1]),("U33",[1]),("U41",[1]),("U42",[1]),("U43",[1]),("U44",[1]),("U45",[1]),("U46",[1]),("U51",[1]),("U52",[1]),("U61",[1]),("U71",[1]),("U81",[1]),("U82",[1]),("U83",[1]),("U84",[1]),("U85",[1]),("U86",[1]),("U91",[1]),("U92",[1]),("U93",[1]),("U94",[1]),("cons",[1]),("isNat",[]),("isNatIList",[]),("isNatIListKind",[]),("isNatKind",[]),("isNatList",[])], trsRules = [zeros -> cons(0,zeros),U11(tt,V1) -> U12(isNatIListKind(V1),V1),U12(tt,V1) -> U13(isNatList(V1)),U13(tt) -> tt,U21(tt,V1) -> U22(isNatKind(V1),V1),U22(tt,V1) -> U23(isNat(V1)),U23(tt) -> tt,U31(tt,V) -> U32(isNatIListKind(V),V),U32(tt,V) -> U33(isNatList(V)),U33(tt) -> tt,U41(tt,V1,V2) -> U42(isNatKind(V1),V1,V2),U42(tt,V1,V2) -> U43(isNatIListKind(V2),V1,V2),U43(tt,V1,V2) -> U44(isNatIListKind(V2),V1,V2),U44(tt,V1,V2) -> U45(isNat(V1),V2),U45(tt,V2) -> U46(isNatIList(V2)),U46(tt) -> tt,U51(tt,V2) -> U52(isNatIListKind(V2)),U52(tt) -> tt,U61(tt) -> tt,U71(tt) -> tt,U81(tt,V1,V2) -> U82(isNatKind(V1),V1,V2),U82(tt,V1,V2) -> U83(isNatIListKind(V2),V1,V2),U83(tt,V1,V2) -> U84(isNatIListKind(V2),V1,V2),U84(tt,V1,V2) -> U85(isNat(V1),V2),U85(tt,V2) -> U86(isNatList(V2)),U86(tt) -> tt,U91(tt,L,N) -> U92(isNatIListKind(L),L,N),U92(tt,L,N) -> U93(isNat(N),L,N),U93(tt,L,N) -> U94(isNatKind(N),L),U94(tt,L) -> s(length(L)),isNat(0) -> tt,isNat(length(V1)) -> U11(isNatIListKind(V1),V1),isNat(s(V1)) -> U21(isNatKind(V1),V1),isNatIList(V) -> U31(isNatIListKind(V),V),isNatIList(zeros) -> tt,isNatIList(cons(V1,V2)) -> U41(isNatKind(V1),V1,V2),isNatIListKind(nil) -> tt,isNatIListKind(zeros) -> tt,isNatIListKind(cons(V1,V2)) -> U51(isNatKind(V1),V2),isNatKind(0) -> tt,isNatKind(length(V1)) -> U61(isNatIListKind(V1)),isNatKind(s(V1)) -> U71(isNatKind(V1)),isNatList(nil) -> tt,isNatList(cons(V1,V2)) -> U81(isNatKind(V1),V1,V2),length(nil) -> 0,length(cons(N,L)) -> U91(isNatList(L),L,N)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\BAG_nosorts.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("and",2),("empty",0),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","X","Y","Z"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,and(tt,X) -> X,mult(z,X) -> z,mult(0(X),Y) -> 0(mult(X,Y)),mult(1(X),Y) -> plus(0(mult(X,Y)),Y),plus(z,X) -> X,plus(0(X),0(Y)) -> 0(plus(X,Y)),plus(0(X),1(Y)) -> 1(plus(X,Y)),plus(1(X),1(Y)) -> 0(plus(plus(X,Y),1(z))),prod(empty) -> 1(z),prod(singl(X)) -> X,prod(union(A,B)) -> mult(prod(A),prod(B)),sum(empty) -> 0(z),sum(singl(X)) -> X,sum(union(A,B)) -> plus(sum(A),sum(B))], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\BAG_nosorts-noand.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("U11",3),("U12",3),("U21",3),("U22",3),("U31",3),("U32",3),("U41",3),("U42",3),("U51",3),("U52",3),("U61",3),("U62",3),("U71",3),("U72",3),("empty",0),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","X","Y","Z"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U11(tt,X,Y) -> U12(tt,X,Y),U12(tt,X,Y) -> 0(mult(X,Y)),U21(tt,X,Y) -> U22(tt,X,Y),U22(tt,X,Y) -> plus(0(mult(X,Y)),Y),U31(tt,X,Y) -> U32(tt,X,Y),U32(tt,X,Y) -> 0(plus(X,Y)),U41(tt,X,Y) -> U42(tt,X,Y),U42(tt,X,Y) -> 1(plus(X,Y)),U51(tt,X,Y) -> U52(tt,X,Y),U52(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U61(tt,A,B) -> U62(tt,A,B),U62(tt,A,B) -> mult(prod(A),prod(B)),U71(tt,A,B) -> U72(tt,A,B),U72(tt,A,B) -> plus(sum(A),sum(B)),mult(z,X) -> z,mult(0(X),Y) -> U11(tt,X,Y),mult(1(X),Y) -> U21(tt,X,Y),plus(z,X) -> X,plus(0(X),0(Y)) -> U31(tt,X,Y),plus(0(X),1(Y)) -> U41(tt,X,Y),plus(1(X),1(Y)) -> U51(tt,X,Y),prod(empty) -> 1(z),prod(singl(X)) -> X,prod(union(A,B)) -> U61(tt,A,B),sum(empty) -> 0(z),sum(singl(X)) -> X,sum(union(A,B)) -> U71(tt,A,B)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\BAG_nokinds.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("U101",2),("U11",1),("U111",3),("U21",3),("U31",3),("U41",2),("U51",3),("U61",3),("U71",3),("U81",2),("U91",3),("and",2),("empty",0),("isBag",1),("isBin",1),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U101(tt,X) -> X,U11(tt) -> z,U111(tt,A,B) -> plus(sum(A),sum(B)),U21(tt,X,Y) -> 0(mult(X,Y)),U31(tt,X,Y) -> plus(0(mult(X,Y)),Y),U41(tt,X) -> X,U51(tt,X,Y) -> 0(plus(X,Y)),U61(tt,X,Y) -> 1(plus(X,Y)),U71(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U81(tt,X) -> X,U91(tt,A,B) -> mult(prod(A),prod(B)),and(tt,X) -> X,isBag(empty) -> tt,isBag(singl(V1)) -> isBin(V1),isBag(union(V1,V2)) -> and(isBag(V1),isBag(V2)),isBin(z) -> tt,isBin(0(V1)) -> isBin(V1),isBin(1(V1)) -> isBin(V1),isBin(mult(V1,V2)) -> and(isBin(V1),isBin(V2)),isBin(plus(V1,V2)) -> and(isBin(V1),isBin(V2)),isBin(prod(V1)) -> isBag(V1),isBin(sum(V1)) -> isBag(V1),mult(z,X) -> U11(isBin(X)),mult(0(X),Y) -> U21(and(isBin(X),isBin(Y)),X,Y),mult(1(X),Y) -> U31(and(isBin(X),isBin(Y)),X,Y),plus(z,X) -> U41(isBin(X),X),plus(0(X),0(Y)) -> U51(and(isBin(X),isBin(Y)),X,Y),plus(0(X),1(Y)) -> U61(and(isBin(X),isBin(Y)),X,Y),plus(1(X),1(Y)) -> U71(and(isBin(X),isBin(Y)),X,Y),prod(empty) -> 1(z),prod(singl(X)) -> U81(isBin(X),X),prod(union(A,B)) -> U91(and(isBag(A),isBag(B)),A,B),sum(empty) -> 0(z),sum(singl(X)) -> U101(isBin(X),X),sum(union(A,B)) -> U111(and(isBag(A),isBag(B)),A,B)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\BAG_nokinds-noand.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("U101",3),("U102",3),("U11",1),("U111",3),("U112",3),("U121",2),("U131",3),("U132",3),("U141",3),("U142",3),("U151",3),("U152",3),("U161",2),("U171",3),("U172",3),("U181",2),("U191",3),("U192",3),("U21",2),("U22",1),("U31",1),("U41",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",1),("U81",1),("U91",1),("empty",0),("isBag",1),("isBin",1),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U101(tt,X,Y) -> U102(isBin(Y),X,Y),U102(tt,X,Y) -> 0(mult(X,Y)),U11(tt) -> tt,U111(tt,X,Y) -> U112(isBin(Y),X,Y),U112(tt,X,Y) -> plus(0(mult(X,Y)),Y),U121(tt,X) -> X,U131(tt,X,Y) -> U132(isBin(Y),X,Y),U132(tt,X,Y) -> 0(plus(X,Y)),U141(tt,X,Y) -> U142(isBin(Y),X,Y),U142(tt,X,Y) -> 1(plus(X,Y)),U151(tt,X,Y) -> U152(isBin(Y),X,Y),U152(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U161(tt,X) -> X,U171(tt,A,B) -> U172(isBag(B),A,B),U172(tt,A,B) -> mult(prod(A),prod(B)),U181(tt,X) -> X,U191(tt,A,B) -> U192(isBag(B),A,B),U192(tt,A,B) -> plus(sum(A),sum(B)),U21(tt,V2) -> U22(isBag(V2)),U22(tt) -> tt,U31(tt) -> tt,U41(tt) -> tt,U51(tt,V2) -> U52(isBin(V2)),U52(tt) -> tt,U61(tt,V2) -> U62(isBin(V2)),U62(tt) -> tt,U71(tt) -> tt,U81(tt) -> tt,U91(tt) -> z,isBag(empty) -> tt,isBag(singl(V1)) -> U11(isBin(V1)),isBag(union(V1,V2)) -> U21(isBag(V1),V2),isBin(z) -> tt,isBin(0(V1)) -> U31(isBin(V1)),isBin(1(V1)) -> U41(isBin(V1)),isBin(mult(V1,V2)) -> U51(isBin(V1),V2),isBin(plus(V1,V2)) -> U61(isBin(V1),V2),isBin(prod(V1)) -> U71(isBag(V1)),isBin(sum(V1)) -> U81(isBag(V1)),mult(z,X) -> U91(isBin(X)),mult(0(X),Y) -> U101(isBin(X),X,Y),mult(1(X),Y) -> U111(isBin(X),X,Y),plus(z,X) -> U121(isBin(X),X),plus(0(X),0(Y)) -> U131(isBin(X),X,Y),plus(0(X),1(Y)) -> U141(isBin(X),X,Y),plus(1(X),1(Y)) -> U151(isBin(X),X,Y),prod(empty) -> 1(z),prod(singl(X)) -> U161(isBin(X),X),prod(union(A,B)) -> U171(isBag(A),A,B),sum(empty) -> 0(z),sum(singl(X)) -> U181(isBin(X),X),sum(union(A,B)) -> U191(isBag(A),A,B)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\BAG_complete.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("U101",3),("U11",2),("U111",3),("U12",1),("U121",2),("U131",3),("U141",3),("U151",3),("U161",2),("U171",3),("U181",2),("U191",3),("U21",3),("U22",2),("U23",1),("U31",2),("U32",1),("U41",2),("U42",1),("U51",3),("U52",2),("U53",1),("U61",3),("U62",2),("U63",1),("U71",2),("U72",1),("U81",2),("U82",1),("U91",1),("and",2),("empty",0),("isBag",1),("isBagKind",1),("isBin",1),("isBinKind",1),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U101(tt,X,Y) -> 0(mult(X,Y)),U11(tt,V1) -> U12(isBin(V1)),U111(tt,X,Y) -> plus(0(mult(X,Y)),Y),U12(tt) -> tt,U121(tt,X) -> X,U131(tt,X,Y) -> 0(plus(X,Y)),U141(tt,X,Y) -> 1(plus(X,Y)),U151(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U161(tt,X) -> X,U171(tt,A,B) -> mult(prod(A),prod(B)),U181(tt,X) -> X,U191(tt,A,B) -> plus(sum(A),sum(B)),U21(tt,V1,V2) -> U22(isBag(V1),V2),U22(tt,V2) -> U23(isBag(V2)),U23(tt) -> tt,U31(tt,V1) -> U32(isBin(V1)),U32(tt) -> tt,U41(tt,V1) -> U42(isBin(V1)),U42(tt) -> tt,U51(tt,V1,V2) -> U52(isBin(V1),V2),U52(tt,V2) -> U53(isBin(V2)),U53(tt) -> tt,U61(tt,V1,V2) -> U62(isBin(V1),V2),U62(tt,V2) -> U63(isBin(V2)),U63(tt) -> tt,U71(tt,V1) -> U72(isBag(V1)),U72(tt) -> tt,U81(tt,V1) -> U82(isBag(V1)),U82(tt) -> tt,U91(tt) -> z,and(tt,X) -> X,isBag(empty) -> tt,isBag(singl(V1)) -> U11(isBinKind(V1),V1),isBag(union(V1,V2)) -> U21(and(isBagKind(V1),isBagKind(V2)),V1,V2),isBagKind(empty) -> tt,isBagKind(singl(V1)) -> isBinKind(V1),isBagKind(union(V1,V2)) -> and(isBagKind(V1),isBagKind(V2)),isBin(z) -> tt,isBin(0(V1)) -> U31(isBinKind(V1),V1),isBin(1(V1)) -> U41(isBinKind(V1),V1),isBin(mult(V1,V2)) -> U51(and(isBinKind(V1),isBinKind(V2)),V1,V2),isBin(plus(V1,V2)) -> U61(and(isBinKind(V1),isBinKind(V2)),V1,V2),isBin(prod(V1)) -> U71(isBagKind(V1),V1),isBin(sum(V1)) -> U81(isBagKind(V1),V1),isBinKind(z) -> tt,isBinKind(0(V1)) -> isBinKind(V1),isBinKind(1(V1)) -> isBinKind(V1),isBinKind(mult(V1,V2)) -> and(isBinKind(V1),isBinKind(V2)),isBinKind(plus(V1,V2)) -> and(isBinKind(V1),isBinKind(V2)),isBinKind(prod(V1)) -> isBagKind(V1),isBinKind(sum(V1)) -> isBagKind(V1),mult(z,X) -> U91(and(isBin(X),isBinKind(X))),mult(0(X),Y) -> U101(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),mult(1(X),Y) -> U111(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),plus(z,X) -> U121(and(isBin(X),isBinKind(X)),X),plus(0(X),0(Y)) -> U131(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),plus(0(X),1(Y)) -> U141(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),plus(1(X),1(Y)) -> U151(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),prod(empty) -> 1(z),prod(singl(X)) -> U161(and(isBin(X),isBinKind(X)),X),prod(union(A,B)) -> U171(and(and(isBag(A),isBagKind(A)),and(isBag(B),isBagKind(B))),A,B),sum(empty) -> 0(z),sum(singl(X)) -> U181(and(isBin(X),isBinKind(X)),X),sum(union(A,B)) -> U191(and(and(isBag(A),isBagKind(A)),and(isBag(B),isBagKind(B))),A,B)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\CSR_Maude\\BAG_complete-noand.trs" :
TRS {trsSignature = fromList [("0",1),("1",1),("U101",2),("U102",2),("U103",1),("U11",2),("U111",1),("U12",2),("U121",1),("U13",1),("U131",2),("U132",1),("U141",2),("U142",1),("U151",1),("U161",1),("U171",2),("U172",1),("U181",3),("U182",3),("U183",3),("U184",3),("U191",3),("U192",3),("U193",3),("U194",3),("U201",2),("U202",2),("U21",3),("U211",3),("U212",3),("U213",3),("U214",3),("U22",3),("U221",3),("U222",3),("U223",3),("U224",3),("U23",3),("U231",3),("U232",3),("U233",3),("U234",3),("U24",3),("U241",2),("U242",2),("U25",2),("U251",3),("U252",3),("U253",3),("U254",3),("U26",1),("U261",2),("U262",2),("U271",3),("U272",3),("U273",3),("U274",3),("U31",1),("U41",2),("U42",1),("U51",2),("U52",2),("U53",1),("U61",2),("U62",2),("U63",1),("U71",3),("U72",3),("U73",3),("U74",3),("U75",2),("U76",1),("U81",3),("U82",3),("U83",3),("U84",3),("U85",2),("U86",1),("U91",2),("U92",2),("U93",1),("empty",0),("isBag",1),("isBagKind",1),("isBin",1),("isBinKind",1),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","V1","V2","X","Y","Z"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U101(tt,V1) -> U102(isBagKind(V1),V1),U102(tt,V1) -> U103(isBag(V1)),U103(tt) -> tt,U11(tt,V1) -> U12(isBinKind(V1),V1),U111(tt) -> tt,U12(tt,V1) -> U13(isBin(V1)),U121(tt) -> tt,U13(tt) -> tt,U131(tt,V2) -> U132(isBinKind(V2)),U132(tt) -> tt,U141(tt,V2) -> U142(isBinKind(V2)),U142(tt) -> tt,U151(tt) -> tt,U161(tt) -> tt,U171(tt,X) -> U172(isBinKind(X)),U172(tt) -> z,U181(tt,X,Y) -> U182(isBinKind(X),X,Y),U182(tt,X,Y) -> U183(isBin(Y),X,Y),U183(tt,X,Y) -> U184(isBinKind(Y),X,Y),U184(tt,X,Y) -> 0(mult(X,Y)),U191(tt,X,Y) -> U192(isBinKind(X),X,Y),U192(tt,X,Y) -> U193(isBin(Y),X,Y),U193(tt,X,Y) -> U194(isBinKind(Y),X,Y),U194(tt,X,Y) -> plus(0(mult(X,Y)),Y),U201(tt,X) -> U202(isBinKind(X),X),U202(tt,X) -> X,U21(tt,V1,V2) -> U22(isBagKind(V1),V1,V2),U211(tt,X,Y) -> U212(isBinKind(X),X,Y),U212(tt,X,Y) -> U213(isBin(Y),X,Y),U213(tt,X,Y) -> U214(isBinKind(Y),X,Y),U214(tt,X,Y) -> 0(plus(X,Y)),U22(tt,V1,V2) -> U23(isBagKind(V2),V1,V2),U221(tt,X,Y) -> U222(isBinKind(X),X,Y),U222(tt,X,Y) -> U223(isBin(Y),X,Y),U223(tt,X,Y) -> U224(isBinKind(Y),X,Y),U224(tt,X,Y) -> 1(plus(X,Y)),U23(tt,V1,V2) -> U24(isBagKind(V2),V1,V2),U231(tt,X,Y) -> U232(isBinKind(X),X,Y),U232(tt,X,Y) -> U233(isBin(Y),X,Y),U233(tt,X,Y) -> U234(isBinKind(Y),X,Y),U234(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U24(tt,V1,V2) -> U25(isBag(V1),V2),U241(tt,X) -> U242(isBinKind(X),X),U242(tt,X) -> X,U25(tt,V2) -> U26(isBag(V2)),U251(tt,A,B) -> U252(isBagKind(A),A,B),U252(tt,A,B) -> U253(isBag(B),A,B),U253(tt,A,B) -> U254(isBagKind(B),A,B),U254(tt,A,B) -> mult(prod(A),prod(B)),U26(tt) -> tt,U261(tt,X) -> U262(isBinKind(X),X),U262(tt,X) -> X,U271(tt,A,B) -> U272(isBagKind(A),A,B),U272(tt,A,B) -> U273(isBag(B),A,B),U273(tt,A,B) -> U274(isBagKind(B),A,B),U274(tt,A,B) -> plus(sum(A),sum(B)),U31(tt) -> tt,U41(tt,V2) -> U42(isBagKind(V2)),U42(tt) -> tt,U51(tt,V1) -> U52(isBinKind(V1),V1),U52(tt,V1) -> U53(isBin(V1)),U53(tt) -> tt,U61(tt,V1) -> U62(isBinKind(V1),V1),U62(tt,V1) -> U63(isBin(V1)),U63(tt) -> tt,U71(tt,V1,V2) -> U72(isBinKind(V1),V1,V2),U72(tt,V1,V2) -> U73(isBinKind(V2),V1,V2),U73(tt,V1,V2) -> U74(isBinKind(V2),V1,V2),U74(tt,V1,V2) -> U75(isBin(V1),V2),U75(tt,V2) -> U76(isBin(V2)),U76(tt) -> tt,U81(tt,V1,V2) -> U82(isBinKind(V1),V1,V2),U82(tt,V1,V2) -> U83(isBinKind(V2),V1,V2),U83(tt,V1,V2) -> U84(isBinKind(V2),V1,V2),U84(tt,V1,V2) -> U85(isBin(V1),V2),U85(tt,V2) -> U86(isBin(V2)),U86(tt) -> tt,U91(tt,V1) -> U92(isBagKind(V1),V1),U92(tt,V1) -> U93(isBag(V1)),U93(tt) -> tt,isBag(empty) -> tt,isBag(singl(V1)) -> U11(isBinKind(V1),V1),isBag(union(V1,V2)) -> U21(isBagKind(V1),V1,V2),isBagKind(empty) -> tt,isBagKind(singl(V1)) -> U31(isBinKind(V1)),isBagKind(union(V1,V2)) -> U41(isBagKind(V1),V2),isBin(z) -> tt,isBin(0(V1)) -> U51(isBinKind(V1),V1),isBin(1(V1)) -> U61(isBinKind(V1),V1),isBin(mult(V1,V2)) -> U71(isBinKind(V1),V1,V2),isBin(plus(V1,V2)) -> U81(isBinKind(V1),V1,V2),isBin(prod(V1)) -> U91(isBagKind(V1),V1),isBin(sum(V1)) -> U101(isBagKind(V1),V1),isBinKind(z) -> tt,isBinKind(0(V1)) -> U111(isBinKind(V1)),isBinKind(1(V1)) -> U121(isBinKind(V1)),isBinKind(mult(V1,V2)) -> U131(isBinKind(V1),V2),isBinKind(plus(V1,V2)) -> U141(isBinKind(V1),V2),isBinKind(prod(V1)) -> U151(isBagKind(V1)),isBinKind(sum(V1)) -> U161(isBagKind(V1)),mult(z,X) -> U171(isBin(X),X),mult(0(X),Y) -> U181(isBin(X),X,Y),mult(1(X),Y) -> U191(isBin(X),X,Y),plus(z,X) -> U201(isBin(X),X),plus(0(X),0(Y)) -> U211(isBin(X),X,Y),plus(0(X),1(Y)) -> U221(isBin(X),X,Y),plus(1(X),1(Y)) -> U231(isBin(X),X,Y),prod(empty) -> 1(z),prod(singl(X)) -> U241(isBin(X),X),prod(union(A,B)) -> U251(isBag(A),A,B),sum(empty) -> 0(z),sum(singl(X)) -> U261(isBin(X),X),sum(union(A,B)) -> U271(isBag(A),A,B)], trsType = TRSEquational, trsStrategy = Nothing, signatureBlock = False}
