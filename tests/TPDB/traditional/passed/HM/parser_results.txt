
++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t014.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("div",2),("false",0),("if",3),("lt",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [-(x,0) -> x,-(0,s(y)) -> 0,-(s(x),s(y)) -> -(x,y),lt(x,0) -> false,lt(0,s(y)) -> true,lt(s(x),s(y)) -> lt(x,y),if(true,x,y) -> x,if(false,x,y) -> y,div(x,0) -> 0,div(0,y) -> 0,div(s(x),s(y)) -> if(lt(x,y),0,s(div(-(x,y),s(y))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t013.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("f",1),("g",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [-(x,0) -> x,-(0,s(y)) -> 0,-(s(x),s(y)) -> -(x,y),f(0) -> 0,f(s(x)) -> -(s(x),g(f(x))),g(0) -> s(0),g(s(x)) -> -(s(x),f(g(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t012.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("f",1),("minus",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [minus(minus(x)) -> x,minus(+(x,y)) -> *(minus(minus(minus(x))),minus(minus(minus(y)))),minus(*(x,y)) -> +(minus(minus(minus(x))),minus(minus(minus(y)))),f(minus(x)) -> minus(minus(minus(f(x))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t011.trs" :
TRS {trsSignature = fromList [("f",1),("g",2),("h",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [g(f(x),y) -> f(h(x,y)),h(x,y) -> g(x,f(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t009.trs" :
TRS {trsSignature = fromList [("B",0),("BF",0),("F",0),("FS",0),("S",0),("busy",7),("closed",0),("correct",0),("down",0),("empty",0),("false",0),("idle",7),("incorrect",0),("newbuttons",4),("open",0),("or",2),("start",1),("stop",0),("true",0),("up",0)], trsVariables = fromList ["b","b1","b2","b3","d","fl","i","i1","i2","i3","m"], trsRMap = [], trsRules = [start(i) -> busy(F,closed,stop,false,false,false,i),busy(BF,d,stop,b1,b2,b3,i) -> incorrect,busy(FS,d,stop,b1,b2,b3,i) -> incorrect,busy(fl,open,up,b1,b2,b3,i) -> incorrect,busy(fl,open,down,b1,b2,b3,i) -> incorrect,busy(B,closed,stop,false,false,false,empty) -> correct,busy(F,closed,stop,false,false,false,empty) -> correct,busy(S,closed,stop,false,false,false,empty) -> correct,busy(B,closed,stop,false,false,false,newbuttons(i1,i2,i3,i)) -> idle(B,closed,stop,false,false,false,newbuttons(i1,i2,i3,i)),busy(F,closed,stop,false,false,false,newbuttons(i1,i2,i3,i)) -> idle(F,closed,stop,false,false,false,newbuttons(i1,i2,i3,i)),busy(S,closed,stop,false,false,false,newbuttons(i1,i2,i3,i)) -> idle(S,closed,stop,false,false,false,newbuttons(i1,i2,i3,i)),busy(B,open,stop,false,b2,b3,i) -> idle(B,closed,stop,false,b2,b3,i),busy(F,open,stop,b1,false,b3,i) -> idle(F,closed,stop,b1,false,b3,i),busy(S,open,stop,b1,b2,false,i) -> idle(S,closed,stop,b1,b2,false,i),busy(B,d,stop,true,b2,b3,i) -> idle(B,open,stop,false,b2,b3,i),busy(F,d,stop,b1,true,b3,i) -> idle(F,open,stop,b1,false,b3,i),busy(S,d,stop,b1,b2,true,i) -> idle(S,open,stop,b1,b2,false,i),busy(B,closed,down,b1,b2,b3,i) -> idle(B,closed,stop,b1,b2,b3,i),busy(S,closed,up,b1,b2,b3,i) -> idle(S,closed,stop,b1,b2,b3,i),busy(B,closed,up,true,b2,b3,i) -> idle(B,closed,stop,true,b2,b3,i),busy(F,closed,up,b1,true,b3,i) -> idle(F,closed,stop,b1,true,b3,i),busy(F,closed,down,b1,true,b3,i) -> idle(F,closed,stop,b1,true,b3,i),busy(S,closed,down,b1,b2,true,i) -> idle(S,closed,stop,b1,b2,true,i),busy(B,closed,up,false,b2,b3,i) -> idle(BF,closed,up,false,b2,b3,i),busy(F,closed,up,b1,false,b3,i) -> idle(FS,closed,up,b1,false,b3,i),busy(F,closed,down,b1,false,b3,i) -> idle(BF,closed,down,b1,false,b3,i),busy(S,closed,down,b1,b2,false,i) -> idle(FS,closed,down,b1,b2,false,i),busy(BF,closed,up,b1,b2,b3,i) -> idle(F,closed,up,b1,b2,b3,i),busy(BF,closed,down,b1,b2,b3,i) -> idle(B,closed,down,b1,b2,b3,i),busy(FS,closed,up,b1,b2,b3,i) -> idle(S,closed,up,b1,b2,b3,i),busy(FS,closed,down,b1,b2,b3,i) -> idle(F,closed,down,b1,b2,b3,i),busy(B,closed,stop,false,true,b3,i) -> idle(B,closed,up,false,true,b3,i),busy(B,closed,stop,false,false,true,i) -> idle(B,closed,up,false,false,true,i),busy(F,closed,stop,true,false,b3,i) -> idle(F,closed,down,true,false,b3,i),busy(F,closed,stop,false,false,true,i) -> idle(F,closed,up,false,false,true,i),busy(S,closed,stop,b1,true,false,i) -> idle(S,closed,down,b1,true,false,i),busy(S,closed,stop,true,false,false,i) -> idle(S,closed,down,true,false,false,i),idle(fl,d,m,b1,b2,b3,empty) -> busy(fl,d,m,b1,b2,b3,empty),idle(fl,d,m,b1,b2,b3,newbuttons(i1,i2,i3,i)) -> busy(fl,d,m,or(b1,i1),or(b2,i2),or(b3,i3),i),or(true,b) -> true,or(false,b) -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t007.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",1),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(a) -> f(b),g(b) -> g(a),f(x) -> g(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t006.trs" :
TRS {trsSignature = fromList [("f",2),("g",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(g(x,y),f(y,y)) -> f(g(y,x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t005.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("8",0),("9",0),("c",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [c(0,x) -> x,c(x,c(y,z)) -> c(+(x,y),z),+(0,0) -> 0,+(0,1) -> 1,+(0,2) -> 2,+(0,3) -> 3,+(0,4) -> 4,+(0,5) -> 5,+(0,6) -> 6,+(0,7) -> 7,+(0,8) -> 8,+(0,9) -> 9,+(1,0) -> 1,+(1,1) -> 2,+(1,2) -> 3,+(1,3) -> 4,+(1,4) -> 5,+(1,5) -> 6,+(1,6) -> 7,+(1,7) -> 8,+(1,8) -> 9,+(1,9) -> c(1,0),+(2,0) -> 2,+(2,1) -> 3,+(2,2) -> 4,+(2,3) -> 5,+(2,4) -> 6,+(2,5) -> 7,+(2,6) -> 8,+(2,7) -> 9,+(2,8) -> c(1,0),+(2,9) -> c(1,1),+(3,0) -> 3,+(3,1) -> 4,+(3,2) -> 5,+(3,3) -> 6,+(3,4) -> 7,+(3,5) -> 8,+(3,6) -> 9,+(3,7) -> c(1,0),+(3,8) -> c(1,1),+(3,9) -> c(1,2),+(4,0) -> 4,+(4,1) -> 5,+(4,2) -> 6,+(4,3) -> 7,+(4,4) -> 8,+(4,5) -> 9,+(4,6) -> c(1,0),+(4,7) -> c(1,1),+(4,8) -> c(1,2),+(4,9) -> c(1,3),+(5,0) -> 5,+(5,1) -> 6,+(5,2) -> 7,+(5,3) -> 8,+(5,4) -> 9,+(5,5) -> c(1,0),+(5,6) -> c(1,1),+(5,7) -> c(1,2),+(5,8) -> c(1,3),+(5,9) -> c(1,4),+(6,0) -> 6,+(6,1) -> 7,+(6,2) -> 8,+(6,3) -> 9,+(6,4) -> c(1,0),+(6,5) -> c(1,1),+(6,6) -> c(1,2),+(6,7) -> c(1,3),+(6,8) -> c(1,4),+(6,9) -> c(1,5),+(7,0) -> 7,+(7,1) -> 8,+(7,2) -> 9,+(7,3) -> c(1,0),+(7,4) -> c(1,1),+(7,5) -> c(1,2),+(7,6) -> c(1,3),+(7,7) -> c(1,4),+(7,8) -> c(1,5),+(7,9) -> c(1,6),+(8,0) -> 8,+(8,1) -> 9,+(8,2) -> c(1,0),+(8,3) -> c(1,1),+(8,4) -> c(1,2),+(8,5) -> c(1,3),+(8,6) -> c(1,4),+(8,7) -> c(1,5),+(8,8) -> c(1,6),+(8,9) -> c(1,7),+(9,0) -> 9,+(9,1) -> c(1,0),+(9,2) -> c(1,1),+(9,3) -> c(1,2),+(9,4) -> c(1,3),+(9,5) -> c(1,4),+(9,6) -> c(1,5),+(9,7) -> c(1,6),+(9,8) -> c(1,7),+(9,9) -> c(1,8),+(x,c(y,z)) -> c(y,+(x,z)),+(c(x,y),z) -> c(x,+(y,z)),*(0,0) -> 0,*(0,1) -> 0,*(0,2) -> 0,*(0,3) -> 0,*(0,4) -> 0,*(0,5) -> 0,*(0,6) -> 0,*(0,7) -> 0,*(0,8) -> 0,*(0,9) -> 0,*(1,0) -> 0,*(1,1) -> 1,*(1,2) -> 2,*(1,3) -> 3,*(1,4) -> 4,*(1,5) -> 5,*(1,6) -> 6,*(1,7) -> 7,*(1,8) -> 8,*(1,9) -> 9,*(2,0) -> 0,*(2,1) -> 2,*(2,2) -> 4,*(2,3) -> 6,*(2,4) -> 8,*(2,5) -> c(1,0),*(2,6) -> c(1,2),*(2,7) -> c(1,4),*(2,8) -> c(1,6),*(2,9) -> c(1,8),*(3,0) -> 0,*(3,1) -> 3,*(3,2) -> 6,*(3,3) -> 9,*(3,4) -> c(1,2),*(3,5) -> c(1,5),*(3,6) -> c(1,8),*(3,7) -> c(2,1),*(3,8) -> c(2,4),*(3,9) -> c(2,7),*(4,0) -> 0,*(4,1) -> 4,*(4,2) -> 8,*(4,3) -> c(1,2),*(4,4) -> c(1,6),*(4,5) -> c(2,0),*(4,6) -> c(2,4),*(4,7) -> c(2,8),*(4,8) -> c(3,2),*(4,9) -> c(3,6),*(5,0) -> 0,*(5,1) -> 5,*(5,2) -> c(1,0),*(5,3) -> c(1,5),*(5,4) -> c(2,0),*(5,5) -> c(2,5),*(5,6) -> c(3,0),*(5,7) -> c(3,5),*(5,8) -> c(4,0),*(5,9) -> c(4,5),*(6,0) -> 0,*(6,1) -> 6,*(6,2) -> c(1,2),*(6,3) -> c(1,8),*(6,4) -> c(2,4),*(6,5) -> c(3,0),*(6,6) -> c(3,6),*(6,7) -> c(4,2),*(6,8) -> c(4,8),*(6,9) -> c(5,4),*(7,0) -> 0,*(7,1) -> 7,*(7,2) -> c(1,4),*(7,3) -> c(2,1),*(7,4) -> c(2,8),*(7,5) -> c(3,5),*(7,6) -> c(4,2),*(7,7) -> c(4,9),*(7,8) -> c(5,6),*(7,9) -> c(6,3),*(8,0) -> 0,*(8,1) -> 8,*(8,2) -> c(1,8),*(8,3) -> c(2,4),*(8,4) -> c(3,2),*(8,5) -> c(4,0),*(8,6) -> c(4,8),*(8,7) -> c(5,6),*(8,8) -> c(6,4),*(8,9) -> c(7,2),*(9,0) -> 0,*(9,1) -> 9,*(9,2) -> c(1,8),*(9,3) -> c(2,7),*(9,4) -> c(3,6),*(9,5) -> c(4,5),*(9,6) -> c(5,4),*(9,7) -> c(6,3),*(9,8) -> c(7,2),*(9,9) -> c(8,1),*(x,c(y,z)) -> c(*(x,y),*(x,z)),*(c(x,y),z) -> c(*(x,z),*(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t004.trs" :
TRS {trsSignature = fromList [("0",0),("f",1),("p",1),("s",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(s(x)) -> s(f(f(p(s(x))))),f(0) -> 0,p(s(x)) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t003.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("<=",2),("f",4),("false",0),("if",3),("perfectp",1),("s",1),("true",0)], trsVariables = fromList ["u","x","y","z"], trsRMap = [], trsRules = [-(x,0) -> x,-(s(x),s(y)) -> -(x,y),<=(0,y) -> true,<=(s(x),0) -> false,<=(s(x),s(y)) -> <=(x,y),if(true,x,y) -> x,if(false,x,y) -> y,perfectp(0) -> false,perfectp(s(x)) -> f(x,s(0),s(x),s(x)),f(0,y,0,u) -> true,f(0,y,s(z),u) -> false,f(s(x),0,z,u) -> f(x,u,-(z,s(x)),u),f(s(x),s(y),z,u) -> if(<=(x,y),f(s(x),-(y,x),z,u),f(x,u,z,u))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t002.trs" :
TRS {trsSignature = fromList [("-",2),("0",0),("false",0),("if",3),("leq",2),("mod",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [leq(0,y) -> true,leq(s(x),0) -> false,leq(s(x),s(y)) -> leq(x,y),if(true,x,y) -> x,if(false,x,y) -> y,-(x,0) -> x,-(s(x),s(y)) -> -(x,y),mod(0,y) -> 0,mod(s(x),0) -> 0,mod(s(x),s(y)) -> if(leq(y,x),mod(-(s(x),s(y)),s(y)),s(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t001.trs" :
TRS {trsSignature = fromList [("*",2),("+",2),("-",2),("0",0),("f",3),("false",0),("half",1),("if",3),("odd",1),("pow",2),("s",1),("true",0)], trsVariables = fromList ["u","x","y","z"], trsRMap = [], trsRules = [-(x,0) -> x,-(s(x),s(y)) -> -(x,y),*(x,0) -> 0,*(x,s(y)) -> +(*(x,y),x),if(true,x,y) -> x,if(false,x,y) -> y,odd(0) -> false,odd(s(0)) -> true,odd(s(s(x))) -> odd(x),half(0) -> 0,half(s(0)) -> 0,half(s(s(x))) -> s(half(x)),if(true,x,y) -> true,if(false,x,y) -> false,pow(x,y) -> f(x,y,s(0)),f(x,0,z) -> z,f(x,s(y),z) -> if(odd(s(y)),f(x,y,*(x,z)),f(*(x,x),half(s(y)),z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\t000.trs" :
TRS {trsSignature = fromList [("+",2),("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("8",0),("9",0),("c",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [+(0,0) -> 0,+(0,1) -> 1,+(0,2) -> 2,+(0,3) -> 3,+(0,4) -> 4,+(0,5) -> 5,+(0,6) -> 6,+(0,7) -> 7,+(0,8) -> 8,+(0,9) -> 9,+(1,0) -> 1,+(1,1) -> 2,+(1,2) -> 3,+(1,3) -> 4,+(1,4) -> 5,+(1,5) -> 6,+(1,6) -> 7,+(1,7) -> 8,+(1,8) -> 9,+(1,9) -> c(1,0),+(2,0) -> 2,+(2,1) -> 3,+(2,2) -> 4,+(2,3) -> 5,+(2,4) -> 6,+(2,5) -> 7,+(2,6) -> 8,+(2,7) -> 9,+(2,8) -> c(1,0),+(2,9) -> c(1,1),+(3,0) -> 3,+(3,1) -> 4,+(3,2) -> 5,+(3,3) -> 6,+(3,4) -> 7,+(3,5) -> 8,+(3,6) -> 9,+(3,7) -> c(1,0),+(3,8) -> c(1,1),+(3,9) -> c(1,2),+(4,0) -> 4,+(4,1) -> 5,+(4,2) -> 6,+(4,3) -> 7,+(4,4) -> 8,+(4,5) -> 9,+(4,6) -> c(1,0),+(4,7) -> c(1,1),+(4,8) -> c(1,2),+(4,9) -> c(1,3),+(5,0) -> 5,+(5,1) -> 6,+(5,2) -> 7,+(5,3) -> 8,+(5,4) -> 9,+(5,5) -> c(1,0),+(5,6) -> c(1,1),+(5,7) -> c(1,2),+(5,8) -> c(1,3),+(5,9) -> c(1,4),+(6,0) -> 6,+(6,1) -> 7,+(6,2) -> 8,+(6,3) -> 9,+(6,4) -> c(1,0),+(6,5) -> c(1,1),+(6,6) -> c(1,2),+(6,7) -> c(1,3),+(6,8) -> c(1,4),+(6,9) -> c(1,5),+(7,0) -> 7,+(7,1) -> 8,+(7,2) -> 9,+(7,3) -> c(1,0),+(7,4) -> c(1,1),+(7,5) -> c(1,2),+(7,6) -> c(1,3),+(7,7) -> c(1,4),+(7,8) -> c(1,5),+(7,9) -> c(1,6),+(8,0) -> 8,+(8,1) -> 9,+(8,2) -> c(1,0),+(8,3) -> c(1,1),+(8,4) -> c(1,2),+(8,5) -> c(1,3),+(8,6) -> c(1,4),+(8,7) -> c(1,5),+(8,8) -> c(1,6),+(8,9) -> c(1,7),+(9,0) -> 9,+(9,1) -> c(1,0),+(9,2) -> c(1,1),+(9,3) -> c(1,2),+(9,4) -> c(1,3),+(9,5) -> c(1,4),+(9,6) -> c(1,5),+(9,7) -> c(1,6),+(9,8) -> c(1,7),+(9,9) -> c(1,8),+(x,c(y,z)) -> c(y,+(x,z)),+(c(x,y),z) -> c(x,+(y,z)),c(0,x) -> x,c(x,c(y,z)) -> c(+(x,y),z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\n007.trs" :
TRS {trsSignature = fromList [("f",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x,y) -> f(x,x),f(s(x),y) -> f(y,x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\n006.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> f(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\n005.trs" :
TRS {trsSignature = fromList [("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> f(f(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\n003.trs" :
TRS {trsSignature = fromList [("a",0),("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> f(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\n002.trs" :
TRS {trsSignature = fromList [("f",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> f(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_tested\\HM\\n001.trs" :
TRS {trsSignature = fromList [("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [h(f(f(x))) -> h(f(g(f(x)))),f(g(f(x))) -> f(f(x))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = False}
