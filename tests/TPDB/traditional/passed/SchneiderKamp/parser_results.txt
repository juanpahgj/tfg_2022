
++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe14.trs" :
TRS {trsSignature = fromList [("0",0),("even",1),("false",0),("gt",2),("half",1),("id",1),("if",3),("if_times",3),("not",1),("plus",2),("s",1),("times",2),("true",0),("zero",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [even(0) -> true,even(s(0)) -> false,even(s(s(x))) -> even(x),half(0) -> 0,half(s(s(x))) -> s(half(x)),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y),times(0,y) -> 0,times(s(x),y) -> if_times(even(s(x)),s(x),y),if_times(true,s(x),y) -> plus(times(half(s(x)),y),times(half(s(x)),y)),if_times(false,s(x),y) -> plus(y,times(x,y))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe13.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("gt",2),("id",1),("if",3),("not",1),("plus",2),("quot",3),("s",1),("true",0),("zero",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [quot(0,s(y),s(z)) -> 0,quot(s(x),s(y),z) -> quot(x,y,z),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y),quot(x,0,s(z)) -> s(quot(x,plus(z,s(0)),s(z)))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe12.trs" :
TRS {trsSignature = fromList [("0",0),("and",2),("f",1),("false",0),("g",2),("gt",2),("h",1),("id",1),("if",3),("k",2),("m",2),("minus",2),("n",2),("not",1),("p",2),("s",1),("t",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [g(s(x),s(y)) -> if(and(f(s(x)),f(s(y))),t(g(k(minus(m(x,y),n(x,y)),s(s(0))),k(n(s(x),s(y)),s(s(0))))),g(minus(m(x,y),n(x,y)),n(s(x),s(y)))),n(0,y) -> 0,n(x,0) -> 0,n(s(x),s(y)) -> s(n(x,y)),m(0,y) -> y,m(x,0) -> x,m(s(x),s(y)) -> s(m(x,y)),k(0,s(y)) -> 0,k(s(x),s(y)) -> s(k(minus(x,y),s(y))),t(x) -> p(x,x),p(s(x),s(y)) -> s(s(p(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),p(s(x),x) -> p(if(gt(x,x),id(x),id(x)),s(x)),p(0,y) -> y,p(id(x),s(y)) -> s(p(x,if(gt(s(y),y),y,s(y)))),minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),and(x,false) -> false,and(true,true) -> true,f(0) -> true,f(s(x)) -> h(x),h(0) -> false,h(s(x)) -> f(x),gt(s(x),0) -> true,gt(0,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe11.trs" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("false",0),("gt",2),("id",1),("if",3),("minus",2),("nil",0),("not",1),("plus",2),("quot",2),("s",1),("sum",1),("true",0),("zero",0)], trsVariables = fromList ["k","l","x","y","z"], trsRMap = [], trsRules = [minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),quot(0,s(y)) -> 0,quot(s(x),s(y)) -> s(quot(minus(x,y),s(y))),plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),minus(minus(x,y),z) -> minus(x,plus(y,z)),app(nil,k) -> k,app(l,nil) -> l,app(cons(x,l),k) -> cons(x,app(l,k)),sum(cons(x,nil)) -> cons(x,nil),sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l)),sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k))))),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe09.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("gt",2),("id",1),("if",3),("minus",2),("not",1),("plus",2),("quot",2),("s",1),("true",0),("zero",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),quot(0,s(y)) -> 0,quot(s(x),s(y)) -> s(quot(minus(x,y),s(y))),minus(minus(x,y),z) -> minus(x,plus(y,z)),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe08.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("gt",2),("id",1),("if",3),("minus",2),("not",1),("plus",2),("quot",2),("s",1),("true",0),("zero",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),quot(0,s(y)) -> 0,quot(s(x),s(y)) -> s(quot(minus(x,y),s(y))),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe07.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("gt",2),("id",1),("if",3),("not",1),("plus",2),("s",1),("times",2),("true",0),("zero",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [times(x,plus(y,s(z))) -> plus(times(x,plus(y,times(s(z),0))),times(x,s(z))),times(x,0) -> 0,times(x,s(y)) -> plus(times(x,y),x),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe06.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("false",0),("gt",2),("id",1),("if",3),("not",1),("plus",2),("s",1),("times",2),("true",0),("zero",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [times(x,plus(y,1)) -> plus(times(x,plus(y,times(1,0))),x),times(x,1) -> x,times(x,0) -> 0,plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe05.trs" :
TRS {trsSignature = fromList [("0",0),("double",1),("false",0),("gt",2),("id",1),("if",3),("minus",2),("not",1),("plus",2),("s",1),("true",0),("zero",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),double(0) -> 0,double(s(x)) -> s(s(double(x))),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe03.trs" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("false",0),("gt",2),("id",1),("if",3),("nil",0),("not",1),("plus",2),("pred",1),("s",1),("sum",1),("true",0),("zero",0)], trsVariables = fromList ["k","l","x","y"], trsRMap = [], trsRules = [app(nil,k) -> k,app(l,nil) -> l,app(cons(x,l),k) -> cons(x,app(l,k)),sum(cons(x,nil)) -> cons(x,nil),sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l)),sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k))))),sum(plus(cons(0,x),cons(y,l))) -> pred(sum(cons(s(x),cons(y,l)))),pred(cons(s(x),nil)) -> cons(x,nil),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe02.trs" :
TRS {trsSignature = fromList [("app",2),("cons",2),("false",0),("gt",2),("id",1),("if",3),("nil",0),("not",1),("plus",2),("s",1),("sum",1),("true",0),("zero",0)], trsVariables = fromList ["k","l","x","y"], trsRMap = [], trsRules = [app(nil,k) -> k,app(l,nil) -> l,app(cons(x,l),k) -> cons(x,app(l,k)),sum(cons(x,nil)) -> cons(x,nil),sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l)),sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k))))),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\wiehe01.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("gt",2),("id",1),("if",3),("not",1),("plus",2),("s",1),("times",2),("true",0),("zero",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [times(x,0) -> 0,times(x,s(y)) -> plus(times(x,y),x),plus(s(x),s(y)) -> s(s(plus(if(gt(x,y),x,y),if(not(gt(x,y)),id(x),id(y))))),plus(s(x),x) -> plus(if(gt(x,x),id(x),id(x)),s(x)),plus(zero,y) -> y,plus(id(x),s(y)) -> s(plus(x,if(gt(s(y),y),y,s(y)))),id(x) -> x,if(true,x,y) -> x,if(false,x,y) -> y,not(x) -> if(x,false,true),gt(s(x),zero) -> true,gt(zero,y) -> false,gt(s(x),s(y)) -> gt(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann41.trs" :
TRS {trsSignature = fromList [("0",0),("cons",2),("false",0),("ge",2),("gen",3),("generate",2),("if",4),("nil",0),("s",1),("sum",1),("times",2),("true",0)], trsVariables = fromList ["x","xs","y","z"], trsRMap = [], trsRules = [times(x,y) -> sum(generate(x,y)),generate(x,y) -> gen(x,y,0),gen(x,y,z) -> if(ge(z,x),x,y,z),if(true,x,y,z) -> nil,if(false,x,y,z) -> cons(y,gen(x,y,s(z))),sum(nil) -> 0,sum(cons(0,xs)) -> sum(xs),sum(cons(s(x),xs)) -> s(sum(cons(x,xs))),ge(x,0) -> true,ge(0,s(y)) -> false,ge(s(x),s(y)) -> ge(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann40.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("id_inc",1),("if",3),("nonZero",1),("p",1),("rand",2),("random",1),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [nonZero(0) -> false,nonZero(s(x)) -> true,p(0) -> 0,p(s(x)) -> x,id_inc(x) -> x,id_inc(x) -> s(x),random(x) -> rand(x,0),rand(x,y) -> if(nonZero(x),x,y),if(false,x,y) -> y,if(true,x,y) -> rand(p(x),id_inc(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann39.trs" :
TRS {trsSignature = fromList [("0",0),("a",2),("cons",0),("div2",0),("divides",0),("false",0),("filter",0),("if",0),("nil",0),("not",0),("not2",0),("s",0),("sieve",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [a(a(divides,0),a(s,y)) -> true,a(a(divides,a(s,x)),a(s,y)) -> a(a(a(div2,x),a(s,y)),y),a(a(a(div2,x),y),0) -> a(a(divides,x),y),a(a(a(div2,0),y),a(s,z)) -> false,a(a(a(div2,a(s,x)),y),a(s,z)) -> a(a(a(div2,x),y),z),a(a(filter,f),nil) -> nil,a(a(filter,f),a(a(cons,x),xs)) -> a(a(a(if,a(f,x)),x),a(a(filter,f),xs)),a(a(a(if,true),x),xs) -> a(a(cons,x),xs),a(a(a(if,false),x),xs) -> xs,a(a(not,f),x) -> a(not2,a(f,x)),a(not2,true) -> false,a(not2,false) -> true,a(sieve,nil) -> nil,a(sieve,a(a(cons,x),xs)) -> a(a(cons,x),a(sieve,a(a(filter,a(not,a(divides,x))),xs)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann38.trs" :
TRS {trsSignature = fromList [("0",0),("cons",2),("false",0),("head",1),("if",5),("length",1),("lt",2),("nil",0),("rev",4),("reverse",1),("s",1),("tail",1),("true",0),("undefined",0)], trsVariables = fromList ["accu","l","orig","x","y"], trsRMap = [], trsRules = [length(nil) -> 0,length(cons(x,l)) -> s(length(l)),lt(x,0) -> false,lt(0,s(y)) -> true,lt(s(x),s(y)) -> lt(x,y),head(cons(x,l)) -> x,head(nil) -> undefined,tail(nil) -> nil,tail(cons(x,l)) -> l,reverse(l) -> rev(0,l,nil,l),rev(x,l,accu,orig) -> if(lt(x,length(orig)),x,l,accu,orig),if(true,x,l,accu,orig) -> rev(s(x),tail(l),cons(head(l),accu),orig),if(false,x,l,accu,orig) -> accu], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann37.trs" :
TRS {trsSignature = fromList [("0",0),("and",2),("edge",3),("empty",0),("eq",2),("false",0),("if1",6),("if2",6),("le",2),("or",2),("reach",5),("reachable",3),("s",1),("size",1),("true",0)], trsVariables = fromList ["b1","b2","b3","c","i","j","u","v","x","y"], trsRMap = [], trsRules = [eq(0,0) -> true,eq(0,s(x)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),or(true,y) -> true,or(false,y) -> y,and(true,y) -> y,and(false,y) -> false,size(empty) -> 0,size(edge(x,y,i)) -> s(size(i)),le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),reachable(x,y,i) -> reach(x,y,0,i,i),reach(x,y,c,i,j) -> if1(eq(x,y),x,y,c,i,j),if1(true,x,y,c,i,j) -> true,if1(false,x,y,c,i,j) -> if2(le(c,size(j)),x,y,c,i,j),if2(false,x,y,c,i,j) -> false,if2(true,x,y,c,empty,j) -> false,if2(true,x,y,c,edge(u,v,i),j) -> or(if2(true,x,y,c,i,j),and(eq(x,u),reach(v,y,s(c),j,j)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann36.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("if",6),("if2",6),("le",2),("quot",2),("quotIter",5),("quotZeroErro",0),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y","z"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),quot(x,0) -> quotZeroErro,quot(x,s(y)) -> quotIter(x,s(y),0,0,0),quotIter(x,s(y),z,u,v) -> if(le(x,z),x,s(y),z,u,v),if(true,x,y,z,u,v) -> v,if(false,x,y,z,u,v) -> if2(le(y,s(u)),x,y,s(z),s(u),v),if2(false,x,y,z,u,v) -> quotIter(x,y,z,u,v),if2(true,x,y,z,u,v) -> quotIter(x,y,z,0,s(v))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann35.trs" :
TRS {trsSignature = fromList [("0",0),("a",2),("append",0),("cons",0),("false",0),("filter",0),("if",0),("le",0),("nil",0),("not",0),("not2",0),("qs",0),("s",0),("true",0)], trsVariables = fromList ["b","f","x","xs","y","ys"], trsRMap = [], trsRules = [a(a(append,nil),ys) -> ys,a(a(append,a(a(cons,x),xs)),ys) -> a(a(cons,x),a(a(append,xs),ys)),a(a(filter,f),nil) -> nil,a(a(filter,f),a(a(cons,x),xs)) -> a(a(a(if,a(f,x)),x),a(a(filter,f),xs)),a(a(le,0),y) -> true,a(a(le,a(s,x)),0) -> false,a(a(le,a(s,x)),a(s,y)) -> a(a(le,x),y),a(a(a(if,true),x),xs) -> a(a(cons,x),xs),a(a(a(if,false),x),xs) -> xs,a(a(not,f),b) -> a(not2,a(f,b)),a(not2,true) -> false,a(not2,false) -> true,a(qs,nil) -> nil,a(qs,a(a(cons,x),xs)) -> a(a(append,a(qs,a(a(filter,a(le,x)),xs))),a(a(cons,x),a(qs,a(a(filter,a(not,a(le,x))),xs))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann34.trs" :
TRS {trsSignature = fromList [("0",0),("div",3),("divides",2),("false",0),("gt",2),("if1",3),("if2",3),("prime",1),("s",1),("test",2),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [gt(s(x),0) -> true,gt(0,y) -> false,gt(s(x),s(y)) -> gt(x,y),divides(x,y) -> div(x,y,y),div(0,0,z) -> true,div(0,s(x),z) -> false,div(s(x),0,s(z)) -> div(s(x),s(z),s(z)),div(s(x),s(y),z) -> div(x,y,z),prime(x) -> test(x,s(s(0))),test(x,y) -> if1(gt(x,y),x,y),if1(true,x,y) -> if2(divides(x,y),x,y),if1(false,x,y) -> true,if2(true,x,y) -> false,if2(false,x,y) -> test(x,s(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann33.trs" :
TRS {trsSignature = fromList [("0",0),("ack",2),("cons",2),("d",1),("false",0),("if",2),("le",2),("nil",0),("nr",0),("numbers",0),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [numbers -> d(0),d(x) -> if(le(x,nr),x),if(true,x) -> cons(x,d(s(x))),if(false,x) -> nil,le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),nr -> ack(s(s(s(s(s(s(0)))))),0),ack(0,x) -> s(x),ack(s(x),0) -> ack(x,s(0)),ack(s(x),s(y)) -> ack(x,ack(s(x),y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann32.trs" :
TRS {trsSignature = fromList [("0",0),("10",0),("cons",2),("entry",3),("false",0),("gen",1),("if1",2),("if2",2),("if3",3),("le",2),("nil",0),("plus",2),("s",1),("table",0),("times",2),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [table -> gen(s(0)),gen(x) -> if1(le(x,10),x),if1(false,x) -> nil,if1(true,x) -> if2(x,x),if2(x,y) -> if3(le(y,10),x,y),if3(true,x,y) -> cons(entry(x,y,times(x,y)),if2(x,s(y))),if3(false,x,y) -> gen(s(x)),le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),times(0,y) -> 0,times(s(x),y) -> plus(y,times(x,y)),10 -> s(s(s(s(s(s(s(s(s(s(0))))))))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann31.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("if",5),("if2",5),("le",2),("mod",2),("modIter",4),("modZeroErro",0),("s",1),("true",0)], trsVariables = fromList ["u","x","y","z"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),mod(x,0) -> modZeroErro,mod(x,s(y)) -> modIter(x,s(y),0,0),modIter(x,s(y),z,u) -> if(le(x,z),x,s(y),z,u),if(true,x,y,z,u) -> u,if(false,x,y,z,u) -> if2(le(y,s(u)),x,y,s(z),s(u)),if2(false,x,y,z,u) -> modIter(x,y,z,u),if2(true,x,y,z,u) -> modIter(x,y,z,0)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann30.trs" :
TRS {trsSignature = fromList [("0",0),("add",2),("app",2),("eq",2),("false",0),("head",1),("if_min",4),("if_minsort",3),("if_rm",3),("le",2),("min",1),("minIter",3),("minsort",2),("nil",0),("null",1),("rm",2),("s",1),("tail",1),("true",0)], trsVariables = fromList ["m","n","x","y","z"], trsRMap = [], trsRules = [eq(0,0) -> true,eq(0,s(x)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),app(nil,y) -> y,app(add(n,x),y) -> add(n,app(x,y)),min(nil) -> 0,min(add(n,x)) -> minIter(add(n,x),add(n,x),0),minIter(nil,add(n,y),m) -> minIter(add(n,y),add(n,y),s(m)),minIter(add(n,x),y,m) -> if_min(le(n,m),x,y,m),if_min(true,x,y,m) -> m,if_min(false,x,y,m) -> minIter(x,y,m),head(add(n,x)) -> n,tail(add(n,x)) -> x,tail(nil) -> nil,null(nil) -> true,null(add(n,x)) -> false,rm(n,nil) -> nil,rm(n,add(m,x)) -> if_rm(eq(n,m),n,add(m,x)),if_rm(true,n,add(m,x)) -> rm(n,x),if_rm(false,n,add(m,x)) -> add(m,rm(n,x)),minsort(nil,nil) -> nil,minsort(add(n,x),y) -> if_minsort(eq(n,min(add(n,x))),add(n,x),y),if_minsort(true,add(n,x),y) -> add(n,minsort(app(rm(n,x),y),nil)),if_minsort(false,add(n,x),y) -> minsort(x,add(n,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann29.trs" :
TRS {trsSignature = fromList [("0",0),("baseError",0),("false",0),("if",5),("le",2),("log",2),("logZeroError",0),("loop",4),("plus",2),("s",1),("times",2),("true",0)], trsVariables = fromList ["b","x","y","z"], trsRMap = [], trsRules = [le(s(x),0) -> false,le(0,y) -> true,le(s(x),s(y)) -> le(x,y),plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),times(0,y) -> 0,times(s(x),y) -> plus(y,times(x,y)),log(x,0) -> baseError,log(x,s(0)) -> baseError,log(0,s(s(b))) -> logZeroError,log(s(x),s(s(b))) -> loop(s(x),s(s(b)),s(0),0),loop(x,s(s(b)),s(y),z) -> if(le(x,s(y)),x,s(s(b)),s(y),z),if(true,x,b,y,z) -> z,if(false,x,b,y,z) -> loop(x,b,times(b,y),s(z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann28i.trs" :
TRS {trsSignature = fromList [("0",0),("div",2),("div_by_zero",0),("false",0),("ge",2),("id_inc",1),("if",4),("minus",2),("s",1),("true",0)], trsVariables = fromList ["b","x","y"], trsRMap = [], trsRules = [ge(x,0) -> true,ge(0,s(y)) -> false,ge(s(x),s(y)) -> ge(x,y),minus(x,0) -> x,minus(0,y) -> 0,minus(s(x),s(y)) -> minus(x,y),id_inc(x) -> x,id_inc(x) -> s(x),div(x,y) -> if(ge(y,s(0)),ge(x,y),x,y),if(false,b,x,y) -> div_by_zero,if(true,false,x,y) -> 0,if(true,true,x,y) -> id_inc(div(minus(x,y),y))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann28.trs" :
TRS {trsSignature = fromList [("0",0),("div",2),("div_by_zero",0),("false",0),("ge",2),("id_inc",1),("if",4),("minus",2),("s",1),("true",0)], trsVariables = fromList ["b","x","y"], trsRMap = [], trsRules = [ge(x,0) -> true,ge(0,s(y)) -> false,ge(s(x),s(y)) -> ge(x,y),minus(x,0) -> x,minus(0,y) -> 0,minus(s(x),s(y)) -> minus(x,y),id_inc(x) -> x,id_inc(x) -> s(x),div(x,y) -> if(ge(y,s(0)),ge(x,y),x,y),if(false,b,x,y) -> div_by_zero,if(true,false,x,y) -> 0,if(true,true,x,y) -> id_inc(div(minus(x,y),y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann27.trs" :
TRS {trsSignature = fromList [("0",0),("cons",2),("false",0),("if",3),("int",2),("le",2),("nil",0),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),int(x,y) -> if(le(x,y),x,y),if(true,x,y) -> cons(x,int(s(x),y)),if(false,x,y) -> nil], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann26i.trs" :
TRS {trsSignature = fromList [("0",0),("div",3),("div_by_zero",0),("false",0),("ge",2),("id_inc",1),("if",5),("minus",2),("quot",2),("s",1),("true",0)], trsVariables = fromList ["b","x","y","z"], trsRMap = [], trsRules = [ge(x,0) -> true,ge(0,s(y)) -> false,ge(s(x),s(y)) -> ge(x,y),minus(x,0) -> x,minus(0,y) -> 0,minus(s(x),s(y)) -> minus(x,y),id_inc(x) -> x,id_inc(x) -> s(x),quot(x,y) -> div(x,y,0),div(x,y,z) -> if(ge(y,s(0)),ge(x,y),x,y,z),if(false,b,x,y,z) -> div_by_zero,if(true,false,x,y,z) -> z,if(true,true,x,y,z) -> div(minus(x,y),y,id_inc(z))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann26.trs" :
TRS {trsSignature = fromList [("0",0),("div",3),("div_by_zero",0),("false",0),("ge",2),("id_inc",1),("if",5),("minus",2),("quot",2),("s",1),("true",0)], trsVariables = fromList ["b","x","y","z"], trsRMap = [], trsRules = [ge(x,0) -> true,ge(0,s(y)) -> false,ge(s(x),s(y)) -> ge(x,y),minus(x,0) -> x,minus(0,y) -> 0,minus(s(x),s(y)) -> minus(x,y),id_inc(x) -> x,id_inc(x) -> s(x),quot(x,y) -> div(x,y,0),div(x,y,z) -> if(ge(y,s(0)),ge(x,y),x,y,z),if(false,b,x,y,z) -> div_by_zero,if(true,false,x,y,z) -> z,if(true,true,x,y,z) -> div(minus(x,y),y,id_inc(z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann25.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("fib",1),("fibiter",4),("if",5),("lt",2),("plus",2),("s",1),("true",0)], trsVariables = fromList ["a","b","c","x","y"], trsRMap = [], trsRules = [plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),lt(0,s(y)) -> true,lt(x,0) -> false,lt(s(x),s(y)) -> lt(x,y),fib(x) -> fibiter(x,0,0,s(0)),fibiter(b,c,x,y) -> if(lt(c,b),b,c,x,y),if(false,b,c,x,y) -> x,if(true,b,c,x,y) -> fibiter(b,s(c),y,plus(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann24.trs" :
TRS {trsSignature = fromList [("0",0),("fac",1),("false",0),("if",4),("loop",3),("lt",2),("plus",2),("s",1),("times",2),("true",0)], trsVariables = fromList ["c","x","y"], trsRMap = [], trsRules = [lt(0,s(x)) -> true,lt(x,0) -> false,lt(s(x),s(y)) -> lt(x,y),times(0,y) -> 0,times(s(x),y) -> plus(y,times(x,y)),plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),fac(x) -> loop(x,s(0),s(0)),loop(x,c,y) -> if(lt(x,c),x,c,y),if(false,x,c,y) -> loop(x,s(c),times(y,s(c))),if(true,x,c,y) -> y], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann23.trs" :
TRS {trsSignature = fromList [("0",0),("cons",2),("d",1),("digits",0),("false",0),("if",2),("le",2),("nil",0),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [digits -> d(0),d(x) -> if(le(x,s(s(s(s(s(s(s(s(s(0)))))))))),x),if(true,x) -> cons(x,d(s(x))),if(false,x) -> nil,le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann22.trs" :
TRS {trsSignature = fromList [("0",0),("double",1),("false",0),("if",4),("le",2),("log",1),("logError",0),("loop",3),("s",1),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [le(s(x),0) -> false,le(0,y) -> true,le(s(x),s(y)) -> le(x,y),double(0) -> 0,double(s(x)) -> s(s(double(x))),log(0) -> logError,log(s(x)) -> loop(s(x),s(0),0),loop(x,s(y),z) -> if(le(x,s(y)),x,s(y),z),if(true,x,y,z) -> z,if(false,x,y,z) -> loop(x,double(y),s(z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann21.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("bin2s",1),("bin2ss",2),("bug_list_not",0),("cons",2),("double",1),("eq",2),("false",0),("half",1),("if1",4),("if2",4),("log",1),("lt",2),("more",1),("nil",0),("s",1),("s2bin",1),("s2bin1",3),("s2bin2",2),("true",0)], trsVariables = fromList ["lists","x","xs","y","ys"], trsRMap = [], trsRules = [eq(0,0) -> true,eq(0,s(y)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),lt(0,s(y)) -> true,lt(x,0) -> false,lt(s(x),s(y)) -> lt(x,y),bin2s(nil) -> 0,bin2s(cons(x,xs)) -> bin2ss(x,xs),bin2ss(x,nil) -> x,bin2ss(x,cons(0,xs)) -> bin2ss(double(x),xs),bin2ss(x,cons(1,xs)) -> bin2ss(s(double(x)),xs),half(0) -> 0,half(s(0)) -> 0,half(s(s(x))) -> s(half(x)),log(0) -> 0,log(s(0)) -> 0,log(s(s(x))) -> s(log(half(s(s(x))))),more(nil) -> nil,more(cons(xs,ys)) -> cons(cons(0,xs),cons(cons(1,xs),cons(xs,ys))),s2bin(x) -> s2bin1(x,0,cons(nil,nil)),s2bin1(x,y,lists) -> if1(lt(y,log(x)),x,y,lists),if1(true,x,y,lists) -> s2bin1(x,s(y),more(lists)),if1(false,x,y,lists) -> s2bin2(x,lists),s2bin2(x,nil) -> bug_list_not,s2bin2(x,cons(xs,ys)) -> if2(eq(x,bin2s(xs)),x,xs,ys),if2(true,x,xs,ys) -> xs,if2(false,x,xs,ys) -> s2bin2(x,ys)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann20.trs" :
TRS {trsSignature = fromList [("0",0),("aver",2),("average",2),("double",1),("false",0),("gt",2),("if",3),("plus",2),("s",1),("true",0)], trsVariables = fromList ["sum","x","y","z"], trsRMap = [], trsRules = [gt(0,y) -> false,gt(s(x),0) -> true,gt(s(x),s(y)) -> gt(x,y),plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),double(0) -> 0,double(s(x)) -> s(s(double(x))),average(x,y) -> aver(plus(x,y),0),aver(sum,z) -> if(gt(sum,double(z)),sum,z),if(true,sum,z) -> aver(sum,s(z)),if(false,sum,z) -> z], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann19.trs" :
TRS {trsSignature = fromList [("0",0),("10",0),("1024",0),("1024_1",1),("double",1),("false",0),("if",2),("lt",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [1024 -> 1024_1(0),1024_1(x) -> if(lt(x,10),x),if(true,x) -> double(1024_1(s(x))),if(false,x) -> s(0),lt(0,s(y)) -> true,lt(x,0) -> false,lt(s(x),s(y)) -> lt(x,y),double(0) -> 0,double(s(x)) -> s(s(double(x))),10 -> double(s(double(s(s(0)))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann18.trs" :
TRS {trsSignature = fromList [("0",0),("append",2),("cons",2),("empty",1),("eq",2),("false",0),("head",1),("if",4),("if_min",2),("if_replace",4),("le",2),("min",1),("nil",0),("replace",3),("s",1),("sort",1),("sortIter",2),("tail",1),("true",0)], trsVariables = fromList ["k","m","n","x","y","z"], trsRMap = [], trsRules = [eq(0,0) -> true,eq(0,s(m)) -> false,eq(s(n),0) -> false,eq(s(n),s(m)) -> eq(n,m),le(0,m) -> true,le(s(n),0) -> false,le(s(n),s(m)) -> le(n,m),min(cons(x,nil)) -> x,min(cons(n,cons(m,x))) -> if_min(le(n,m),cons(n,cons(m,x))),if_min(true,cons(n,cons(m,x))) -> min(cons(n,x)),if_min(false,cons(n,cons(m,x))) -> min(cons(m,x)),replace(n,m,nil) -> nil,replace(n,m,cons(k,x)) -> if_replace(eq(n,k),n,m,cons(k,x)),if_replace(true,n,m,cons(k,x)) -> cons(m,x),if_replace(false,n,m,cons(k,x)) -> cons(k,replace(n,m,x)),empty(nil) -> true,empty(cons(n,x)) -> false,head(cons(n,x)) -> n,tail(nil) -> nil,tail(cons(n,x)) -> x,sort(x) -> sortIter(x,nil),sortIter(x,y) -> if(empty(x),x,y,append(y,cons(min(x),nil))),if(true,x,y,z) -> y,if(false,x,y,z) -> sortIter(replace(min(x),head(x),tail(x)),z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann17.trs" :
TRS {trsSignature = fromList [("0",0),("cons",2),("empty",1),("false",0),("head",1),("if",3),("if2",2),("nil",0),("s",1),("sum",2),("tail",1),("true",0),("weight",1),("weight_undefined_error",0)], trsVariables = fromList ["b","m","n","x","y"], trsRMap = [], trsRules = [sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y)),sum(cons(0,x),y) -> sum(x,y),sum(nil,y) -> y,empty(nil) -> true,empty(cons(n,x)) -> false,tail(nil) -> nil,tail(cons(n,x)) -> x,head(cons(n,x)) -> n,weight(x) -> if(empty(x),empty(tail(x)),x),if(true,b,x) -> weight_undefined_error,if(false,b,x) -> if2(b,x),if2(true,x) -> head(x),if2(false,x) -> weight(sum(x,cons(0,tail(tail(x)))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann16.trs" :
TRS {trsSignature = fromList [("0",0),("check",1),("even",0),("half",1),("if",5),("odd",0),("p",1),("plus",2),("s",1),("times",2),("timesIter",3),("zero",0)], trsVariables = fromList ["u","x","y","z"], trsRMap = [], trsRules = [check(0) -> zero,check(s(0)) -> odd,check(s(s(0))) -> even,check(s(s(s(x)))) -> check(s(x)),half(0) -> 0,half(s(0)) -> 0,half(s(s(x))) -> s(half(x)),plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),times(x,y) -> timesIter(x,y,0),timesIter(x,y,z) -> if(check(x),x,y,z,plus(z,y)),p(s(x)) -> x,p(0) -> 0,if(zero,x,y,z,u) -> z,if(odd,x,y,z,u) -> timesIter(p(x),y,u),if(even,x,y,z,u) -> plus(timesIter(half(x),y,half(z)),timesIter(half(x),y,half(s(z))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann15.trs" :
TRS {trsSignature = fromList [("0",0),("bitIter",2),("bits",1),("false",0),("half",1),("if",3),("inc",1),("p",1),("s",1),("true",0),("zero",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [half(0) -> 0,half(s(0)) -> 0,half(s(s(x))) -> s(half(x)),inc(0) -> 0,inc(s(x)) -> s(inc(x)),zero(0) -> true,zero(s(x)) -> false,p(0) -> 0,p(s(x)) -> x,bits(x) -> bitIter(x,0),bitIter(x,y) -> if(zero(x),x,inc(y)),if(true,x,y) -> p(y),if(false,x,y) -> bitIter(half(x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann14.trs" :
TRS {trsSignature = fromList [("0",0),("cons",2),("empty",1),("false",0),("head",1),("if1",3),("if2",3),("if_int",4),("if_intlist",2),("int",2),("intlist",1),("nil",0),("p",1),("s",1),("tail",1),("true",0),("zero",1)], trsVariables = fromList ["b","x","y"], trsRMap = [], trsRules = [empty(nil) -> true,empty(cons(x,y)) -> false,tail(nil) -> nil,tail(cons(x,y)) -> y,head(cons(x,y)) -> x,zero(0) -> true,zero(s(x)) -> false,p(0) -> 0,p(s(0)) -> 0,p(s(s(x))) -> s(p(s(x))),intlist(x) -> if_intlist(empty(x),x),if_intlist(true,x) -> nil,if_intlist(false,x) -> cons(s(head(x)),intlist(tail(x))),int(x,y) -> if_int(zero(x),zero(y),x,y),if_int(true,b,x,y) -> if1(b,x,y),if_int(false,b,x,y) -> if2(b,x,y),if1(true,x,y) -> cons(0,nil),if1(false,x,y) -> cons(0,int(s(0),y)),if2(true,x,y) -> nil,if2(false,x,y) -> intlist(int(p(x),p(y)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann13.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("if",4),("if2",3),("inc",1),("le",2),("log",1),("log2",2),("log_undefined",0),("minus",2),("quot",2),("s",1),("true",0)], trsVariables = fromList ["b","x","y"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),inc(0) -> 0,inc(s(x)) -> s(inc(x)),minus(0,y) -> 0,minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),quot(0,s(y)) -> 0,quot(s(x),s(y)) -> s(quot(minus(x,y),s(y))),log(x) -> log2(x,0),log2(x,y) -> if(le(x,0),le(x,s(0)),x,inc(y)),if(true,b,x,y) -> log_undefined,if(false,b,x,y) -> if2(b,x,y),if2(true,x,s(y)) -> y,if2(false,x,y) -> log2(quot(x,s(s(0))),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann12.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("half",1),("if",3),("inc",1),("le",2),("log",1),("log2",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [half(0) -> 0,half(s(0)) -> 0,half(s(s(x))) -> s(half(x)),le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),inc(0) -> 0,inc(s(x)) -> s(inc(x)),log(x) -> log2(x,0),log2(x,y) -> if(le(x,s(0)),x,inc(y)),if(true,x,s(y)) -> y,if(false,x,y) -> log2(half(x),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann11.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("id",1),("if2",4),("if3",3),("if_mod",5),("le",2),("minus",2),("mod",2),("s",1),("true",0),("zero",1)], trsVariables = fromList ["b1","b2","x","y"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),zero(0) -> true,zero(s(x)) -> false,id(0) -> 0,id(s(x)) -> s(id(x)),minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),mod(x,y) -> if_mod(zero(x),zero(y),le(y,x),id(x),id(y)),if_mod(true,b1,b2,x,y) -> 0,if_mod(false,b1,b2,x,y) -> if2(b1,b2,x,y),if2(true,b2,x,y) -> 0,if2(false,b2,x,y) -> if3(b2,x,y),if3(true,x,y) -> mod(minus(x,y),s(y)),if3(false,x,y) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann10.trs" :
TRS {trsSignature = fromList [("0",0),("cons",2),("conv",1),("conviter",2),("false",0),("half",1),("if",3),("lastbit",1),("nil",0),("s",1),("true",0),("zero",1)], trsVariables = fromList ["l","x"], trsRMap = [], trsRules = [half(0) -> 0,half(s(0)) -> 0,half(s(s(x))) -> s(half(x)),lastbit(0) -> 0,lastbit(s(0)) -> s(0),lastbit(s(s(x))) -> lastbit(x),zero(0) -> true,zero(s(x)) -> false,conv(x) -> conviter(x,cons(0,nil)),conviter(x,l) -> if(zero(x),x,l),if(true,x,l) -> l,if(false,x,l) -> conviter(half(x),cons(lastbit(x),l))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann09.trs" :
TRS {trsSignature = fromList [("0",0),("ack",2),("div",2),("false",0),("minus",2),("p",1),("plus",2),("quot",3),("s",1),("true",0),("zero",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [minus(minus(x,y),z) -> minus(x,plus(y,z)),minus(0,y) -> 0,minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),plus(0,y) -> y,plus(s(x),y) -> plus(x,s(y)),plus(s(x),y) -> s(plus(y,x)),zero(s(x)) -> false,zero(0) -> true,p(s(x)) -> x,p(0) -> 0,div(x,y) -> quot(x,y,0),quot(s(x),s(y),z) -> quot(minus(p(ack(0,x)),y),s(y),s(z)),quot(0,s(y),z) -> z,ack(0,x) -> s(x),ack(0,x) -> plus(x,s(0)),ack(s(x),0) -> ack(x,s(0)),ack(s(x),s(y)) -> ack(x,ack(s(x),y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann08.trs" :
TRS {trsSignature = fromList [("cons",2),("empty",1),("false",0),("head",1),("if",3),("last",2),("nil",0),("rev",1),("rev1",2),("rev2",2),("tail",1),("true",0)], trsVariables = fromList ["l","x","y"], trsRMap = [], trsRules = [empty(nil) -> true,empty(cons(x,l)) -> false,head(cons(x,l)) -> x,tail(nil) -> nil,tail(cons(x,l)) -> l,rev(nil) -> nil,rev(cons(x,l)) -> cons(rev1(x,l),rev2(x,l)),last(x,l) -> if(empty(l),x,l),if(true,x,l) -> x,if(false,x,l) -> last(head(l),tail(l)),rev2(x,nil) -> nil,rev2(x,cons(y,l)) -> rev(cons(x,rev2(y,l)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann07.trs" :
TRS {trsSignature = fromList [("0",0),("cadr",1),("car",1),("cddr",1),("cons",2),("false",0),("if",3),("if2",2),("ifplus",3),("iftimes",3),("isZero",1),("nil",0),("p",1),("plus",2),("prod",1),("s",1),("shorter",2),("times",2),("true",0)], trsVariables = fromList ["b","k","l","x","y"], trsRMap = [], trsRules = [car(cons(x,l)) -> x,cddr(nil) -> nil,cddr(cons(x,nil)) -> nil,cddr(cons(x,cons(y,l))) -> l,cadr(cons(x,cons(y,l))) -> y,isZero(0) -> true,isZero(s(x)) -> false,plus(x,y) -> ifplus(isZero(x),x,y),ifplus(true,x,y) -> y,ifplus(false,x,y) -> s(plus(p(x),y)),times(x,y) -> iftimes(isZero(x),x,y),iftimes(true,x,y) -> 0,iftimes(false,x,y) -> plus(y,times(p(x),y)),p(s(x)) -> x,p(0) -> 0,shorter(nil,y) -> true,shorter(cons(x,l),0) -> false,shorter(cons(x,l),s(y)) -> shorter(l,y),prod(l) -> if(shorter(l,0),shorter(l,s(0)),l),if(true,b,l) -> s(0),if(false,b,l) -> if2(b,l),if2(true,l) -> car(l),if2(false,l) -> prod(cons(times(car(l),cadr(l)),cddr(l)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann06.trs" :
TRS {trsSignature = fromList [("0",0),("average",2),("false",0),("if",6),("if2",5),("if3",4),("if4",3),("le",2),("p",1),("s",1),("true",0)], trsVariables = fromList ["b1","b2","b3","x","y"], trsRMap = [], trsRules = [p(s(x)) -> x,p(0) -> 0,le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),average(x,y) -> if(le(x,0),le(y,0),le(y,s(0)),le(y,s(s(0))),x,y),if(true,b1,b2,b3,x,y) -> if2(b1,b2,b3,x,y),if(false,b1,b2,b3,x,y) -> average(p(x),s(y)),if2(true,b2,b3,x,y) -> 0,if2(false,b2,b3,x,y) -> if3(b2,b3,x,y),if3(true,b3,x,y) -> 0,if3(false,b3,x,y) -> if4(b3,x,y),if4(true,x,y) -> s(0),if4(false,x,y) -> average(s(x),p(p(y)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann05.trs" :
TRS {trsSignature = fromList [("concat",2),("cons",2),("false",0),("if1",4),("if2",3),("isLeaf",1),("leaf",0),("left",1),("less_leaves",2),("right",1),("true",0)], trsVariables = fromList ["b","u","v","w","y","z"], trsRMap = [], trsRules = [isLeaf(leaf) -> true,isLeaf(cons(u,v)) -> false,left(cons(u,v)) -> u,right(cons(u,v)) -> v,concat(leaf,y) -> y,concat(cons(u,v),y) -> cons(u,concat(v,y)),less_leaves(u,v) -> if1(isLeaf(u),isLeaf(v),u,v),if1(b,true,u,v) -> false,if1(b,false,u,v) -> if2(b,u,v),if2(true,u,v) -> true,if2(false,u,v) -> less_leaves(concat(left(u),right(u)),concat(left(v),right(v)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann04.trs" :
TRS {trsSignature = fromList [("0",0),("edge",3),("empty",0),("eq",2),("false",0),("from",1),("if1",8),("if2",7),("if3",6),("if4",5),("isEmpty",1),("or",2),("reach",4),("rest",1),("s",1),("to",1),("true",0),("union",2)], trsVariables = fromList ["b1","b2","b3","h","i","u","v","x","y"], trsRMap = [], trsRules = [eq(0,0) -> true,eq(0,s(x)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),or(true,y) -> true,or(false,y) -> y,union(empty,h) -> h,union(edge(x,y,i),h) -> edge(x,y,union(i,h)),isEmpty(empty) -> true,isEmpty(edge(x,y,i)) -> false,from(edge(x,y,i)) -> x,to(edge(x,y,i)) -> y,rest(edge(x,y,i)) -> i,rest(empty) -> empty,reach(x,y,i,h) -> if1(eq(x,y),isEmpty(i),eq(x,from(i)),eq(y,to(i)),x,y,i,h),if1(true,b1,b2,b3,x,y,i,h) -> true,if1(false,b1,b2,b3,x,y,i,h) -> if2(b1,b2,b3,x,y,i,h),if2(true,b2,b3,x,y,i,h) -> false,if2(false,b2,b3,x,y,i,h) -> if3(b2,b3,x,y,i,h),if3(false,b3,x,y,i,h) -> reach(x,y,rest(i),edge(from(i),to(i),h)),if3(true,b3,x,y,i,h) -> if4(b3,x,y,i,h),if4(true,x,y,i,h) -> true,if4(false,x,y,i,h) -> or(reach(x,y,rest(i),h),reach(to(i),y,union(rest(i),h),empty))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann03.trs" :
TRS {trsSignature = fromList [("add",2),("app",2),("false",0),("head",1),("if",4),("nil",0),("null",1),("reverse",1),("shuff",2),("shuffle",1),("tail",1),("true",0)], trsVariables = fromList ["n","x","y","z"], trsRMap = [], trsRules = [null(nil) -> true,null(add(n,x)) -> false,tail(add(n,x)) -> x,tail(nil) -> nil,head(add(n,x)) -> n,app(nil,y) -> y,app(add(n,x),y) -> add(n,app(x,y)),reverse(nil) -> nil,reverse(add(n,x)) -> app(reverse(x),add(n,nil)),shuffle(x) -> shuff(x,nil),shuff(x,y) -> if(null(x),x,y,app(y,add(head(x),nil))),if(true,x,y,z) -> y,if(false,x,y,z) -> shuff(reverse(tail(x)),z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann02.trs" :
TRS {trsSignature = fromList [("0",0),("add",2),("app",2),("eq",2),("false",0),("head",1),("if",4),("if2",4),("if_min",2),("if_rm",3),("le",2),("min",1),("mins",3),("minsort",1),("nil",0),("null",1),("rm",2),("s",1),("tail",1),("true",0)], trsVariables = fromList ["m","n","x","y","z"], trsRMap = [], trsRules = [eq(0,0) -> true,eq(0,s(x)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),app(nil,y) -> y,app(add(n,x),y) -> add(n,app(x,y)),min(add(n,nil)) -> n,min(add(n,add(m,x))) -> if_min(le(n,m),add(n,add(m,x))),if_min(true,add(n,add(m,x))) -> min(add(n,x)),if_min(false,add(n,add(m,x))) -> min(add(m,x)),head(add(n,x)) -> n,tail(add(n,x)) -> x,tail(nil) -> nil,null(nil) -> true,null(add(n,x)) -> false,rm(n,nil) -> nil,rm(n,add(m,x)) -> if_rm(eq(n,m),n,add(m,x)),if_rm(true,n,add(m,x)) -> rm(n,x),if_rm(false,n,add(m,x)) -> add(m,rm(n,x)),minsort(x) -> mins(x,nil,nil),mins(x,y,z) -> if(null(x),x,y,z),if(true,x,y,z) -> z,if(false,x,y,z) -> if2(eq(head(x),min(x)),x,y,z),if2(true,x,y,z) -> mins(app(rm(head(x),tail(x)),y),nil,app(z,add(head(x),nil))),if2(false,x,y,z) -> mins(tail(x),add(head(x),y),z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\thiemann01.trs" :
TRS {trsSignature = fromList [("0",0),("div",2),("false",0),("if",4),("minus",2),("p",1),("plus",2),("quot",3),("s",1),("true",0),("zero",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [minus(0,y) -> 0,minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),plus(0,y) -> y,plus(s(x),y) -> plus(x,s(y)),zero(s(x)) -> false,zero(0) -> true,p(s(x)) -> x,div(x,y) -> quot(x,y,0),quot(x,y,z) -> if(zero(x),x,y,plus(z,s(0))),if(true,x,y,z) -> p(z),if(false,x,s(y),z) -> quot(minus(x,s(y)),s(y),z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto13.trs" :
TRS {trsSignature = fromList [("0",0),("double",1),("false",0),("first",0),("greater",2),("if",4),("le",3),("s",1),("second",0),("triple",1),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [le(0,y,z) -> greater(y,z),le(s(x),0,z) -> false,le(s(x),s(y),0) -> false,le(s(x),s(y),s(z)) -> le(x,y,z),greater(x,0) -> first,greater(0,s(y)) -> second,greater(s(x),s(y)) -> greater(x,y),double(0) -> 0,double(s(x)) -> s(s(double(x))),triple(x) -> if(le(x,x,double(x)),x,0,0),if(false,x,y,z) -> true,if(first,x,y,z) -> if(le(s(x),y,s(z)),s(x),y,s(z)),if(second,x,y,z) -> if(le(s(x),s(y),z),s(x),s(y),z)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto12.trs" :
TRS {trsSignature = fromList [("0",0),("exp",2),("false",0),("ge",2),("help",5),("plus",2),("s",1),("times",2),("tower",2),("towerIter",4),("true",0)], trsVariables = fromList ["c","x","y","z"], trsRMap = [], trsRules = [plus(0,x) -> x,plus(s(x),y) -> s(plus(x,y)),times(0,y) -> 0,times(s(x),y) -> plus(y,times(x,y)),exp(x,0) -> s(0),exp(x,s(y)) -> times(x,exp(x,y)),ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y),tower(x,y) -> towerIter(0,x,y,s(0)),towerIter(c,x,y,z) -> help(ge(c,x),c,x,y,z),help(true,c,x,y,z) -> z,help(false,c,x,y,z) -> towerIter(s(c),x,y,exp(y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto11.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("help",3),("if",4),("lt",2),("plus",2),("s",1),("times",2),("true",0)], trsVariables = fromList ["c","x","y"], trsRMap = [], trsRules = [times(x,y) -> help(x,y,0),help(x,y,c) -> if(lt(c,y),x,y,c),if(true,x,y,c) -> plus(x,help(x,y,s(c))),if(false,x,y,c) -> 0,lt(0,s(x)) -> true,lt(s(x),0) -> false,lt(s(x),s(y)) -> lt(x,y),plus(x,0) -> x,plus(0,x) -> x,plus(x,s(y)) -> s(plus(x,y)),plus(s(x),y) -> s(plus(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto10.trs" :
TRS {trsSignature = fromList [("0",0),("append",2),("cons",2),("eq",2),("false",0),("ge",2),("help",4),("if",5),("length",1),("nil",0),("rev",1),("s",1),("true",0)], trsVariables = fromList ["c","l","x","y","z"], trsRMap = [], trsRules = [ge(x,0) -> true,ge(0,s(y)) -> false,ge(s(x),s(y)) -> ge(x,y),rev(x) -> if(x,eq(0,length(x)),nil,0,length(x)),if(x,true,z,c,l) -> z,if(x,false,z,c,l) -> help(s(c),l,x,z),help(c,l,cons(x,y),z) -> if(append(y,cons(x,nil)),ge(c,l),cons(x,z),c,l),append(nil,y) -> y,append(cons(x,y),z) -> cons(x,append(y,z)),length(nil) -> 0,length(cons(x,y)) -> s(length(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto09.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("help",3),("if",4),("lt",2),("plus",2),("quot",2),("s",1),("true",0)], trsVariables = fromList ["c","x","y"], trsRMap = [], trsRules = [lt(x,0) -> false,lt(0,s(y)) -> true,lt(s(x),s(y)) -> lt(x,y),plus(x,0) -> x,plus(x,s(y)) -> s(plus(x,y)),quot(x,s(y)) -> help(x,s(y),0),help(x,s(y),c) -> if(lt(c,x),x,s(y),c),if(true,x,s(y),c) -> s(help(x,s(y),plus(c,s(y)))),if(false,x,s(y),c) -> 0], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto08.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("help",3),("if",4),("le",2),("minus",2),("mod",2),("plus",2),("s",1),("true",0)], trsVariables = fromList ["c","x","y"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),minus(x,0) -> x,minus(0,s(y)) -> 0,minus(s(x),s(y)) -> minus(x,y),plus(x,0) -> x,plus(x,s(y)) -> s(plus(x,y)),mod(s(x),0) -> 0,mod(x,s(y)) -> help(x,s(y),0),help(x,s(y),c) -> if(le(c,x),x,s(y),c),if(true,x,s(y),c) -> help(x,s(y),plus(c,s(y))),if(false,x,s(y),c) -> minus(x,minus(c,s(y)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto07.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("help",3),("lt",2),("minus",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [lt(0,s(x)) -> true,lt(x,0) -> false,lt(s(x),s(y)) -> lt(x,y),minus(x,y) -> help(lt(y,x),x,y),help(true,x,y) -> s(minus(x,s(y))),help(false,x,y) -> 0], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto06.trs" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("false",0),("ge",2),("greater",2),("helpa",4),("helpb",4),("helpc",3),("if",5),("length",1),("nil",0),("plus",2),("s",1),("smaller",2),("true",0)], trsVariables = fromList ["c","l","x","y","ys","z","zs"], trsRMap = [], trsRules = [app(x,y) -> helpa(0,plus(length(x),length(y)),x,y),plus(x,0) -> x,plus(x,s(y)) -> s(plus(x,y)),length(nil) -> 0,length(cons(x,y)) -> s(length(y)),helpa(c,l,ys,zs) -> if(ge(c,l),c,l,ys,zs),ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y),if(true,c,l,ys,zs) -> nil,if(false,c,l,ys,zs) -> helpb(c,l,greater(ys,zs),smaller(ys,zs)),greater(ys,zs) -> helpc(ge(length(ys),length(zs)),ys,zs),smaller(ys,zs) -> helpc(ge(length(ys),length(zs)),zs,ys),helpc(true,ys,zs) -> ys,helpc(false,ys,zs) -> zs,helpb(c,l,cons(y,ys),zs) -> cons(y,helpa(s(c),l,ys,zs))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto05.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("false",0),("half",1),("help",2),("ifa",2),("ifb",3),("logZeroError",0),("logarithm",1),("lt",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [lt(0,s(x)) -> true,lt(x,0) -> false,lt(s(x),s(y)) -> lt(x,y),logarithm(x) -> ifa(lt(0,x),x),ifa(true,x) -> help(x,1),ifa(false,x) -> logZeroError,help(x,y) -> ifb(lt(y,x),x,y),ifb(true,x,y) -> help(half(x),s(y)),ifb(false,x,y) -> y,half(0) -> 0,half(s(0)) -> 0,half(s(s(x))) -> s(half(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto04.trs" :
TRS {trsSignature = fromList [("0",0),("false",0),("fib",1),("fibo",1),("if",5),("lt",2),("s",1),("sum",2),("true",0)], trsVariables = fromList ["a","b","c","x","y"], trsRMap = [], trsRules = [lt(0,s(x)) -> true,lt(x,0) -> false,lt(s(x),s(y)) -> lt(x,y),fibo(0) -> fib(0),fibo(s(0)) -> fib(s(0)),fibo(s(s(x))) -> sum(fibo(s(x)),fibo(x)),fib(0) -> s(0),fib(s(0)) -> s(0),fib(s(s(x))) -> if(true,0,s(s(x)),0,0),if(true,c,s(s(x)),a,b) -> if(lt(s(c),s(s(x))),s(c),s(s(x)),b,c),if(false,c,s(s(x)),a,b) -> sum(fibo(a),fibo(b)),sum(x,0) -> x,sum(x,s(y)) -> s(sum(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto03.trs" :
TRS {trsSignature = fromList [("0",0),("fac",1),("false",0),("help",2),("if",3),("lt",2),("s",1),("times",2),("true",0)], trsVariables = fromList ["c","x","y"], trsRMap = [], trsRules = [lt(0,s(x)) -> true,lt(x,0) -> false,lt(s(x),s(y)) -> lt(x,y),fac(x) -> help(x,0),help(x,c) -> if(lt(c,x),x,c),if(true,x,c) -> times(s(c),help(x,s(c))),if(false,x,c) -> s(0)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto02.trs" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("false",0),("ge",2),("helpa",4),("helpb",4),("if",5),("length",1),("nil",0),("plus",2),("s",1),("take",3),("true",0),("xs",0)], trsVariables = fromList ["c","l","x","y","ys","z","zs"], trsRMap = [], trsRules = [app(x,y) -> helpa(0,plus(length(x),length(y)),x,y),plus(x,0) -> x,plus(x,s(y)) -> s(plus(x,y)),length(nil) -> 0,length(cons(x,y)) -> s(length(y)),helpa(c,l,ys,zs) -> if(ge(c,l),c,l,ys,zs),ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y),if(true,c,l,ys,zs) -> nil,if(false,c,l,ys,zs) -> helpb(c,l,ys,zs),take(0,cons(x,xs),ys) -> x,take(0,nil,cons(y,ys)) -> y,take(s(c),cons(x,xs),ys) -> take(c,xs,ys),take(s(c),nil,cons(y,ys)) -> take(c,nil,ys),helpb(c,l,ys,zs) -> cons(take(c,ys,zs),helpa(s(c),l,ys,zs))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\otto01.trs" :
TRS {trsSignature = fromList [("0",0),("addList",2),("cons",2),("false",0),("if",5),("le",2),("len",1),("min",2),("nil",0),("s",1),("sum",2),("take",2),("true",0)], trsVariables = fromList ["c","x","xs","y","ys","z"], trsRMap = [], trsRules = [min(0,y) -> 0,min(s(x),0) -> 0,min(s(x),s(y)) -> min(x,y),len(nil) -> 0,len(cons(x,xs)) -> s(len(xs)),sum(x,0) -> x,sum(x,s(y)) -> s(sum(x,y)),le(0,x) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),take(0,cons(y,ys)) -> y,take(s(x),cons(y,ys)) -> take(x,ys),addList(x,y) -> if(le(0,min(len(x),len(y))),0,x,y,nil),if(false,c,x,y,z) -> z,if(true,c,xs,ys,z) -> if(le(s(c),min(len(xs),len(ys))),s(c),xs,ys,cons(sum(take(c,xs),take(c,ys)),z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\kabasci06.trs" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("div",0),("id",0),("map",0),("minus",0),("nil",0),("p",0),("s",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(minus,x),0) -> x,app(app(minus,app(s,x)),app(s,y)) -> app(app(minus,app(p,app(s,x))),app(p,app(s,y))),app(p,app(s,x)) -> x,app(app(div,0),app(s,y)) -> 0,app(app(div,app(s,x)),app(s,y)) -> app(s,app(app(div,app(app(minus,x),app(id,y))),app(s,y))),app(id,x) -> x,app(id,x) -> app(s,app(s,app(s,x))),app(id,app(p,x)) -> app(id,app(s,app(id,x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\kabasci05.trs" :
TRS {trsSignature = fromList [("0",0),("cons",2),("gcd",2),("max",2),("min",2),("minus",2),("s",1),("transform",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [min(x,0) -> 0,min(0,y) -> 0,min(s(x),s(y)) -> s(min(x,y)),max(x,0) -> x,max(0,y) -> y,max(s(x),s(y)) -> s(max(x,y)),minus(x,0) -> x,minus(s(x),s(y)) -> s(minus(x,y)),gcd(s(x),s(y)) -> gcd(minus(max(x,y),min(x,transform(y))),s(min(x,y))),transform(x) -> s(s(x)),transform(cons(x,y)) -> cons(cons(x,x),x),transform(cons(x,y)) -> y,transform(s(x)) -> s(s(transform(x))),cons(x,y) -> y,cons(x,cons(y,s(z))) -> cons(y,x),cons(cons(x,z),s(y)) -> transform(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\kabasci04.trs" :
TRS {trsSignature = fromList [("0",0),("any",1),("gcd",2),("max",2),("min",2),("minus",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [min(x,0) -> 0,min(0,y) -> 0,min(s(x),s(y)) -> s(min(x,y)),max(x,0) -> x,max(0,y) -> y,max(s(x),s(y)) -> s(max(x,y)),minus(x,0) -> x,minus(s(x),s(y)) -> s(minus(x,any(y))),gcd(s(x),s(y)) -> gcd(minus(max(x,y),min(x,y)),s(min(x,y))),any(s(x)) -> s(s(any(x))),any(x) -> x], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\kabasci03.trs" :
TRS {trsSignature = fromList [("0",0),("c",2),("h",3),("s",1),("t",1)], trsVariables = fromList ["w","x","y","z"], trsRMap = [], trsRules = [h(c(x,y),c(s(z),z),t(w)) -> h(z,c(y,x),t(t(c(x,c(y,t(w)))))),h(x,c(y,z),t(w)) -> h(c(s(y),x),z,t(c(t(w),w))),h(c(s(x),c(s(0),y)),z,t(x)) -> h(y,c(s(0),c(x,z)),t(t(c(x,s(x))))),t(t(x)) -> t(c(t(x),x)),t(x) -> x,t(x) -> c(0,c(0,c(0,c(0,c(0,x)))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\kabasci02.trs" :
TRS {trsSignature = fromList [("0",0),("div",2),("divides",2),("eq",2),("false",0),("if",3),("p",1),("plus",2),("pr",2),("prime",1),("quot",3),("s",1),("times",2),("true",0),("zero",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [p(0) -> 0,p(s(x)) -> x,plus(x,0) -> x,plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),plus(s(x),y) -> s(plus(p(s(x)),y)),plus(x,s(y)) -> s(plus(x,p(s(y)))),times(0,y) -> 0,times(s(0),y) -> y,times(s(x),y) -> plus(y,times(x,y)),div(0,y) -> 0,div(x,y) -> quot(x,y,y),quot(zero(y),s(y),z) -> 0,quot(s(x),s(y),z) -> quot(x,y,z),quot(x,0,s(z)) -> s(div(x,s(z))),div(div(x,y),z) -> div(x,times(zero(y),z)),eq(0,0) -> true,eq(s(x),0) -> false,eq(0,s(y)) -> false,eq(s(x),s(y)) -> eq(x,y),divides(y,x) -> eq(x,times(div(x,y),y)),prime(s(s(x))) -> pr(s(s(x)),s(x)),pr(x,s(0)) -> true,pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y)),if(true,x,y) -> false,if(false,x,y) -> pr(x,y),zero(div(x,x)) -> x,zero(divides(x,x)) -> x,zero(times(x,x)) -> x,zero(quot(x,x,x)) -> x,zero(s(x)) -> if(eq(x,s(0)),plus(zero(0),0),s(plus(0,zero(0))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\kabasci01.trs" :
TRS {trsSignature = fromList [("0",0),("active",1),("any",1),("cons",2),("eq",2),("false",0),("inf",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("take",2),("top",1),("true",0)], trsVariables = fromList ["L","X","X1","X2","Y"], trsRMap = [], trsRules = [active(eq(0,0)) -> mark(true),active(eq(s(X),s(Y))) -> mark(eq(X,Y)),active(eq(X,Y)) -> mark(false),active(inf(X)) -> mark(cons(X,inf(s(X)))),active(take(0,X)) -> mark(nil),active(take(s(X),cons(Y,L))) -> mark(cons(Y,take(X,L))),active(length(nil)) -> mark(0),active(length(cons(X,L))) -> mark(s(length(L))),active(inf(X)) -> inf(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(length(X)) -> length(active(X)),inf(mark(X)) -> mark(inf(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),length(mark(X)) -> mark(length(X)),proper(eq(X1,X2)) -> eq(proper(X1),proper(X2)),proper(0) -> ok(0),proper(true) -> ok(true),proper(s(X)) -> s(proper(X)),proper(false) -> ok(false),proper(inf(X)) -> inf(proper(X)),proper(cons(any(X1),X2)) -> cons(any(any(proper(X1))),any(proper(X2))),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(length(X)) -> length(proper(X)),eq(ok(X1),ok(X2)) -> ok(eq(X1,X2)),s(ok(X)) -> ok(s(X)),inf(ok(X)) -> ok(inf(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),length(ok(X)) -> ok(length(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X)),any(X) -> s(X),any(proper(X)) -> any(any(any(X)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade17.trs" :
TRS {trsSignature = fromList [("0",0),("cond",3),("double",1),("false",0),("le",2),("log",2),("plus",2),("s",1),("square",1),("true",0)], trsVariables = fromList ["l","m","n","u","v","x","y"], trsRMap = [], trsRules = [log(x,s(s(y))) -> cond(le(x,s(s(y))),x,y),cond(true,x,y) -> s(0),cond(false,x,y) -> double(log(x,square(s(s(y))))),le(0,v) -> true,le(s(u),0) -> false,le(s(u),s(v)) -> le(u,v),double(0) -> 0,double(s(x)) -> s(s(double(x))),square(0) -> 0,square(s(x)) -> s(plus(square(x),double(x))),plus(n,0) -> n,plus(n,s(m)) -> s(plus(n,m))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade16.trs" :
TRS {trsSignature = fromList [("0",0),("cond",3),("cons",2),("false",0),("ge",2),("length",1),("nil",0),("nthtail",2),("s",1),("tail",1),("true",0)], trsVariables = fromList ["l","n","u","v","x"], trsRMap = [], trsRules = [nthtail(n,l) -> cond(ge(n,length(l)),n,l),cond(true,n,l) -> l,cond(false,n,l) -> tail(nthtail(s(n),l)),tail(nil) -> nil,tail(cons(x,l)) -> l,length(nil) -> 0,length(cons(x,l)) -> s(length(l)),ge(u,0) -> true,ge(0,s(v)) -> false,ge(s(u),s(v)) -> ge(u,v)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade15.trs" :
TRS {trsSignature = fromList [("0",0),("cond1",3),("cond2",3),("cons",2),("equal",2),("false",0),("gt",2),("if",3),("max",1),("member",2),("nil",0),("or",2),("s",1),("sort",1),("st",2),("true",0)], trsVariables = fromList ["l","m","n","u","v","x","y"], trsRMap = [], trsRules = [sort(l) -> st(0,l),st(n,l) -> cond1(member(n,l),n,l),cond1(true,n,l) -> cons(n,st(s(n),l)),cond1(false,n,l) -> cond2(gt(n,max(l)),n,l),cond2(true,n,l) -> nil,cond2(false,n,l) -> st(s(n),l),member(n,nil) -> false,member(n,cons(m,l)) -> or(equal(n,m),member(n,l)),or(x,true) -> true,or(x,false) -> x,equal(0,0) -> true,equal(s(x),0) -> false,equal(0,s(y)) -> false,equal(s(x),s(y)) -> equal(x,y),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v),max(nil) -> 0,max(cons(u,l)) -> if(gt(u,max(l)),u,max(l)),if(true,u,v) -> u,if(false,u,v) -> v], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade14.trs" :
TRS {trsSignature = fromList [("0",0),("cond1",3),("cond2",3),("diff",2),("equal",2),("false",0),("gt",2),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [diff(x,y) -> cond1(equal(x,y),x,y),cond1(true,x,y) -> 0,cond1(false,x,y) -> cond2(gt(x,y),x,y),cond2(true,x,y) -> s(diff(x,s(y))),cond2(false,x,y) -> s(diff(s(x),y)),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v),equal(0,0) -> true,equal(s(x),0) -> false,equal(0,s(y)) -> false,equal(s(x),s(y)) -> equal(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade13t.trs" :
TRS {trsSignature = fromList [("0",0),("cond",4),("d",3),("div",2),("false",0),("ge",2),("plus",2),("s",1),("true",0)], trsVariables = fromList ["m","n","u","v","x","y","z"], trsRMap = [], trsRules = [div(x,s(y)) -> d(x,s(y),0),d(x,s(y),z) -> cond(ge(x,z),x,y,z),cond(true,x,y,z) -> s(d(x,s(y),plus(s(y),z))),cond(false,x,y,z) -> 0,ge(u,0) -> true,ge(0,s(v)) -> false,ge(s(u),s(v)) -> ge(u,v),plus(n,0) -> n,plus(n,s(m)) -> s(plus(n,m))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade13.trs" :
TRS {trsSignature = fromList [("0",0),("cond",4),("d",3),("div",2),("false",0),("ge",2),("plus",2),("s",1),("true",0)], trsVariables = fromList ["m","n","u","v","x","y","z"], trsRMap = [], trsRules = [div(x,s(y)) -> d(x,s(y),0),d(x,s(y),z) -> cond(ge(x,z),x,y,z),cond(true,x,y,z) -> s(d(x,s(y),plus(s(y),z))),cond(false,x,y,z) -> 0,ge(u,0) -> true,ge(0,s(v)) -> false,ge(s(u),s(v)) -> ge(u,v),plus(n,0) -> n,plus(n,s(m)) -> s(plus(n,m)),plus(plus(n,m),u) -> plus(n,plus(m,u))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade12t.trs" :
TRS {trsSignature = fromList [("0",0),("and",2),("double",1),("f",3),("false",0),("gt",2),("plus",2),("s",1),("true",0)], trsVariables = fromList ["m","n","u","v","x","y"], trsRMap = [], trsRules = [f(true,x,y) -> f(and(gt(x,y),gt(y,s(s(0)))),plus(s(0),x),double(y)),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v),and(x,true) -> x,and(x,false) -> false,plus(n,0) -> n,plus(n,s(m)) -> s(plus(n,m)),double(0) -> 0,double(s(x)) -> s(s(double(x)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade12.trs" :
TRS {trsSignature = fromList [("0",0),("and",2),("double",1),("f",3),("false",0),("gt",2),("plus",2),("s",1),("true",0)], trsVariables = fromList ["m","n","u","v","x","y"], trsRMap = [], trsRules = [f(true,x,y) -> f(and(gt(x,y),gt(y,s(s(0)))),plus(s(0),x),double(y)),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v),and(x,true) -> x,and(x,false) -> false,plus(n,0) -> n,plus(n,s(m)) -> s(plus(n,m)),plus(plus(n,m),u) -> plus(n,plus(m,u)),double(0) -> 0,double(s(x)) -> s(s(double(x)))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade11.trs" :
TRS {trsSignature = fromList [("0",0),("f",3),("false",0),("gt",2),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [f(true,x,y) -> f(gt(x,y),s(x),s(s(y))),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade10.trs" :
TRS {trsSignature = fromList [("0",0),("f",3),("false",0),("gt",2),("s",1),("true",0),("trunc",1)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [f(true,x,y) -> f(gt(x,y),trunc(x),s(y)),trunc(0) -> 0,trunc(s(0)) -> 0,trunc(s(s(x))) -> s(s(trunc(x))),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade09.trs" :
TRS {trsSignature = fromList [("0",0),("f",3),("false",0),("gt",2),("round",1),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [f(true,x,y) -> f(gt(x,y),x,round(s(y))),round(0) -> 0,round(s(0)) -> s(s(0)),round(s(s(x))) -> s(s(round(x))),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade08.trs" :
TRS {trsSignature = fromList [("0",0),("and",2),("f",4),("false",0),("gt",2),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y","z"], trsRMap = [], trsRules = [f(true,x,y,z) -> f(and(gt(x,y),gt(x,z)),x,s(y),z),f(true,x,y,z) -> f(and(gt(x,y),gt(x,z)),x,y,s(z)),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v),and(x,true) -> x,and(x,false) -> false], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade07.trs" :
TRS {trsSignature = fromList [("0",0),("f",4),("false",0),("g",4),("gt",2),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y","z"], trsRMap = [], trsRules = [f(true,x,y,z) -> g(gt(x,y),x,y,z),g(true,x,y,z) -> f(gt(x,z),x,s(y),z),g(true,x,y,z) -> f(gt(x,z),x,y,s(z)),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade06.trs" :
TRS {trsSignature = fromList [("0",0),("f",4),("false",0),("gt",2),("plus",2),("s",1),("true",0)], trsVariables = fromList ["m","n","u","v","x","y","z"], trsRMap = [], trsRules = [f(true,x,y,z) -> f(gt(x,plus(y,z)),x,s(y),z),f(true,x,y,z) -> f(gt(x,plus(y,z)),x,y,s(z)),plus(n,0) -> n,plus(n,s(m)) -> s(plus(n,m)),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade05t.trs" :
TRS {trsSignature = fromList [("0",0),("cond",3),("equal",2),("false",0),("min",2),("minus",2),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [minus(x,y) -> cond(equal(min(x,y),y),x,y),cond(true,x,y) -> s(minus(x,s(y))),min(0,v) -> 0,min(u,0) -> 0,min(s(u),s(v)) -> s(min(u,v)),equal(0,0) -> true,equal(s(x),0) -> false,equal(0,s(y)) -> false,equal(s(x),s(y)) -> equal(x,y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade05.trs" :
TRS {trsSignature = fromList [("0",0),("cond",3),("equal",2),("false",0),("min",2),("minus",2),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [minus(x,x) -> 0,minus(x,y) -> cond(equal(min(x,y),y),x,y),cond(true,x,y) -> s(minus(x,s(y))),min(0,v) -> 0,min(u,0) -> 0,min(s(u),s(v)) -> s(min(u,v)),equal(0,0) -> true,equal(s(x),0) -> false,equal(0,s(y)) -> false,equal(s(x),s(y)) -> equal(x,y)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade04t.trs" :
TRS {trsSignature = fromList [("0",0),("cond",3),("min",2),("minus",2),("s",1)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [minus(x,y) -> cond(min(x,y),x,y),cond(y,x,y) -> s(minus(x,s(y))),min(0,v) -> 0,min(u,0) -> 0,min(s(u),s(v)) -> s(min(u,v))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade04.trs" :
TRS {trsSignature = fromList [("0",0),("cond",3),("min",2),("minus",2),("s",1)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [minus(x,x) -> 0,minus(x,y) -> cond(min(x,y),x,y),cond(y,x,y) -> s(minus(x,s(y))),min(0,v) -> 0,min(u,0) -> 0,min(s(u),s(v)) -> s(min(u,v))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade03.trs" :
TRS {trsSignature = fromList [("0",0),("cond",3),("false",0),("ge",2),("minus",2),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [minus(x,y) -> cond(ge(x,s(y)),x,y),cond(false,x,y) -> 0,cond(true,x,y) -> s(minus(x,s(y))),ge(u,0) -> true,ge(0,s(v)) -> false,ge(s(u),s(v)) -> ge(u,v)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\passed\\SchneiderKamp\\cade01.trs" :
TRS {trsSignature = fromList [("0",0),("cond",3),("false",0),("gt",2),("minus",2),("s",1),("true",0)], trsVariables = fromList ["u","v","x","y"], trsRMap = [], trsRules = [minus(x,y) -> cond(gt(x,y),x,y),cond(false,x,y) -> 0,cond(true,x,y) -> s(minus(x,s(y))),gt(0,v) -> false,gt(s(u),0) -> true,gt(s(u),s(v)) -> gt(u,v)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}
