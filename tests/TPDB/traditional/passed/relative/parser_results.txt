
++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-wl1o.trs" :
TRS {trsSignature = fromList [("bot",0),("check",1),("new",1),("old",1),("top",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [top(old(x)) -> top(check(x)),top(new(x)) -> top(check(x)),bot ->= new(bot),check(new(x)) ->= new(check(x)),check(old(x)) ->= old(check(x)),check(old(x)) ->= old(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-wl1nz.trs" :
TRS {trsSignature = fromList [("bot",0),("check",1),("new",1),("ok",1),("old",1),("top",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [top(ok(new(x))) -> top(check(x)),top(ok(old(x))) -> top(check(x)),bot ->= new(bot),check(new(x)) ->= new(check(x)),check(old(x)) ->= old(check(x)),check(old(x)) ->= ok(old(x)),new(ok(x)) ->= ok(new(x)),old(ok(x)) ->= ok(old(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-rw5.trs" :
TRS {trsSignature = fromList [("New",0),("Old",0),("PR",0),("PW",0),("R",2),("RB",0),("RT",0),("W",2),("WB",0),("WT",0),("check",1),("ok",1),("read",2),("sys",3),("top",1),("write",2)], trsVariables = fromList ["p","r1","r2","t","w1","x","y","z"], trsRMap = [], trsRules = [RB ->= R(New,RB),WB ->= W(New,WB),R(x,RT) -> RT,W(x,WT) -> WT,top(ok(sys(read(r1,R(t,r2)),write(WT,WB),p))) ->= top(check(sys(read(R(t,r1),r2),write(WT,WB),p))),top(ok(sys(read(RT,RB),write(WT,W(t,w1)),p))) ->= top(check(sys(read(RT,RB),write(W(t,WT),w1),p))),top(ok(sys(read(r1,R(t,r2)),write(WT,w1),PR))) ->= top(check(sys(read(R(t,r1),r2),write(WT,w1),PW))),top(ok(sys(read(RT,r2),write(WT,W(t,w1)),PW))) ->= top(check(sys(read(RT,r2),write(W(t,WT),w1),PR))),check(Old) ->= ok(Old),check(R(x,y)) ->= R(check(x),y),check(R(x,y)) ->= R(x,check(y)),check(W(x,y)) ->= W(check(x),y),check(W(x,y)) ->= W(x,check(y)),check(read(x,y)) ->= read(check(x),y),check(read(x,y)) ->= read(x,check(y)),check(write(x,y)) ->= write(check(x),y),check(write(x,y)) ->= write(x,check(y)),check(sys(x,y,z)) ->= sys(check(x),y,z),check(sys(x,y,z)) ->= sys(x,check(y),z),check(sys(x,y,z)) ->= sys(x,y,check(z)),R(ok(x),y) ->= ok(R(x,y)),R(x,ok(y)) ->= ok(R(x,y)),W(ok(x),y) ->= ok(W(x,y)),W(x,ok(y)) ->= ok(W(x,y)),read(ok(x),y) ->= ok(read(x,y)),read(x,ok(y)) ->= ok(read(x,y)),write(ok(x),y) ->= ok(write(x,y)),write(x,ok(y)) ->= ok(write(x,y)),sys(ok(x),y,z) ->= ok(sys(x,y,z)),sys(x,ok(y),z) ->= ok(sys(x,y,z)),sys(x,y,ok(z)) ->= ok(sys(x,y,z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-rw2.trs" :
TRS {trsSignature = fromList [("PR",0),("PW",0),("R",0),("RAn",1),("RAo",1),("RIn",1),("RIo",1),("Rw",0),("W",0),("WAn",1),("WAo",1),("WIn",1),("WIo",1),("Ww",0),("check",1),("ok",1),("system",5),("top",1)], trsVariables = fromList ["p","r","v1","v2","v3","v4","v5","x","y"], trsRMap = [], trsRules = [Rw ->= RIn(Rw),Ww ->= WIn(Ww),RAo(R) -> R,RAn(R) -> R,WAo(W) -> W,WAn(W) -> W,top(ok(system(r,W,RIo(x),Ww,p))) ->= top(check(system(RAo(r),W,x,Ww,p))),top(ok(system(r,W,RIn(x),Ww,p))) ->= top(check(system(RAn(r),W,x,Ww,p))),top(ok(system(R,W,Rw,WIn(y),p))) ->= top(check(system(R,WAn(W),Rw,y,p))),top(ok(system(R,W,Rw,WIo(y),p))) ->= top(check(system(R,WAo(W),Rw,y,p))),top(ok(system(r,W,RIo(x),y,PR))) ->= top(check(system(RAo(r),W,x,y,PW))),top(ok(system(r,W,RIn(x),y,PR))) ->= top(check(system(RAn(r),W,x,y,PW))),top(ok(system(R,W,x,WIo(y),PW))) ->= top(check(system(R,WAo(W),x,y,PR))),top(ok(system(R,W,x,WIn(y),PW))) ->= top(check(system(R,WAn(W),x,y,PR))),check(RIo(x)) ->= ok(RIo(x)),check(RAo(x)) ->= RAo(check(x)),check(RAn(x)) ->= RAn(check(x)),check(WAo(x)) ->= WAo(check(x)),check(WAn(x)) ->= WAn(check(x)),check(RIo(x)) ->= RIo(check(x)),check(RIn(x)) ->= RIn(check(x)),check(WIo(x)) ->= WIo(check(x)),check(WIn(x)) ->= WIn(check(x)),check(system(v1,v2,v3,v4,v5)) ->= system(check(v1),v2,v3,v4,v5),check(system(v1,v2,v3,v4,v5)) ->= system(v1,check(v2),v3,v4,v5),check(system(v1,v2,v3,v4,v5)) ->= system(v1,v2,check(v3),v4,v5),check(system(v1,v2,v3,v4,v5)) ->= system(v1,v2,v3,check(v4),v5),check(system(v1,v2,v3,v4,v5)) ->= system(v1,v2,v3,v4,check(v5)),RAo(ok(x)) ->= ok(RAo(x)),RAn(ok(x)) ->= ok(RAn(x)),WAo(ok(x)) ->= ok(WAo(x)),WAn(ok(x)) ->= ok(WAn(x)),RIo(ok(x)) ->= ok(RIo(x)),RIn(ok(x)) ->= ok(RIn(x)),WIo(ok(x)) ->= ok(WIo(x)),WIn(ok(x)) ->= ok(WIn(x)),system(ok(v1),v2,v3,v4,v5) ->= ok(system(v1,v2,v3,v4,v5)),system(v1,ok(v2),v3,v4,v5) ->= ok(system(v1,v2,v3,v4,v5)),system(v1,v2,ok(v3),v4,v5) ->= ok(system(v1,v2,v3,v4,v5)),system(v1,v2,v3,ok(v4),v5) ->= ok(system(v1,v2,v3,v4,v5)),system(v1,v2,v3,v4,ok(v5)) ->= ok(system(v1,v2,v3,v4,v5))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-pwl.trs" :
TRS {trsSignature = fromList [("bot",0),("check",1),("new",1),("ok",1),("old",1),("queue",2),("top",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [top(ok(queue(old(x),bot))) -> top(check(queue(x,bot))),top(ok(queue(new(x),bot))) -> top(check(queue(x,bot))),top(ok(queue(bot,old(x)))) -> top(check(queue(bot,x))),top(ok(queue(bot,new(x)))) -> top(check(queue(bot,x))),top(ok(queue(old(x),old(y)))) -> top(check(queue(x,y))),top(ok(queue(old(x),new(y)))) -> top(check(queue(x,y))),top(ok(queue(new(x),old(y)))) -> top(check(queue(x,y))),top(ok(queue(new(x),new(y)))) -> top(check(queue(x,y))),top(ok(queue(old(x),y))) ->= top(check(queue(x,y))),top(ok(queue(new(x),y))) ->= top(check(queue(x,y))),bot ->= new(bot),check(old(x)) ->= ok(old(x)),check(new(x)) ->= new(check(x)),check(queue(x,y)) ->= queue(check(x),y),check(queue(x,y)) ->= queue(x,check(y)),old(ok(x)) ->= ok(old(x)),new(ok(x)) ->= ok(new(x)),queue(ok(x),y) ->= ok(queue(x,y)),queue(x,ok(y)) ->= ok(queue(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-me3.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("C",1),("D",1),("N1",1),("N2",1),("S1",1),("S2",1),("T1",1),("T2",1),("topA",3),("topB",3)], trsVariables = fromList ["i","x","y"], trsRMap = [], trsRules = [topB(i,N1(x),y) -> topA(1,T1(x),y),topA(i,N1(x),y) ->= topA(1,T1(x),y),topA(i,x,N2(y)) -> topB(0,x,T2(y)),topB(i,x,N2(y)) ->= topB(0,x,T2(y)),topB(i,S1(x),y) -> topA(i,N1(x),y),topA(i,S1(x),y) ->= topA(i,N1(x),y),topA(i,x,S2(y)) -> topB(i,x,N2(y)),topB(i,x,S2(y)) ->= topB(i,x,N2(y)),topA(i,N1(x),T2(y)) -> topB(i,N1(x),S2(y)),topB(i,N1(x),T2(y)) ->= topB(i,N1(x),S2(y)),topA(1,T1(x),T2(y)) -> topB(1,T1(x),S2(y)),topB(1,T1(x),T2(y)) ->= topB(1,T1(x),S2(y)),topA(i,N1(x),y) ->= topA(i,N1(C(x)),y),topB(i,x,N2(y)) ->= topB(i,x,N2(C(y))),topA(i,T1(x),y) ->= topA(i,T1(x),y),topB(i,x,T2(y)) ->= topB(i,x,T2(y)),topB(i,x,S2(y)) ->= topB(i,x,S2(D(y)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-me2.trs" :
TRS {trsSignature = fromList [("0",0),("1",0),("N1",0),("N2",0),("S1",0),("S2",0),("T1",0),("T2",0),("topA",3),("topB",3)], trsVariables = fromList ["i","x","y"], trsRMap = [], trsRules = [topA(i,N1,y) ->= topA(1,T1,y),topB(i,N1,y) -> topA(1,T1,y),topB(i,x,N2) ->= topB(0,x,T2),topA(i,x,N2) -> topB(0,x,T2),topA(i,S1,y) ->= topA(i,N1,y),topB(i,S1,y) -> topA(i,N1,y),topB(i,x,S2) ->= topB(i,x,N2),topA(i,x,S2) -> topB(i,x,N2),topB(i,N1,T2) ->= topB(i,N1,S2),topA(i,N1,T2) -> topB(i,N1,S2),topB(1,T1,T2) ->= topB(1,T1,S2),topA(1,T1,T2) -> topB(1,T1,S2)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-evo.trs" :
TRS {trsSignature = fromList [("B",0),("D",2),("E",0),("F",2),("N",1),("O",1),("U",2),("check",1),("top",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [top(U(x,y)) -> top(check(D(x,y))),D(x,B) -> U(x,B),F(x,U(O(y),z)) -> U(x,F(y,z)),F(x,U(N(y),z)) -> U(x,F(y,z)),D(O(x),F(y,z)) -> F(x,D(y,z)),D(N(x),F(y,z)) -> F(x,D(y,z)),F(x,U(E,y)) -> U(x,F(E,y)),D(E,F(x,y)) -> F(E,D(x,y)),E ->= N(E),check(O(x)) ->= O(x),check(U(x,y)) ->= U(check(x),y),check(U(x,y)) ->= U(x,check(y)),check(D(x,y)) ->= D(check(x),y),check(D(x,y)) ->= D(x,check(y)),check(F(x,y)) ->= F(check(x),y),check(F(x,y)) ->= F(x,check(y)),check(O(x)) ->= O(check(x)),check(N(x)) ->= N(check(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-evnz.trs" :
TRS {trsSignature = fromList [("B",0),("D",2),("E",0),("F",2),("N",1),("O",1),("U",2),("check",1),("ok",1),("top",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [top(ok(U(x,y))) -> top(check(D(x,y))),D(x,B) -> U(x,B),F(x,U(O(y),z)) -> U(x,F(y,z)),F(x,U(N(y),z)) -> U(x,F(y,z)),D(O(x),F(y,z)) -> F(x,D(y,z)),D(N(x),F(y,z)) -> F(x,D(y,z)),F(x,U(E,y)) -> U(x,F(E,y)),D(E,F(x,y)) -> F(E,D(x,y)),U(O(x),y) ->= U(x,y),U(N(x),y) ->= U(x,y),D(O(x),y) ->= D(x,y),D(N(x),y) ->= D(x,y),E ->= N(E),check(O(x)) ->= ok(O(x)),check(U(x,y)) ->= U(check(x),y),check(U(x,y)) ->= U(x,check(y)),check(D(x,y)) ->= D(check(x),y),check(D(x,y)) ->= D(x,check(y)),check(F(x,y)) ->= F(check(x),y),check(F(x,y)) ->= F(x,check(y)),check(O(x)) ->= O(check(x)),check(N(x)) ->= N(check(x)),U(ok(x),y) ->= ok(U(x,y)),U(x,ok(y)) ->= ok(U(x,y)),D(ok(x),y) ->= ok(D(x,y)),D(x,ok(y)) ->= ok(D(x,y)),F(ok(x),y) ->= ok(F(x,y)),F(x,ok(y)) ->= ok(F(x,y)),O(ok(x)) ->= ok(O(x)),N(ok(x)) ->= ok(N(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-cbo.trs" :
TRS {trsSignature = fromList [("B",0),("N",1),("O",1),("Tl",2),("Tr",2),("check",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [Tl(O(x),y) -> Tr(check(x),y),Tl(O(x),y) -> Tr(x,check(y)),Tl(N(x),y) -> Tr(check(x),y),Tl(N(x),y) -> Tr(x,check(y)),Tr(x,O(y)) -> Tl(check(x),y),Tr(x,O(y)) -> Tl(x,check(y)),Tr(x,N(y)) -> Tl(check(x),y),Tr(x,N(y)) -> Tl(x,check(y)),Tl(O(x),y) ->= Tl(check(x),y),Tl(O(x),y) ->= Tl(x,check(y)),Tl(N(x),y) ->= Tl(check(x),y),Tl(N(x),y) ->= Tl(x,check(y)),Tr(x,O(y)) ->= Tr(check(x),y),Tr(x,O(y)) ->= Tr(x,check(y)),Tr(x,N(y)) ->= Tr(check(x),y),Tr(x,N(y)) ->= Tr(x,check(y)),Tl(B,y) -> Tr(check(B),y),Tl(B,y) -> Tr(B,check(y)),Tr(x,B) -> Tl(check(x),B),Tr(x,B) -> Tl(x,check(B)),B ->= N(B),check(O(x)) ->= O(x),check(O(x)) ->= O(check(x)),check(N(x)) ->= N(check(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-cbn5.trs" :
TRS {trsSignature = fromList [("bot",0),("car",2),("check",1),("left",2),("new",0),("ok",1),("old",0),("right",2),("top",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [top(ok(left(car(x,y),z))) -> top(check(right(y,z))),top(ok(right(x,car(y,z)))) -> top(check(left(x,z))),top(ok(left(bot,x))) -> top(check(right(bot,x))),top(ok(right(x,bot))) -> top(check(left(x,bot))),top(ok(left(car(x,y),z))) ->= top(check(left(y,z))),top(ok(right(x,car(y,z)))) ->= top(check(right(x,z))),bot ->= car(new,bot),check(old) ->= ok(old),check(car(x,y)) ->= car(check(x),y),check(car(x,y)) ->= car(x,check(y)),check(left(x,y)) ->= left(check(x),y),check(left(x,y)) ->= left(x,check(y)),check(right(x,y)) ->= right(check(x),y),check(right(x,y)) ->= right(x,check(y)),car(ok(x),y) ->= ok(car(x,y)),car(x,ok(y)) ->= ok(car(x,y)),left(ok(x),y) ->= ok(left(x,y)),left(x,ok(y)) ->= ok(left(x,y)),right(ok(x),y) ->= ok(right(x,y)),right(x,ok(y)) ->= ok(right(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rtL-cbn1.trs" :
TRS {trsSignature = fromList [("B",0),("N",1),("O",1),("Tl",2),("Tr",2),("Wl",2),("Wr",2),("check",1),("ok",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [Tl(O(x),y) -> Wr(check(x),y),Tl(O(x),y) -> Wr(x,check(y)),Tl(N(x),y) -> Wr(check(x),y),Tl(N(x),y) -> Wr(x,check(y)),Tr(x,O(y)) -> Wl(check(x),y),Tr(x,O(y)) -> Wl(x,check(y)),Tr(x,N(y)) -> Wl(check(x),y),Tr(x,N(y)) -> Wl(x,check(y)),Tl(O(x),y) ->= Wl(check(x),y),Tl(O(x),y) ->= Wl(x,check(y)),Tl(N(x),y) ->= Wl(check(x),y),Tl(N(x),y) ->= Wl(x,check(y)),Tr(x,O(y)) ->= Wr(check(x),y),Tr(x,O(y)) ->= Wr(x,check(y)),Tr(x,N(y)) ->= Wr(check(x),y),Tr(x,N(y)) ->= Wr(x,check(y)),Tl(B,y) -> Wr(check(B),y),Tl(B,y) -> Wr(B,check(y)),Tr(x,B) -> Wl(check(x),B),Tr(x,B) -> Wl(x,check(B)),B ->= N(B),check(O(x)) ->= ok(O(x)),Wl(ok(x),y) ->= Tl(x,y),Wl(x,ok(y)) ->= Tl(x,y),Wr(ok(x),y) ->= Tr(x,y),Wr(x,ok(y)) ->= Tr(x,y),check(O(x)) ->= O(check(x)),check(N(x)) ->= N(check(x)),O(ok(x)) ->= ok(O(x)),N(ok(x)) ->= ok(N(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt3-9.trs" :
TRS {trsSignature = fromList [("b",0),("f",2),("l",1),("m",1),("r",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [l(m(x)) -> m(l(x)),m(r(x)) -> r(m(x)),f(m(x),y) -> f(x,m(y)),b ->= l(b),f(x,y) ->= f(x,r(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt3-8.trs" :
TRS {trsSignature = fromList [("+",2),("-",2),("0",0),("f",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [+(0,y) ->= y,+(s(x),y) ->= s(+(x,y)),-(x,0) ->= x,-(0,y) ->= 0,-(s(x),s(y)) ->= -(x,y),f(x,y) ->= f(x,+(x,y)),f(s(x),y) -> f(-(s(x),y),y)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt3-7.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("f",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(b(x),y) -> f(x,b(y)),f(x,a(y)) -> f(a(x),y),f(x,y) ->= f(a(x),y),f(x,y) ->= f(x,b(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt3-6.trs" :
TRS {trsSignature = fromList [("a",1),("b",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [b(a(x)) -> a(b(x)),a(x) ->= a(a(x)),b(x) ->= b(b(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt3-5.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(g(f(x))) -> f(g(g(g(f(x))))),g(x) ->= g(g(x)),g(x) ->= g(g(f(g(g(x))))),f(x) ->= g(g(f(g(g(x)))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt3-4.trs" :
TRS {trsSignature = fromList [("a",0),("b",0),("f",3),("g",1),("x",0)], trsVariables = fromList ["y","z"], trsRMap = [], trsRules = [f(a,g(y),z) -> f(b,g(y),g(y)),f(b,g(y),z) -> f(a,y,z),f(x,y,z) ->= f(x,y,g(z)),a -> b], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt3-3.trs" :
TRS {trsSignature = fromList [("0",0),("p",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [p(0,y) -> y,p(s(x),y) -> s(p(x,y)),p(x,y) ->= s(p(x,y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt3-2.trs" :
TRS {trsSignature = fromList [("0",0),("p",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [p(0,y) -> y,p(s(x),y) -> s(p(x,y)),p(x,y) ->= p(x,s(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt3-1.trs" :
TRS {trsSignature = fromList [("a",0),("f",3),("g",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(g(x),y,z) -> f(x,y,g(z)),f(x,y,g(z)) ->= f(x,g(y),z),f(x,a,z) ->= f(x,g(a),z),f(x,y,z) ->= f(x,y,g(z))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt2-8.trs" :
TRS {trsSignature = fromList [("act",0),("el",1),("f",2),("l",1),("nact",0),("r",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(act,y) -> f(el(nact),y),f(x,nact) -> f(x,act),act -> el(nact),l(el(x)) -> el(l(x)),el(r(x)) -> r(el(x)),nact ->= l(nact),nact ->= r(nact)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt2-7.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(g(f(x))) -> f(g(g(g(f(x))))),g(x) ->= g(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt2-6.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(f(x)) -> f(g(f(x))),g(x) ->= g(g(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt2-5.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(f(x)) -> x,f(x) ->= g(f(g(f(x))))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt2-4.trs" :
TRS {trsSignature = fromList [("a",0),("f",1),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(g(x)) -> x,a ->= h(g(f(a)))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt2-3.trs" :
TRS {trsSignature = fromList [("B1",0),("B2",0),("R",2),("T",0),("W",2)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [B1 ->= R(T,B1),B1 ->= W(T,B1),R(x,B2) -> B2,W(x,B2) -> B2], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt2-2.trs" :
TRS {trsSignature = fromList [("B1",0),("B2",0),("R",2),("T",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [B1 ->= R(T,B1),R(x,B2) -> B2], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt2-1.trs" :
TRS {trsSignature = fromList [("I",1),("T",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [T(I(x),y) -> T(x,y),T(x,y) ->= T(x,I(y))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt1-5.trs" :
TRS {trsSignature = fromList [("a",1),("b",1),("f",2),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(s(x),y) ->= f(x,s(y)),s(a(x)) -> s(b(x)),s(a(x)) ->= a(s(x)),s(b(x)) ->= b(s(x)),a(s(x)) ->= s(a(x)),b(s(x)) ->= s(b(x)),b(b(x)) -> a(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt1-4.trs" :
TRS {trsSignature = fromList [("el",1),("f",2),("l",1),("r",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(el(x),y) -> f(x,el(y)),f(x,y) ->= f(l(x),y),f(x,y) ->= f(x,r(y)),l(el(x)) ->= el(l(x)),el(r(x)) ->= r(el(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt1-3.trs" :
TRS {trsSignature = fromList [("f",1),("g",1),("t",3),("z",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [t(f(x),g(y),f(z)) -> t(z,g(x),g(y)),t(g(x),g(y),f(z)) -> t(f(y),f(z),x),f(g(x)) ->= g(f(x)),g(f(x)) ->= f(g(x)),f(f(x)) ->= g(g(x)),g(g(x)) ->= f(f(x))], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt1-2.trs" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(x) -> x,g(x) -> x,f(x) ->= g(x),g(x) ->= f(x)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}

++ File:".\\tests\\TPDB\\traditional\\not_proved_yet\\relative\\rt1-1.trs" :
TRS {trsSignature = fromList [("a",0),("f",1),("g",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(x) -> x,a ->= g(a)], trsType = TRSStandard, trsStrategy = Nothing, signatureBlock = False}
