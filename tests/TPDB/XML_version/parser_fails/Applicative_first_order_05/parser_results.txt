
++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_first_order_05\\perfect2.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("if",0),("le",0),("map",0),("minus",0),("nil",0),("perfectp",0),("s",0),("true",0)], trsVariables = fromList ["fun","u","x","xs","y","z"], trsRMap = [], trsRules = [app(app(minus,0),y) -> 0,app(app(minus,app(s,x)),0) -> app(s,x),app(app(minus,app(s,x)),app(s,y)) -> app(app(minus,x),y),app(app(le,0),y) -> true,app(app(le,app(s,x)),0) -> false,app(app(le,app(s,x)),app(s,y)) -> app(app(le,x),y),app(app(app(if,true),x),y) -> x,app(app(app(if,false),x),y) -> y,app(perfectp,0) -> false,app(perfectp,app(s,x)) -> app(app(app(app(f,x),app(s,0)),app(s,x)),app(s,x)),app(app(app(app(f,0),y),0),u) -> true,app(app(app(app(f,0),y),app(s,z)),u) -> false,app(app(app(app(f,app(s,x)),0),z),u) -> app(app(app(app(f,x),u),app(app(minus,z),app(s,x))),u),app(app(app(app(f,app(s,x)),app(s,y)),z),u) -> app(app(app(if,app(app(le,x),y)),app(app(app(app(f,app(s,x)),app(app(minus,y),x)),z),u)),app(app(app(app(f,x),u),z),u)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_first_order_05\\perfect.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("if",0),("le",0),("map",0),("minus",0),("nil",0),("perfectp",0),("s",0),("true",0)], trsVariables = fromList ["fun","u","x","xs","y","z"], trsRMap = [], trsRules = [app(perfectp,0) -> false,app(perfectp,app(s,x)) -> app(app(app(app(f,x),app(s,0)),app(s,x)),app(s,x)),app(app(app(app(f,0),y),0),u) -> true,app(app(app(app(f,0),y),app(s,z)),u) -> false,app(app(app(app(f,app(s,x)),0),z),u) -> app(app(app(app(f,x),u),app(app(minus,z),app(s,x))),u),app(app(app(app(f,app(s,x)),app(s,y)),z),u) -> app(app(app(if,app(app(le,x),y)),app(app(app(app(f,app(s,x)),app(app(minus,y),x)),z),u)),app(app(app(app(f,x),u),z),u)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_first_order_05\\motivation.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("g",0),("h",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["fun","x","xs"], trsRMap = [], trsRules = [app(g,app(h,app(g,x))) -> app(g,x),app(g,app(g,x)) -> app(g,app(h,app(g,x))),app(h,app(h,x)) -> app(h,app(app(f,app(h,x)),x)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_first_order_05\\minsort.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("del",0),("eq",0),("false",0),("filter",0),("filter2",0),("if",0),("le",0),("map",0),("min",0),("minsort",0),("nil",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(le,0),y) -> true,app(app(le,app(s,x)),0) -> false,app(app(le,app(s,x)),app(s,y)) -> app(app(le,x),y),app(app(eq,0),0) -> true,app(app(eq,0),app(s,y)) -> false,app(app(eq,app(s,x)),0) -> false,app(app(eq,app(s,x)),app(s,y)) -> app(app(eq,x),y),app(app(app(if,true),x),y) -> x,app(app(app(if,false),x),y) -> y,app(minsort,nil) -> nil,app(minsort,app(app(cons,x),y)) -> app(app(cons,app(app(min,x),y)),app(minsort,app(app(del,app(app(min,x),y)),app(app(cons,x),y)))),app(app(min,x),nil) -> x,app(app(min,x),app(app(cons,y),z)) -> app(app(app(if,app(app(le,x),y)),app(app(min,x),z)),app(app(min,y),z)),app(app(del,x),nil) -> nil,app(app(del,x),app(app(cons,y),z)) -> app(app(app(if,app(app(eq,x),y)),z),app(app(cons,y),app(app(del,x),z))),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_first_order_05\\hydra.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("copy",0),("f",0),("false",0),("filter",0),("filter2",0),("map",0),("n",0),("nil",0),("s",0),("true",0)], trsVariables = fromList ["fun","x","xs","y","z"], trsRMap = [], trsRules = [app(f,app(app(cons,nil),y)) -> y,app(f,app(app(cons,app(f,app(app(cons,nil),y))),z)) -> app(app(app(copy,n),y),z),app(app(app(copy,0),y),z) -> app(f,z),app(app(app(copy,app(s,x)),y),z) -> app(app(app(copy,x),y),app(app(cons,app(f,y)),z)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_first_order_05\\33.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("c",0),("cons",0),("d",0),("e",0),("false",0),("filter",0),("filter2",0),("g",0),("h",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(h,z),app(e,x)) -> app(app(h,app(c,z)),app(app(d,z),x)),app(app(d,z),app(app(g,0),0)) -> app(e,0),app(app(d,z),app(app(g,x),y)) -> app(app(g,app(e,x)),app(app(d,z),y)),app(app(d,app(c,z)),app(app(g,app(app(g,x),y)),0)) -> app(app(g,app(app(d,app(c,z)),app(app(g,x),y))),app(app(d,z),app(app(g,x),y))),app(app(g,app(e,x)),app(e,y)) -> app(e,app(app(g,x),y)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_first_order_05\\31.xml" :
TRS {trsSignature = fromList [("+",0),(":",0),("a",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("g",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(:,app(app(:,x),y)),z) -> app(app(:,x),app(app(:,y),z)),app(app(:,app(app(+,x),y)),z) -> app(app(+,app(app(:,x),z)),app(app(:,y),z)),app(app(:,z),app(app(+,x),app(f,y))) -> app(app(:,app(app(g,z),y)),app(app(+,x),a)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}
