
++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\RENAMED-BOOL_nosorts.xml" :
TRS {trsSignature = fromList [("U11",3),("U12",1),("U21",3),("U22",2),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("and",2),("equal",2),("false",0),("if_then_else_fi",3),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","X"], trsRMap = [], trsRules = [U11(tt,U',U) -> U12(equal(_isNotEqualTo_(U,U'),true)),U12(tt) -> false,U21(tt,B,U') -> U22(equal(_isNotEqualTo_(B,true),true),U'),U22(tt,U') -> U',_and_(A,A) -> A,_and_(A,_xor_(B,C)) -> _xor_(_and_(A,B),_and_(A,C)),_and_(false,A) -> false,_and_(true,A) -> A,_implies_(A,B) -> not_(_xor_(A,_and_(A,B))),_isEqualTo_(U,U') -> U11(tt,U',U),_isEqualTo_(U,U) -> true,_isNotEqualTo_(U,U') -> if_then_else_fi(_isEqualTo_(U,U'),false,true),_isNotEqualTo_(U,U) -> false,_or_(A,B) -> _xor_(_and_(A,B),_xor_(A,B)),_xor_(A,A) -> false,_xor_(false,A) -> A,and(tt,X) -> X,equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U21(tt,B,U'),if_then_else_fi(true,U,U') -> U,not_(A) -> _xor_(A,true),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\RENAMED-BOOL_nosorts-noand.xml" :
TRS {trsSignature = fromList [("U11",4),("U12",4),("U13",4),("U21",3),("U22",3),("U31",3),("U32",3),("U33",1),("U41",3),("U42",3),("U51",3),("U52",3),("U61",3),("U62",3),("U63",3),("U64",2),("U71",2),("U72",2),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("equal",2),("false",0),("if_then_else_fi",3),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","X"], trsRMap = [], trsRules = [U11(tt,A,B,C) -> U12(tt,A,B,C),U12(tt,A,B,C) -> U13(tt,A,B,C),U13(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U21(tt,A,B) -> U22(tt,A,B),U22(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U31(tt,U',U) -> U32(tt,U',U),U32(tt,U',U) -> U33(equal(_isNotEqualTo_(U,U'),true)),U33(tt) -> false,U41(tt,U',U) -> U42(tt,U',U),U42(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U51(tt,A,B) -> U52(tt,A,B),U52(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U61(tt,B,U') -> U62(tt,B,U'),U62(tt,B,U') -> U63(tt,B,U'),U63(tt,B,U') -> U64(equal(_isNotEqualTo_(B,true),true),U'),U64(tt,U') -> U',U71(tt,U) -> U72(tt,U),U72(tt,U) -> U,_and_(A,A) -> A,_and_(A,_xor_(B,C)) -> U11(tt,A,B,C),_and_(false,A) -> false,_and_(true,A) -> A,_implies_(A,B) -> U21(tt,A,B),_isEqualTo_(U,U') -> U31(tt,U',U),_isEqualTo_(U,U) -> true,_isNotEqualTo_(U,U') -> U41(tt,U',U),_isNotEqualTo_(U,U) -> false,_or_(A,B) -> U51(tt,A,B),_xor_(A,A) -> false,_xor_(false,A) -> A,equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U61(tt,B,U'),if_then_else_fi(true,U,U') -> U71(tt,U),not_(A) -> _xor_(A,true),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\RENAMED-BOOL_nokinds.xml" :
TRS {trsSignature = fromList [("U101",3),("U11",2),("U111",1),("U121",2),("U131",3),("U132",2),("U141",2),("U151",2),("U21",4),("U31",1),("U41",2),("U51",3),("U61",3),("U62",1),("U71",1),("U81",3),("U91",1),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("and",2),("equal",2),("false",0),("if_then_else_fi",3),("isBool",1),("isS",1),("isUniversal",1),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","V1","V2","X"], trsRMap = [], trsRules = [U101(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U11(tt,A) -> A,U111(tt) -> false,U121(tt,A) -> A,U131(tt,B,U') -> U132(equal(_isNotEqualTo_(B,true),true),U'),U132(tt,U') -> U',U141(tt,U) -> U,U151(tt,A) -> _xor_(A,true),U21(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U31(tt) -> false,U41(tt,A) -> A,U51(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U61(tt,U',U) -> U62(equal(_isNotEqualTo_(U,U'),true)),U62(tt) -> false,U71(tt) -> true,U81(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U91(tt) -> false,_and_(A,A) -> U11(isBool(A),A),_and_(A,_xor_(B,C)) -> U21(and(isBool(A),and(isBool(B),isBool(C))),A,B,C),_and_(false,A) -> U31(isBool(A)),_and_(true,A) -> U41(isBool(A),A),_implies_(A,B) -> U51(and(isBool(A),isBool(B)),A,B),_isEqualTo_(U,U') -> U61(and(isS(U'),isS(U)),U',U),_isEqualTo_(U,U) -> U71(isS(U)),_isNotEqualTo_(U,U') -> U81(and(isS(U'),isS(U)),U',U),_isNotEqualTo_(U,U) -> U91(isS(U)),_or_(A,B) -> U101(and(isBool(A),isBool(B)),A,B),_xor_(A,A) -> U111(isBool(A)),_xor_(false,A) -> U121(isBool(A),A),and(tt,X) -> X,equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U131(and(isBool(B),and(isS(U'),isS(U))),B,U'),if_then_else_fi(true,U,U') -> U141(and(isS(U'),isS(U)),U),isBool(false) -> tt,isBool(true) -> tt,isBool(_and_(V1,V2)) -> and(isBool(V1),isBool(V2)),isBool(_implies_(V1,V2)) -> and(isBool(V1),isBool(V2)),isBool(_isEqualTo_(V1,V2)) -> and(isUniversal(V1),isUniversal(V2)),isBool(_isNotEqualTo_(V1,V2)) -> and(isUniversal(V1),isUniversal(V2)),isBool(_or_(V1,V2)) -> and(isBool(V1),isBool(V2)),isBool(_xor_(V1,V2)) -> and(isBool(V1),isBool(V2)),isBool(not_(V1)) -> isBool(V1),not_(A) -> U151(isBool(A),A),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\RENAMED-BOOL_nokinds-noand.xml" :
TRS {trsSignature = fromList [("U101",3),("U102",3),("U11",2),("U111",1),("U121",2),("U131",4),("U132",4),("U133",3),("U134",2),("U141",2),("U142",2),("U151",2),("U152",1),("U161",2),("U162",1),("U171",2),("U172",1),("U181",2),("U182",1),("U191",2),("U192",1),("U201",2),("U202",1),("U21",4),("U211",1),("U22",4),("U221",2),("U23",4),("U31",1),("U41",2),("U51",3),("U52",3),("U61",3),("U62",3),("U63",1),("U71",1),("U81",3),("U82",3),("U91",1),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("equal",2),("false",0),("if_then_else_fi",3),("isBool",1),("isS",1),("isUniversal",1),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","V1","V2","X"], trsRMap = [], trsRules = [U101(tt,A,B) -> U102(isBool(B),A,B),U102(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U11(tt,A) -> A,U111(tt) -> false,U121(tt,A) -> A,U131(tt,B,U',U) -> U132(isS(U'),B,U',U),U132(tt,B,U',U) -> U133(isS(U),B,U'),U133(tt,B,U') -> U134(equal(_isNotEqualTo_(B,true),true),U'),U134(tt,U') -> U',U141(tt,U) -> U142(isS(U),U),U142(tt,U) -> U,U151(tt,V2) -> U152(isBool(V2)),U152(tt) -> tt,U161(tt,V2) -> U162(isBool(V2)),U162(tt) -> tt,U171(tt,V2) -> U172(isUniversal(V2)),U172(tt) -> tt,U181(tt,V2) -> U182(isUniversal(V2)),U182(tt) -> tt,U191(tt,V2) -> U192(isBool(V2)),U192(tt) -> tt,U201(tt,V2) -> U202(isBool(V2)),U202(tt) -> tt,U21(tt,A,B,C) -> U22(isBool(B),A,B,C),U211(tt) -> tt,U22(tt,A,B,C) -> U23(isBool(C),A,B,C),U221(tt,A) -> _xor_(A,true),U23(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U31(tt) -> false,U41(tt,A) -> A,U51(tt,A,B) -> U52(isBool(B),A,B),U52(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U61(tt,U',U) -> U62(isS(U),U',U),U62(tt,U',U) -> U63(equal(_isNotEqualTo_(U,U'),true)),U63(tt) -> false,U71(tt) -> true,U81(tt,U',U) -> U82(isS(U),U',U),U82(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U91(tt) -> false,_and_(A,A) -> U11(isBool(A),A),_and_(A,_xor_(B,C)) -> U21(isBool(A),A,B,C),_and_(false,A) -> U31(isBool(A)),_and_(true,A) -> U41(isBool(A),A),_implies_(A,B) -> U51(isBool(A),A,B),_isEqualTo_(U,U') -> U61(isS(U'),U',U),_isEqualTo_(U,U) -> U71(isS(U)),_isNotEqualTo_(U,U') -> U81(isS(U'),U',U),_isNotEqualTo_(U,U) -> U91(isS(U)),_or_(A,B) -> U101(isBool(A),A,B),_xor_(A,A) -> U111(isBool(A)),_xor_(false,A) -> U121(isBool(A),A),equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U131(isBool(B),B,U',U),if_then_else_fi(true,U,U') -> U141(isS(U'),U),isBool(false) -> tt,isBool(true) -> tt,isBool(_and_(V1,V2)) -> U151(isBool(V1),V2),isBool(_implies_(V1,V2)) -> U161(isBool(V1),V2),isBool(_isEqualTo_(V1,V2)) -> U171(isUniversal(V1),V2),isBool(_isNotEqualTo_(V1,V2)) -> U181(isUniversal(V1),V2),isBool(_or_(V1,V2)) -> U191(isBool(V1),V2),isBool(_xor_(V1,V2)) -> U201(isBool(V1),V2),isBool(not_(V1)) -> U211(isBool(V1)),not_(A) -> U221(isBool(A),A),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\RENAMED-BOOL_complete.xml" :
TRS {trsSignature = fromList [("U101",3),("U11",2),("U111",1),("U121",2),("U131",3),("U132",2),("U141",2),("U151",3),("U152",2),("U153",1),("U161",3),("U162",2),("U163",1),("U171",3),("U172",2),("U173",1),("U181",3),("U182",2),("U183",1),("U191",2),("U192",1),("U201",2),("U21",4),("U31",1),("U41",2),("U51",3),("U61",3),("U62",1),("U71",1),("U81",3),("U91",1),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("and",2),("equal",2),("false",0),("if_then_else_fi",3),("isBool",1),("isBoolKind",1),("isS",1),("isSKind",1),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","V1","V2","X"], trsRMap = [], trsRules = [U101(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U11(tt,A) -> A,U111(tt) -> false,U121(tt,A) -> A,U131(tt,B,U') -> U132(equal(_isNotEqualTo_(B,true),true),U'),U132(tt,U') -> U',U141(tt,U) -> U,U151(tt,V1,V2) -> U152(isBool(V1),V2),U152(tt,V2) -> U153(isBool(V2)),U153(tt) -> tt,U161(tt,V1,V2) -> U162(isBool(V1),V2),U162(tt,V2) -> U163(isBool(V2)),U163(tt) -> tt,U171(tt,V1,V2) -> U172(isBool(V1),V2),U172(tt,V2) -> U173(isBool(V2)),U173(tt) -> tt,U181(tt,V1,V2) -> U182(isBool(V1),V2),U182(tt,V2) -> U183(isBool(V2)),U183(tt) -> tt,U191(tt,V1) -> U192(isBool(V1)),U192(tt) -> tt,U201(tt,A) -> _xor_(A,true),U21(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U31(tt) -> false,U41(tt,A) -> A,U51(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U61(tt,U',U) -> U62(equal(_isNotEqualTo_(U,U'),true)),U62(tt) -> false,U71(tt) -> true,U81(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U91(tt) -> false,_and_(A,A) -> U11(and(isBool(A),isBoolKind(A)),A),_and_(A,_xor_(B,C)) -> U21(and(and(isBool(A),isBoolKind(A)),and(and(isBool(B),isBoolKind(B)),and(isBool(C),isBoolKind(C)))),A,B,C),_and_(false,A) -> U31(and(isBool(A),isBoolKind(A))),_and_(true,A) -> U41(and(isBool(A),isBoolKind(A)),A),_implies_(A,B) -> U51(and(and(isBool(A),isBoolKind(A)),and(isBool(B),isBoolKind(B))),A,B),_isEqualTo_(U,U') -> U61(and(and(isS(U'),isSKind(U')),and(isS(U),isSKind(U))),U',U),_isEqualTo_(U,U) -> U71(and(isS(U),isSKind(U))),_isNotEqualTo_(U,U') -> U81(and(and(isS(U'),isSKind(U')),and(isS(U),isSKind(U))),U',U),_isNotEqualTo_(U,U) -> U91(and(isS(U),isSKind(U))),_or_(A,B) -> U101(and(and(isBool(A),isBoolKind(A)),and(isBool(B),isBoolKind(B))),A,B),_xor_(A,A) -> U111(and(isBool(A),isBoolKind(A))),_xor_(false,A) -> U121(and(isBool(A),isBoolKind(A)),A),and(tt,X) -> X,equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U131(and(and(isBool(B),isBoolKind(B)),and(and(isS(U'),isSKind(U')),and(isS(U),isSKind(U)))),B,U'),if_then_else_fi(true,U,U') -> U141(and(and(isS(U'),isSKind(U')),and(isS(U),isSKind(U))),U),isBool(false) -> tt,isBool(true) -> tt,isBool(_and_(V1,V2)) -> U151(and(isBoolKind(V1),isBoolKind(V2)),V1,V2),isBool(_implies_(V1,V2)) -> U161(and(isBoolKind(V1),isBoolKind(V2)),V1,V2),isBool(_isEqualTo_(V1,V2)) -> tt,isBool(_isNotEqualTo_(V1,V2)) -> tt,isBool(_or_(V1,V2)) -> U171(and(isBoolKind(V1),isBoolKind(V2)),V1,V2),isBool(_xor_(V1,V2)) -> U181(and(isBoolKind(V1),isBoolKind(V2)),V1,V2),isBool(not_(V1)) -> U191(isBoolKind(V1),V1),isBoolKind(false) -> tt,isBoolKind(true) -> tt,isBoolKind(_and_(V1,V2)) -> and(isBoolKind(V1),isBoolKind(V2)),isBoolKind(_implies_(V1,V2)) -> and(isBoolKind(V1),isBoolKind(V2)),isBoolKind(_isEqualTo_(V1,V2)) -> tt,isBoolKind(_isNotEqualTo_(V1,V2)) -> tt,isBoolKind(_or_(V1,V2)) -> and(isBoolKind(V1),isBoolKind(V2)),isBoolKind(_xor_(V1,V2)) -> and(isBoolKind(V1),isBoolKind(V2)),isBoolKind(not_(V1)) -> isBoolKind(V1),not_(A) -> U201(and(isBool(A),isBoolKind(A)),A),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\RENAMED-BOOL_complete-noand.xml" :
TRS {trsSignature = fromList [("U101",3),("U102",3),("U103",3),("U104",3),("U11",2),("U111",2),("U112",1),("U12",2),("U121",2),("U122",2),("U131",4),("U132",4),("U133",4),("U134",4),("U135",4),("U136",3),("U137",2),("U141",3),("U142",2),("U143",2),("U144",2),("U151",3),("U152",3),("U153",3),("U154",3),("U155",2),("U156",1),("U161",3),("U162",3),("U163",3),("U164",3),("U165",2),("U166",1),("U171",3),("U172",3),("U173",3),("U174",3),("U175",2),("U176",1),("U181",3),("U182",3),("U183",3),("U184",3),("U185",2),("U186",1),("U191",2),("U192",2),("U193",1),("U201",2),("U202",1),("U21",4),("U211",2),("U212",1),("U22",4),("U221",2),("U222",1),("U23",4),("U231",2),("U232",1),("U24",4),("U241",1),("U25",4),("U251",2),("U252",2),("U26",4),("U31",2),("U32",1),("U41",2),("U42",2),("U51",3),("U52",3),("U53",3),("U54",3),("U61",3),("U62",3),("U63",3),("U64",3),("U65",1),("U71",2),("U72",1),("U81",3),("U82",3),("U83",3),("U84",3),("U91",2),("U92",1),("_and_",2),("_implies_",2),("_isEqualTo_",2),("_isNotEqualTo_",2),("_or_",2),("_xor_",2),("equal",2),("false",0),("if_then_else_fi",3),("isBool",1),("isBoolKind",1),("isS",1),("isSKind",1),("not_",1),("true",0),("tt",0)], trsVariables = fromList ["A","B","C","U","U'","V1","V2","X"], trsRMap = [], trsRules = [U101(tt,A,B) -> U102(isBoolKind(A),A,B),U102(tt,A,B) -> U103(isBool(B),A,B),U103(tt,A,B) -> U104(isBoolKind(B),A,B),U104(tt,A,B) -> _xor_(_and_(A,B),_xor_(A,B)),U11(tt,A) -> U12(isBoolKind(A),A),U111(tt,A) -> U112(isBoolKind(A)),U112(tt) -> false,U12(tt,A) -> A,U121(tt,A) -> U122(isBoolKind(A),A),U122(tt,A) -> A,U131(tt,B,U',U) -> U132(isBoolKind(B),B,U',U),U132(tt,B,U',U) -> U133(isS(U'),B,U',U),U133(tt,B,U',U) -> U134(isSKind(U'),B,U',U),U134(tt,B,U',U) -> U135(isS(U),B,U',U),U135(tt,B,U',U) -> U136(isSKind(U),B,U'),U136(tt,B,U') -> U137(equal(_isNotEqualTo_(B,true),true),U'),U137(tt,U') -> U',U141(tt,U',U) -> U142(isSKind(U'),U),U142(tt,U) -> U143(isS(U),U),U143(tt,U) -> U144(isSKind(U),U),U144(tt,U) -> U,U151(tt,V1,V2) -> U152(isBoolKind(V1),V1,V2),U152(tt,V1,V2) -> U153(isBoolKind(V2),V1,V2),U153(tt,V1,V2) -> U154(isBoolKind(V2),V1,V2),U154(tt,V1,V2) -> U155(isBool(V1),V2),U155(tt,V2) -> U156(isBool(V2)),U156(tt) -> tt,U161(tt,V1,V2) -> U162(isBoolKind(V1),V1,V2),U162(tt,V1,V2) -> U163(isBoolKind(V2),V1,V2),U163(tt,V1,V2) -> U164(isBoolKind(V2),V1,V2),U164(tt,V1,V2) -> U165(isBool(V1),V2),U165(tt,V2) -> U166(isBool(V2)),U166(tt) -> tt,U171(tt,V1,V2) -> U172(isBoolKind(V1),V1,V2),U172(tt,V1,V2) -> U173(isBoolKind(V2),V1,V2),U173(tt,V1,V2) -> U174(isBoolKind(V2),V1,V2),U174(tt,V1,V2) -> U175(isBool(V1),V2),U175(tt,V2) -> U176(isBool(V2)),U176(tt) -> tt,U181(tt,V1,V2) -> U182(isBoolKind(V1),V1,V2),U182(tt,V1,V2) -> U183(isBoolKind(V2),V1,V2),U183(tt,V1,V2) -> U184(isBoolKind(V2),V1,V2),U184(tt,V1,V2) -> U185(isBool(V1),V2),U185(tt,V2) -> U186(isBool(V2)),U186(tt) -> tt,U191(tt,V1) -> U192(isBoolKind(V1),V1),U192(tt,V1) -> U193(isBool(V1)),U193(tt) -> tt,U201(tt,V2) -> U202(isBoolKind(V2)),U202(tt) -> tt,U21(tt,A,B,C) -> U22(isBoolKind(A),A,B,C),U211(tt,V2) -> U212(isBoolKind(V2)),U212(tt) -> tt,U22(tt,A,B,C) -> U23(isBool(B),A,B,C),U221(tt,V2) -> U222(isBoolKind(V2)),U222(tt) -> tt,U23(tt,A,B,C) -> U24(isBoolKind(B),A,B,C),U231(tt,V2) -> U232(isBoolKind(V2)),U232(tt) -> tt,U24(tt,A,B,C) -> U25(isBool(C),A,B,C),U241(tt) -> tt,U25(tt,A,B,C) -> U26(isBoolKind(C),A,B,C),U251(tt,A) -> U252(isBoolKind(A),A),U252(tt,A) -> _xor_(A,true),U26(tt,A,B,C) -> _xor_(_and_(A,B),_and_(A,C)),U31(tt,A) -> U32(isBoolKind(A)),U32(tt) -> false,U41(tt,A) -> U42(isBoolKind(A),A),U42(tt,A) -> A,U51(tt,A,B) -> U52(isBoolKind(A),A,B),U52(tt,A,B) -> U53(isBool(B),A,B),U53(tt,A,B) -> U54(isBoolKind(B),A,B),U54(tt,A,B) -> not_(_xor_(A,_and_(A,B))),U61(tt,U',U) -> U62(isSKind(U'),U',U),U62(tt,U',U) -> U63(isS(U),U',U),U63(tt,U',U) -> U64(isSKind(U),U',U),U64(tt,U',U) -> U65(equal(_isNotEqualTo_(U,U'),true)),U65(tt) -> false,U71(tt,U) -> U72(isSKind(U)),U72(tt) -> true,U81(tt,U',U) -> U82(isSKind(U'),U',U),U82(tt,U',U) -> U83(isS(U),U',U),U83(tt,U',U) -> U84(isSKind(U),U',U),U84(tt,U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false,true),U91(tt,U) -> U92(isSKind(U)),U92(tt) -> false,_and_(A,A) -> U11(isBool(A),A),_and_(A,_xor_(B,C)) -> U21(isBool(A),A,B,C),_and_(false,A) -> U31(isBool(A),A),_and_(true,A) -> U41(isBool(A),A),_implies_(A,B) -> U51(isBool(A),A,B),_isEqualTo_(U,U') -> U61(isS(U'),U',U),_isEqualTo_(U,U) -> U71(isS(U),U),_isNotEqualTo_(U,U') -> U81(isS(U'),U',U),_isNotEqualTo_(U,U) -> U91(isS(U),U),_or_(A,B) -> U101(isBool(A),A,B),_xor_(A,A) -> U111(isBool(A),A),_xor_(false,A) -> U121(isBool(A),A),equal(X,X) -> tt,if_then_else_fi(B,U,U') -> U131(isBool(B),B,U',U),if_then_else_fi(true,U,U') -> U141(isS(U'),U',U),isBool(false) -> tt,isBool(true) -> tt,isBool(_and_(V1,V2)) -> U151(isBoolKind(V1),V1,V2),isBool(_implies_(V1,V2)) -> U161(isBoolKind(V1),V1,V2),isBool(_isEqualTo_(V1,V2)) -> tt,isBool(_isNotEqualTo_(V1,V2)) -> tt,isBool(_or_(V1,V2)) -> U171(isBoolKind(V1),V1,V2),isBool(_xor_(V1,V2)) -> U181(isBoolKind(V1),V1,V2),isBool(not_(V1)) -> U191(isBoolKind(V1),V1),isBoolKind(false) -> tt,isBoolKind(true) -> tt,isBoolKind(_and_(V1,V2)) -> U201(isBoolKind(V1),V2),isBoolKind(_implies_(V1,V2)) -> U211(isBoolKind(V1),V2),isBoolKind(_isEqualTo_(V1,V2)) -> tt,isBoolKind(_isNotEqualTo_(V1,V2)) -> tt,isBoolKind(_or_(V1,V2)) -> U221(isBoolKind(V1),V2),isBoolKind(_xor_(V1,V2)) -> U231(isBoolKind(V1),V2),isBoolKind(not_(V1)) -> U241(isBoolKind(V1)),not_(A) -> U251(isBool(A),A),not_(false) -> true,not_(true) -> false], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\BAG_nosorts.xml" :
TRS {trsSignature = fromList [("0",1),("1",1),("and",2),("empty",0),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","X","Y"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,and(tt,X) -> X,mult(z,X) -> z,mult(0(X),Y) -> 0(mult(X,Y)),mult(1(X),Y) -> plus(0(mult(X,Y)),Y),plus(z,X) -> X,plus(0(X),0(Y)) -> 0(plus(X,Y)),plus(0(X),1(Y)) -> 1(plus(X,Y)),plus(1(X),1(Y)) -> 0(plus(plus(X,Y),1(z))),prod(empty) -> 1(z),prod(singl(X)) -> X,prod(union(A,B)) -> mult(prod(A),prod(B)),sum(empty) -> 0(z),sum(singl(X)) -> X,sum(union(A,B)) -> plus(sum(A),sum(B))], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\BAG_nosorts-noand.xml" :
TRS {trsSignature = fromList [("0",1),("1",1),("U11",3),("U12",3),("U21",3),("U22",3),("U31",3),("U32",3),("U41",3),("U42",3),("U51",3),("U52",3),("U61",3),("U62",3),("U71",3),("U72",3),("empty",0),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","X","Y"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U11(tt,X,Y) -> U12(tt,X,Y),U12(tt,X,Y) -> 0(mult(X,Y)),U21(tt,X,Y) -> U22(tt,X,Y),U22(tt,X,Y) -> plus(0(mult(X,Y)),Y),U31(tt,X,Y) -> U32(tt,X,Y),U32(tt,X,Y) -> 0(plus(X,Y)),U41(tt,X,Y) -> U42(tt,X,Y),U42(tt,X,Y) -> 1(plus(X,Y)),U51(tt,X,Y) -> U52(tt,X,Y),U52(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U61(tt,A,B) -> U62(tt,A,B),U62(tt,A,B) -> mult(prod(A),prod(B)),U71(tt,A,B) -> U72(tt,A,B),U72(tt,A,B) -> plus(sum(A),sum(B)),mult(z,X) -> z,mult(0(X),Y) -> U11(tt,X,Y),mult(1(X),Y) -> U21(tt,X,Y),plus(z,X) -> X,plus(0(X),0(Y)) -> U31(tt,X,Y),plus(0(X),1(Y)) -> U41(tt,X,Y),plus(1(X),1(Y)) -> U51(tt,X,Y),prod(empty) -> 1(z),prod(singl(X)) -> X,prod(union(A,B)) -> U61(tt,A,B),sum(empty) -> 0(z),sum(singl(X)) -> X,sum(union(A,B)) -> U71(tt,A,B)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\BAG_nokinds.xml" :
TRS {trsSignature = fromList [("0",1),("1",1),("U101",2),("U11",1),("U111",3),("U21",3),("U31",3),("U41",2),("U51",3),("U61",3),("U71",3),("U81",2),("U91",3),("and",2),("empty",0),("isBag",1),("isBin",1),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","V1","V2","X","Y"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U101(tt,X) -> X,U11(tt) -> z,U111(tt,A,B) -> plus(sum(A),sum(B)),U21(tt,X,Y) -> 0(mult(X,Y)),U31(tt,X,Y) -> plus(0(mult(X,Y)),Y),U41(tt,X) -> X,U51(tt,X,Y) -> 0(plus(X,Y)),U61(tt,X,Y) -> 1(plus(X,Y)),U71(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U81(tt,X) -> X,U91(tt,A,B) -> mult(prod(A),prod(B)),and(tt,X) -> X,isBag(empty) -> tt,isBag(singl(V1)) -> isBin(V1),isBag(union(V1,V2)) -> and(isBag(V1),isBag(V2)),isBin(z) -> tt,isBin(0(V1)) -> isBin(V1),isBin(1(V1)) -> isBin(V1),isBin(mult(V1,V2)) -> and(isBin(V1),isBin(V2)),isBin(plus(V1,V2)) -> and(isBin(V1),isBin(V2)),isBin(prod(V1)) -> isBag(V1),isBin(sum(V1)) -> isBag(V1),mult(z,X) -> U11(isBin(X)),mult(0(X),Y) -> U21(and(isBin(X),isBin(Y)),X,Y),mult(1(X),Y) -> U31(and(isBin(X),isBin(Y)),X,Y),plus(z,X) -> U41(isBin(X),X),plus(0(X),0(Y)) -> U51(and(isBin(X),isBin(Y)),X,Y),plus(0(X),1(Y)) -> U61(and(isBin(X),isBin(Y)),X,Y),plus(1(X),1(Y)) -> U71(and(isBin(X),isBin(Y)),X,Y),prod(empty) -> 1(z),prod(singl(X)) -> U81(isBin(X),X),prod(union(A,B)) -> U91(and(isBag(A),isBag(B)),A,B),sum(empty) -> 0(z),sum(singl(X)) -> U101(isBin(X),X),sum(union(A,B)) -> U111(and(isBag(A),isBag(B)),A,B)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\BAG_nokinds-noand.xml" :
TRS {trsSignature = fromList [("0",1),("1",1),("U101",3),("U102",3),("U11",1),("U111",3),("U112",3),("U121",2),("U131",3),("U132",3),("U141",3),("U142",3),("U151",3),("U152",3),("U161",2),("U171",3),("U172",3),("U181",2),("U191",3),("U192",3),("U21",2),("U22",1),("U31",1),("U41",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",1),("U81",1),("U91",1),("empty",0),("isBag",1),("isBin",1),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","V1","V2","X","Y"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U101(tt,X,Y) -> U102(isBin(Y),X,Y),U102(tt,X,Y) -> 0(mult(X,Y)),U11(tt) -> tt,U111(tt,X,Y) -> U112(isBin(Y),X,Y),U112(tt,X,Y) -> plus(0(mult(X,Y)),Y),U121(tt,X) -> X,U131(tt,X,Y) -> U132(isBin(Y),X,Y),U132(tt,X,Y) -> 0(plus(X,Y)),U141(tt,X,Y) -> U142(isBin(Y),X,Y),U142(tt,X,Y) -> 1(plus(X,Y)),U151(tt,X,Y) -> U152(isBin(Y),X,Y),U152(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U161(tt,X) -> X,U171(tt,A,B) -> U172(isBag(B),A,B),U172(tt,A,B) -> mult(prod(A),prod(B)),U181(tt,X) -> X,U191(tt,A,B) -> U192(isBag(B),A,B),U192(tt,A,B) -> plus(sum(A),sum(B)),U21(tt,V2) -> U22(isBag(V2)),U22(tt) -> tt,U31(tt) -> tt,U41(tt) -> tt,U51(tt,V2) -> U52(isBin(V2)),U52(tt) -> tt,U61(tt,V2) -> U62(isBin(V2)),U62(tt) -> tt,U71(tt) -> tt,U81(tt) -> tt,U91(tt) -> z,isBag(empty) -> tt,isBag(singl(V1)) -> U11(isBin(V1)),isBag(union(V1,V2)) -> U21(isBag(V1),V2),isBin(z) -> tt,isBin(0(V1)) -> U31(isBin(V1)),isBin(1(V1)) -> U41(isBin(V1)),isBin(mult(V1,V2)) -> U51(isBin(V1),V2),isBin(plus(V1,V2)) -> U61(isBin(V1),V2),isBin(prod(V1)) -> U71(isBag(V1)),isBin(sum(V1)) -> U81(isBag(V1)),mult(z,X) -> U91(isBin(X)),mult(0(X),Y) -> U101(isBin(X),X,Y),mult(1(X),Y) -> U111(isBin(X),X,Y),plus(z,X) -> U121(isBin(X),X),plus(0(X),0(Y)) -> U131(isBin(X),X,Y),plus(0(X),1(Y)) -> U141(isBin(X),X,Y),plus(1(X),1(Y)) -> U151(isBin(X),X,Y),prod(empty) -> 1(z),prod(singl(X)) -> U161(isBin(X),X),prod(union(A,B)) -> U171(isBag(A),A,B),sum(empty) -> 0(z),sum(singl(X)) -> U181(isBin(X),X),sum(union(A,B)) -> U191(isBag(A),A,B)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\BAG_complete.xml" :
TRS {trsSignature = fromList [("0",1),("1",1),("U101",3),("U11",2),("U111",3),("U12",1),("U121",2),("U131",3),("U141",3),("U151",3),("U161",2),("U171",3),("U181",2),("U191",3),("U21",3),("U22",2),("U23",1),("U31",2),("U32",1),("U41",2),("U42",1),("U51",3),("U52",2),("U53",1),("U61",3),("U62",2),("U63",1),("U71",2),("U72",1),("U81",2),("U82",1),("U91",1),("and",2),("empty",0),("isBag",1),("isBagKind",1),("isBin",1),("isBinKind",1),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","V1","V2","X","Y"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U101(tt,X,Y) -> 0(mult(X,Y)),U11(tt,V1) -> U12(isBin(V1)),U111(tt,X,Y) -> plus(0(mult(X,Y)),Y),U12(tt) -> tt,U121(tt,X) -> X,U131(tt,X,Y) -> 0(plus(X,Y)),U141(tt,X,Y) -> 1(plus(X,Y)),U151(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U161(tt,X) -> X,U171(tt,A,B) -> mult(prod(A),prod(B)),U181(tt,X) -> X,U191(tt,A,B) -> plus(sum(A),sum(B)),U21(tt,V1,V2) -> U22(isBag(V1),V2),U22(tt,V2) -> U23(isBag(V2)),U23(tt) -> tt,U31(tt,V1) -> U32(isBin(V1)),U32(tt) -> tt,U41(tt,V1) -> U42(isBin(V1)),U42(tt) -> tt,U51(tt,V1,V2) -> U52(isBin(V1),V2),U52(tt,V2) -> U53(isBin(V2)),U53(tt) -> tt,U61(tt,V1,V2) -> U62(isBin(V1),V2),U62(tt,V2) -> U63(isBin(V2)),U63(tt) -> tt,U71(tt,V1) -> U72(isBag(V1)),U72(tt) -> tt,U81(tt,V1) -> U82(isBag(V1)),U82(tt) -> tt,U91(tt) -> z,and(tt,X) -> X,isBag(empty) -> tt,isBag(singl(V1)) -> U11(isBinKind(V1),V1),isBag(union(V1,V2)) -> U21(and(isBagKind(V1),isBagKind(V2)),V1,V2),isBagKind(empty) -> tt,isBagKind(singl(V1)) -> isBinKind(V1),isBagKind(union(V1,V2)) -> and(isBagKind(V1),isBagKind(V2)),isBin(z) -> tt,isBin(0(V1)) -> U31(isBinKind(V1),V1),isBin(1(V1)) -> U41(isBinKind(V1),V1),isBin(mult(V1,V2)) -> U51(and(isBinKind(V1),isBinKind(V2)),V1,V2),isBin(plus(V1,V2)) -> U61(and(isBinKind(V1),isBinKind(V2)),V1,V2),isBin(prod(V1)) -> U71(isBagKind(V1),V1),isBin(sum(V1)) -> U81(isBagKind(V1),V1),isBinKind(z) -> tt,isBinKind(0(V1)) -> isBinKind(V1),isBinKind(1(V1)) -> isBinKind(V1),isBinKind(mult(V1,V2)) -> and(isBinKind(V1),isBinKind(V2)),isBinKind(plus(V1,V2)) -> and(isBinKind(V1),isBinKind(V2)),isBinKind(prod(V1)) -> isBagKind(V1),isBinKind(sum(V1)) -> isBagKind(V1),mult(z,X) -> U91(and(isBin(X),isBinKind(X))),mult(0(X),Y) -> U101(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),mult(1(X),Y) -> U111(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),plus(z,X) -> U121(and(isBin(X),isBinKind(X)),X),plus(0(X),0(Y)) -> U131(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),plus(0(X),1(Y)) -> U141(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),plus(1(X),1(Y)) -> U151(and(and(isBin(X),isBinKind(X)),and(isBin(Y),isBinKind(Y))),X,Y),prod(empty) -> 1(z),prod(singl(X)) -> U161(and(isBin(X),isBinKind(X)),X),prod(union(A,B)) -> U171(and(and(isBag(A),isBagKind(A)),and(isBag(B),isBagKind(B))),A,B),sum(empty) -> 0(z),sum(singl(X)) -> U181(and(isBin(X),isBinKind(X)),X),sum(union(A,B)) -> U191(and(and(isBag(A),isBagKind(A)),and(isBag(B),isBagKind(B))),A,B)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\parser_fails\\TRS_Equational.Mixed_AC\\BAG_complete-noand.xml" :
TRS {trsSignature = fromList [("0",1),("1",1),("U101",2),("U102",2),("U103",1),("U11",2),("U111",1),("U12",2),("U121",1),("U13",1),("U131",2),("U132",1),("U141",2),("U142",1),("U151",1),("U161",1),("U171",2),("U172",1),("U181",3),("U182",3),("U183",3),("U184",3),("U191",3),("U192",3),("U193",3),("U194",3),("U201",2),("U202",2),("U21",3),("U211",3),("U212",3),("U213",3),("U214",3),("U22",3),("U221",3),("U222",3),("U223",3),("U224",3),("U23",3),("U231",3),("U232",3),("U233",3),("U234",3),("U24",3),("U241",2),("U242",2),("U25",2),("U251",3),("U252",3),("U253",3),("U254",3),("U26",1),("U261",2),("U262",2),("U271",3),("U272",3),("U273",3),("U274",3),("U31",1),("U41",2),("U42",1),("U51",2),("U52",2),("U53",1),("U61",2),("U62",2),("U63",1),("U71",3),("U72",3),("U73",3),("U74",3),("U75",2),("U76",1),("U81",3),("U82",3),("U83",3),("U84",3),("U85",2),("U86",1),("U91",2),("U92",2),("U93",1),("empty",0),("isBag",1),("isBagKind",1),("isBin",1),("isBinKind",1),("mult",2),("plus",2),("prod",1),("singl",1),("sum",1),("tt",0),("union",2),("z",0)], trsVariables = fromList ["A","B","V1","V2","X","Y"], trsRMap = [], trsRules = [union(X,empty) -> X,union(empty,X) -> X,0(z) -> z,U101(tt,V1) -> U102(isBagKind(V1),V1),U102(tt,V1) -> U103(isBag(V1)),U103(tt) -> tt,U11(tt,V1) -> U12(isBinKind(V1),V1),U111(tt) -> tt,U12(tt,V1) -> U13(isBin(V1)),U121(tt) -> tt,U13(tt) -> tt,U131(tt,V2) -> U132(isBinKind(V2)),U132(tt) -> tt,U141(tt,V2) -> U142(isBinKind(V2)),U142(tt) -> tt,U151(tt) -> tt,U161(tt) -> tt,U171(tt,X) -> U172(isBinKind(X)),U172(tt) -> z,U181(tt,X,Y) -> U182(isBinKind(X),X,Y),U182(tt,X,Y) -> U183(isBin(Y),X,Y),U183(tt,X,Y) -> U184(isBinKind(Y),X,Y),U184(tt,X,Y) -> 0(mult(X,Y)),U191(tt,X,Y) -> U192(isBinKind(X),X,Y),U192(tt,X,Y) -> U193(isBin(Y),X,Y),U193(tt,X,Y) -> U194(isBinKind(Y),X,Y),U194(tt,X,Y) -> plus(0(mult(X,Y)),Y),U201(tt,X) -> U202(isBinKind(X),X),U202(tt,X) -> X,U21(tt,V1,V2) -> U22(isBagKind(V1),V1,V2),U211(tt,X,Y) -> U212(isBinKind(X),X,Y),U212(tt,X,Y) -> U213(isBin(Y),X,Y),U213(tt,X,Y) -> U214(isBinKind(Y),X,Y),U214(tt,X,Y) -> 0(plus(X,Y)),U22(tt,V1,V2) -> U23(isBagKind(V2),V1,V2),U221(tt,X,Y) -> U222(isBinKind(X),X,Y),U222(tt,X,Y) -> U223(isBin(Y),X,Y),U223(tt,X,Y) -> U224(isBinKind(Y),X,Y),U224(tt,X,Y) -> 1(plus(X,Y)),U23(tt,V1,V2) -> U24(isBagKind(V2),V1,V2),U231(tt,X,Y) -> U232(isBinKind(X),X,Y),U232(tt,X,Y) -> U233(isBin(Y),X,Y),U233(tt,X,Y) -> U234(isBinKind(Y),X,Y),U234(tt,X,Y) -> 0(plus(plus(X,Y),1(z))),U24(tt,V1,V2) -> U25(isBag(V1),V2),U241(tt,X) -> U242(isBinKind(X),X),U242(tt,X) -> X,U25(tt,V2) -> U26(isBag(V2)),U251(tt,A,B) -> U252(isBagKind(A),A,B),U252(tt,A,B) -> U253(isBag(B),A,B),U253(tt,A,B) -> U254(isBagKind(B),A,B),U254(tt,A,B) -> mult(prod(A),prod(B)),U26(tt) -> tt,U261(tt,X) -> U262(isBinKind(X),X),U262(tt,X) -> X,U271(tt,A,B) -> U272(isBagKind(A),A,B),U272(tt,A,B) -> U273(isBag(B),A,B),U273(tt,A,B) -> U274(isBagKind(B),A,B),U274(tt,A,B) -> plus(sum(A),sum(B)),U31(tt) -> tt,U41(tt,V2) -> U42(isBagKind(V2)),U42(tt) -> tt,U51(tt,V1) -> U52(isBinKind(V1),V1),U52(tt,V1) -> U53(isBin(V1)),U53(tt) -> tt,U61(tt,V1) -> U62(isBinKind(V1),V1),U62(tt,V1) -> U63(isBin(V1)),U63(tt) -> tt,U71(tt,V1,V2) -> U72(isBinKind(V1),V1,V2),U72(tt,V1,V2) -> U73(isBinKind(V2),V1,V2),U73(tt,V1,V2) -> U74(isBinKind(V2),V1,V2),U74(tt,V1,V2) -> U75(isBin(V1),V2),U75(tt,V2) -> U76(isBin(V2)),U76(tt) -> tt,U81(tt,V1,V2) -> U82(isBinKind(V1),V1,V2),U82(tt,V1,V2) -> U83(isBinKind(V2),V1,V2),U83(tt,V1,V2) -> U84(isBinKind(V2),V1,V2),U84(tt,V1,V2) -> U85(isBin(V1),V2),U85(tt,V2) -> U86(isBin(V2)),U86(tt) -> tt,U91(tt,V1) -> U92(isBagKind(V1),V1),U92(tt,V1) -> U93(isBag(V1)),U93(tt) -> tt,isBag(empty) -> tt,isBag(singl(V1)) -> U11(isBinKind(V1),V1),isBag(union(V1,V2)) -> U21(isBagKind(V1),V1,V2),isBagKind(empty) -> tt,isBagKind(singl(V1)) -> U31(isBinKind(V1)),isBagKind(union(V1,V2)) -> U41(isBagKind(V1),V2),isBin(z) -> tt,isBin(0(V1)) -> U51(isBinKind(V1),V1),isBin(1(V1)) -> U61(isBinKind(V1),V1),isBin(mult(V1,V2)) -> U71(isBinKind(V1),V1,V2),isBin(plus(V1,V2)) -> U81(isBinKind(V1),V1,V2),isBin(prod(V1)) -> U91(isBagKind(V1),V1),isBin(sum(V1)) -> U101(isBagKind(V1),V1),isBinKind(z) -> tt,isBinKind(0(V1)) -> U111(isBinKind(V1)),isBinKind(1(V1)) -> U121(isBinKind(V1)),isBinKind(mult(V1,V2)) -> U131(isBinKind(V1),V2),isBinKind(plus(V1,V2)) -> U141(isBinKind(V1),V2),isBinKind(prod(V1)) -> U151(isBagKind(V1)),isBinKind(sum(V1)) -> U161(isBagKind(V1)),mult(z,X) -> U171(isBin(X),X),mult(0(X),Y) -> U181(isBin(X),X,Y),mult(1(X),Y) -> U191(isBin(X),X,Y),plus(z,X) -> U201(isBin(X),X),plus(0(X),0(Y)) -> U211(isBin(X),X,Y),plus(0(X),1(Y)) -> U221(isBin(X),X,Y),plus(1(X),1(Y)) -> U231(isBin(X),X,Y),prod(empty) -> 1(z),prod(singl(X)) -> U241(isBin(X),X),prod(union(A,B)) -> U251(isBag(A),A,B),sum(empty) -> 0(z),sum(singl(X)) -> U261(isBin(X),X),sum(union(A,B)) -> U271(isBag(A),A,B)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}
