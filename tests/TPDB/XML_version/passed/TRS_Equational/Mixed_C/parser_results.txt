
++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\PEANO-NAT_nosorts.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U11",3),("U12",3),("U21",3),("U22",1),("U31",3),("U32",3),("_&gt;_",2),("_&lt;_",2),("_*_",2),("_+_",2),("and",2),("d",2),("equal",2),("false",0),("gcd",2),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","X"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U11(tt,M',N') -> U12(equal(_&gt;_(N',M'),true),M',N'),U12(tt,M',N') -> gcd(d(N',M'),M'),U21(tt,M',N) -> U22(equal(_&gt;_(M',N),true)),U22(tt) -> 0,U31(tt,M',N) -> U32(equal(_&gt;_(N,M'),true),M',N),U32(tt,M',N) -> s_(quot(d(N,M'),M')),_*_(N,0) -> 0,_*_(s_(N),s_(M)) -> s_(_+_(N,_+_(M,_*_(N,M)))),_+_(N,0) -> N,_+_(s_(N),s_(M)) -> s_(s_(_+_(N,M))),_&lt;_(N,M) -> _&gt;_(M,N),_&gt;_(0,M) -> false,_&gt;_(N',0) -> true,_&gt;_(s_(N),s_(M)) -> _&gt;_(N,M),and(tt,X) -> X,d(0,N) -> N,d(s_(N),s_(M)) -> d(N,M),equal(X,X) -> tt,gcd(0,N) -> 0,gcd(N',M') -> U11(tt,M',N'),gcd(N',N') -> N',p_(s_(N)) -> N,quot(M',M') -> s_(0),quot(N,M') -> U21(tt,M',N),quot(N,M') -> U31(tt,M',N)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\PEANO-NAT_nosorts-noand.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U11",3),("U12",3),("U21",3),("U22",3),("U31",3),("U32",3),("U41",3),("U42",3),("U51",3),("U52",3),("U61",3),("U62",3),("U63",3),("U71",3),("U72",3),("U73",1),("U81",3),("U82",3),("U83",3),("_&gt;_",2),("_&lt;_",2),("_*_",2),("_+_",2),("d",2),("equal",2),("false",0),("gcd",2),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","X"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U11(tt,M,N) -> U12(tt,M,N),U12(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U21(tt,M,N) -> U22(tt,M,N),U22(tt,M,N) -> s_(s_(_+_(N,M))),U31(tt,M,N) -> U32(tt,M,N),U32(tt,M,N) -> _&gt;_(M,N),U41(tt,M,N) -> U42(tt,M,N),U42(tt,M,N) -> _&gt;_(N,M),U51(tt,M,N) -> U52(tt,M,N),U52(tt,M,N) -> d(N,M),U61(tt,M',N') -> U62(tt,M',N'),U62(tt,M',N') -> U63(equal(_&gt;_(N',M'),true),M',N'),U63(tt,M',N') -> gcd(d(N',M'),M'),U71(tt,M',N) -> U72(tt,M',N),U72(tt,M',N) -> U73(equal(_&gt;_(M',N),true)),U73(tt) -> 0,U81(tt,M',N) -> U82(tt,M',N),U82(tt,M',N) -> U83(equal(_&gt;_(N,M'),true),M',N),U83(tt,M',N) -> s_(quot(d(N,M'),M')),_*_(N,0) -> 0,_*_(s_(N),s_(M)) -> U11(tt,M,N),_+_(N,0) -> N,_+_(s_(N),s_(M)) -> U21(tt,M,N),_&lt;_(N,M) -> U31(tt,M,N),_&gt;_(0,M) -> false,_&gt;_(N',0) -> true,_&gt;_(s_(N),s_(M)) -> U41(tt,M,N),d(0,N) -> N,d(s_(N),s_(M)) -> U51(tt,M,N),equal(X,X) -> tt,gcd(0,N) -> 0,gcd(N',M') -> U61(tt,M',N'),gcd(N',N') -> N',p_(s_(N)) -> N,quot(M',M') -> s_(0),quot(N,M') -> U71(tt,M',N),quot(N,M') -> U81(tt,M',N)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\PEANO-NAT_nokinds.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U101",3),("U11",1),("U111",1),("U121",3),("U122",3),("U131",2),("U141",2),("U151",1),("U161",3),("U162",1),("U171",3),("U172",3),("U21",3),("U31",2),("U41",3),("U51",3),("U61",1),("U71",1),("U81",3),("U91",2),("_&gt;_",2),("_&lt;_",2),("_*_",2),("_+_",2),("and",2),("d",2),("equal",2),("false",0),("gcd",2),("isBoolean",1),("isNat",1),("isNzNat",1),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","V","V1","V2","X"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U101(tt,M,N) -> d(N,M),U11(tt) -> 0,U111(tt) -> 0,U121(tt,M',N') -> U122(equal(_&gt;_(N',M'),true),M',N'),U122(tt,M',N') -> gcd(d(N',M'),M'),U131(tt,N') -> N',U141(tt,N) -> N,U151(tt) -> s_(0),U161(tt,M',N) -> U162(equal(_&gt;_(M',N),true)),U162(tt) -> 0,U171(tt,M',N) -> U172(equal(_&gt;_(N,M'),true),M',N),U172(tt,M',N) -> s_(quot(d(N,M'),M')),U21(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U31(tt,N) -> N,U41(tt,M,N) -> s_(s_(_+_(N,M))),U51(tt,M,N) -> _&gt;_(M,N),U61(tt) -> false,U71(tt) -> true,U81(tt,M,N) -> _&gt;_(N,M),U91(tt,N) -> N,_*_(N,0) -> U11(isNat(N)),_*_(s_(N),s_(M)) -> U21(and(isNat(M),isNat(N)),M,N),_+_(N,0) -> U31(isNat(N),N),_+_(s_(N),s_(M)) -> U41(and(isNat(M),isNat(N)),M,N),_&lt;_(N,M) -> U51(and(isNat(M),isNat(N)),M,N),_&gt;_(0,M) -> U61(isNat(M)),_&gt;_(N',0) -> U71(isNzNat(N')),_&gt;_(s_(N),s_(M)) -> U81(and(isNat(M),isNat(N)),M,N),and(tt,X) -> X,d(0,N) -> U91(isNat(N),N),d(s_(N),s_(M)) -> U101(and(isNat(M),isNat(N)),M,N),equal(X,X) -> tt,gcd(0,N) -> U111(isNat(N)),gcd(N',M') -> U121(and(isNzNat(M'),isNzNat(N')),M',N'),gcd(N',N') -> U131(isNzNat(N'),N'),isBoolean(false) -> tt,isBoolean(true) -> tt,isBoolean(_&lt;_(V1,V2)) -> and(isNat(V1),isNat(V2)),isBoolean(_&gt;_(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(0) -> tt,isNat(V) -> isNzNat(V),isNat(_*_(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(_+_(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(d(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(gcd(V1,V2)) -> and(isNat(V1),isNat(V2)),isNat(p_(V1)) -> isNzNat(V1),isNat(quot(V1,V2)) -> and(isNat(V1),isNzNat(V2)),isNzNat(1) -> tt,isNzNat(2) -> tt,isNzNat(3) -> tt,isNzNat(4) -> tt,isNzNat(5) -> tt,isNzNat(6) -> tt,isNzNat(7) -> tt,isNzNat(_*_(V1,V2)) -> and(isNzNat(V1),isNzNat(V2)),isNzNat(gcd(V1,V2)) -> and(isNzNat(V1),isNzNat(V2)),isNzNat(s_(V1)) -> isNat(V1),p_(s_(N)) -> U141(isNat(N),N),quot(M',M') -> U151(isNzNat(M')),quot(N,M') -> U161(and(isNzNat(M'),isNat(N)),M',N),quot(N,M') -> U171(and(isNzNat(M'),isNat(N)),M',N)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\PEANO-NAT_nokinds-noand.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U101",3),("U102",3),("U11",1),("U111",1),("U121",3),("U122",3),("U123",3),("U131",2),("U141",2),("U142",1),("U151",2),("U152",1),("U161",1),("U171",2),("U172",1),("U181",2),("U182",1),("U191",2),("U192",1),("U201",2),("U202",1),("U21",3),("U211",1),("U22",3),("U221",2),("U222",1),("U231",2),("U232",1),("U241",2),("U242",1),("U251",1),("U261",2),("U271",1),("U281",3),("U282",3),("U283",1),("U291",3),("U292",3),("U293",3),("U31",2),("U41",3),("U42",3),("U51",3),("U52",3),("U61",1),("U71",1),("U81",3),("U82",3),("U91",2),("_&gt;_",2),("_&lt;_",2),("_*_",2),("_+_",2),("d",2),("equal",2),("false",0),("gcd",2),("isBoolean",1),("isNat",1),("isNzNat",1),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","V","V1","V2","X"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U101(tt,M,N) -> U102(isNat(N),M,N),U102(tt,M,N) -> d(N,M),U11(tt) -> 0,U111(tt) -> 0,U121(tt,M',N') -> U122(isNzNat(N'),M',N'),U122(tt,M',N') -> U123(equal(_&gt;_(N',M'),true),M',N'),U123(tt,M',N') -> gcd(d(N',M'),M'),U131(tt,N') -> N',U141(tt,V2) -> U142(isNat(V2)),U142(tt) -> tt,U151(tt,V2) -> U152(isNat(V2)),U152(tt) -> tt,U161(tt) -> tt,U171(tt,V2) -> U172(isNat(V2)),U172(tt) -> tt,U181(tt,V2) -> U182(isNat(V2)),U182(tt) -> tt,U191(tt,V2) -> U192(isNat(V2)),U192(tt) -> tt,U201(tt,V2) -> U202(isNat(V2)),U202(tt) -> tt,U21(tt,M,N) -> U22(isNat(N),M,N),U211(tt) -> tt,U22(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U221(tt,V2) -> U222(isNzNat(V2)),U222(tt) -> tt,U231(tt,V2) -> U232(isNzNat(V2)),U232(tt) -> tt,U241(tt,V2) -> U242(isNzNat(V2)),U242(tt) -> tt,U251(tt) -> tt,U261(tt,N) -> N,U271(tt) -> s_(0),U281(tt,M',N) -> U282(isNat(N),M',N),U282(tt,M',N) -> U283(equal(_&gt;_(M',N),true)),U283(tt) -> 0,U291(tt,M',N) -> U292(isNat(N),M',N),U292(tt,M',N) -> U293(equal(_&gt;_(N,M'),true),M',N),U293(tt,M',N) -> s_(quot(d(N,M'),M')),U31(tt,N) -> N,U41(tt,M,N) -> U42(isNat(N),M,N),U42(tt,M,N) -> s_(s_(_+_(N,M))),U51(tt,M,N) -> U52(isNat(N),M,N),U52(tt,M,N) -> _&gt;_(M,N),U61(tt) -> false,U71(tt) -> true,U81(tt,M,N) -> U82(isNat(N),M,N),U82(tt,M,N) -> _&gt;_(N,M),U91(tt,N) -> N,_*_(N,0) -> U11(isNat(N)),_*_(s_(N),s_(M)) -> U21(isNat(M),M,N),_+_(N,0) -> U31(isNat(N),N),_+_(s_(N),s_(M)) -> U41(isNat(M),M,N),_&lt;_(N,M) -> U51(isNat(M),M,N),_&gt;_(0,M) -> U61(isNat(M)),_&gt;_(N',0) -> U71(isNzNat(N')),_&gt;_(s_(N),s_(M)) -> U81(isNat(M),M,N),d(0,N) -> U91(isNat(N),N),d(s_(N),s_(M)) -> U101(isNat(M),M,N),equal(X,X) -> tt,gcd(0,N) -> U111(isNat(N)),gcd(N',M') -> U121(isNzNat(M'),M',N'),gcd(N',N') -> U131(isNzNat(N'),N'),isBoolean(false) -> tt,isBoolean(true) -> tt,isBoolean(_&lt;_(V1,V2)) -> U141(isNat(V1),V2),isBoolean(_&gt;_(V1,V2)) -> U151(isNat(V1),V2),isNat(0) -> tt,isNat(V) -> U161(isNzNat(V)),isNat(_*_(V1,V2)) -> U171(isNat(V1),V2),isNat(_+_(V1,V2)) -> U181(isNat(V1),V2),isNat(d(V1,V2)) -> U191(isNat(V1),V2),isNat(gcd(V1,V2)) -> U201(isNat(V1),V2),isNat(p_(V1)) -> U211(isNzNat(V1)),isNat(quot(V1,V2)) -> U221(isNat(V1),V2),isNzNat(1) -> tt,isNzNat(2) -> tt,isNzNat(3) -> tt,isNzNat(4) -> tt,isNzNat(5) -> tt,isNzNat(6) -> tt,isNzNat(7) -> tt,isNzNat(_*_(V1,V2)) -> U231(isNzNat(V1),V2),isNzNat(gcd(V1,V2)) -> U241(isNzNat(V1),V2),isNzNat(s_(V1)) -> U251(isNat(V1)),p_(s_(N)) -> U261(isNat(N),N),quot(M',M') -> U271(isNzNat(M')),quot(N,M') -> U281(isNzNat(M'),M',N),quot(N,M') -> U291(isNzNat(M'),M',N)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\PEANO-NAT_complete.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U101",3),("U11",1),("U111",1),("U121",3),("U122",3),("U131",2),("U141",3),("U142",2),("U143",1),("U151",3),("U152",2),("U153",1),("U161",2),("U162",1),("U171",3),("U172",2),("U173",1),("U181",3),("U182",2),("U183",1),("U191",3),("U192",2),("U193",1),("U201",3),("U202",2),("U203",1),("U21",3),("U211",2),("U212",1),("U221",3),("U222",2),("U223",1),("U231",3),("U232",2),("U233",1),("U241",3),("U242",2),("U243",1),("U251",2),("U252",1),("U261",2),("U271",1),("U281",3),("U282",1),("U291",3),("U292",3),("U31",2),("U41",3),("U51",3),("U61",1),("U71",1),("U81",3),("U91",2),("_&gt;_",2),("_&lt;_",2),("_*_",2),("_+_",2),("and",2),("d",2),("equal",2),("false",0),("gcd",2),("isBoolean",1),("isBooleanKind",1),("isNat",1),("isNatKind",1),("isNzNat",1),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","V","V1","V2","X"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U101(tt,M,N) -> d(N,M),U11(tt) -> 0,U111(tt) -> 0,U121(tt,M',N') -> U122(equal(_&gt;_(N',M'),true),M',N'),U122(tt,M',N') -> gcd(d(N',M'),M'),U131(tt,N') -> N',U141(tt,V1,V2) -> U142(isNat(V1),V2),U142(tt,V2) -> U143(isNat(V2)),U143(tt) -> tt,U151(tt,V1,V2) -> U152(isNat(V1),V2),U152(tt,V2) -> U153(isNat(V2)),U153(tt) -> tt,U161(tt,V) -> U162(isNzNat(V)),U162(tt) -> tt,U171(tt,V1,V2) -> U172(isNat(V1),V2),U172(tt,V2) -> U173(isNat(V2)),U173(tt) -> tt,U181(tt,V1,V2) -> U182(isNat(V1),V2),U182(tt,V2) -> U183(isNat(V2)),U183(tt) -> tt,U191(tt,V1,V2) -> U192(isNat(V1),V2),U192(tt,V2) -> U193(isNat(V2)),U193(tt) -> tt,U201(tt,V1,V2) -> U202(isNat(V1),V2),U202(tt,V2) -> U203(isNat(V2)),U203(tt) -> tt,U21(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U211(tt,V1) -> U212(isNzNat(V1)),U212(tt) -> tt,U221(tt,V1,V2) -> U222(isNat(V1),V2),U222(tt,V2) -> U223(isNzNat(V2)),U223(tt) -> tt,U231(tt,V1,V2) -> U232(isNzNat(V1),V2),U232(tt,V2) -> U233(isNzNat(V2)),U233(tt) -> tt,U241(tt,V1,V2) -> U242(isNzNat(V1),V2),U242(tt,V2) -> U243(isNzNat(V2)),U243(tt) -> tt,U251(tt,V1) -> U252(isNat(V1)),U252(tt) -> tt,U261(tt,N) -> N,U271(tt) -> s_(0),U281(tt,M',N) -> U282(equal(_&gt;_(M',N),true)),U282(tt) -> 0,U291(tt,M',N) -> U292(equal(_&gt;_(N,M'),true),M',N),U292(tt,M',N) -> s_(quot(d(N,M'),M')),U31(tt,N) -> N,U41(tt,M,N) -> s_(s_(_+_(N,M))),U51(tt,M,N) -> _&gt;_(M,N),U61(tt) -> false,U71(tt) -> true,U81(tt,M,N) -> _&gt;_(N,M),U91(tt,N) -> N,_*_(N,0) -> U11(and(isNat(N),isNatKind(N))),_*_(s_(N),s_(M)) -> U21(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),_+_(N,0) -> U31(and(isNat(N),isNatKind(N)),N),_+_(s_(N),s_(M)) -> U41(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),_&lt;_(N,M) -> U51(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),_&gt;_(0,M) -> U61(and(isNat(M),isNatKind(M))),_&gt;_(N',0) -> U71(and(isNzNat(N'),isNatKind(N'))),_&gt;_(s_(N),s_(M)) -> U81(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),and(tt,X) -> X,d(0,N) -> U91(and(isNat(N),isNatKind(N)),N),d(s_(N),s_(M)) -> U101(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),equal(X,X) -> tt,gcd(0,N) -> U111(and(isNat(N),isNatKind(N))),gcd(N',M') -> U121(and(and(isNzNat(M'),isNatKind(M')),and(isNzNat(N'),isNatKind(N'))),M',N'),gcd(N',N') -> U131(and(isNzNat(N'),isNatKind(N')),N'),isBoolean(false) -> tt,isBoolean(true) -> tt,isBoolean(_&lt;_(V1,V2)) -> U141(and(isNatKind(V1),isNatKind(V2)),V1,V2),isBoolean(_&gt;_(V1,V2)) -> U151(and(isNatKind(V1),isNatKind(V2)),V1,V2),isBooleanKind(false) -> tt,isBooleanKind(true) -> tt,isBooleanKind(_&lt;_(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isBooleanKind(_&gt;_(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNat(0) -> tt,isNat(V) -> U161(isNatKind(V),V),isNat(_*_(V1,V2)) -> U171(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(_+_(V1,V2)) -> U181(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(d(V1,V2)) -> U191(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(gcd(V1,V2)) -> U201(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNat(p_(V1)) -> U211(isNatKind(V1),V1),isNat(quot(V1,V2)) -> U221(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNatKind(0) -> tt,isNatKind(1) -> tt,isNatKind(2) -> tt,isNatKind(3) -> tt,isNatKind(4) -> tt,isNatKind(5) -> tt,isNatKind(6) -> tt,isNatKind(7) -> tt,isNatKind(_*_(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(_+_(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(d(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(gcd(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(p_(V1)) -> isNatKind(V1),isNatKind(quot(V1,V2)) -> and(isNatKind(V1),isNatKind(V2)),isNatKind(s_(V1)) -> isNatKind(V1),isNzNat(1) -> tt,isNzNat(2) -> tt,isNzNat(3) -> tt,isNzNat(4) -> tt,isNzNat(5) -> tt,isNzNat(6) -> tt,isNzNat(7) -> tt,isNzNat(_*_(V1,V2)) -> U231(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNzNat(gcd(V1,V2)) -> U241(and(isNatKind(V1),isNatKind(V2)),V1,V2),isNzNat(s_(V1)) -> U251(isNatKind(V1),V1),p_(s_(N)) -> U261(and(isNat(N),isNatKind(N)),N),quot(M',M') -> U271(and(isNzNat(M'),isNatKind(M'))),quot(N,M') -> U281(and(and(isNzNat(M'),isNatKind(M')),and(isNat(N),isNatKind(N))),M',N),quot(N,M') -> U291(and(and(isNzNat(M'),isNatKind(M')),and(isNat(N),isNatKind(N))),M',N)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\PEANO-NAT_complete-noand.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("2",0),("3",0),("4",0),("5",0),("6",0),("7",0),("U101",3),("U102",3),("U103",3),("U104",3),("U11",2),("U111",2),("U112",1),("U12",1),("U121",3),("U122",3),("U123",3),("U124",3),("U125",3),("U131",2),("U132",2),("U141",3),("U142",3),("U143",3),("U144",3),("U145",2),("U146",1),("U151",3),("U152",3),("U153",3),("U154",3),("U155",2),("U156",1),("U161",2),("U162",1),("U171",2),("U172",1),("U181",2),("U182",2),("U183",1),("U191",3),("U192",3),("U193",3),("U194",3),("U195",2),("U196",1),("U201",3),("U202",3),("U203",3),("U204",3),("U205",2),("U206",1),("U21",3),("U211",3),("U212",3),("U213",3),("U214",3),("U215",2),("U216",1),("U22",3),("U221",3),("U222",3),("U223",3),("U224",3),("U225",2),("U226",1),("U23",3),("U231",2),("U232",2),("U233",1),("U24",3),("U241",3),("U242",3),("U243",3),("U244",3),("U245",2),("U246",1),("U251",2),("U252",1),("U261",2),("U262",1),("U271",2),("U272",1),("U281",2),("U282",1),("U291",1),("U301",2),("U302",1),("U31",2),("U311",1),("U32",2),("U321",3),("U322",3),("U323",3),("U324",3),("U325",2),("U326",1),("U331",3),("U332",3),("U333",3),("U334",3),("U335",2),("U336",1),("U341",2),("U342",2),("U343",1),("U351",2),("U352",2),("U361",2),("U362",1),("U371",3),("U372",3),("U373",3),("U374",3),("U375",1),("U381",3),("U382",3),("U383",3),("U384",3),("U385",3),("U41",3),("U42",3),("U43",3),("U44",3),("U51",3),("U52",3),("U53",3),("U54",3),("U61",2),("U62",1),("U71",2),("U72",1),("U81",3),("U82",3),("U83",3),("U84",3),("U91",2),("U92",2),("_&gt;_",2),("_&lt;_",2),("_*_",2),("_+_",2),("d",2),("equal",2),("false",0),("gcd",2),("isBoolean",1),("isBooleanKind",1),("isNat",1),("isNatKind",1),("isNzNat",1),("p_",1),("quot",2),("s_",1),("true",0),("tt",0)], trsVariables = fromList ["M","M'","N","N'","V","V1","V2","X"], trsRMap = [], trsRules = [1 -> s_(0),2 -> s_(s_(0)),3 -> s_(s_(s_(0))),4 -> s_(s_(s_(s_(0)))),5 -> s_(s_(s_(s_(s_(0))))),6 -> s_(s_(s_(s_(s_(s_(0)))))),7 -> s_(s_(s_(s_(s_(s_(s_(0))))))),U101(tt,M,N) -> U102(isNatKind(M),M,N),U102(tt,M,N) -> U103(isNat(N),M,N),U103(tt,M,N) -> U104(isNatKind(N),M,N),U104(tt,M,N) -> d(N,M),U11(tt,N) -> U12(isNatKind(N)),U111(tt,N) -> U112(isNatKind(N)),U112(tt) -> 0,U12(tt) -> 0,U121(tt,M',N') -> U122(isNatKind(M'),M',N'),U122(tt,M',N') -> U123(isNzNat(N'),M',N'),U123(tt,M',N') -> U124(isNatKind(N'),M',N'),U124(tt,M',N') -> U125(equal(_&gt;_(N',M'),true),M',N'),U125(tt,M',N') -> gcd(d(N',M'),M'),U131(tt,N') -> U132(isNatKind(N'),N'),U132(tt,N') -> N',U141(tt,V1,V2) -> U142(isNatKind(V1),V1,V2),U142(tt,V1,V2) -> U143(isNatKind(V2),V1,V2),U143(tt,V1,V2) -> U144(isNatKind(V2),V1,V2),U144(tt,V1,V2) -> U145(isNat(V1),V2),U145(tt,V2) -> U146(isNat(V2)),U146(tt) -> tt,U151(tt,V1,V2) -> U152(isNatKind(V1),V1,V2),U152(tt,V1,V2) -> U153(isNatKind(V2),V1,V2),U153(tt,V1,V2) -> U154(isNatKind(V2),V1,V2),U154(tt,V1,V2) -> U155(isNat(V1),V2),U155(tt,V2) -> U156(isNat(V2)),U156(tt) -> tt,U161(tt,V2) -> U162(isNatKind(V2)),U162(tt) -> tt,U171(tt,V2) -> U172(isNatKind(V2)),U172(tt) -> tt,U181(tt,V) -> U182(isNatKind(V),V),U182(tt,V) -> U183(isNzNat(V)),U183(tt) -> tt,U191(tt,V1,V2) -> U192(isNatKind(V1),V1,V2),U192(tt,V1,V2) -> U193(isNatKind(V2),V1,V2),U193(tt,V1,V2) -> U194(isNatKind(V2),V1,V2),U194(tt,V1,V2) -> U195(isNat(V1),V2),U195(tt,V2) -> U196(isNat(V2)),U196(tt) -> tt,U201(tt,V1,V2) -> U202(isNatKind(V1),V1,V2),U202(tt,V1,V2) -> U203(isNatKind(V2),V1,V2),U203(tt,V1,V2) -> U204(isNatKind(V2),V1,V2),U204(tt,V1,V2) -> U205(isNat(V1),V2),U205(tt,V2) -> U206(isNat(V2)),U206(tt) -> tt,U21(tt,M,N) -> U22(isNatKind(M),M,N),U211(tt,V1,V2) -> U212(isNatKind(V1),V1,V2),U212(tt,V1,V2) -> U213(isNatKind(V2),V1,V2),U213(tt,V1,V2) -> U214(isNatKind(V2),V1,V2),U214(tt,V1,V2) -> U215(isNat(V1),V2),U215(tt,V2) -> U216(isNat(V2)),U216(tt) -> tt,U22(tt,M,N) -> U23(isNat(N),M,N),U221(tt,V1,V2) -> U222(isNatKind(V1),V1,V2),U222(tt,V1,V2) -> U223(isNatKind(V2),V1,V2),U223(tt,V1,V2) -> U224(isNatKind(V2),V1,V2),U224(tt,V1,V2) -> U225(isNat(V1),V2),U225(tt,V2) -> U226(isNat(V2)),U226(tt) -> tt,U23(tt,M,N) -> U24(isNatKind(N),M,N),U231(tt,V1) -> U232(isNatKind(V1),V1),U232(tt,V1) -> U233(isNzNat(V1)),U233(tt) -> tt,U24(tt,M,N) -> s_(_+_(N,_+_(M,_*_(N,M)))),U241(tt,V1,V2) -> U242(isNatKind(V1),V1,V2),U242(tt,V1,V2) -> U243(isNatKind(V2),V1,V2),U243(tt,V1,V2) -> U244(isNatKind(V2),V1,V2),U244(tt,V1,V2) -> U245(isNat(V1),V2),U245(tt,V2) -> U246(isNzNat(V2)),U246(tt) -> tt,U251(tt,V2) -> U252(isNatKind(V2)),U252(tt) -> tt,U261(tt,V2) -> U262(isNatKind(V2)),U262(tt) -> tt,U271(tt,V2) -> U272(isNatKind(V2)),U272(tt) -> tt,U281(tt,V2) -> U282(isNatKind(V2)),U282(tt) -> tt,U291(tt) -> tt,U301(tt,V2) -> U302(isNatKind(V2)),U302(tt) -> tt,U31(tt,N) -> U32(isNatKind(N),N),U311(tt) -> tt,U32(tt,N) -> N,U321(tt,V1,V2) -> U322(isNatKind(V1),V1,V2),U322(tt,V1,V2) -> U323(isNatKind(V2),V1,V2),U323(tt,V1,V2) -> U324(isNatKind(V2),V1,V2),U324(tt,V1,V2) -> U325(isNzNat(V1),V2),U325(tt,V2) -> U326(isNzNat(V2)),U326(tt) -> tt,U331(tt,V1,V2) -> U332(isNatKind(V1),V1,V2),U332(tt,V1,V2) -> U333(isNatKind(V2),V1,V2),U333(tt,V1,V2) -> U334(isNatKind(V2),V1,V2),U334(tt,V1,V2) -> U335(isNzNat(V1),V2),U335(tt,V2) -> U336(isNzNat(V2)),U336(tt) -> tt,U341(tt,V1) -> U342(isNatKind(V1),V1),U342(tt,V1) -> U343(isNat(V1)),U343(tt) -> tt,U351(tt,N) -> U352(isNatKind(N),N),U352(tt,N) -> N,U361(tt,M') -> U362(isNatKind(M')),U362(tt) -> s_(0),U371(tt,M',N) -> U372(isNatKind(M'),M',N),U372(tt,M',N) -> U373(isNat(N),M',N),U373(tt,M',N) -> U374(isNatKind(N),M',N),U374(tt,M',N) -> U375(equal(_&gt;_(M',N),true)),U375(tt) -> 0,U381(tt,M',N) -> U382(isNatKind(M'),M',N),U382(tt,M',N) -> U383(isNat(N),M',N),U383(tt,M',N) -> U384(isNatKind(N),M',N),U384(tt,M',N) -> U385(equal(_&gt;_(N,M'),true),M',N),U385(tt,M',N) -> s_(quot(d(N,M'),M')),U41(tt,M,N) -> U42(isNatKind(M),M,N),U42(tt,M,N) -> U43(isNat(N),M,N),U43(tt,M,N) -> U44(isNatKind(N),M,N),U44(tt,M,N) -> s_(s_(_+_(N,M))),U51(tt,M,N) -> U52(isNatKind(M),M,N),U52(tt,M,N) -> U53(isNat(N),M,N),U53(tt,M,N) -> U54(isNatKind(N),M,N),U54(tt,M,N) -> _&gt;_(M,N),U61(tt,M) -> U62(isNatKind(M)),U62(tt) -> false,U71(tt,N') -> U72(isNatKind(N')),U72(tt) -> true,U81(tt,M,N) -> U82(isNatKind(M),M,N),U82(tt,M,N) -> U83(isNat(N),M,N),U83(tt,M,N) -> U84(isNatKind(N),M,N),U84(tt,M,N) -> _&gt;_(N,M),U91(tt,N) -> U92(isNatKind(N),N),U92(tt,N) -> N,_*_(N,0) -> U11(isNat(N),N),_*_(s_(N),s_(M)) -> U21(isNat(M),M,N),_+_(N,0) -> U31(isNat(N),N),_+_(s_(N),s_(M)) -> U41(isNat(M),M,N),_&lt;_(N,M) -> U51(isNat(M),M,N),_&gt;_(0,M) -> U61(isNat(M),M),_&gt;_(N',0) -> U71(isNzNat(N'),N'),_&gt;_(s_(N),s_(M)) -> U81(isNat(M),M,N),d(0,N) -> U91(isNat(N),N),d(s_(N),s_(M)) -> U101(isNat(M),M,N),equal(X,X) -> tt,gcd(0,N) -> U111(isNat(N),N),gcd(N',M') -> U121(isNzNat(M'),M',N'),gcd(N',N') -> U131(isNzNat(N'),N'),isBoolean(false) -> tt,isBoolean(true) -> tt,isBoolean(_&lt;_(V1,V2)) -> U141(isNatKind(V1),V1,V2),isBoolean(_&gt;_(V1,V2)) -> U151(isNatKind(V1),V1,V2),isBooleanKind(false) -> tt,isBooleanKind(true) -> tt,isBooleanKind(_&lt;_(V1,V2)) -> U161(isNatKind(V1),V2),isBooleanKind(_&gt;_(V1,V2)) -> U171(isNatKind(V1),V2),isNat(0) -> tt,isNat(V) -> U181(isNatKind(V),V),isNat(_*_(V1,V2)) -> U191(isNatKind(V1),V1,V2),isNat(_+_(V1,V2)) -> U201(isNatKind(V1),V1,V2),isNat(d(V1,V2)) -> U211(isNatKind(V1),V1,V2),isNat(gcd(V1,V2)) -> U221(isNatKind(V1),V1,V2),isNat(p_(V1)) -> U231(isNatKind(V1),V1),isNat(quot(V1,V2)) -> U241(isNatKind(V1),V1,V2),isNatKind(0) -> tt,isNatKind(1) -> tt,isNatKind(2) -> tt,isNatKind(3) -> tt,isNatKind(4) -> tt,isNatKind(5) -> tt,isNatKind(6) -> tt,isNatKind(7) -> tt,isNatKind(_*_(V1,V2)) -> U251(isNatKind(V1),V2),isNatKind(_+_(V1,V2)) -> U261(isNatKind(V1),V2),isNatKind(d(V1,V2)) -> U271(isNatKind(V1),V2),isNatKind(gcd(V1,V2)) -> U281(isNatKind(V1),V2),isNatKind(p_(V1)) -> U291(isNatKind(V1)),isNatKind(quot(V1,V2)) -> U301(isNatKind(V1),V2),isNatKind(s_(V1)) -> U311(isNatKind(V1)),isNzNat(1) -> tt,isNzNat(2) -> tt,isNzNat(3) -> tt,isNzNat(4) -> tt,isNzNat(5) -> tt,isNzNat(6) -> tt,isNzNat(7) -> tt,isNzNat(_*_(V1,V2)) -> U321(isNatKind(V1),V1,V2),isNzNat(gcd(V1,V2)) -> U331(isNatKind(V1),V1,V2),isNzNat(s_(V1)) -> U341(isNatKind(V1),V1),p_(s_(N)) -> U351(isNat(N),N),quot(M',M') -> U361(isNzNat(M'),M'),quot(N,M') -> U371(isNzNat(M'),M',N),quot(N,M') -> U381(isNzNat(M'),M',N)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\maude2.xml" :
TRS {trsSignature = fromList [("*",2),("+",2),("0",0),("False",0),("True",0),("d",2),("gcd",2),("gt",2),("is_NzNat",1),("lt",2),("p",1),("quot",2),("s",1),("u_01",1),("u_02",2),("u_1",3),("u_11",3),("u_2",1),("u_21",3),("u_3",3),("u_31",4),("u_4",1)], trsVariables = fromList ["M","N","NzM","NzN"], trsRMap = [], trsRules = [p(s(N)) -> N,+(N,0) -> N,+(s(N),s(M)) -> s(s(+(N,M))),*(N,0) -> 0,*(s(N),s(M)) -> s(+(N,+(M,*(N,M)))),gt(0,M) -> False,gt(NzN,0) -> u_4(is_NzNat(NzN)),u_4(True) -> True,is_NzNat(0) -> False,is_NzNat(s(N)) -> True,gt(s(N),s(M)) -> gt(N,M),lt(N,M) -> gt(M,N),d(0,N) -> N,d(s(N),s(M)) -> d(N,M),quot(N,NzM) -> u_11(is_NzNat(NzM),N,NzM),u_11(True,N,NzM) -> u_1(gt(N,NzM),N,NzM),u_1(True,N,NzM) -> s(quot(d(N,NzM),NzM)),quot(NzM,NzM) -> u_01(is_NzNat(NzM)),u_01(True) -> s(0),quot(N,NzM) -> u_21(is_NzNat(NzM),NzM,N),u_21(True,NzM,N) -> u_2(gt(NzM,N)),u_2(True) -> 0,gcd(0,N) -> 0,gcd(NzM,NzM) -> u_02(is_NzNat(NzM),NzM),u_02(True,NzM) -> NzM,gcd(NzN,NzM) -> u_31(is_NzNat(NzN),is_NzNat(NzM),NzN,NzM),u_31(True,True,NzN,NzM) -> u_3(gt(NzN,NzM),NzN,NzM),u_3(True,NzN,NzM) -> gcd(d(NzN,NzM),NzM)], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\AC46.xml" :
TRS {trsSignature = fromList [("0",0),("add",2),("app",2),("eq",2),("false",0),("if_min",2),("if_minsort",3),("if_rm",3),("le",2),("min",1),("minsort",2),("nil",0),("rm",2),("s",1),("true",0)], trsVariables = fromList ["m","n","x","y"], trsRMap = [], trsRules = [eq(0,0) -> true,eq(0,s(x)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),app(nil,y) -> y,app(add(n,x),y) -> add(n,app(x,y)),min(add(n,nil)) -> n,min(add(n,add(m,x))) -> if_min(le(n,m),add(n,add(m,x))),if_min(true,add(n,add(m,x))) -> min(add(n,x)),if_min(false,add(n,add(m,x))) -> min(add(m,x)),rm(n,nil) -> nil,rm(n,add(m,x)) -> if_rm(eq(n,m),n,add(m,x)),if_rm(true,n,add(m,x)) -> rm(n,x),if_rm(false,n,add(m,x)) -> add(m,rm(n,x)),minsort(nil,nil) -> nil,minsort(add(n,x),y) -> if_minsort(eq(n,min(add(n,x))),add(n,x),y),if_minsort(true,add(n,x),y) -> add(n,minsort(app(rm(n,x),y),nil)),if_minsort(false,add(n,x),y) -> minsort(x,add(n,y))], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\AC45.xml" :
TRS {trsSignature = fromList [("0",0),("add",2),("eq",2),("false",0),("if_rm",3),("nil",0),("purge",1),("rm",2),("s",1),("true",0)], trsVariables = fromList ["m","n","x","y"], trsRMap = [], trsRules = [eq(0,0) -> true,eq(0,s(x)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),rm(n,nil) -> nil,rm(n,add(m,x)) -> if_rm(eq(n,m),n,add(m,x)),if_rm(true,n,add(m,x)) -> rm(n,x),if_rm(false,n,add(m,x)) -> add(m,rm(n,x)),purge(nil) -> nil,purge(add(n,x)) -> add(n,purge(rm(n,x)))], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\AC44.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("gcd",2),("if_gcd",3),("if_minus",3),("le",2),("minus",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),minus(0,y) -> 0,minus(s(x),y) -> if_minus(le(s(x),y),s(x),y),if_minus(true,s(x),y) -> 0,if_minus(false,s(x),y) -> s(minus(x,y)),gcd(0,y) -> y,gcd(s(x),0) -> s(x),gcd(s(x),s(y)) -> if_gcd(le(y,x),s(x),s(y)),if_gcd(true,s(x),s(y)) -> gcd(minus(x,y),s(y)),if_gcd(false,s(x),s(y)) -> gcd(minus(y,x),s(x))], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\AC43.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("gcd",2),("if_gcd",3),("le",2),("minus",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),gcd(0,y) -> y,gcd(s(x),0) -> s(x),gcd(s(x),s(y)) -> if_gcd(le(y,x),s(x),s(y)),if_gcd(true,s(x),s(y)) -> gcd(minus(x,y),s(y)),if_gcd(false,s(x),s(y)) -> gcd(minus(y,x),s(x))], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Equational\\Mixed_C\\AC42.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("gcd",2),("if_gcd",3),("le",2),("minus",2),("pred",1),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),pred(s(x)) -> x,minus(x,0) -> x,minus(x,s(y)) -> pred(minus(x,y)),gcd(0,y) -> y,gcd(s(x),0) -> s(x),gcd(s(x),s(y)) -> if_gcd(le(y,x),s(x),s(y)),if_gcd(true,s(x),s(y)) -> gcd(minus(x,y),s(y)),if_gcd(false,s(x),s(y)) -> gcd(minus(y,x),s(x))], trsType = TRSEquational, trsStrategy = Just FULL, signatureBlock = True}
