
++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\quotrem.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("less",2),("minus",2),("pair",2),("quotrem",2),("s",1),("true",0)], trsVariables = fromList ["q","r","x","y"], trsRMap = [], trsRules = [less(x,0) -> false,less(0,s(x)) -> true,less(s(x),s(y)) -> less(x,y),minus(0,s(y)) -> 0,minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),quotrem(0,s(y)) -> pair(0,0),quotrem(s(x),s(y)) -> pair(0,s(x)) | less(x,y) -> true,quotrem(s(x),s(y)) -> pair(s(q),r) | less(x,y) -> false, quotrem(minus(x,y),s(y)) -> pair(q,r)], trsType = TRSContextSensitiveConditional ORIENTED, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\quicksort.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("false",0),("le",2),("nil",0),("pair",2),("pairs",2),("qsort",1),("s",1),("split",2),("true",0)], trsVariables = fromList ["x","xs","y","ys","zs"], trsRMap = [], trsRules = [le(0,x) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),app(nil,x) -> x,app(cons(x,xs),ys) -> cons(x,app(xs,ys)),split(x,nil) -> pair(nil,nil),qsort(nil) -> nil,split(x,cons(y,ys)) -> pair(xs,cons(y,zs)) | split(x,ys) -> pairs(xs,zs), le(x,y) -> true,split(x,cons(y,ys)) -> pair(cons(y,xs),zs) | split(x,ys) -> pairs(xs,zs), le(x,y) -> false,qsort(cons(x,xs)) -> app(qsort(ys),cons(x,qsort(zs))) | split(x,xs) -> pair(ys,zs)], trsType = TRSContextSensitiveConditional ORIENTED, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\quick.xml" :
TRS {trsSignature = fromList [("Cons",2),("False",0),("Nil",0),("Pair",2),("True",0),("append",2),("match_0",3),("match_1",3),("match_2",5),("match_3",7),("match_4",2),("match_5",4),("part",2),("quick",1),("test",2)], trsVariables = fromList ["a","a_4","l","l'","l1","l1_2","l2","l2_1","l_3","l_5","x","x_0","y"], trsRMap = [], trsRules = [test(x_0,y) -> True,test(x_0,y) -> False,append(l1_2,l2_1) -> match_0(l1_2,l2_1,l1_2),match_0(l1_2,l2_1,Nil) -> l2_1,match_0(l1_2,l2_1,Cons(x,l)) -> Cons(x,append(l,l2_1)),part(a_4,l_3) -> match_1(a_4,l_3,l_3),match_1(a_4,l_3,Nil) -> Pair(Nil,Nil),match_1(a_4,l_3,Cons(x,l')) -> match_2(x,l',a_4,l_3,part(a_4,l')),match_2(x,l',a_4,l_3,Pair(l1,l2)) -> match_3(l1,l2,x,l',a_4,l_3,test(a_4,x)),match_3(l1,l2,x,l',a_4,l_3,False) -> Pair(Cons(x,l1),l2),match_3(l1,l2,x,l',a_4,l_3,True) -> Pair(l1,Cons(x,l2)),quick(l_5) -> match_4(l_5,l_5),match_4(l_5,Nil) -> Nil,match_4(l_5,Cons(a,l')) -> match_5(a,l',l_5,part(a,l')),match_5(a,l',l_5,Pair(l1,l2)) -> append(quick(l1),Cons(a,quick(l2)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\gcd.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("gcd",2),("less",2),("minus",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [less(x,0) -> false,less(0,s(x)) -> true,less(s(x),s(y)) -> less(x,y),minus(0,s(y)) -> 0,minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),gcd(x,x) -> x,gcd(s(x),0) -> s(x),gcd(0,s(y)) -> s(y),gcd(s(x),s(y)) -> gcd(minus(x,y),s(y)) | less(y,x) -> true,gcd(s(x),s(y)) -> gcd(s(x),minus(y,x)) | less(x,y) -> true], trsType = TRSContextSensitiveConditional ORIENTED, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\fib.xml" :
TRS {trsSignature = fromList [("0",0),("fib",1),("pair",2),("plus",2),("s",1)], trsVariables = fromList ["x","x'","y","y'","z"], trsRMap = [], trsRules = [fib(0) -> pair(0,s(0)),plus(x,y) -> y' | x -> 0, y -> y',plus(x,y) -> s(plus(x',y')) | x -> s(x'), y -> y',fib(s(x)) -> pair(z,plus(y,z)) | fib(x) -> pair(y,z)], trsType = TRSContextSensitiveConditional ORIENTED, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\AAECCcond.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("empty",1),("f",2),("false",0),("fstsplit",2),("length",1),("leq",2),("map_f",2),("nil",0),("process",2),("s",1),("self",0),("sndsplit",2),("true",0)], trsVariables = fromList ["h","m","n","pid","store","t","x"], trsRMap = [], trsRules = [fstsplit(0,x) -> nil,fstsplit(s(n),nil) -> nil,fstsplit(s(n),cons(h,t)) -> cons(h,fstsplit(n,t)),sndsplit(0,x) -> x,sndsplit(s(n),nil) -> nil,sndsplit(s(n),cons(h,t)) -> sndsplit(n,t),empty(nil) -> true,empty(cons(h,t)) -> false,leq(0,m) -> true,leq(s(n),0) -> false,leq(s(n),s(m)) -> leq(n,m),length(nil) -> 0,length(cons(h,t)) -> s(length(t)),app(nil,x) -> x,app(cons(h,t),x) -> cons(h,app(t,x)),map_f(pid,nil) -> nil,map_f(pid,cons(h,t)) -> app(f(pid,h),map_f(pid,t)),process(store,m) -> process(app(map_f(self,nil),sndsplit(m,store)),m) | leq(m,length(store)) -> true, empty(fstsplit(m,store)) -> false,process(store,m) -> process(sndsplit(m,app(map_f(self,nil),store)),m) | leq(m,length(store)) -> false, empty(fstsplit(m,app(map_f(self,nil),store))) -> false], trsType = TRSContextSensitiveConditional ORIENTED, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\AAECC-ring-cond.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("empty",1),("f",2),("false",0),("fstsplit",2),("head",1),("length",1),("leq",2),("map_f",2),("nil",0),("ring",6),("s",1),("sndsplit",2),("tail",1),("three",0),("true",0),("two",0)], trsVariables = fromList ["h","in_2","in_3","m","n","pid","st_1","st_2","st_3","t","x"], trsRMap = [], trsRules = [fstsplit(0,x) -> nil,fstsplit(s(n),nil) -> nil,fstsplit(s(n),cons(h,t)) -> cons(h,fstsplit(n,t)),sndsplit(0,x) -> x,sndsplit(s(n),nil) -> nil,sndsplit(s(n),cons(h,t)) -> sndsplit(n,t),empty(nil) -> true,empty(cons(h,t)) -> false,leq(0,m) -> true,leq(s(n),0) -> false,leq(s(n),s(m)) -> leq(n,m),length(nil) -> 0,length(cons(h,t)) -> s(length(t)),app(nil,x) -> x,app(cons(h,t),x) -> cons(h,app(t,x)),map_f(pid,nil) -> nil,map_f(pid,cons(h,t)) -> app(f(pid,h),map_f(pid,t)),head(cons(h,t)) -> h,tail(cons(h,t)) -> t,ring(st_1,in_2,st_2,in_3,st_3,m) -> ring(sndsplit(m,st_1),cons(fstsplit(m,st_1),in_2),st_2,in_3,st_3,m) | empty(fstsplit(m,st_1)) -> false,ring(st_1,in_2,st_2,in_3,st_3,m) -> ring(st_1,in_2,sndsplit(m,st_2),cons(fstsplit(m,st_2),in_3),st_3,m) | leq(m,length(st_2)) -> true, empty(fstsplit(m,st_2)) -> false,ring(st_1,in_2,st_2,in_3,st_3,m) -> ring(st_1,tail(in_2),sndsplit(m,app(map_f(two,head(in_2)),st_2)),cons(fstsplit(m,app(map_f(two,head(in_2)),st_2)),in_3),st_3,m) | leq(m,length(st_2)) -> false, empty(fstsplit(m,app(map_f(two,head(in_2)),st_2))) -> false,ring(st_1,in_2,st_2,in_3,st_3,m) -> ring(st_1,tail(in_2),st_2,in_3,st_3,m) | empty(map_f(two,head(in_2))) -> true,ring(st_1,in_2,st_2,in_3,st_3,m) -> ring(st_1,in_2,st_2,in_3,sndsplit(m,st_3),m) | leq(m,length(st_3)) -> true, empty(fstsplit(m,st_3)) -> false,ring(st_1,in_2,st_2,in_3,st_3,m) -> ring(st_1,in_2,st_2,tail(in_3),sndsplit(m,app(map_f(three,head(in_3)),st_3)),m) | leq(m,length(st_3)) -> false, empty(fstsplit(m,app(map_f(three,head(in_3)),st_3))) -> false,ring(st_1,in_2,st_2,in_3,st_3,m) -> ring(st_1,in_2,st_2,tail(in_3),st_3,m) | empty(map_f(three,head(in_3))) -> true], trsType = TRSContextSensitiveConditional ORIENTED, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\quotrem.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("less",2),("minus",2),("pair",2),("quotrem",2),("s",1),("true",0)], trsVariables = fromList ["q","r","x","y"], trsRMap = [], trsRules = [less(x,0) -> false,less(0,s(x)) -> true,less(s(x),s(y)) -> less(x,y),minus(0,s(y)) -> 0,minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),quotrem(0,s(y)) -> pair(0,0),quotrem(s(x),s(y)) -> pair(0,s(x)) | less(x,y) -> true,quotrem(s(x),s(y)) -> pair(s(q),r) | less(x,y) -> false, quotrem(minus(x,y),s(y)) -> pair(q,r)], trsType = TRSContextSensitiveConditional ORIENTED, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\quicksort.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("false",0),("le",2),("nil",0),("pair",2),("pairs",2),("qsort",1),("s",1),("split",2),("true",0)], trsVariables = fromList ["x","xs","y","ys","zs"], trsRMap = [], trsRules = [le(0,x) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),app(nil,x) -> x,app(cons(x,xs),ys) -> cons(x,app(xs,ys)),split(x,nil) -> pair(nil,nil),qsort(nil) -> nil,split(x,cons(y,ys)) -> pair(xs,cons(y,zs)) | split(x,ys) -> pairs(xs,zs), le(x,y) -> true,split(x,cons(y,ys)) -> pair(cons(y,xs),zs) | split(x,ys) -> pairs(xs,zs), le(x,y) -> false,qsort(cons(x,xs)) -> app(qsort(ys),cons(x,qsort(zs))) | split(x,xs) -> pair(ys,zs)], trsType = TRSContextSensitiveConditional ORIENTED, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Conditional\\Mixed_CTRS\\quick.xml" :
TRS {trsSignature = fromList [("Cons",2),("False",0),("Nil",0),("Pair",2),("True",0),("append",2),("match_0",3),("match_1",3),("match_2",5),("match_3",7),("match_4",2),("match_5",4),("part",2),("quick",1),("test",2)], trsVariables = fromList ["a","a_4","l","l'","l1","l1_2","l2","l2_1","l_3","l_5","x","x_0","y"], trsRMap = [], trsRules = [test(x_0,y) -> True,test(x_0,y) -> False,append(l1_2,l2_1) -> match_0(l1_2,l2_1,l1_2),match_0(l1_2,l2_1,Nil) -> l2_1,match_0(l1_2,l2_1,Cons(x,l)) -> Cons(x,append(l,l2_1)),part(a_4,l_3) -> match_1(a_4,l_3,l_3),match_1(a_4,l_3,Nil) -> Pair(Nil,Nil),match_1(a_4,l_3,Cons(x,l')) -> match_2(x,l',a_4,l_3,part(a_4,l')),match_2(x,l',a_4,l_3,Pair(l1,l2)) -> match_3(l1,l2,x,l',a_4,l_3,test(a_4,x)),match_3(l1,l2,x,l',a_4,l_3,False) -> Pair(Cons(x,l1),l2),match_3(l1,l2,x,l',a_4,l_3,True) -> Pair(l1,Cons(x,l2)),quick(l_5) -> match_4(l_5,l_5),match_4(l_5,Nil) -> Nil,match_4(l_5,Cons(a,l')) -> match_5(a,l',l_5,part(a,l')),match_5(a,l',l_5,Pair(l1,l2)) -> append(quick(l1),Cons(a,quick(l2)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}
