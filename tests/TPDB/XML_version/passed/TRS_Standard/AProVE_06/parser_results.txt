
++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\tower_sizeChange.xml" :
TRS {trsSignature = fromList [("0",0),("a",0),("b",0),("double",1),("exp",1),("f",3),("half",1),("s",1),("tower",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [tower(x) -> f(a,x,s(0)),f(a,0,y) -> y,f(a,s(x),y) -> f(b,y,s(x)),f(b,y,x) -> f(a,half(x),exp(y)),exp(0) -> s(0),exp(s(x)) -> double(exp(x)),double(0) -> 0,double(s(x)) -> s(s(double(x))),half(0) -> double(0),half(s(0)) -> half(0),half(s(s(x))) -> s(half(x))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\tower.xml" :
TRS {trsSignature = fromList [("0",0),("exp",2),("p",1),("plus",2),("s",1),("times",2),("tower",2),("towerIter",3)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [plus(0,x) -> x,plus(s(x),y) -> s(plus(p(s(x)),y)),times(0,y) -> 0,times(s(x),y) -> plus(y,times(p(s(x)),y)),exp(x,0) -> s(0),exp(x,s(y)) -> times(x,exp(x,y)),p(s(0)) -> 0,p(s(s(x))) -> s(p(s(x))),tower(x,y) -> towerIter(x,y,s(0)),towerIter(0,y,z) -> z,towerIter(s(x),y,z) -> towerIter(p(s(x)),y,exp(y,z))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\sizeChange.xml" :
TRS {trsSignature = fromList [("cons",2),("nil",0),("r",4),("succ",1),("zero",0)], trsVariables = fromList ["w","ws","xs","y","ys","z","zs"], trsRMap = [], trsRules = [r(xs,ys,zs,nil) -> xs,r(xs,nil,zs,cons(w,ws)) -> r(xs,xs,cons(succ(zero),zs),ws),r(xs,cons(y,ys),nil,cons(w,ws)) -> r(xs,xs,cons(succ(zero),nil),ws),r(xs,cons(y,ys),cons(z,zs),cons(w,ws)) -> r(ys,cons(y,ys),zs,cons(succ(zero),cons(w,ws)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\quot.xml" :
TRS {trsSignature = fromList [("0",0),("divByZeroError",0),("false",0),("if_quot",4),("le",2),("minus",2),("quot",2),("s",1),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [minus(x,x) -> 0,minus(0,x) -> 0,minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),quot(x,y) -> if_quot(minus(x,y),y,le(y,0),le(y,x)),if_quot(x,y,true,z) -> divByZeroError,if_quot(x,y,false,true) -> s(quot(x,y)),if_quot(x,y,false,false) -> 0], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\quicksort.xml" :
TRS {trsSignature = fromList [("0",0),("add",2),("app",2),("false",0),("head",1),("high",2),("if_high",3),("if_low",3),("if_qs",4),("isempty",1),("le",2),("low",2),("nil",0),("quicksort",1),("s",1),("tail",1),("true",0)], trsVariables = fromList ["m","n","x","y"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),app(nil,y) -> y,app(add(n,x),y) -> add(n,app(x,y)),low(n,nil) -> nil,low(n,add(m,x)) -> if_low(le(m,n),n,add(m,x)),if_low(true,n,add(m,x)) -> add(m,low(n,x)),if_low(false,n,add(m,x)) -> low(n,x),high(n,nil) -> nil,high(n,add(m,x)) -> if_high(le(m,n),n,add(m,x)),if_high(true,n,add(m,x)) -> high(n,x),if_high(false,n,add(m,x)) -> add(m,high(n,x)),head(add(n,x)) -> n,tail(add(n,x)) -> x,isempty(nil) -> true,isempty(add(n,x)) -> false,quicksort(x) -> if_qs(isempty(x),low(head(x),tail(x)),head(x),high(head(x),tail(x))),if_qs(true,x,n,y) -> nil,if_qs(false,x,n,y) -> app(quicksort(x),add(n,quicksort(y)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\nonterm.xml" :
TRS {trsSignature = fromList [("0",0),("f",3),("id",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(s(s(s(s(s(s(s(s(x)))))))),y,y) -> f(id(s(s(s(s(s(s(s(s(x))))))))),y,y),id(s(x)) -> s(id(x)),id(0) -> 0], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\modulo.xml" :
TRS {trsSignature = fromList [("0",0),("divByZeroError",0),("false",0),("if_mod",5),("isZero",1),("le",2),("minus",2),("mod",2),("s",1),("true",0)], trsVariables = fromList ["b","x","y","z"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),minus(x,x) -> 0,minus(x,0) -> x,minus(0,x) -> 0,minus(s(x),s(y)) -> minus(x,y),isZero(0) -> true,isZero(s(x)) -> false,mod(x,y) -> if_mod(isZero(y),le(y,x),x,y,minus(x,y)),if_mod(true,b,x,y,z) -> divByZeroError,if_mod(false,false,x,y,z) -> x,if_mod(false,true,x,y,z) -> mod(z,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\mapHard.xml" :
TRS {trsSignature = fromList [("ap",2),("cons",0),("dropLast",0),("false",0),("if",0),("isEmpty",0),("last",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y","ys"], trsRMap = [], trsRules = [ap(ap(map,f),xs) -> ap(ap(ap(if,ap(isEmpty,xs)),f),xs),ap(ap(ap(if,true),f),xs) -> nil,ap(ap(ap(if,false),f),xs) -> ap(ap(cons,ap(f,ap(last,xs))),ap(ap(map,f),ap(dropLast,xs))),ap(isEmpty,nil) -> true,ap(isEmpty,ap(ap(cons,x),xs)) -> false,ap(last,ap(ap(cons,x),nil)) -> x,ap(last,ap(ap(cons,x),ap(ap(cons,y),ys))) -> ap(last,ap(ap(cons,y),ys)),ap(dropLast,nil) -> nil,ap(dropLast,ap(ap(cons,x),nil)) -> nil,ap(dropLast,ap(ap(cons,x),ap(ap(cons,y),ys))) -> ap(ap(cons,x),ap(dropLast,ap(ap(cons,y),ys)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\logarithm.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("if",4),("inc",1),("le",2),("log",1),("logIter",2),("logZeroError",0),("minus",2),("quot",2),("s",1),("true",0)], trsVariables = fromList ["b","x","y"], trsRMap = [], trsRules = [minus(x,0) -> x,minus(s(x),s(y)) -> minus(x,y),quot(0,s(y)) -> 0,quot(s(x),s(y)) -> s(quot(minus(x,y),s(y))),le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),inc(s(x)) -> s(inc(x)),inc(0) -> s(0),log(x) -> logIter(x,0),logIter(x,y) -> if(le(s(0),x),le(s(s(0)),x),quot(x,s(s(0))),inc(y)),if(false,b,x,y) -> logZeroError,if(true,false,x,s(y)) -> y,if(true,true,x,y) -> logIter(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\identity.xml" :
TRS {trsSignature = fromList [("0",0),("d",0),("double",1),("f",2),("g",2),("h",0),("half",1),("id",1),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [g(x,0) -> 0,g(d,s(x)) -> s(s(g(d,x))),g(h,s(0)) -> 0,g(h,s(s(x))) -> s(g(h,x)),double(x) -> g(d,x),half(x) -> g(h,x),f(s(x),y) -> f(half(s(x)),double(y)),f(s(0),y) -> y,id(x) -> f(x,s(0))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\factorial2.xml" :
TRS {trsSignature = fromList [("0",0),("facIter",2),("factorial",1),("false",0),("if",4),("isZero",1),("minus",2),("p",1),("plus",2),("s",1),("times",2),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [plus(0,x) -> x,plus(s(x),y) -> s(plus(x,y)),times(0,y) -> 0,times(s(x),y) -> plus(y,times(x,y)),p(s(x)) -> x,p(0) -> 0,minus(x,0) -> x,minus(0,x) -> 0,minus(x,s(y)) -> p(minus(x,y)),isZero(0) -> true,isZero(s(x)) -> false,facIter(x,y) -> if(isZero(x),minus(x,s(0)),y,times(y,x)),if(true,x,y,z) -> y,if(false,x,y,z) -> facIter(x,z),factorial(x) -> facIter(x,s(0))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\factorial1.xml" :
TRS {trsSignature = fromList [("0",0),("fac",2),("factorial",1),("p",1),("plus",2),("s",1),("times",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [plus(0,x) -> x,plus(s(x),y) -> s(plus(p(s(x)),y)),times(0,y) -> 0,times(s(x),y) -> plus(y,times(p(s(x)),y)),p(s(0)) -> 0,p(s(s(x))) -> s(p(s(x))),fac(0,x) -> x,fac(s(x),y) -> fac(p(s(x)),times(s(x),y)),factorial(x) -> fac(x,s(0))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\div_notTermin.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("divByZeroError",0),("false",0),("ge",2),("if",3),("ify",3),("minus",2),("plus",2),("s",1),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [ge(0,0) -> true,ge(s(x),0) -> ge(x,0),ge(0,s(0)) -> false,ge(0,s(s(x))) -> ge(0,s(x)),ge(s(x),s(y)) -> ge(x,y),minus(0,0) -> 0,minus(0,s(x)) -> minus(0,x),minus(s(x),0) -> s(minus(x,0)),minus(s(x),s(y)) -> minus(x,y),plus(0,0) -> 0,plus(0,s(x)) -> s(plus(0,x)),plus(s(x),y) -> s(plus(x,y)),div(x,y) -> ify(ge(y,s(0)),x,y),ify(false,x,y) -> divByZeroError,ify(true,x,y) -> if(ge(x,y),x,y),if(false,x,y) -> 0,if(true,x,y) -> s(div(minus(x,y),y)),div(plus(x,y),z) -> plus(div(x,z),div(y,z))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_06\\div_notCeTermin.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("divByZeroError",0),("false",0),("ge",2),("if",3),("ify",3),("minus",2),("plus",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [ge(0,0) -> true,ge(s(x),0) -> ge(x,0),ge(0,s(0)) -> false,ge(0,s(s(x))) -> ge(0,s(x)),ge(s(x),s(y)) -> ge(x,y),minus(0,0) -> 0,minus(0,s(x)) -> minus(0,x),minus(s(x),0) -> s(minus(x,0)),minus(s(x),s(y)) -> minus(x,y),plus(0,0) -> 0,plus(0,s(x)) -> s(plus(0,x)),plus(s(x),y) -> s(plus(x,y)),div(x,y) -> ify(ge(y,s(0)),x,y),ify(false,x,y) -> divByZeroError,ify(true,x,y) -> if(ge(x,y),x,y),if(false,x,y) -> 0,if(true,x,y) -> s(div(minus(x,y),y))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}
