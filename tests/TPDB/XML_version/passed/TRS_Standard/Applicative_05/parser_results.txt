
++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\TypeEx5.xml" :
TRS {trsSignature = fromList [("ap",2),("app",2),("f",0),("g",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [ap(ap(g,x),y) -> y,ap(f,x) -> ap(f,app(g,x))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\TypeEx3.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("hd",0),("map",0),("nil",0)], trsVariables = fromList ["f","n","x","xs"], trsRMap = [], trsRules = [app(app(f,0),n) -> app(app(hd,app(app(map,f),app(app(cons,0),nil))),n),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\TypeEx1.xml" :
TRS {trsSignature = fromList [("ap",2),("cons",0),("ff",0),("nil",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [ap(ap(ff,x),x) -> ap(ap(x,ap(ff,x)),ap(ap(cons,x),nil))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\TreeSize.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("map",0),("nil",0),("node",0),("plus",0),("s",0),("size",0),("sum",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(sum,app(app(cons,x),xs)) -> app(app(plus,x),app(sum,xs)),app(size,app(app(node,x),xs)) -> app(s,app(sum,app(app(map,size),xs))),app(app(plus,0),x) -> 0,app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\TreeMap.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("map",0),("nil",0),("node",0),("treemap",0)], trsVariables = fromList ["f","x","xs"], trsRMap = [], trsRules = [app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(treemap,f),app(app(node,x),xs)) -> app(app(node,app(f,x)),app(app(map,app(treemap,f)),xs))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\TreeLevels.xml" :
TRS {trsSignature = fromList [("app",2),("append",0),("combine",0),("cons",0),("levels",0),("map",0),("nil",0),("node",0),("zip",0)], trsVariables = fromList ["f","x","xs","xss","ys","yss"], trsRMap = [], trsRules = [app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(append,xs),nil) -> xs,app(app(append,nil),ys) -> ys,app(app(append,app(app(cons,x),xs)),ys) -> app(app(cons,x),app(app(append,xs),ys)),app(app(zip,nil),yss) -> yss,app(app(zip,xss),nil) -> xss,app(app(zip,app(app(cons,xs),xss)),app(app(cons,ys),yss)) -> app(app(cons,app(app(append,xs),ys)),app(app(zip,xss),yss)),app(app(combine,xs),nil) -> xs,app(app(combine,xs),app(app(cons,ys),yss)) -> app(app(combine,app(app(zip,xs),ys)),yss),app(levels,app(app(node,x),xs)) -> app(app(cons,app(app(cons,x),nil)),app(app(combine,nil),app(app(map,levels),xs)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\TreeHeight.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("false",0),("height",0),("if",0),("le",0),("map",0),("maxlist",0),("nil",0),("node",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y","ys"], trsRMap = [], trsRules = [app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(le,0),y) -> true,app(app(le,app(s,x)),0) -> false,app(app(le,app(s,x)),app(s,y)) -> app(app(le,x),y),app(app(maxlist,x),app(app(cons,y),ys)) -> app(app(if,app(app(le,x),y)),app(app(maxlist,y),ys)),app(app(maxlist,x),nil) -> x,app(height,app(app(node,x),xs)) -> app(s,app(app(maxlist,0),app(app(map,height),xs)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\TreeFlatten.xml" :
TRS {trsSignature = fromList [("app",2),("append",0),("concat",0),("cons",0),("flatten",0),("map",0),("nil",0),("node",0)], trsVariables = fromList ["f","x","xs","ys"], trsRMap = [], trsRules = [app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(flatten,app(app(node,x),xs)) -> app(app(cons,x),app(concat,app(app(map,flatten),xs))),app(concat,nil) -> nil,app(concat,app(app(cons,x),xs)) -> app(app(append,x),app(concat,xs)),app(app(append,nil),xs) -> xs,app(app(append,app(app(cons,x),xs)),ys) -> app(app(cons,x),app(app(append,xs),ys))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\termMonTypes.xml" :
TRS {trsSignature = fromList [("0",0),("ap",2),("f",0),("g",0),("s",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [ap(f,x) -> x,ap(ap(ap(g,x),y),ap(s,z)) -> ap(ap(ap(g,x),y),ap(ap(x,y),0))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\TakeDropWhile.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("dropWhile",0),("if",0),("nil",0),("takeWhile",0),("true",0)], trsVariables = fromList ["p","x","xs","y"], trsRMap = [], trsRules = [app(app(app(if,true),x),y) -> x,app(app(app(if,true),x),y) -> y,app(app(takeWhile,p),nil) -> nil,app(app(takeWhile,p),app(app(cons,x),xs)) -> app(app(app(if,app(p,x)),app(app(cons,x),app(app(takeWhile,p),xs))),nil),app(app(dropWhile,p),nil) -> nil,app(app(dropWhile,p),app(app(cons,x),xs)) -> app(app(app(if,app(p,x)),app(app(dropWhile,p),xs)),app(app(cons,x),xs))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\ReverseLastInit.xml" :
TRS {trsSignature = fromList [("app",2),("compose",0),("cons",0),("hd",0),("init",0),("last",0),("nil",0),("reverse",0),("reverse2",0),("tl",0)], trsVariables = fromList ["f","g","l","x","xs"], trsRMap = [], trsRules = [app(app(app(compose,f),g),x) -> app(g,app(f,x)),app(reverse,l) -> app(app(reverse2,l),nil),app(app(reverse2,nil),l) -> l,app(app(reverse2,app(app(cons,x),xs)),l) -> app(app(reverse2,xs),app(app(cons,x),l)),app(hd,app(app(cons,x),xs)) -> x,app(tl,app(app(cons,x),xs)) -> xs,last -> app(app(compose,hd),reverse),init -> app(app(compose,reverse),app(app(compose,tl),reverse))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\nonTermF.xml" :
TRS {trsSignature = fromList [("ap",2),("cons",0),("f",0),("foldr",0),("nil",0)], trsVariables = fromList ["g","h","x","xs"], trsRMap = [], trsRules = [ap(ap(f,x),x) -> ap(ap(x,ap(f,x)),ap(ap(cons,x),nil)),ap(ap(ap(foldr,g),h),nil) -> h,ap(ap(ap(foldr,g),h),ap(ap(cons,x),xs)) -> ap(ap(g,x),ap(ap(ap(foldr,g),h),xs))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\mapDivMinusHard.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("div",0),("map",0),("minus",0),("nil",0),("p",0),("s",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(minus,x),0) -> x,app(app(minus,app(s,x)),app(s,y)) -> app(app(minus,app(p,app(s,x))),app(p,app(s,y))),app(p,app(s,x)) -> x,app(app(div,0),app(s,y)) -> 0,app(app(div,app(s,x)),app(s,y)) -> app(s,app(app(div,app(app(minus,x),y)),app(s,y)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\mapDivMinus.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("div",0),("map",0),("minus",0),("nil",0),("s",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(minus,x),0) -> x,app(app(minus,app(s,x)),app(s,y)) -> app(app(minus,x),y),app(app(div,0),app(s,y)) -> 0,app(app(div,app(s,x)),app(s,y)) -> app(s,app(app(div,app(app(minus,x),y)),app(s,y)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Hamming.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("eq",0),("false",0),("hamming",0),("if",0),("list1",0),("list2",0),("list3",0),("lt",0),("map",0),("merge",0),("mult",0),("nil",0),("plus",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y","ys"], trsRMap = [], trsRules = [app(app(app(if,true),xs),ys) -> xs,app(app(app(if,false),xs),ys) -> ys,app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y),app(app(lt,0),app(s,y)) -> true,app(app(lt,y),0) -> false,app(app(eq,x),x) -> true,app(app(eq,app(s,x)),0) -> false,app(app(eq,0),app(s,x)) -> false,app(app(merge,xs),nil) -> xs,app(app(merge,nil),ys) -> ys,app(app(merge,app(app(cons,x),xs)),app(app(cons,y),ys)) -> app(app(app(if,app(app(lt,x),y)),app(app(cons,x),app(app(merge,xs),app(app(cons,y),ys)))),app(app(app(if,app(app(eq,x),y)),app(app(cons,x),app(app(merge,xs),ys))),app(app(cons,y),app(app(merge,app(app(cons,x),xs)),ys)))),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(mult,0),x) -> 0,app(app(mult,app(s,x)),y) -> app(app(plus,y),app(app(mult,x),y)),app(app(plus,0),x) -> 0,app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y)),list1 -> app(app(map,app(mult,app(s,app(s,0)))),hamming),list2 -> app(app(map,app(mult,app(s,app(s,app(s,0))))),hamming),list3 -> app(app(map,app(mult,app(s,app(s,app(s,app(s,app(s,0))))))),hamming),hamming -> app(app(cons,app(s,0)),app(app(merge,list1),app(app(merge,list2),list3)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex9Maps.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("g",0),("map_1",0),("map_2",0),("map_3",0)], trsVariables = fromList ["c","f","h","t"], trsRMap = [], trsRules = [app(app(map_1,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map_1,f),t)),app(app(app(map_2,f),c),app(app(cons,h),t)) -> app(app(cons,app(app(f,h),c)),app(app(app(map_2,f),c),t)),app(app(app(app(map_3,f),g),c),app(app(cons,h),t)) -> app(app(cons,app(app(app(f,g),h),c)),app(app(app(app(map_3,f),g),c),t))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex8Polymorphic.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("fmap",0),("map",0),("nil",0),("t_f",0),("twice",0)], trsVariables = fromList ["f","h","t","x"], trsRMap = [], trsRules = [app(app(twice,f),x) -> app(f,app(f,x)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t)),app(app(fmap,nil),x) -> nil,app(app(fmap,app(app(cons,f),t_f)),x) -> app(app(cons,app(f,x)),app(app(fmap,t_f),x))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex7_9.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("d",0),("false",0),("filter",0),("gtr",0),("if",0),("len",0),("nil",0),("s",0),("sub",0),("true",0)], trsVariables = fromList ["p","x","xs","y","ys"], trsRMap = [], trsRules = [app(app(app(if,true),xs),ys) -> xs,app(app(app(if,false),xs),ys) -> ys,app(app(sub,x),0) -> x,app(app(sub,app(s,x)),app(s,y)) -> app(app(sub,x),y),app(app(gtr,0),y) -> false,app(app(gtr,app(s,x)),0) -> true,app(app(gtr,app(s,x)),app(s,y)) -> app(app(gtr,x),y),app(app(d,x),0) -> true,app(app(d,app(s,x)),app(s,y)) -> app(app(app(if,app(app(gtr,x),y)),false),app(app(d,app(s,x)),app(app(sub,y),x))),app(len,nil) -> 0,app(len,app(app(cons,x),xs)) -> app(s,app(len,xs)),app(app(filter,p),nil) -> nil,app(app(filter,p),app(app(cons,x),xs)) -> app(app(app(if,app(p,x)),app(app(cons,x),app(app(filter,p),xs))),app(app(filter,p),xs))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex7Sorting.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("asort",0),("cons",0),("dsort",0),("insert",0),("max",0),("min",0),("nil",0),("s",0),("sort",0)], trsVariables = fromList ["f","g","x","y","z"], trsRMap = [], trsRules = [app(app(app(sort,f),g),nil) -> nil,app(app(app(sort,f),g),app(app(cons,x),y)) -> app(app(app(app(insert,f),g),app(app(app(sort,f),g),y)),x),app(app(app(app(insert,f),g),nil),y) -> app(app(cons,y),nil),app(app(app(app(insert,f),g),app(app(cons,x),z)),y) -> app(app(cons,app(app(f,x),y)),app(app(app(app(insert,f),g),z),app(app(g,x),y))),app(app(max,0),y) -> y,app(app(max,x),0) -> x,app(app(max,app(s,x)),app(s,y)) -> app(app(max,x),y),app(app(min,0),y) -> 0,app(app(min,x),0) -> 0,app(app(min,app(s,x)),app(s,y)) -> app(app(min,x),y),app(asort,z) -> app(app(app(sort,min),max),z),app(dsort,z) -> app(app(app(sort,max),min),z)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex7OrdinalRec.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("lim",0),("n",0),("rec",0),("rectuv",0),("s",0)], trsVariables = fromList ["f","t","u","v","x"], trsRMap = [], trsRules = [app(app(app(app(rec,t),u),v),0) -> t,app(app(app(app(rec,t),u),v),app(s,x)) -> app(app(u,x),app(app(app(app(rec,t),u),v),x)),app(app(app(app(rec,t),u),v),app(lim,f)) -> app(app(v,f),app(app(app(app(rectuv,t),u),v),app(f,n))),app(app(app(app(rectuv,t),u),v),n) -> app(app(app(app(rec,t),u),v),n)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex6_11.xml" :
TRS {trsSignature = fromList [("F",0),("G",0),("app",2)], trsVariables = fromList ["f","x"], trsRMap = [], trsRules = [app(app(F,app(app(F,f),x)),x) -> app(app(F,app(G,app(app(F,f),x))),app(f,x))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex6Recursor.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("rec",0),("s",0)], trsVariables = fromList ["f","x","y"], trsRMap = [], trsRules = [app(app(app(rec,f),x),0) -> x,app(app(app(rec,f),x),app(s,y)) -> app(app(f,app(s,y)),app(app(app(rec,f),x),y))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex6Folding.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("add",0),("app",2),("cons",0),("fold",0),("mul",0),("nil",0),("prod",0),("sum",0)], trsVariables = fromList ["f","h","l","t","x"], trsRMap = [], trsRules = [app(app(app(fold,f),nil),x) -> x,app(app(app(fold,f),app(app(cons,h),t)),x) -> app(app(app(fold,f),t),app(app(f,x),h)),app(sum,l) -> app(app(app(fold,add),l),0),app(app(app(fold,mul),l),1) -> app(prod,l)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex5Sorting.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("ascending_sort",0),("cons",0),("descending_sort",0),("insert",0),("max",0),("min",0),("nil",0),("s",0),("sort",0)], trsVariables = fromList ["f","g","h","l","t","x","y"], trsRMap = [], trsRules = [app(app(max,0),x) -> x,app(app(max,x),0) -> x,app(app(max,app(s,x)),app(s,y)) -> app(app(max,x),y),app(app(min,0),x) -> 0,app(app(min,x),0) -> 0,app(app(min,app(s,x)),app(s,y)) -> app(app(min,x),y),app(app(app(app(insert,f),g),nil),x) -> app(app(cons,x),nil),app(app(app(app(insert,f),g),app(app(cons,h),t)),x) -> app(app(cons,app(app(f,x),h)),app(app(app(app(insert,f),g),t),app(app(g,x),h))),app(app(app(sort,f),g),nil) -> nil,app(app(app(sort,f),g),app(app(cons,h),t)) -> app(app(app(app(insert,f),g),app(app(app(sort,f),g),t)),h),app(ascending_sort,l) -> app(app(app(sort,min),max),l),app(descending_sort,l) -> app(app(app(sort,max),min),l)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex5Folding.xml" :
TRS {trsSignature = fromList [("0",0),("add",0),("app",2),("cons",0),("fold",0),("mul",0),("nil",0),("plus",0),("prod",0),("s",0),("sum",0),("times",0)], trsVariables = fromList ["f","x","y","z"], trsRMap = [], trsRules = [app(app(app(fold,f),x),nil) -> x,app(app(app(fold,f),x),app(app(cons,y),z)) -> app(app(f,y),app(app(app(fold,f),x),z)),app(app(plus,0),y) -> y,app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y)),app(app(times,0),y) -> 0,app(app(times,app(s,x)),y) -> app(app(plus,app(app(times,x),y)),y),sum -> app(app(fold,add),0),prod -> app(app(fold,mul),app(s,0))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex4MapList.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("fcons",0),("fmap",0),("fnil",0),("nil",0)], trsVariables = fromList ["f","t","x"], trsRMap = [], trsRules = [app(app(fmap,fnil),x) -> nil,app(app(fmap,app(app(fcons,f),t)),x) -> app(app(cons,app(f,x)),app(app(fmap,t),x))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex3Lists.xml" :
TRS {trsSignature = fromList [("app",2),("append",0),("cons",0),("map",0),("nil",0)], trsVariables = fromList ["f","h","l","l1","l2","l3","t"], trsRMap = [], trsRules = [app(app(append,nil),l) -> l,app(app(append,app(app(cons,h),t)),l) -> app(app(cons,h),app(app(append,t),l)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t)),app(app(append,app(app(append,l1),l2)),l3) -> app(app(append,l1),app(app(append,l2),l3)),app(app(map,f),app(app(append,l1),l2)) -> app(app(append,app(app(map,f),l1)),app(app(map,f),l2))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex2_8_1ConstSubstFix.xml" :
TRS {trsSignature = fromList [("app",2),("const",0),("fix",0),("subst",0)], trsVariables = fromList ["f","g","x","y"], trsRMap = [], trsRules = [app(app(const,x),y) -> x,app(app(app(subst,f),g),x) -> app(app(f,x),app(g,x)),app(app(fix,f),x) -> app(app(f,app(fix,f)),x)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex2_6_1Composition.xml" :
TRS {trsSignature = fromList [("app",2),("compose",0)], trsVariables = fromList ["f","g","x"], trsRMap = [], trsRules = [app(app(app(compose,f),g),x) -> app(f,app(g,x))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex2PrimRec.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("rec",0),("s",0)], trsVariables = fromList ["g","h","x"], trsRMap = [], trsRules = [app(app(rec,h),app(g,0)) -> g,app(app(rec,h),app(g,app(s,x))) -> app(app(h,x),app(app(rec,h),app(g,x)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\Ex10Functional.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("add",0),("app",2),("append",0),("apply",0),("compose",0),("cons",0),("const",0),("fold",0),("id",0),("length",0),("listify",0),("nil",0),("reverse",0),("sum",0),("swap",0),("uncurry",0)], trsVariables = fromList ["f_1","f_2","f_3","g_1","g_2","l","t","x","y","z"], trsRMap = [], trsRules = [app(app(apply,f_1),x) -> app(f_1,x),app(id,x) -> x,app(app(app(uncurry,f_2),x),y) -> app(app(f_2,x),y),app(app(app(swap,f_2),y),x) -> app(app(f_2,x),y),app(app(app(compose,g_1),f_1),x) -> app(g_1,app(f_1,x)),app(app(const,x),y) -> x,app(listify,x) -> app(app(cons,x),nil),app(app(app(app(fold,f_3),g_2),x),nil) -> x,app(app(app(app(fold,f_3),g_2),x),app(app(cons,z),t)) -> app(app(f_3,app(g_2,z)),app(app(app(app(fold,f_3),g_2),x),t)),app(sum,l) -> app(app(app(app(fold,add),id),0),l),app(app(uncurry,app(app(fold,cons),id)),nil) -> id,append -> app(app(compose,app(app(swap,fold),cons)),id),reverse -> app(app(uncurry,app(app(fold,app(swap,append)),listify)),nil),length -> app(app(uncurry,app(app(fold,add),app(cons,1))),0)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\Applicative_05\\BTreeMember.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("eq",0),("false",0),("fork",0),("if",0),("lt",0),("member",0),("null",0),("s",0),("true",0)], trsVariables = fromList ["w","x","y","z"], trsRMap = [], trsRules = [app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y),app(app(lt,0),app(s,y)) -> true,app(app(lt,y),0) -> false,app(app(eq,x),x) -> true,app(app(eq,app(s,x)),0) -> false,app(app(eq,0),app(s,x)) -> false,app(app(member,w),null) -> false,app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),true),app(app(member,w),z)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}
