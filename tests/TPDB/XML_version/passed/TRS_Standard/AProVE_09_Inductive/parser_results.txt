
++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\zerolist.xml" :
TRS {trsSignature = fromList [("0",0),("cons",2),("nil",0),("s",1),("sub",2),("zero",1),("zero2",2)], trsVariables = fromList ["x","xs","y"], trsRMap = [], trsRules = [sub(0,0) -> 0,sub(s(x),0) -> s(x),sub(0,s(x)) -> 0,sub(s(x),s(y)) -> sub(x,y),zero(nil) -> zero2(0,nil),zero(cons(x,xs)) -> zero2(sub(x,x),cons(x,xs)),zero2(0,nil) -> nil,zero2(0,cons(x,xs)) -> cons(sub(x,x),zero(xs)),zero2(s(y),nil) -> zero(nil),zero2(s(y),cons(x,xs)) -> zero(cons(x,xs))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\qsortmiddle.xml" :
TRS {trsSignature = fromList [("0",0),("append",2),("cons",2),("false",0),("filterhigh",2),("filterlow",2),("ge",2),("get",2),("half",1),("if1",4),("if2",4),("length",1),("nil",0),("qs",2),("qsort",1),("s",1),("true",0),("ys",0)], trsVariables = fromList ["n","x","xs","y"], trsRMap = [], trsRules = [qsort(xs) -> qs(half(length(xs)),xs),qs(n,nil) -> nil,qs(n,cons(x,xs)) -> append(qs(half(n),filterlow(get(n,cons(x,xs)),cons(x,xs))),cons(get(n,cons(x,xs)),qs(half(n),filterhigh(get(n,cons(x,xs)),cons(x,xs))))),filterlow(n,nil) -> nil,filterlow(n,cons(x,xs)) -> if1(ge(n,x),n,x,xs),if1(true,n,x,xs) -> filterlow(n,xs),if1(false,n,x,xs) -> cons(x,filterlow(n,xs)),filterhigh(n,nil) -> nil,filterhigh(n,cons(x,xs)) -> if2(ge(x,n),n,x,xs),if2(true,n,x,xs) -> filterhigh(n,xs),if2(false,n,x,xs) -> cons(x,filterhigh(n,xs)),ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y),append(nil,ys) -> ys,append(cons(x,xs),ys) -> cons(x,append(xs,ys)),length(nil) -> 0,length(cons(x,xs)) -> s(length(xs)),half(0) -> 0,half(s(0)) -> 0,half(s(s(x))) -> s(half(x)),get(n,nil) -> 0,get(n,cons(x,nil)) -> x,get(0,cons(x,cons(y,xs))) -> x,get(s(n),cons(x,cons(y,xs))) -> get(n,cons(y,xs))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\qsortlast.xml" :
TRS {trsSignature = fromList [("0",0),("append",2),("cons",2),("false",0),("filterhigh",2),("filterlow",2),("ge",2),("if1",4),("if2",4),("last",1),("nil",0),("qsort",1),("s",1),("true",0),("ys",0)], trsVariables = fromList ["n","x","xs","y"], trsRMap = [], trsRules = [qsort(nil) -> nil,qsort(cons(x,xs)) -> append(qsort(filterlow(last(cons(x,xs)),cons(x,xs))),cons(last(cons(x,xs)),qsort(filterhigh(last(cons(x,xs)),cons(x,xs))))),filterlow(n,nil) -> nil,filterlow(n,cons(x,xs)) -> if1(ge(n,x),n,x,xs),if1(true,n,x,xs) -> filterlow(n,xs),if1(false,n,x,xs) -> cons(x,filterlow(n,xs)),filterhigh(n,nil) -> nil,filterhigh(n,cons(x,xs)) -> if2(ge(x,n),n,x,xs),if2(true,n,x,xs) -> filterhigh(n,xs),if2(false,n,x,xs) -> cons(x,filterhigh(n,xs)),ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y),append(nil,ys) -> ys,append(cons(x,xs),ys) -> cons(x,append(xs,ys)),last(nil) -> 0,last(cons(x,nil)) -> x,last(cons(x,cons(y,xs))) -> last(cons(y,xs))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\qsort.xml" :
TRS {trsSignature = fromList [("0",0),("append",2),("cons",2),("false",0),("filterhigh",2),("filterlow",2),("ge",2),("if1",4),("if2",4),("nil",0),("qsort",1),("s",1),("true",0),("ys",0)], trsVariables = fromList ["n","x","xs","y"], trsRMap = [], trsRules = [qsort(nil) -> nil,qsort(cons(x,xs)) -> append(qsort(filterlow(x,cons(x,xs))),cons(x,qsort(filterhigh(x,cons(x,xs))))),filterlow(n,nil) -> nil,filterlow(n,cons(x,xs)) -> if1(ge(n,x),n,x,xs),if1(true,n,x,xs) -> filterlow(n,xs),if1(false,n,x,xs) -> cons(x,filterlow(n,xs)),filterhigh(n,nil) -> nil,filterhigh(n,cons(x,xs)) -> if2(ge(x,n),n,x,xs),if2(true,n,x,xs) -> filterhigh(n,xs),if2(false,n,x,xs) -> cons(x,filterhigh(n,xs)),ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y),append(nil,ys) -> ys,append(cons(x,xs),ys) -> cons(x,append(xs,ys))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\mod.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("gt",2),("if",3),("if1",3),("lt",2),("minus",2),("mod",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [minus(0,y) -> 0,minus(s(x),y) -> if(gt(s(x),y),x,y),if(true,x,y) -> s(minus(x,y)),if(false,x,y) -> 0,mod(x,0) -> 0,mod(x,s(y)) -> if1(lt(x,s(y)),x,s(y)),if1(true,x,y) -> x,if1(false,x,y) -> mod(minus(x,y),y),gt(0,y) -> false,gt(s(x),0) -> true,gt(s(x),s(y)) -> gt(x,y),lt(x,0) -> false,lt(0,s(x)) -> true,lt(s(x),s(y)) -> lt(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\minsort.xml" :
TRS {trsSignature = fromList [("0",0),("cons",2),("eq",2),("false",0),("if1",4),("if2",4),("le",2),("min",1),("minsort",1),("nil",0),("rm",2),("s",1),("true",0)], trsVariables = fromList ["x","xs","y"], trsRMap = [], trsRules = [le(0,y) -> true,le(s(x),0) -> false,le(s(x),s(y)) -> le(x,y),eq(0,0) -> true,eq(0,s(y)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),minsort(nil) -> nil,minsort(cons(x,xs)) -> cons(min(cons(x,xs)),minsort(rm(min(cons(x,xs)),cons(x,xs)))),min(nil) -> 0,min(cons(x,nil)) -> x,min(cons(x,cons(y,xs))) -> if1(le(x,y),x,y,xs),if1(true,x,y,xs) -> min(cons(x,xs)),if1(false,x,y,xs) -> min(cons(y,xs)),rm(x,nil) -> nil,rm(x,cons(y,xs)) -> if2(eq(x,y),x,y,xs),if2(true,x,y,xs) -> rm(x,xs),if2(false,x,y,xs) -> cons(y,rm(x,xs))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\maxsortcondition.xml" :
TRS {trsSignature = fromList [("0",0),("cons",2),("del",2),("empty",1),("eq",2),("false",0),("ge",2),("if1",4),("if2",4),("if3",2),("max",1),("nil",0),("s",1),("sort",1),("true",0)], trsVariables = fromList ["x","xs","y"], trsRMap = [], trsRules = [max(nil) -> 0,max(cons(x,nil)) -> x,max(cons(x,cons(y,xs))) -> if1(ge(x,y),x,y,xs),if1(true,x,y,xs) -> max(cons(x,xs)),if1(false,x,y,xs) -> max(cons(y,xs)),del(x,nil) -> nil,del(x,cons(y,xs)) -> if2(eq(x,y),x,y,xs),if2(true,x,y,xs) -> xs,if2(false,x,y,xs) -> cons(y,del(x,xs)),eq(0,0) -> true,eq(0,s(y)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),sort(xs) -> if3(empty(xs),xs),if3(true,xs) -> nil,if3(false,xs) -> sort(del(max(xs),xs)),empty(nil) -> true,empty(cons(x,xs)) -> false,ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\maxsort.xml" :
TRS {trsSignature = fromList [("0",0),("cons",2),("del",2),("eq",2),("false",0),("ge",2),("if1",4),("if2",4),("max",1),("nil",0),("s",1),("sort",1),("true",0)], trsVariables = fromList ["x","xs","y"], trsRMap = [], trsRules = [max(nil) -> 0,max(cons(x,nil)) -> x,max(cons(x,cons(y,xs))) -> if1(ge(x,y),x,y,xs),if1(true,x,y,xs) -> max(cons(x,xs)),if1(false,x,y,xs) -> max(cons(y,xs)),del(x,nil) -> nil,del(x,cons(y,xs)) -> if2(eq(x,y),x,y,xs),if2(true,x,y,xs) -> xs,if2(false,x,y,xs) -> cons(y,del(x,xs)),eq(0,0) -> true,eq(0,s(y)) -> false,eq(s(x),0) -> false,eq(s(x),s(y)) -> eq(x,y),sort(nil) -> nil,sort(cons(x,xs)) -> cons(max(cons(x,xs)),sort(del(max(cons(x,xs)),cons(x,xs)))),ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\log.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("ge",2),("half",1),("if",2),("log",1),("p",1),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [half(x) -> if(ge(x,s(s(0))),x),if(false,x) -> 0,if(true,x) -> s(half(p(p(x)))),p(0) -> 0,p(s(x)) -> x,ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y),log(0) -> 0,log(s(x)) -> s(log(half(s(x))))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\gcdhard.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("gcd",2),("if",3),("lt",2),("minus",2),("mod",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [minus(0,x) -> 0,minus(s(x),0) -> s(x),minus(s(x),s(y)) -> minus(x,y),mod(x,0) -> 0,mod(x,s(y)) -> if(lt(x,s(y)),x,s(y)),if(true,x,y) -> x,if(false,x,y) -> mod(minus(x,y),y),gcd(x,0) -> x,gcd(0,s(y)) -> s(y),gcd(s(x),s(y)) -> gcd(mod(s(x),s(y)),mod(s(y),s(x))),lt(x,0) -> false,lt(0,s(x)) -> true,lt(s(x),s(y)) -> lt(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\gcd2.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("gcd",2),("ge",2),("gt",2),("if",3),("if1",3),("if2",3),("if3",3),("minus",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [minus(s(x),y) -> if(gt(s(x),y),x,y),if(true,x,y) -> s(minus(x,y)),if(false,x,y) -> 0,gcd(x,y) -> if1(ge(x,y),x,y),if1(true,x,y) -> if2(gt(y,0),x,y),if1(false,x,y) -> if3(gt(x,0),x,y),if2(true,x,y) -> gcd(minus(x,y),y),if2(false,x,y) -> x,if3(true,x,y) -> gcd(x,minus(y,x)),if3(false,x,y) -> y,gt(0,y) -> false,gt(s(x),0) -> true,gt(s(x),s(y)) -> gt(x,y),ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\gcd.xml" :
TRS {trsSignature = fromList [("0",0),("false",0),("gcd",2),("ge",2),("gt",2),("if",3),("if1",3),("if2",3),("minus",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [minus(s(x),y) -> if(gt(s(x),y),x,y),if(true,x,y) -> s(minus(x,y)),if(false,x,y) -> 0,gcd(x,y) -> if1(ge(x,y),x,y),if1(true,x,y) -> if2(gt(y,0),x,y),if1(false,x,y) -> gcd(y,x),if2(true,x,y) -> gcd(minus(x,y),y),if2(false,x,y) -> x,gt(0,y) -> false,gt(s(x),0) -> true,gt(s(x),s(y)) -> gt(x,y),ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\divhard.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("false",0),("ge",2),("gt",2),("if",3),("if1",3),("if2",3),("minus",2),("p",1),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [minus(x,y) -> if(gt(x,y),x,y),if(true,x,y) -> s(minus(p(x),y)),if(false,x,y) -> 0,p(0) -> 0,p(s(x)) -> x,ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y),gt(0,y) -> false,gt(s(x),0) -> true,gt(s(x),s(y)) -> gt(x,y),div(x,y) -> if1(ge(x,y),x,y),if1(true,x,y) -> if2(gt(y,0),x,y),if1(false,x,y) -> 0,if2(true,x,y) -> s(div(minus(x,y),y)),if2(false,x,y) -> 0], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_09_Inductive\\div.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("false",0),("ge",2),("gt",2),("if",3),("if1",3),("if2",3),("minus",2),("s",1),("true",0)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [minus(s(x),y) -> if(gt(s(x),y),x,y),if(true,x,y) -> s(minus(x,y)),if(false,x,y) -> 0,ge(x,0) -> true,ge(0,s(x)) -> false,ge(s(x),s(y)) -> ge(x,y),gt(0,y) -> false,gt(s(x),0) -> true,gt(s(x),s(y)) -> gt(x,y),div(x,y) -> if1(ge(x,y),x,y),if1(true,x,y) -> if2(gt(y,0),x,y),if1(false,x,y) -> 0,if2(true,x,y) -> s(div(minus(x,y),y)),if2(false,x,y) -> 0], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}
