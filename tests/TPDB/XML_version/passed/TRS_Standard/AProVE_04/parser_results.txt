
++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\rta3.xml" :
TRS {trsSignature = fromList [("0",0),("ack",2),("f",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [ack(0,y) -> s(y),ack(s(x),0) -> ack(x,s(0)),ack(s(x),s(y)) -> ack(x,ack(s(x),y)),f(s(x),y) -> f(x,s(x)),f(x,s(y)) -> f(y,x),f(x,y) -> ack(x,y),ack(s(x),y) -> f(x,x)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\rta2.xml" :
TRS {trsSignature = fromList [("f",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [f(s(x),y) -> f(x,s(x)),f(x,s(y)) -> f(y,x)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\rta1.xml" :
TRS {trsSignature = fromList [("0",0),("ack",2),("plus",2),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [plus(s(s(x)),y) -> s(plus(x,s(y))),plus(x,s(s(y))) -> s(plus(s(x),y)),plus(s(0),y) -> s(y),plus(0,y) -> y,ack(0,y) -> s(y),ack(s(x),0) -> ack(x,s(0)),ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\LPAR_intlist.xml" :
TRS {trsSignature = fromList [("0",0),("cons",2),("int",2),("intlist",1),("nil",0),("s",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [intlist(nil) -> nil,int(s(x),0) -> nil,int(x,x) -> cons(x,nil),intlist(cons(x,y)) -> cons(s(x),intlist(y)),int(s(x),s(y)) -> intlist(int(x,y)),int(0,s(y)) -> cons(0,int(s(0),s(y))),intlist(cons(x,nil)) -> cons(s(x),nil)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\Liveness_WRS.xml" :
TRS {trsSignature = fromList [("X",0),("active",1),("c",0),("chk",1),("f",1),("mark",1),("mat",2),("no",1),("tp",1),("y",0)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [active(f(x)) -> mark(f(f(x))),chk(no(f(x))) -> f(chk(mat(f(f(f(f(f(f(f(f(f(f(X)))))))))),x))),mat(f(x),f(y)) -> f(mat(x,y)),chk(no(c)) -> active(c),mat(f(x),c) -> no(c),f(active(x)) -> active(f(x)),f(no(x)) -> no(f(x)),f(mark(x)) -> mark(f(x)),tp(mark(x)) -> tp(chk(mat(f(f(f(f(f(f(f(f(f(f(X)))))))))),x)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\Liveness8.xml" :
TRS {trsSignature = fromList [("X",0),("active",1),("c",0),("check",1),("f",1),("found",1),("mark",1),("match",2),("ok",1),("proper",1),("start",1),("top",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [active(f(x)) -> mark(x),top(active(c)) -> top(mark(c)),top(mark(x)) -> top(check(x)),check(f(x)) -> f(check(x)),check(x) -> start(match(f(X),x)),match(f(x),f(y)) -> f(match(x,y)),match(X,x) -> proper(x),proper(c) -> ok(c),proper(f(x)) -> f(proper(x)),f(ok(x)) -> ok(f(x)),start(ok(x)) -> found(x),f(found(x)) -> found(f(x)),top(found(x)) -> top(active(x)),active(f(x)) -> f(active(x)),f(mark(x)) -> mark(f(x))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\Liveness6.4.xml" :
TRS {trsSignature = fromList [("check",1),("free",1),("new",1),("old",1),("serve",0),("top1",2),("top2",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [top1(free(x),y) -> top2(check(new(x)),y),top1(free(x),y) -> top2(new(x),check(y)),top1(free(x),y) -> top2(check(x),new(y)),top1(free(x),y) -> top2(x,check(new(y))),top2(x,free(y)) -> top1(check(new(x)),y),top2(x,free(y)) -> top1(new(x),check(y)),top2(x,free(y)) -> top1(check(x),new(y)),top2(x,free(y)) -> top1(x,check(new(y))),new(free(x)) -> free(new(x)),old(free(x)) -> free(old(x)),new(serve) -> free(serve),old(serve) -> free(serve),check(free(x)) -> free(check(x)),check(new(x)) -> new(check(x)),check(old(x)) -> old(check(x)),check(old(x)) -> old(x)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\Liveness6.3.xml" :
TRS {trsSignature = fromList [("bot",0),("check",1),("no",1),("rec",1),("sent",1),("top",1),("up",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [rec(rec(x)) -> sent(rec(x)),rec(sent(x)) -> sent(rec(x)),rec(no(x)) -> sent(rec(x)),rec(bot) -> up(sent(bot)),rec(up(x)) -> up(rec(x)),sent(up(x)) -> up(sent(x)),no(up(x)) -> up(no(x)),top(rec(up(x))) -> top(check(rec(x))),top(sent(up(x))) -> top(check(rec(x))),top(no(up(x))) -> top(check(rec(x))),check(up(x)) -> up(check(x)),check(sent(x)) -> sent(check(x)),check(rec(x)) -> rec(check(x)),check(no(x)) -> no(check(x)),check(no(x)) -> no(x)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\Liveness6.2.xml" :
TRS {trsSignature = fromList [("check",1),("cons",2),("nil",0),("rest",1),("sent",1),("top",1)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [top(sent(x)) -> top(check(rest(x))),rest(nil) -> sent(nil),rest(cons(x,y)) -> sent(y),check(sent(x)) -> sent(check(x)),check(rest(x)) -> rest(check(x)),check(cons(x,y)) -> cons(check(x),y),check(cons(x,y)) -> cons(x,check(y)),check(cons(x,y)) -> cons(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\Liveness6.1.xml" :
TRS {trsSignature = fromList [("check",1),("free",1),("new",1),("old",1),("serve",0),("top",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [top(free(x)) -> top(check(new(x))),new(free(x)) -> free(new(x)),old(free(x)) -> free(old(x)),new(serve) -> free(serve),old(serve) -> free(serve),check(free(x)) -> free(check(x)),check(new(x)) -> new(check(x)),check(old(x)) -> old(check(x)),check(old(x)) -> old(x)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\JFP_Ex51.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("div_active",2),("false",0),("ge",2),("ge_active",2),("if",3),("if_active",3),("mark",1),("minus",2),("minus_active",2),("s",1),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [minus_active(0,y) -> 0,mark(0) -> 0,minus_active(s(x),s(y)) -> minus_active(x,y),mark(s(x)) -> s(mark(x)),ge_active(x,0) -> true,mark(minus(x,y)) -> minus_active(x,y),ge_active(0,s(y)) -> false,mark(ge(x,y)) -> ge_active(x,y),ge_active(s(x),s(y)) -> ge_active(x,y),mark(div(x,y)) -> div_active(mark(x),y),div_active(0,s(y)) -> 0,mark(if(x,y,z)) -> if_active(mark(x),y,z),div_active(s(x),s(y)) -> if_active(ge_active(x,y),s(div(minus(x,y),s(y))),0),if_active(true,x,y) -> mark(x),minus_active(x,y) -> minus(x,y),if_active(false,x,y) -> mark(y),ge_active(x,y) -> ge(x,y),if_active(x,y,z) -> if(x,y,z),div_active(x,y) -> div(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\JFP_Ex31.xml" :
TRS {trsSignature = fromList [("active",1),("b",0),("c",0),("d",0),("f",3),("m",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [active(f(b,c,x)) -> mark(f(x,x,x)),active(f(x,y,z)) -> f(x,y,active(z)),active(d) -> m(b),f(x,y,mark(z)) -> mark(f(x,y,z)),active(d) -> mark(c),proper(b) -> ok(b),proper(c) -> ok(c),proper(d) -> ok(d),proper(f(x,y,z)) -> f(proper(x),proper(y),proper(z)),f(ok(x),ok(y),ok(z)) -> ok(f(x,y,z)),top(mark(x)) -> top(proper(x)),top(ok(x)) -> top(active(x))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\improved_usable2.xml" :
TRS {trsSignature = fromList [("a",0),("f",2),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,x) -> f(g(x),x),h(g(x)) -> h(a),g(h(x)) -> g(x),h(h(x)) -> x], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\improved_usable.xml" :
TRS {trsSignature = fromList [("a",0),("f",2),("g",1),("h",1)], trsVariables = fromList ["x"], trsRMap = [], trsRules = [f(a,h(x)) -> f(g(x),h(x)),h(g(x)) -> h(a),g(h(x)) -> g(x),h(h(x)) -> x], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\IJCAR_26a.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("divides",2),("eq",2),("false",0),("if",3),("p",1),("plus",2),("pr",2),("prime",1),("quot",3),("s",1),("times",2),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [p(0) -> 0,p(s(x)) -> x,plus(x,0) -> x,plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),plus(s(x),y) -> s(plus(p(s(x)),y)),plus(x,s(y)) -> s(plus(x,p(s(y)))),times(0,y) -> 0,times(s(0),y) -> y,times(s(x),y) -> plus(y,times(x,y)),div(0,y) -> 0,div(x,y) -> quot(x,y,y),quot(0,s(y),z) -> 0,quot(s(x),s(y),z) -> quot(x,y,z),quot(x,0,s(z)) -> s(div(x,s(z))),div(div(x,y),z) -> div(x,times(y,z)),eq(0,0) -> true,eq(s(x),0) -> false,eq(0,s(y)) -> false,eq(s(x),s(y)) -> eq(x,y),divides(y,x) -> eq(x,times(div(x,y),y)),prime(s(s(x))) -> pr(s(s(x)),s(x)),pr(x,s(0)) -> true,pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y)),if(true,x,y) -> false,if(false,x,y) -> pr(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\IJCAR_26.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("divides",2),("eq",2),("false",0),("if",3),("p",1),("plus",2),("pr",2),("prime",1),("quot",3),("s",1),("times",2),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [p(s(x)) -> x,plus(x,0) -> x,plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),plus(s(x),y) -> s(plus(p(s(x)),y)),plus(x,s(y)) -> s(plus(x,p(s(y)))),times(0,y) -> 0,times(s(0),y) -> y,times(s(x),y) -> plus(y,times(x,y)),div(0,y) -> 0,div(x,y) -> quot(x,y,y),quot(0,s(y),z) -> 0,quot(s(x),s(y),z) -> quot(x,y,z),quot(x,0,s(z)) -> s(div(x,s(z))),div(div(x,y),z) -> div(x,times(y,z)),eq(0,0) -> true,eq(s(x),0) -> false,eq(0,s(y)) -> false,eq(s(x),s(y)) -> eq(x,y),divides(y,x) -> eq(x,times(div(x,y),y)),prime(s(s(x))) -> pr(s(s(x)),s(x)),pr(x,s(0)) -> true,pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y)),if(true,x,y) -> false,if(false,x,y) -> pr(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\IJCAR_18.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("divides",2),("eq",2),("false",0),("if",3),("plus",2),("pr",2),("prime",1),("quot",3),("s",1),("times",2),("true",0)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [plus(x,0) -> x,plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),times(0,y) -> 0,times(s(0),y) -> y,times(s(x),y) -> plus(y,times(x,y)),div(0,y) -> 0,div(x,y) -> quot(x,y,y),quot(0,s(y),z) -> 0,quot(s(x),s(y),z) -> quot(x,y,z),quot(x,0,s(z)) -> s(div(x,s(z))),div(div(x,y),z) -> div(x,times(y,z)),eq(0,0) -> true,eq(s(x),0) -> false,eq(0,s(y)) -> false,eq(s(x),s(y)) -> eq(x,y),divides(y,x) -> eq(x,times(div(x,y),y)),prime(s(s(x))) -> pr(s(s(x)),s(x)),pr(x,s(0)) -> true,pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y)),if(true,x,y) -> false,if(false,x,y) -> pr(x,y)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\IJCAR_12.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("plus",2),("quot",3),("s",1),("times",2)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [plus(x,0) -> x,plus(0,y) -> y,plus(s(x),y) -> s(plus(x,y)),times(0,y) -> 0,times(s(0),y) -> y,times(s(x),y) -> plus(y,times(x,y)),div(0,y) -> 0,div(x,y) -> quot(x,y,y),quot(0,s(y),z) -> 0,quot(s(x),s(y),z) -> quot(x,y,z),quot(x,0,s(z)) -> s(div(x,s(z))),div(div(x,y),z) -> div(x,times(y,z))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\IJCAR_1.xml" :
TRS {trsSignature = fromList [("0",0),("div",2),("quot",3),("s",1)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [div(0,y) -> 0,div(x,y) -> quot(x,y,y),quot(0,s(y),z) -> 0,quot(s(x),s(y),z) -> quot(x,y,z),quot(x,0,s(z)) -> s(div(x,s(z)))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\forward_instantiation2.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("a",0),("b",0),("c",0),("f",3),("g",3)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(x,y,z) -> g(x,y,z),g(0,1,x) -> f(x,x,x),a -> b,a -> c], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\forward_instantiation.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("f",3),("g",3)], trsVariables = fromList ["x","y","z"], trsRMap = [], trsRules = [f(x,y,z) -> g(x,y,z),g(0,1,x) -> f(x,x,x)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\fac.xml" :
TRS {trsSignature = fromList [("0",0),("fac",1),("p",1),("plus",2),("s",1),("times",2)], trsVariables = fromList ["x","y"], trsRMap = [], trsRules = [plus(x,0) -> x,plus(x,s(y)) -> s(plus(x,y)),times(0,y) -> 0,times(x,0) -> 0,times(s(x),y) -> plus(times(x,y),y),p(s(s(x))) -> s(p(s(x))),p(s(0)) -> 0,fac(s(x)) -> times(fac(p(s(x))),s(x))], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\AAECC.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("empty",1),("f",2),("false",0),("fstsplit",2),("if1",3),("if2",3),("if3",3),("length",1),("leq",2),("map_f",2),("nil",0),("process",2),("s",1),("self",0),("sndsplit",2),("true",0)], trsVariables = fromList ["h","m","n","pid","store","t","x"], trsRMap = [], trsRules = [fstsplit(0,x) -> nil,fstsplit(s(n),nil) -> nil,fstsplit(s(n),cons(h,t)) -> cons(h,fstsplit(n,t)),sndsplit(0,x) -> x,sndsplit(s(n),nil) -> nil,sndsplit(s(n),cons(h,t)) -> sndsplit(n,t),empty(nil) -> true,empty(cons(h,t)) -> false,leq(0,m) -> true,leq(s(n),0) -> false,leq(s(n),s(m)) -> leq(n,m),length(nil) -> 0,length(cons(h,t)) -> s(length(t)),app(nil,x) -> x,app(cons(h,t),x) -> cons(h,app(t,x)),map_f(pid,nil) -> nil,map_f(pid,cons(h,t)) -> app(f(pid,h),map_f(pid,t)),process(store,m) -> if1(store,m,leq(m,length(store))),if1(store,m,true) -> if2(store,m,empty(fstsplit(m,store))),if1(store,m,false) -> if3(store,m,empty(fstsplit(m,app(map_f(self,nil),store)))),if2(store,m,false) -> process(app(map_f(self,nil),sndsplit(m,store)),m),if3(store,m,false) -> process(sndsplit(m,app(map_f(self,nil),store)),m)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Standard\\AProVE_04\\AAECC-ring.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",2),("empty",1),("f",2),("false",0),("fstsplit",2),("head",1),("if_1",7),("if_2",7),("if_3",7),("if_4",7),("if_5",7),("if_6",7),("if_7",7),("if_8",7),("if_9",7),("length",1),("leq",2),("map_f",2),("nil",0),("ring",6),("s",1),("sndsplit",2),("tail",1),("three",0),("true",0),("two",0)], trsVariables = fromList ["h","in_2","in_3","m","n","pid","st_1","st_2","st_3","t","x"], trsRMap = [], trsRules = [fstsplit(0,x) -> nil,fstsplit(s(n),nil) -> nil,fstsplit(s(n),cons(h,t)) -> cons(h,fstsplit(n,t)),sndsplit(0,x) -> x,sndsplit(s(n),nil) -> nil,sndsplit(s(n),cons(h,t)) -> sndsplit(n,t),empty(nil) -> true,empty(cons(h,t)) -> false,leq(0,m) -> true,leq(s(n),0) -> false,leq(s(n),s(m)) -> leq(n,m),length(nil) -> 0,length(cons(h,t)) -> s(length(t)),app(nil,x) -> x,app(cons(h,t),x) -> cons(h,app(t,x)),map_f(pid,nil) -> nil,map_f(pid,cons(h,t)) -> app(f(pid,h),map_f(pid,t)),head(cons(h,t)) -> h,tail(cons(h,t)) -> t,ring(st_1,in_2,st_2,in_3,st_3,m) -> if_1(st_1,in_2,st_2,in_3,st_3,m,empty(fstsplit(m,st_1))),if_1(st_1,in_2,st_2,in_3,st_3,m,false) -> ring(sndsplit(m,st_1),cons(fstsplit(m,st_1),in_2),st_2,in_3,st_3,m),ring(st_1,in_2,st_2,in_3,st_3,m) -> if_2(st_1,in_2,st_2,in_3,st_3,m,leq(m,length(st_2))),if_2(st_1,in_2,st_2,in_3,st_3,m,true) -> if_3(st_1,in_2,st_2,in_3,st_3,m,empty(fstsplit(m,st_2))),if_3(st_1,in_2,st_2,in_3,st_3,m,false) -> ring(st_1,in_2,sndsplit(m,st_2),cons(fstsplit(m,st_2),in_3),st_3,m),if_2(st_1,in_2,st_2,in_3,st_3,m,false) -> if_4(st_1,in_2,st_2,in_3,st_3,m,empty(fstsplit(m,app(map_f(two,head(in_2)),st_2)))),if_4(st_1,in_2,st_2,in_3,st_3,m,false) -> ring(st_1,tail(in_2),sndsplit(m,app(map_f(two,head(in_2)),st_2)),cons(fstsplit(m,app(map_f(two,head(in_2)),st_2)),in_3),st_3,m),ring(st_1,in_2,st_2,in_3,st_3,m) -> if_5(st_1,in_2,st_2,in_3,st_3,m,empty(map_f(two,head(in_2)))),if_5(st_1,in_2,st_2,in_3,st_3,m,true) -> ring(st_1,tail(in_2),st_2,in_3,st_3,m),ring(st_1,in_2,st_2,in_3,st_3,m) -> if_6(st_1,in_2,st_2,in_3,st_3,m,leq(m,length(st_3))),if_6(st_1,in_2,st_2,in_3,st_3,m,true) -> if_7(st_1,in_2,st_2,in_3,st_3,m,empty(fstsplit(m,st_3))),if_7(st_1,in_2,st_2,in_3,st_3,m,false) -> ring(st_1,in_2,st_2,in_3,sndsplit(m,st_3),m),if_6(st_1,in_2,st_2,in_3,st_3,m,false) -> if_8(st_1,in_2,st_2,in_3,st_3,m,empty(fstsplit(m,app(map_f(three,head(in_3)),st_3)))),if_8(st_1,in_2,st_2,in_3,st_3,m,false) -> ring(st_1,in_2,st_2,tail(in_3),sndsplit(m,app(map_f(three,head(in_3)),st_3)),m),ring(st_1,in_2,st_2,in_3,st_3,m) -> if_9(st_1,in_2,st_2,in_3,st_3,m,empty(map_f(three,head(in_3)))),if_9(st_1,in_2,st_2,in_3,st_3,m,true) -> ring(st_1,in_2,st_2,tail(in_3),st_3,m)], trsType = TRSContextSensitive, trsStrategy = Just FULL, signatureBlock = True}
