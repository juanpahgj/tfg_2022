
++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nosorts_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("active",1),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,M,N)) -> mark(U12(tt,M,N)),active(U12(tt,M,N)) -> mark(s(plus(N,M))),active(plus(N,0)) -> mark(N),active(plus(N,s(M))) -> mark(U11(tt,M,N)),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U12(X1,X2,X3)) -> active(U12(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(0) -> active(0),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),U12(mark(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,mark(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,mark(X3)) -> U12(X1,X2,X3),U12(active(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,active(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,active(X3)) -> U12(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nosorts_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("a__U11",3),("a__U12",3),("a__plus",2),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U11(tt,M,N) -> a__U12(tt,M,N),a__U12(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__plus(N,0) -> mark(N),a__plus(N,s(M)) -> a__U11(tt,M,N),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(U12(X1,X2,X3)) -> a__U12(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__U12(X1,X2,X3) -> U12(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nosorts_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("active",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0)], trsVariables = fromList ["M","N","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,M,N)) -> mark(U12(tt,M,N)),active(U12(tt,M,N)) -> mark(s(plus(N,M))),active(plus(N,0)) -> mark(N),active(plus(N,s(M))) -> mark(U11(tt,M,N)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(U12(X1,X2,X3)) -> U12(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),U12(mark(X1),X2,X3) -> mark(U12(X1,X2,X3)),s(mark(X)) -> mark(s(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U12(X1,X2,X3)) -> U12(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(0) -> ok(0),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),U12(ok(X1),ok(X2),ok(X3)) -> ok(U12(X1,X2,X3)),s(ok(X)) -> ok(s(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nosorts_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","X","X1","X2"], trsRMap = [], trsRules = [active(and(tt,X)) -> mark(X),active(plus(N,0)) -> mark(N),active(plus(N,s(M))) -> mark(s(plus(N,M))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(tt) -> active(tt),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(0) -> active(0),mark(s(X)) -> active(s(mark(X))),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nosorts_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__and",2),("a__plus",2),("and",2),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","X","X1","X2"], trsRMap = [], trsRules = [a__and(tt,X) -> mark(X),a__plus(N,0) -> mark(N),a__plus(N,s(M)) -> s(a__plus(mark(N),mark(M))),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(tt) -> tt,mark(0) -> 0,mark(s(X)) -> s(mark(X)),a__and(X1,X2) -> and(X1,X2),a__plus(X1,X2) -> plus(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nosorts_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0)], trsVariables = fromList ["M","N","X","X1","X2"], trsRMap = [], trsRules = [active(and(tt,X)) -> mark(X),active(plus(N,0)) -> mark(N),active(plus(N,s(M))) -> mark(s(plus(N,M))),active(and(X1,X2)) -> and(active(X1),X2),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(s(X)) -> s(active(X)),and(mark(X1),X2) -> mark(and(X1,X2)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),s(mark(X)) -> mark(s(X)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),s(ok(X)) -> ok(s(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nokinds_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",1),("U31",2),("U41",3),("U42",3),("active",1),("isNat",1),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V2)) -> mark(U12(isNat(V2))),active(U12(tt)) -> mark(tt),active(U21(tt)) -> mark(tt),active(U31(tt,N)) -> mark(N),active(U41(tt,M,N)) -> mark(U42(isNat(N),M,N)),active(U42(tt,M,N)) -> mark(s(plus(N,M))),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(isNat(V1),V2)),active(isNat(s(V1))) -> mark(U21(isNat(V1))),active(plus(N,0)) -> mark(U31(isNat(N),N)),active(plus(N,s(M))) -> mark(U41(isNat(M),M,N)),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U12(X)) -> active(U12(mark(X))),mark(isNat(X)) -> active(isNat(X)),mark(U21(X)) -> active(U21(mark(X))),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2,X3)) -> active(U42(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(0) -> active(0),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X)) -> U12(X),U12(active(X)) -> U12(X),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U21(mark(X)) -> U21(X),U21(active(X)) -> U21(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,mark(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,mark(X3)) -> U42(X1,X2,X3),U42(active(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,active(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,active(X3)) -> U42(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nokinds_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",1),("U31",2),("U41",3),("U42",3),("a__U11",2),("a__U12",1),("a__U21",1),("a__U31",2),("a__U41",3),("a__U42",3),("a__isNat",1),("a__plus",2),("isNat",1),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U11(tt,V2) -> a__U12(a__isNat(V2)),a__U12(tt) -> tt,a__U21(tt) -> tt,a__U31(tt,N) -> mark(N),a__U41(tt,M,N) -> a__U42(a__isNat(N),M,N),a__U42(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__isNat(0) -> tt,a__isNat(plus(V1,V2)) -> a__U11(a__isNat(V1),V2),a__isNat(s(V1)) -> a__U21(a__isNat(V1)),a__plus(N,0) -> a__U31(a__isNat(N),N),a__plus(N,s(M)) -> a__U41(a__isNat(M),M,N),mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X)) -> a__U12(mark(X)),mark(isNat(X)) -> a__isNat(X),mark(U21(X)) -> a__U21(mark(X)),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2,X3)) -> a__U42(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U11(X1,X2) -> U11(X1,X2),a__U12(X) -> U12(X),a__isNat(X) -> isNat(X),a__U21(X) -> U21(X),a__U31(X1,X2) -> U31(X1,X2),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2,X3) -> U42(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nokinds_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",1),("U31",2),("U41",3),("U42",3),("active",1),("isNat",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V2)) -> mark(U12(isNat(V2))),active(U12(tt)) -> mark(tt),active(U21(tt)) -> mark(tt),active(U31(tt,N)) -> mark(N),active(U41(tt,M,N)) -> mark(U42(isNat(N),M,N)),active(U42(tt,M,N)) -> mark(s(plus(N,M))),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(isNat(V1),V2)),active(isNat(s(V1))) -> mark(U21(isNat(V1))),active(plus(N,0)) -> mark(U31(isNat(N),N)),active(plus(N,s(M))) -> mark(U41(isNat(M),M,N)),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X)) -> U12(active(X)),active(U21(X)) -> U21(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2,X3)) -> U42(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X)) -> mark(U12(X)),U21(mark(X)) -> mark(U21(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2,X3) -> mark(U42(X1,X2,X3)),s(mark(X)) -> mark(s(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U12(X)) -> U12(proper(X)),proper(isNat(X)) -> isNat(proper(X)),proper(U21(X)) -> U21(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2,X3)) -> U42(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(0) -> ok(0),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X)) -> ok(U12(X)),isNat(ok(X)) -> ok(isNat(X)),U21(ok(X)) -> ok(U21(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2),ok(X3)) -> ok(U42(X1,X2,X3)),s(ok(X)) -> ok(s(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nokinds_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",3),("active",1),("and",2),("isNat",1),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,N)) -> mark(N),active(U21(tt,M,N)) -> mark(s(plus(N,M))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(and(isNat(V1),isNat(V2))),active(isNat(s(V1))) -> mark(isNat(V1)),active(plus(N,0)) -> mark(U11(isNat(N),N)),active(plus(N,s(M))) -> mark(U21(and(isNat(M),isNat(N)),M,N)),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),mark(0) -> active(0),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U21(mark(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,mark(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,mark(X3)) -> U21(X1,X2,X3),U21(active(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,active(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,active(X3)) -> U21(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nokinds_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",3),("a__U11",2),("a__U21",3),("a__and",2),("a__isNat",1),("a__plus",2),("and",2),("isNat",1),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U11(tt,N) -> mark(N),a__U21(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__and(tt,X) -> mark(X),a__isNat(0) -> tt,a__isNat(plus(V1,V2)) -> a__and(a__isNat(V1),isNat(V2)),a__isNat(s(V1)) -> a__isNat(V1),a__plus(N,0) -> a__U11(a__isNat(N),N),a__plus(N,s(M)) -> a__U21(a__and(a__isNat(M),isNat(N)),M,N),mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U11(X1,X2) -> U11(X1,X2),a__U21(X1,X2,X3) -> U21(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2),a__and(X1,X2) -> and(X1,X2),a__isNat(X) -> isNat(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_nokinds_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",3),("active",1),("and",2),("isNat",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,N)) -> mark(N),active(U21(tt,M,N)) -> mark(s(plus(N,M))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(and(isNat(V1),isNat(V2))),active(isNat(s(V1))) -> mark(isNat(V1)),active(plus(N,0)) -> mark(U11(isNat(N),N)),active(plus(N,s(M))) -> mark(U21(and(isNat(M),isNat(N)),M,N)),active(U11(X1,X2)) -> U11(active(X1),X2),active(U21(X1,X2,X3)) -> U21(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(and(X1,X2)) -> and(active(X1),X2),U11(mark(X1),X2) -> mark(U11(X1,X2)),U21(mark(X1),X2,X3) -> mark(U21(X1,X2,X3)),s(mark(X)) -> mark(s(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U21(X1,X2,X3)) -> U21(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),proper(0) -> ok(0),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U21(ok(X1),ok(X2),ok(X3)) -> ok(U21(X1,X2,X3)),s(ok(X)) -> ok(s(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_complete_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U13",3),("U14",3),("U15",2),("U16",1),("U21",2),("U22",2),("U23",1),("U31",2),("U32",1),("U41",1),("U51",2),("U52",2),("U61",3),("U62",3),("U63",3),("U64",3),("active",1),("isNat",1),("isNatKind",1),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V1,V2)) -> mark(U12(isNatKind(V1),V1,V2)),active(U12(tt,V1,V2)) -> mark(U13(isNatKind(V2),V1,V2)),active(U13(tt,V1,V2)) -> mark(U14(isNatKind(V2),V1,V2)),active(U14(tt,V1,V2)) -> mark(U15(isNat(V1),V2)),active(U15(tt,V2)) -> mark(U16(isNat(V2))),active(U16(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNatKind(V1),V1)),active(U22(tt,V1)) -> mark(U23(isNat(V1))),active(U23(tt)) -> mark(tt),active(U31(tt,V2)) -> mark(U32(isNatKind(V2))),active(U32(tt)) -> mark(tt),active(U41(tt)) -> mark(tt),active(U51(tt,N)) -> mark(U52(isNatKind(N),N)),active(U52(tt,N)) -> mark(N),active(U61(tt,M,N)) -> mark(U62(isNatKind(M),M,N)),active(U62(tt,M,N)) -> mark(U63(isNat(N),M,N)),active(U63(tt,M,N)) -> mark(U64(isNatKind(N),M,N)),active(U64(tt,M,N)) -> mark(s(plus(N,M))),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(isNatKind(V1),V1,V2)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatKind(0)) -> mark(tt),active(isNatKind(plus(V1,V2))) -> mark(U31(isNatKind(V1),V2)),active(isNatKind(s(V1))) -> mark(U41(isNatKind(V1))),active(plus(N,0)) -> mark(U51(isNat(N),N)),active(plus(N,s(M))) -> mark(U61(isNat(M),M,N)),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U12(X1,X2,X3)) -> active(U12(mark(X1),X2,X3)),mark(isNatKind(X)) -> active(isNatKind(X)),mark(U13(X1,X2,X3)) -> active(U13(mark(X1),X2,X3)),mark(U14(X1,X2,X3)) -> active(U14(mark(X1),X2,X3)),mark(U15(X1,X2)) -> active(U15(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),mark(U16(X)) -> active(U16(mark(X))),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X1,X2)) -> active(U22(mark(X1),X2)),mark(U23(X)) -> active(U23(mark(X))),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U32(X)) -> active(U32(mark(X))),mark(U41(X)) -> active(U41(mark(X))),mark(U51(X1,X2)) -> active(U51(mark(X1),X2)),mark(U52(X1,X2)) -> active(U52(mark(X1),X2)),mark(U61(X1,X2,X3)) -> active(U61(mark(X1),X2,X3)),mark(U62(X1,X2,X3)) -> active(U62(mark(X1),X2,X3)),mark(U63(X1,X2,X3)) -> active(U63(mark(X1),X2,X3)),mark(U64(X1,X2,X3)) -> active(U64(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(0) -> active(0),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),U12(mark(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,mark(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,mark(X3)) -> U12(X1,X2,X3),U12(active(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,active(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,active(X3)) -> U12(X1,X2,X3),isNatKind(mark(X)) -> isNatKind(X),isNatKind(active(X)) -> isNatKind(X),U13(mark(X1),X2,X3) -> U13(X1,X2,X3),U13(X1,mark(X2),X3) -> U13(X1,X2,X3),U13(X1,X2,mark(X3)) -> U13(X1,X2,X3),U13(active(X1),X2,X3) -> U13(X1,X2,X3),U13(X1,active(X2),X3) -> U13(X1,X2,X3),U13(X1,X2,active(X3)) -> U13(X1,X2,X3),U14(mark(X1),X2,X3) -> U14(X1,X2,X3),U14(X1,mark(X2),X3) -> U14(X1,X2,X3),U14(X1,X2,mark(X3)) -> U14(X1,X2,X3),U14(active(X1),X2,X3) -> U14(X1,X2,X3),U14(X1,active(X2),X3) -> U14(X1,X2,X3),U14(X1,X2,active(X3)) -> U14(X1,X2,X3),U15(mark(X1),X2) -> U15(X1,X2),U15(X1,mark(X2)) -> U15(X1,X2),U15(active(X1),X2) -> U15(X1,X2),U15(X1,active(X2)) -> U15(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U16(mark(X)) -> U16(X),U16(active(X)) -> U16(X),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X1),X2) -> U22(X1,X2),U22(X1,mark(X2)) -> U22(X1,X2),U22(active(X1),X2) -> U22(X1,X2),U22(X1,active(X2)) -> U22(X1,X2),U23(mark(X)) -> U23(X),U23(active(X)) -> U23(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U32(mark(X)) -> U32(X),U32(active(X)) -> U32(X),U41(mark(X)) -> U41(X),U41(active(X)) -> U41(X),U51(mark(X1),X2) -> U51(X1,X2),U51(X1,mark(X2)) -> U51(X1,X2),U51(active(X1),X2) -> U51(X1,X2),U51(X1,active(X2)) -> U51(X1,X2),U52(mark(X1),X2) -> U52(X1,X2),U52(X1,mark(X2)) -> U52(X1,X2),U52(active(X1),X2) -> U52(X1,X2),U52(X1,active(X2)) -> U52(X1,X2),U61(mark(X1),X2,X3) -> U61(X1,X2,X3),U61(X1,mark(X2),X3) -> U61(X1,X2,X3),U61(X1,X2,mark(X3)) -> U61(X1,X2,X3),U61(active(X1),X2,X3) -> U61(X1,X2,X3),U61(X1,active(X2),X3) -> U61(X1,X2,X3),U61(X1,X2,active(X3)) -> U61(X1,X2,X3),U62(mark(X1),X2,X3) -> U62(X1,X2,X3),U62(X1,mark(X2),X3) -> U62(X1,X2,X3),U62(X1,X2,mark(X3)) -> U62(X1,X2,X3),U62(active(X1),X2,X3) -> U62(X1,X2,X3),U62(X1,active(X2),X3) -> U62(X1,X2,X3),U62(X1,X2,active(X3)) -> U62(X1,X2,X3),U63(mark(X1),X2,X3) -> U63(X1,X2,X3),U63(X1,mark(X2),X3) -> U63(X1,X2,X3),U63(X1,X2,mark(X3)) -> U63(X1,X2,X3),U63(active(X1),X2,X3) -> U63(X1,X2,X3),U63(X1,active(X2),X3) -> U63(X1,X2,X3),U63(X1,X2,active(X3)) -> U63(X1,X2,X3),U64(mark(X1),X2,X3) -> U64(X1,X2,X3),U64(X1,mark(X2),X3) -> U64(X1,X2,X3),U64(X1,X2,mark(X3)) -> U64(X1,X2,X3),U64(active(X1),X2,X3) -> U64(X1,X2,X3),U64(X1,active(X2),X3) -> U64(X1,X2,X3),U64(X1,X2,active(X3)) -> U64(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_complete_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U13",3),("U14",3),("U15",2),("U16",1),("U21",2),("U22",2),("U23",1),("U31",2),("U32",1),("U41",1),("U51",2),("U52",2),("U61",3),("U62",3),("U63",3),("U64",3),("a__U11",3),("a__U12",3),("a__U13",3),("a__U14",3),("a__U15",2),("a__U16",1),("a__U21",2),("a__U22",2),("a__U23",1),("a__U31",2),("a__U32",1),("a__U41",1),("a__U51",2),("a__U52",2),("a__U61",3),("a__U62",3),("a__U63",3),("a__U64",3),("a__isNat",1),("a__isNatKind",1),("a__plus",2),("isNat",1),("isNatKind",1),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U11(tt,V1,V2) -> a__U12(a__isNatKind(V1),V1,V2),a__U12(tt,V1,V2) -> a__U13(a__isNatKind(V2),V1,V2),a__U13(tt,V1,V2) -> a__U14(a__isNatKind(V2),V1,V2),a__U14(tt,V1,V2) -> a__U15(a__isNat(V1),V2),a__U15(tt,V2) -> a__U16(a__isNat(V2)),a__U16(tt) -> tt,a__U21(tt,V1) -> a__U22(a__isNatKind(V1),V1),a__U22(tt,V1) -> a__U23(a__isNat(V1)),a__U23(tt) -> tt,a__U31(tt,V2) -> a__U32(a__isNatKind(V2)),a__U32(tt) -> tt,a__U41(tt) -> tt,a__U51(tt,N) -> a__U52(a__isNatKind(N),N),a__U52(tt,N) -> mark(N),a__U61(tt,M,N) -> a__U62(a__isNatKind(M),M,N),a__U62(tt,M,N) -> a__U63(a__isNat(N),M,N),a__U63(tt,M,N) -> a__U64(a__isNatKind(N),M,N),a__U64(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__isNat(0) -> tt,a__isNat(plus(V1,V2)) -> a__U11(a__isNatKind(V1),V1,V2),a__isNat(s(V1)) -> a__U21(a__isNatKind(V1),V1),a__isNatKind(0) -> tt,a__isNatKind(plus(V1,V2)) -> a__U31(a__isNatKind(V1),V2),a__isNatKind(s(V1)) -> a__U41(a__isNatKind(V1)),a__plus(N,0) -> a__U51(a__isNat(N),N),a__plus(N,s(M)) -> a__U61(a__isNat(M),M,N),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(U12(X1,X2,X3)) -> a__U12(mark(X1),X2,X3),mark(isNatKind(X)) -> a__isNatKind(X),mark(U13(X1,X2,X3)) -> a__U13(mark(X1),X2,X3),mark(U14(X1,X2,X3)) -> a__U14(mark(X1),X2,X3),mark(U15(X1,X2)) -> a__U15(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(U16(X)) -> a__U16(mark(X)),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X1,X2)) -> a__U22(mark(X1),X2),mark(U23(X)) -> a__U23(mark(X)),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U32(X)) -> a__U32(mark(X)),mark(U41(X)) -> a__U41(mark(X)),mark(U51(X1,X2)) -> a__U51(mark(X1),X2),mark(U52(X1,X2)) -> a__U52(mark(X1),X2),mark(U61(X1,X2,X3)) -> a__U61(mark(X1),X2,X3),mark(U62(X1,X2,X3)) -> a__U62(mark(X1),X2,X3),mark(U63(X1,X2,X3)) -> a__U63(mark(X1),X2,X3),mark(U64(X1,X2,X3)) -> a__U64(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__U12(X1,X2,X3) -> U12(X1,X2,X3),a__isNatKind(X) -> isNatKind(X),a__U13(X1,X2,X3) -> U13(X1,X2,X3),a__U14(X1,X2,X3) -> U14(X1,X2,X3),a__U15(X1,X2) -> U15(X1,X2),a__isNat(X) -> isNat(X),a__U16(X) -> U16(X),a__U21(X1,X2) -> U21(X1,X2),a__U22(X1,X2) -> U22(X1,X2),a__U23(X) -> U23(X),a__U31(X1,X2) -> U31(X1,X2),a__U32(X) -> U32(X),a__U41(X) -> U41(X),a__U51(X1,X2) -> U51(X1,X2),a__U52(X1,X2) -> U52(X1,X2),a__U61(X1,X2,X3) -> U61(X1,X2,X3),a__U62(X1,X2,X3) -> U62(X1,X2,X3),a__U63(X1,X2,X3) -> U63(X1,X2,X3),a__U64(X1,X2,X3) -> U64(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_complete_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U13",3),("U14",3),("U15",2),("U16",1),("U21",2),("U22",2),("U23",1),("U31",2),("U32",1),("U41",1),("U51",2),("U52",2),("U61",3),("U62",3),("U63",3),("U64",3),("active",1),("isNat",1),("isNatKind",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V1,V2)) -> mark(U12(isNatKind(V1),V1,V2)),active(U12(tt,V1,V2)) -> mark(U13(isNatKind(V2),V1,V2)),active(U13(tt,V1,V2)) -> mark(U14(isNatKind(V2),V1,V2)),active(U14(tt,V1,V2)) -> mark(U15(isNat(V1),V2)),active(U15(tt,V2)) -> mark(U16(isNat(V2))),active(U16(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNatKind(V1),V1)),active(U22(tt,V1)) -> mark(U23(isNat(V1))),active(U23(tt)) -> mark(tt),active(U31(tt,V2)) -> mark(U32(isNatKind(V2))),active(U32(tt)) -> mark(tt),active(U41(tt)) -> mark(tt),active(U51(tt,N)) -> mark(U52(isNatKind(N),N)),active(U52(tt,N)) -> mark(N),active(U61(tt,M,N)) -> mark(U62(isNatKind(M),M,N)),active(U62(tt,M,N)) -> mark(U63(isNat(N),M,N)),active(U63(tt,M,N)) -> mark(U64(isNatKind(N),M,N)),active(U64(tt,M,N)) -> mark(s(plus(N,M))),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(isNatKind(V1),V1,V2)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatKind(0)) -> mark(tt),active(isNatKind(plus(V1,V2))) -> mark(U31(isNatKind(V1),V2)),active(isNatKind(s(V1))) -> mark(U41(isNatKind(V1))),active(plus(N,0)) -> mark(U51(isNat(N),N)),active(plus(N,s(M))) -> mark(U61(isNat(M),M,N)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(U12(X1,X2,X3)) -> U12(active(X1),X2,X3),active(U13(X1,X2,X3)) -> U13(active(X1),X2,X3),active(U14(X1,X2,X3)) -> U14(active(X1),X2,X3),active(U15(X1,X2)) -> U15(active(X1),X2),active(U16(X)) -> U16(active(X)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X1,X2)) -> U22(active(X1),X2),active(U23(X)) -> U23(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U32(X)) -> U32(active(X)),active(U41(X)) -> U41(active(X)),active(U51(X1,X2)) -> U51(active(X1),X2),active(U52(X1,X2)) -> U52(active(X1),X2),active(U61(X1,X2,X3)) -> U61(active(X1),X2,X3),active(U62(X1,X2,X3)) -> U62(active(X1),X2,X3),active(U63(X1,X2,X3)) -> U63(active(X1),X2,X3),active(U64(X1,X2,X3)) -> U64(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),U12(mark(X1),X2,X3) -> mark(U12(X1,X2,X3)),U13(mark(X1),X2,X3) -> mark(U13(X1,X2,X3)),U14(mark(X1),X2,X3) -> mark(U14(X1,X2,X3)),U15(mark(X1),X2) -> mark(U15(X1,X2)),U16(mark(X)) -> mark(U16(X)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X1),X2) -> mark(U22(X1,X2)),U23(mark(X)) -> mark(U23(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U32(mark(X)) -> mark(U32(X)),U41(mark(X)) -> mark(U41(X)),U51(mark(X1),X2) -> mark(U51(X1,X2)),U52(mark(X1),X2) -> mark(U52(X1,X2)),U61(mark(X1),X2,X3) -> mark(U61(X1,X2,X3)),U62(mark(X1),X2,X3) -> mark(U62(X1,X2,X3)),U63(mark(X1),X2,X3) -> mark(U63(X1,X2,X3)),U64(mark(X1),X2,X3) -> mark(U64(X1,X2,X3)),s(mark(X)) -> mark(s(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U12(X1,X2,X3)) -> U12(proper(X1),proper(X2),proper(X3)),proper(isNatKind(X)) -> isNatKind(proper(X)),proper(U13(X1,X2,X3)) -> U13(proper(X1),proper(X2),proper(X3)),proper(U14(X1,X2,X3)) -> U14(proper(X1),proper(X2),proper(X3)),proper(U15(X1,X2)) -> U15(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),proper(U16(X)) -> U16(proper(X)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X1,X2)) -> U22(proper(X1),proper(X2)),proper(U23(X)) -> U23(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U32(X)) -> U32(proper(X)),proper(U41(X)) -> U41(proper(X)),proper(U51(X1,X2)) -> U51(proper(X1),proper(X2)),proper(U52(X1,X2)) -> U52(proper(X1),proper(X2)),proper(U61(X1,X2,X3)) -> U61(proper(X1),proper(X2),proper(X3)),proper(U62(X1,X2,X3)) -> U62(proper(X1),proper(X2),proper(X3)),proper(U63(X1,X2,X3)) -> U63(proper(X1),proper(X2),proper(X3)),proper(U64(X1,X2,X3)) -> U64(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(0) -> ok(0),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),U12(ok(X1),ok(X2),ok(X3)) -> ok(U12(X1,X2,X3)),isNatKind(ok(X)) -> ok(isNatKind(X)),U13(ok(X1),ok(X2),ok(X3)) -> ok(U13(X1,X2,X3)),U14(ok(X1),ok(X2),ok(X3)) -> ok(U14(X1,X2,X3)),U15(ok(X1),ok(X2)) -> ok(U15(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),U16(ok(X)) -> ok(U16(X)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X1),ok(X2)) -> ok(U22(X1,X2)),U23(ok(X)) -> ok(U23(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U32(ok(X)) -> ok(U32(X)),U41(ok(X)) -> ok(U41(X)),U51(ok(X1),ok(X2)) -> ok(U51(X1,X2)),U52(ok(X1),ok(X2)) -> ok(U52(X1,X2)),U61(ok(X1),ok(X2),ok(X3)) -> ok(U61(X1,X2,X3)),U62(ok(X1),ok(X2),ok(X3)) -> ok(U62(X1,X2,X3)),U63(ok(X1),ok(X2),ok(X3)) -> ok(U63(X1,X2,X3)),U64(ok(X1),ok(X2),ok(X3)) -> ok(U64(X1,X2,X3)),s(ok(X)) -> ok(s(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_complete_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",2),("U13",1),("U21",2),("U22",1),("U31",2),("U41",3),("active",1),("and",2),("isNat",1),("isNatKind",1),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V1,V2)) -> mark(U12(isNat(V1),V2)),active(U12(tt,V2)) -> mark(U13(isNat(V2))),active(U13(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNat(V1))),active(U22(tt)) -> mark(tt),active(U31(tt,N)) -> mark(N),active(U41(tt,M,N)) -> mark(s(plus(N,M))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(and(isNatKind(V1),isNatKind(V2)),V1,V2)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatKind(0)) -> mark(tt),active(isNatKind(plus(V1,V2))) -> mark(and(isNatKind(V1),isNatKind(V2))),active(isNatKind(s(V1))) -> mark(isNatKind(V1)),active(plus(N,0)) -> mark(U31(and(isNat(N),isNatKind(N)),N)),active(plus(N,s(M))) -> mark(U41(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U12(X1,X2)) -> active(U12(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),mark(U13(X)) -> active(U13(mark(X))),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X)) -> active(U22(mark(X))),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(0) -> active(0),mark(isNatKind(X)) -> active(isNatKind(X)),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),U12(mark(X1),X2) -> U12(X1,X2),U12(X1,mark(X2)) -> U12(X1,X2),U12(active(X1),X2) -> U12(X1,X2),U12(X1,active(X2)) -> U12(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U13(mark(X)) -> U13(X),U13(active(X)) -> U13(X),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X)) -> U22(X),U22(active(X)) -> U22(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNatKind(mark(X)) -> isNatKind(X),isNatKind(active(X)) -> isNatKind(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_complete_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",2),("U13",1),("U21",2),("U22",1),("U31",2),("U41",3),("a__U11",3),("a__U12",2),("a__U13",1),("a__U21",2),("a__U22",1),("a__U31",2),("a__U41",3),("a__and",2),("a__isNat",1),("a__isNatKind",1),("a__plus",2),("and",2),("isNat",1),("isNatKind",1),("mark",1),("plus",2),("s",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U11(tt,V1,V2) -> a__U12(a__isNat(V1),V2),a__U12(tt,V2) -> a__U13(a__isNat(V2)),a__U13(tt) -> tt,a__U21(tt,V1) -> a__U22(a__isNat(V1)),a__U22(tt) -> tt,a__U31(tt,N) -> mark(N),a__U41(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__and(tt,X) -> mark(X),a__isNat(0) -> tt,a__isNat(plus(V1,V2)) -> a__U11(a__and(a__isNatKind(V1),isNatKind(V2)),V1,V2),a__isNat(s(V1)) -> a__U21(a__isNatKind(V1),V1),a__isNatKind(0) -> tt,a__isNatKind(plus(V1,V2)) -> a__and(a__isNatKind(V1),isNatKind(V2)),a__isNatKind(s(V1)) -> a__isNatKind(V1),a__plus(N,0) -> a__U31(a__and(a__isNat(N),isNatKind(N)),N),a__plus(N,s(M)) -> a__U41(a__and(a__and(a__isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(U12(X1,X2)) -> a__U12(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(U13(X)) -> a__U13(mark(X)),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X)) -> a__U22(mark(X)),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNatKind(X)) -> a__isNatKind(X),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__U12(X1,X2) -> U12(X1,X2),a__isNat(X) -> isNat(X),a__U13(X) -> U13(X),a__U21(X1,X2) -> U21(X1,X2),a__U22(X) -> U22(X),a__U31(X1,X2) -> U31(X1,X2),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2),a__and(X1,X2) -> and(X1,X2),a__isNatKind(X) -> isNatKind(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PEANO_complete_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",2),("U13",1),("U21",2),("U22",1),("U31",2),("U41",3),("active",1),("and",2),("isNat",1),("isNatKind",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V1,V2)) -> mark(U12(isNat(V1),V2)),active(U12(tt,V2)) -> mark(U13(isNat(V2))),active(U13(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNat(V1))),active(U22(tt)) -> mark(tt),active(U31(tt,N)) -> mark(N),active(U41(tt,M,N)) -> mark(s(plus(N,M))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(and(isNatKind(V1),isNatKind(V2)),V1,V2)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatKind(0)) -> mark(tt),active(isNatKind(plus(V1,V2))) -> mark(and(isNatKind(V1),isNatKind(V2))),active(isNatKind(s(V1))) -> mark(isNatKind(V1)),active(plus(N,0)) -> mark(U31(and(isNat(N),isNatKind(N)),N)),active(plus(N,s(M))) -> mark(U41(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(U12(X1,X2)) -> U12(active(X1),X2),active(U13(X)) -> U13(active(X)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X)) -> U22(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(and(X1,X2)) -> and(active(X1),X2),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),U12(mark(X1),X2) -> mark(U12(X1,X2)),U13(mark(X)) -> mark(U13(X)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X)) -> mark(U22(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),s(mark(X)) -> mark(s(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U12(X1,X2)) -> U12(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),proper(U13(X)) -> U13(proper(X)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X)) -> U22(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(0) -> ok(0),proper(isNatKind(X)) -> isNatKind(proper(X)),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),U12(ok(X1),ok(X2)) -> ok(U12(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),U13(ok(X)) -> ok(U13(X)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X)) -> ok(U22(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),s(ok(X)) -> ok(s(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNatKind(ok(X)) -> ok(isNatKind(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nosorts_noand_iGM.xml" :
TRS {trsSignature = fromList [("U11",1),("U12",1),("__",2),("active",1),("isNePal",1),("mark",1),("nil",0),("tt",0)], trsVariables = fromList ["I","P","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(U11(tt)) -> mark(U12(tt)),active(U12(tt)) -> mark(tt),active(isNePal(__(I,__(P,I)))) -> mark(U11(tt)),mark(__(X1,X2)) -> active(__(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(U11(X)) -> active(U11(mark(X))),mark(tt) -> active(tt),mark(U12(X)) -> active(U12(mark(X))),mark(isNePal(X)) -> active(isNePal(mark(X))),__(mark(X1),X2) -> __(X1,X2),__(X1,mark(X2)) -> __(X1,X2),__(active(X1),X2) -> __(X1,X2),__(X1,active(X2)) -> __(X1,X2),U11(mark(X)) -> U11(X),U11(active(X)) -> U11(X),U12(mark(X)) -> U12(X),U12(active(X)) -> U12(X),isNePal(mark(X)) -> isNePal(X),isNePal(active(X)) -> isNePal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nosorts_noand_GM.xml" :
TRS {trsSignature = fromList [("U11",1),("U12",1),("__",2),("a__U11",1),("a__U12",1),("a____",2),("a__isNePal",1),("isNePal",1),("mark",1),("nil",0),("tt",0)], trsVariables = fromList ["I","P","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a____(__(X,Y),Z) -> a____(mark(X),a____(mark(Y),mark(Z))),a____(X,nil) -> mark(X),a____(nil,X) -> mark(X),a__U11(tt) -> a__U12(tt),a__U12(tt) -> tt,a__isNePal(__(I,__(P,I))) -> a__U11(tt),mark(__(X1,X2)) -> a____(mark(X1),mark(X2)),mark(U11(X)) -> a__U11(mark(X)),mark(U12(X)) -> a__U12(mark(X)),mark(isNePal(X)) -> a__isNePal(mark(X)),mark(nil) -> nil,mark(tt) -> tt,a____(X1,X2) -> __(X1,X2),a__U11(X) -> U11(X),a__U12(X) -> U12(X),a__isNePal(X) -> isNePal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nosorts_noand_C.xml" :
TRS {trsSignature = fromList [("U11",1),("U12",1),("__",2),("active",1),("isNePal",1),("mark",1),("nil",0),("ok",1),("proper",1),("top",1),("tt",0)], trsVariables = fromList ["I","P","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(U11(tt)) -> mark(U12(tt)),active(U12(tt)) -> mark(tt),active(isNePal(__(I,__(P,I)))) -> mark(U11(tt)),active(__(X1,X2)) -> __(active(X1),X2),active(__(X1,X2)) -> __(X1,active(X2)),active(U11(X)) -> U11(active(X)),active(U12(X)) -> U12(active(X)),active(isNePal(X)) -> isNePal(active(X)),__(mark(X1),X2) -> mark(__(X1,X2)),__(X1,mark(X2)) -> mark(__(X1,X2)),U11(mark(X)) -> mark(U11(X)),U12(mark(X)) -> mark(U12(X)),isNePal(mark(X)) -> mark(isNePal(X)),proper(__(X1,X2)) -> __(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(U11(X)) -> U11(proper(X)),proper(tt) -> ok(tt),proper(U12(X)) -> U12(proper(X)),proper(isNePal(X)) -> isNePal(proper(X)),__(ok(X1),ok(X2)) -> ok(__(X1,X2)),U11(ok(X)) -> ok(U11(X)),U12(ok(X)) -> ok(U12(X)),isNePal(ok(X)) -> ok(isNePal(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nosorts_iGM.xml" :
TRS {trsSignature = fromList [("__",2),("active",1),("and",2),("isNePal",1),("mark",1),("nil",0),("tt",0)], trsVariables = fromList ["I","P","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(and(tt,X)) -> mark(X),active(isNePal(__(I,__(P,I)))) -> mark(tt),mark(__(X1,X2)) -> active(__(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(tt) -> active(tt),mark(isNePal(X)) -> active(isNePal(mark(X))),__(mark(X1),X2) -> __(X1,X2),__(X1,mark(X2)) -> __(X1,X2),__(active(X1),X2) -> __(X1,X2),__(X1,active(X2)) -> __(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNePal(mark(X)) -> isNePal(X),isNePal(active(X)) -> isNePal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nosorts_GM.xml" :
TRS {trsSignature = fromList [("__",2),("a____",2),("a__and",2),("a__isNePal",1),("and",2),("isNePal",1),("mark",1),("nil",0),("tt",0)], trsVariables = fromList ["I","P","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a____(__(X,Y),Z) -> a____(mark(X),a____(mark(Y),mark(Z))),a____(X,nil) -> mark(X),a____(nil,X) -> mark(X),a__and(tt,X) -> mark(X),a__isNePal(__(I,__(P,I))) -> tt,mark(__(X1,X2)) -> a____(mark(X1),mark(X2)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNePal(X)) -> a__isNePal(mark(X)),mark(nil) -> nil,mark(tt) -> tt,a____(X1,X2) -> __(X1,X2),a__and(X1,X2) -> and(X1,X2),a__isNePal(X) -> isNePal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nosorts_C.xml" :
TRS {trsSignature = fromList [("__",2),("active",1),("and",2),("isNePal",1),("mark",1),("nil",0),("ok",1),("proper",1),("top",1),("tt",0)], trsVariables = fromList ["I","P","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(and(tt,X)) -> mark(X),active(isNePal(__(I,__(P,I)))) -> mark(tt),active(__(X1,X2)) -> __(active(X1),X2),active(__(X1,X2)) -> __(X1,active(X2)),active(and(X1,X2)) -> and(active(X1),X2),active(isNePal(X)) -> isNePal(active(X)),__(mark(X1),X2) -> mark(__(X1,X2)),__(X1,mark(X2)) -> mark(__(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),isNePal(mark(X)) -> mark(isNePal(X)),proper(__(X1,X2)) -> __(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(isNePal(X)) -> isNePal(proper(X)),__(ok(X1),ok(X2)) -> ok(__(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNePal(ok(X)) -> ok(isNePal(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nokinds_noand_iGM.xml" :
TRS {trsSignature = fromList [("U11",1),("U21",2),("U22",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",1),("U71",2),("U72",1),("U81",1),("__",2),("a",0),("active",1),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isQid",1),("mark",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(U11(tt)) -> mark(tt),active(U21(tt,V2)) -> mark(U22(isList(V2))),active(U22(tt)) -> mark(tt),active(U31(tt)) -> mark(tt),active(U41(tt,V2)) -> mark(U42(isNeList(V2))),active(U42(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isList(V2))),active(U52(tt)) -> mark(tt),active(U61(tt)) -> mark(tt),active(U71(tt,P)) -> mark(U72(isPal(P))),active(U72(tt)) -> mark(tt),active(U81(tt)) -> mark(tt),active(isList(V)) -> mark(U11(isNeList(V))),active(isList(nil)) -> mark(tt),active(isList(__(V1,V2))) -> mark(U21(isList(V1),V2)),active(isNeList(V)) -> mark(U31(isQid(V))),active(isNeList(__(V1,V2))) -> mark(U41(isList(V1),V2)),active(isNeList(__(V1,V2))) -> mark(U51(isNeList(V1),V2)),active(isNePal(V)) -> mark(U61(isQid(V))),active(isNePal(__(I,__(P,I)))) -> mark(U71(isQid(I),P)),active(isPal(V)) -> mark(U81(isNePal(V))),active(isPal(nil)) -> mark(tt),active(isQid(a)) -> mark(tt),active(isQid(e)) -> mark(tt),active(isQid(i)) -> mark(tt),active(isQid(o)) -> mark(tt),active(isQid(u)) -> mark(tt),mark(__(X1,X2)) -> active(__(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(U11(X)) -> active(U11(mark(X))),mark(tt) -> active(tt),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X)) -> active(U22(mark(X))),mark(isList(X)) -> active(isList(X)),mark(U31(X)) -> active(U31(mark(X))),mark(U41(X1,X2)) -> active(U41(mark(X1),X2)),mark(U42(X)) -> active(U42(mark(X))),mark(isNeList(X)) -> active(isNeList(X)),mark(U51(X1,X2)) -> active(U51(mark(X1),X2)),mark(U52(X)) -> active(U52(mark(X))),mark(U61(X)) -> active(U61(mark(X))),mark(U71(X1,X2)) -> active(U71(mark(X1),X2)),mark(U72(X)) -> active(U72(mark(X))),mark(isPal(X)) -> active(isPal(X)),mark(U81(X)) -> active(U81(mark(X))),mark(isQid(X)) -> active(isQid(X)),mark(isNePal(X)) -> active(isNePal(X)),mark(a) -> active(a),mark(e) -> active(e),mark(i) -> active(i),mark(o) -> active(o),mark(u) -> active(u),__(mark(X1),X2) -> __(X1,X2),__(X1,mark(X2)) -> __(X1,X2),__(active(X1),X2) -> __(X1,X2),__(X1,active(X2)) -> __(X1,X2),U11(mark(X)) -> U11(X),U11(active(X)) -> U11(X),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X)) -> U22(X),U22(active(X)) -> U22(X),isList(mark(X)) -> isList(X),isList(active(X)) -> isList(X),U31(mark(X)) -> U31(X),U31(active(X)) -> U31(X),U41(mark(X1),X2) -> U41(X1,X2),U41(X1,mark(X2)) -> U41(X1,X2),U41(active(X1),X2) -> U41(X1,X2),U41(X1,active(X2)) -> U41(X1,X2),U42(mark(X)) -> U42(X),U42(active(X)) -> U42(X),isNeList(mark(X)) -> isNeList(X),isNeList(active(X)) -> isNeList(X),U51(mark(X1),X2) -> U51(X1,X2),U51(X1,mark(X2)) -> U51(X1,X2),U51(active(X1),X2) -> U51(X1,X2),U51(X1,active(X2)) -> U51(X1,X2),U52(mark(X)) -> U52(X),U52(active(X)) -> U52(X),U61(mark(X)) -> U61(X),U61(active(X)) -> U61(X),U71(mark(X1),X2) -> U71(X1,X2),U71(X1,mark(X2)) -> U71(X1,X2),U71(active(X1),X2) -> U71(X1,X2),U71(X1,active(X2)) -> U71(X1,X2),U72(mark(X)) -> U72(X),U72(active(X)) -> U72(X),isPal(mark(X)) -> isPal(X),isPal(active(X)) -> isPal(X),U81(mark(X)) -> U81(X),U81(active(X)) -> U81(X),isQid(mark(X)) -> isQid(X),isQid(active(X)) -> isQid(X),isNePal(mark(X)) -> isNePal(X),isNePal(active(X)) -> isNePal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nokinds_noand_GM.xml" :
TRS {trsSignature = fromList [("U11",1),("U21",2),("U22",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",1),("U71",2),("U72",1),("U81",1),("__",2),("a",0),("a__U11",1),("a__U21",2),("a__U22",1),("a__U31",1),("a__U41",2),("a__U42",1),("a__U51",2),("a__U52",1),("a__U61",1),("a__U71",2),("a__U72",1),("a__U81",1),("a____",2),("a__isList",1),("a__isNeList",1),("a__isNePal",1),("a__isPal",1),("a__isQid",1),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isQid",1),("mark",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a____(__(X,Y),Z) -> a____(mark(X),a____(mark(Y),mark(Z))),a____(X,nil) -> mark(X),a____(nil,X) -> mark(X),a__U11(tt) -> tt,a__U21(tt,V2) -> a__U22(a__isList(V2)),a__U22(tt) -> tt,a__U31(tt) -> tt,a__U41(tt,V2) -> a__U42(a__isNeList(V2)),a__U42(tt) -> tt,a__U51(tt,V2) -> a__U52(a__isList(V2)),a__U52(tt) -> tt,a__U61(tt) -> tt,a__U71(tt,P) -> a__U72(a__isPal(P)),a__U72(tt) -> tt,a__U81(tt) -> tt,a__isList(V) -> a__U11(a__isNeList(V)),a__isList(nil) -> tt,a__isList(__(V1,V2)) -> a__U21(a__isList(V1),V2),a__isNeList(V) -> a__U31(a__isQid(V)),a__isNeList(__(V1,V2)) -> a__U41(a__isList(V1),V2),a__isNeList(__(V1,V2)) -> a__U51(a__isNeList(V1),V2),a__isNePal(V) -> a__U61(a__isQid(V)),a__isNePal(__(I,__(P,I))) -> a__U71(a__isQid(I),P),a__isPal(V) -> a__U81(a__isNePal(V)),a__isPal(nil) -> tt,a__isQid(a) -> tt,a__isQid(e) -> tt,a__isQid(i) -> tt,a__isQid(o) -> tt,a__isQid(u) -> tt,mark(__(X1,X2)) -> a____(mark(X1),mark(X2)),mark(U11(X)) -> a__U11(mark(X)),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X)) -> a__U22(mark(X)),mark(isList(X)) -> a__isList(X),mark(U31(X)) -> a__U31(mark(X)),mark(U41(X1,X2)) -> a__U41(mark(X1),X2),mark(U42(X)) -> a__U42(mark(X)),mark(isNeList(X)) -> a__isNeList(X),mark(U51(X1,X2)) -> a__U51(mark(X1),X2),mark(U52(X)) -> a__U52(mark(X)),mark(U61(X)) -> a__U61(mark(X)),mark(U71(X1,X2)) -> a__U71(mark(X1),X2),mark(U72(X)) -> a__U72(mark(X)),mark(isPal(X)) -> a__isPal(X),mark(U81(X)) -> a__U81(mark(X)),mark(isQid(X)) -> a__isQid(X),mark(isNePal(X)) -> a__isNePal(X),mark(nil) -> nil,mark(tt) -> tt,mark(a) -> a,mark(e) -> e,mark(i) -> i,mark(o) -> o,mark(u) -> u,a____(X1,X2) -> __(X1,X2),a__U11(X) -> U11(X),a__U21(X1,X2) -> U21(X1,X2),a__U22(X) -> U22(X),a__isList(X) -> isList(X),a__U31(X) -> U31(X),a__U41(X1,X2) -> U41(X1,X2),a__U42(X) -> U42(X),a__isNeList(X) -> isNeList(X),a__U51(X1,X2) -> U51(X1,X2),a__U52(X) -> U52(X),a__U61(X) -> U61(X),a__U71(X1,X2) -> U71(X1,X2),a__U72(X) -> U72(X),a__isPal(X) -> isPal(X),a__U81(X) -> U81(X),a__isQid(X) -> isQid(X),a__isNePal(X) -> isNePal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nokinds_noand_C.xml" :
TRS {trsSignature = fromList [("U11",1),("U21",2),("U22",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",1),("U71",2),("U72",1),("U81",1),("__",2),("a",0),("active",1),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isQid",1),("mark",1),("nil",0),("o",0),("ok",1),("proper",1),("top",1),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(U11(tt)) -> mark(tt),active(U21(tt,V2)) -> mark(U22(isList(V2))),active(U22(tt)) -> mark(tt),active(U31(tt)) -> mark(tt),active(U41(tt,V2)) -> mark(U42(isNeList(V2))),active(U42(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isList(V2))),active(U52(tt)) -> mark(tt),active(U61(tt)) -> mark(tt),active(U71(tt,P)) -> mark(U72(isPal(P))),active(U72(tt)) -> mark(tt),active(U81(tt)) -> mark(tt),active(isList(V)) -> mark(U11(isNeList(V))),active(isList(nil)) -> mark(tt),active(isList(__(V1,V2))) -> mark(U21(isList(V1),V2)),active(isNeList(V)) -> mark(U31(isQid(V))),active(isNeList(__(V1,V2))) -> mark(U41(isList(V1),V2)),active(isNeList(__(V1,V2))) -> mark(U51(isNeList(V1),V2)),active(isNePal(V)) -> mark(U61(isQid(V))),active(isNePal(__(I,__(P,I)))) -> mark(U71(isQid(I),P)),active(isPal(V)) -> mark(U81(isNePal(V))),active(isPal(nil)) -> mark(tt),active(isQid(a)) -> mark(tt),active(isQid(e)) -> mark(tt),active(isQid(i)) -> mark(tt),active(isQid(o)) -> mark(tt),active(isQid(u)) -> mark(tt),active(__(X1,X2)) -> __(active(X1),X2),active(__(X1,X2)) -> __(X1,active(X2)),active(U11(X)) -> U11(active(X)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X)) -> U22(active(X)),active(U31(X)) -> U31(active(X)),active(U41(X1,X2)) -> U41(active(X1),X2),active(U42(X)) -> U42(active(X)),active(U51(X1,X2)) -> U51(active(X1),X2),active(U52(X)) -> U52(active(X)),active(U61(X)) -> U61(active(X)),active(U71(X1,X2)) -> U71(active(X1),X2),active(U72(X)) -> U72(active(X)),active(U81(X)) -> U81(active(X)),__(mark(X1),X2) -> mark(__(X1,X2)),__(X1,mark(X2)) -> mark(__(X1,X2)),U11(mark(X)) -> mark(U11(X)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X)) -> mark(U22(X)),U31(mark(X)) -> mark(U31(X)),U41(mark(X1),X2) -> mark(U41(X1,X2)),U42(mark(X)) -> mark(U42(X)),U51(mark(X1),X2) -> mark(U51(X1,X2)),U52(mark(X)) -> mark(U52(X)),U61(mark(X)) -> mark(U61(X)),U71(mark(X1),X2) -> mark(U71(X1,X2)),U72(mark(X)) -> mark(U72(X)),U81(mark(X)) -> mark(U81(X)),proper(__(X1,X2)) -> __(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(U11(X)) -> U11(proper(X)),proper(tt) -> ok(tt),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X)) -> U22(proper(X)),proper(isList(X)) -> isList(proper(X)),proper(U31(X)) -> U31(proper(X)),proper(U41(X1,X2)) -> U41(proper(X1),proper(X2)),proper(U42(X)) -> U42(proper(X)),proper(isNeList(X)) -> isNeList(proper(X)),proper(U51(X1,X2)) -> U51(proper(X1),proper(X2)),proper(U52(X)) -> U52(proper(X)),proper(U61(X)) -> U61(proper(X)),proper(U71(X1,X2)) -> U71(proper(X1),proper(X2)),proper(U72(X)) -> U72(proper(X)),proper(isPal(X)) -> isPal(proper(X)),proper(U81(X)) -> U81(proper(X)),proper(isQid(X)) -> isQid(proper(X)),proper(isNePal(X)) -> isNePal(proper(X)),proper(a) -> ok(a),proper(e) -> ok(e),proper(i) -> ok(i),proper(o) -> ok(o),proper(u) -> ok(u),__(ok(X1),ok(X2)) -> ok(__(X1,X2)),U11(ok(X)) -> ok(U11(X)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X)) -> ok(U22(X)),isList(ok(X)) -> ok(isList(X)),U31(ok(X)) -> ok(U31(X)),U41(ok(X1),ok(X2)) -> ok(U41(X1,X2)),U42(ok(X)) -> ok(U42(X)),isNeList(ok(X)) -> ok(isNeList(X)),U51(ok(X1),ok(X2)) -> ok(U51(X1,X2)),U52(ok(X)) -> ok(U52(X)),U61(ok(X)) -> ok(U61(X)),U71(ok(X1),ok(X2)) -> ok(U71(X1,X2)),U72(ok(X)) -> ok(U72(X)),isPal(ok(X)) -> ok(isPal(X)),U81(ok(X)) -> ok(U81(X)),isQid(ok(X)) -> ok(isQid(X)),isNePal(ok(X)) -> ok(isNePal(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nokinds_iGM.xml" :
TRS {trsSignature = fromList [("__",2),("a",0),("active",1),("and",2),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isQid",1),("mark",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(and(tt,X)) -> mark(X),active(isList(V)) -> mark(isNeList(V)),active(isList(nil)) -> mark(tt),active(isList(__(V1,V2))) -> mark(and(isList(V1),isList(V2))),active(isNeList(V)) -> mark(isQid(V)),active(isNeList(__(V1,V2))) -> mark(and(isList(V1),isNeList(V2))),active(isNeList(__(V1,V2))) -> mark(and(isNeList(V1),isList(V2))),active(isNePal(V)) -> mark(isQid(V)),active(isNePal(__(I,__(P,I)))) -> mark(and(isQid(I),isPal(P))),active(isPal(V)) -> mark(isNePal(V)),active(isPal(nil)) -> mark(tt),active(isQid(a)) -> mark(tt),active(isQid(e)) -> mark(tt),active(isQid(i)) -> mark(tt),active(isQid(o)) -> mark(tt),active(isQid(u)) -> mark(tt),mark(__(X1,X2)) -> active(__(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(tt) -> active(tt),mark(isList(X)) -> active(isList(X)),mark(isNeList(X)) -> active(isNeList(X)),mark(isQid(X)) -> active(isQid(X)),mark(isNePal(X)) -> active(isNePal(X)),mark(isPal(X)) -> active(isPal(X)),mark(a) -> active(a),mark(e) -> active(e),mark(i) -> active(i),mark(o) -> active(o),mark(u) -> active(u),__(mark(X1),X2) -> __(X1,X2),__(X1,mark(X2)) -> __(X1,X2),__(active(X1),X2) -> __(X1,X2),__(X1,active(X2)) -> __(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isList(mark(X)) -> isList(X),isList(active(X)) -> isList(X),isNeList(mark(X)) -> isNeList(X),isNeList(active(X)) -> isNeList(X),isQid(mark(X)) -> isQid(X),isQid(active(X)) -> isQid(X),isNePal(mark(X)) -> isNePal(X),isNePal(active(X)) -> isNePal(X),isPal(mark(X)) -> isPal(X),isPal(active(X)) -> isPal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nokinds_GM.xml" :
TRS {trsSignature = fromList [("__",2),("a",0),("a____",2),("a__and",2),("a__isList",1),("a__isNeList",1),("a__isNePal",1),("a__isPal",1),("a__isQid",1),("and",2),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isQid",1),("mark",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a____(__(X,Y),Z) -> a____(mark(X),a____(mark(Y),mark(Z))),a____(X,nil) -> mark(X),a____(nil,X) -> mark(X),a__and(tt,X) -> mark(X),a__isList(V) -> a__isNeList(V),a__isList(nil) -> tt,a__isList(__(V1,V2)) -> a__and(a__isList(V1),isList(V2)),a__isNeList(V) -> a__isQid(V),a__isNeList(__(V1,V2)) -> a__and(a__isList(V1),isNeList(V2)),a__isNeList(__(V1,V2)) -> a__and(a__isNeList(V1),isList(V2)),a__isNePal(V) -> a__isQid(V),a__isNePal(__(I,__(P,I))) -> a__and(a__isQid(I),isPal(P)),a__isPal(V) -> a__isNePal(V),a__isPal(nil) -> tt,a__isQid(a) -> tt,a__isQid(e) -> tt,a__isQid(i) -> tt,a__isQid(o) -> tt,a__isQid(u) -> tt,mark(__(X1,X2)) -> a____(mark(X1),mark(X2)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isList(X)) -> a__isList(X),mark(isNeList(X)) -> a__isNeList(X),mark(isQid(X)) -> a__isQid(X),mark(isNePal(X)) -> a__isNePal(X),mark(isPal(X)) -> a__isPal(X),mark(nil) -> nil,mark(tt) -> tt,mark(a) -> a,mark(e) -> e,mark(i) -> i,mark(o) -> o,mark(u) -> u,a____(X1,X2) -> __(X1,X2),a__and(X1,X2) -> and(X1,X2),a__isList(X) -> isList(X),a__isNeList(X) -> isNeList(X),a__isQid(X) -> isQid(X),a__isNePal(X) -> isNePal(X),a__isPal(X) -> isPal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_nokinds_C.xml" :
TRS {trsSignature = fromList [("__",2),("a",0),("active",1),("and",2),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isQid",1),("mark",1),("nil",0),("o",0),("ok",1),("proper",1),("top",1),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(and(tt,X)) -> mark(X),active(isList(V)) -> mark(isNeList(V)),active(isList(nil)) -> mark(tt),active(isList(__(V1,V2))) -> mark(and(isList(V1),isList(V2))),active(isNeList(V)) -> mark(isQid(V)),active(isNeList(__(V1,V2))) -> mark(and(isList(V1),isNeList(V2))),active(isNeList(__(V1,V2))) -> mark(and(isNeList(V1),isList(V2))),active(isNePal(V)) -> mark(isQid(V)),active(isNePal(__(I,__(P,I)))) -> mark(and(isQid(I),isPal(P))),active(isPal(V)) -> mark(isNePal(V)),active(isPal(nil)) -> mark(tt),active(isQid(a)) -> mark(tt),active(isQid(e)) -> mark(tt),active(isQid(i)) -> mark(tt),active(isQid(o)) -> mark(tt),active(isQid(u)) -> mark(tt),active(__(X1,X2)) -> __(active(X1),X2),active(__(X1,X2)) -> __(X1,active(X2)),active(and(X1,X2)) -> and(active(X1),X2),__(mark(X1),X2) -> mark(__(X1,X2)),__(X1,mark(X2)) -> mark(__(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(__(X1,X2)) -> __(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(isList(X)) -> isList(proper(X)),proper(isNeList(X)) -> isNeList(proper(X)),proper(isQid(X)) -> isQid(proper(X)),proper(isNePal(X)) -> isNePal(proper(X)),proper(isPal(X)) -> isPal(proper(X)),proper(a) -> ok(a),proper(e) -> ok(e),proper(i) -> ok(i),proper(o) -> ok(o),proper(u) -> ok(u),__(ok(X1),ok(X2)) -> ok(__(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isList(ok(X)) -> ok(isList(X)),isNeList(ok(X)) -> ok(isNeList(X)),isQid(ok(X)) -> ok(isQid(X)),isNePal(ok(X)) -> ok(isNePal(X)),isPal(ok(X)) -> ok(isPal(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_complete_noand_iGM.xml" :
TRS {trsSignature = fromList [("U11",2),("U12",2),("U13",1),("U21",3),("U22",3),("U23",3),("U24",3),("U25",2),("U26",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",3),("U52",3),("U53",3),("U54",3),("U55",2),("U56",1),("U61",2),("U62",2),("U63",1),("U71",3),("U72",2),("U73",2),("U74",1),("U81",2),("U82",2),("U83",1),("U91",2),("U92",1),("__",2),("a",0),("active",1),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isPalListKind",1),("isQid",1),("mark",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(U11(tt,V)) -> mark(U12(isPalListKind(V),V)),active(U12(tt,V)) -> mark(U13(isNeList(V))),active(U13(tt)) -> mark(tt),active(U21(tt,V1,V2)) -> mark(U22(isPalListKind(V1),V1,V2)),active(U22(tt,V1,V2)) -> mark(U23(isPalListKind(V2),V1,V2)),active(U23(tt,V1,V2)) -> mark(U24(isPalListKind(V2),V1,V2)),active(U24(tt,V1,V2)) -> mark(U25(isList(V1),V2)),active(U25(tt,V2)) -> mark(U26(isList(V2))),active(U26(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isPalListKind(V),V)),active(U32(tt,V)) -> mark(U33(isQid(V))),active(U33(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isPalListKind(V1),V1,V2)),active(U42(tt,V1,V2)) -> mark(U43(isPalListKind(V2),V1,V2)),active(U43(tt,V1,V2)) -> mark(U44(isPalListKind(V2),V1,V2)),active(U44(tt,V1,V2)) -> mark(U45(isList(V1),V2)),active(U45(tt,V2)) -> mark(U46(isNeList(V2))),active(U46(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isPalListKind(V1),V1,V2)),active(U52(tt,V1,V2)) -> mark(U53(isPalListKind(V2),V1,V2)),active(U53(tt,V1,V2)) -> mark(U54(isPalListKind(V2),V1,V2)),active(U54(tt,V1,V2)) -> mark(U55(isNeList(V1),V2)),active(U55(tt,V2)) -> mark(U56(isList(V2))),active(U56(tt)) -> mark(tt),active(U61(tt,V)) -> mark(U62(isPalListKind(V),V)),active(U62(tt,V)) -> mark(U63(isQid(V))),active(U63(tt)) -> mark(tt),active(U71(tt,I,P)) -> mark(U72(isPalListKind(I),P)),active(U72(tt,P)) -> mark(U73(isPal(P),P)),active(U73(tt,P)) -> mark(U74(isPalListKind(P))),active(U74(tt)) -> mark(tt),active(U81(tt,V)) -> mark(U82(isPalListKind(V),V)),active(U82(tt,V)) -> mark(U83(isNePal(V))),active(U83(tt)) -> mark(tt),active(U91(tt,V2)) -> mark(U92(isPalListKind(V2))),active(U92(tt)) -> mark(tt),active(isList(V)) -> mark(U11(isPalListKind(V),V)),active(isList(nil)) -> mark(tt),active(isList(__(V1,V2))) -> mark(U21(isPalListKind(V1),V1,V2)),active(isNeList(V)) -> mark(U31(isPalListKind(V),V)),active(isNeList(__(V1,V2))) -> mark(U41(isPalListKind(V1),V1,V2)),active(isNeList(__(V1,V2))) -> mark(U51(isPalListKind(V1),V1,V2)),active(isNePal(V)) -> mark(U61(isPalListKind(V),V)),active(isNePal(__(I,__(P,I)))) -> mark(U71(isQid(I),I,P)),active(isPal(V)) -> mark(U81(isPalListKind(V),V)),active(isPal(nil)) -> mark(tt),active(isPalListKind(a)) -> mark(tt),active(isPalListKind(e)) -> mark(tt),active(isPalListKind(i)) -> mark(tt),active(isPalListKind(nil)) -> mark(tt),active(isPalListKind(o)) -> mark(tt),active(isPalListKind(u)) -> mark(tt),active(isPalListKind(__(V1,V2))) -> mark(U91(isPalListKind(V1),V2)),active(isQid(a)) -> mark(tt),active(isQid(e)) -> mark(tt),active(isQid(i)) -> mark(tt),active(isQid(o)) -> mark(tt),active(isQid(u)) -> mark(tt),mark(__(X1,X2)) -> active(__(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U12(X1,X2)) -> active(U12(mark(X1),X2)),mark(isPalListKind(X)) -> active(isPalListKind(X)),mark(U13(X)) -> active(U13(mark(X))),mark(isNeList(X)) -> active(isNeList(X)),mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3)),mark(U22(X1,X2,X3)) -> active(U22(mark(X1),X2,X3)),mark(U23(X1,X2,X3)) -> active(U23(mark(X1),X2,X3)),mark(U24(X1,X2,X3)) -> active(U24(mark(X1),X2,X3)),mark(U25(X1,X2)) -> active(U25(mark(X1),X2)),mark(isList(X)) -> active(isList(X)),mark(U26(X)) -> active(U26(mark(X))),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U32(X1,X2)) -> active(U32(mark(X1),X2)),mark(U33(X)) -> active(U33(mark(X))),mark(isQid(X)) -> active(isQid(X)),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2,X3)) -> active(U42(mark(X1),X2,X3)),mark(U43(X1,X2,X3)) -> active(U43(mark(X1),X2,X3)),mark(U44(X1,X2,X3)) -> active(U44(mark(X1),X2,X3)),mark(U45(X1,X2)) -> active(U45(mark(X1),X2)),mark(U46(X)) -> active(U46(mark(X))),mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3)),mark(U52(X1,X2,X3)) -> active(U52(mark(X1),X2,X3)),mark(U53(X1,X2,X3)) -> active(U53(mark(X1),X2,X3)),mark(U54(X1,X2,X3)) -> active(U54(mark(X1),X2,X3)),mark(U55(X1,X2)) -> active(U55(mark(X1),X2)),mark(U56(X)) -> active(U56(mark(X))),mark(U61(X1,X2)) -> active(U61(mark(X1),X2)),mark(U62(X1,X2)) -> active(U62(mark(X1),X2)),mark(U63(X)) -> active(U63(mark(X))),mark(U71(X1,X2,X3)) -> active(U71(mark(X1),X2,X3)),mark(U72(X1,X2)) -> active(U72(mark(X1),X2)),mark(U73(X1,X2)) -> active(U73(mark(X1),X2)),mark(isPal(X)) -> active(isPal(X)),mark(U74(X)) -> active(U74(mark(X))),mark(U81(X1,X2)) -> active(U81(mark(X1),X2)),mark(U82(X1,X2)) -> active(U82(mark(X1),X2)),mark(U83(X)) -> active(U83(mark(X))),mark(isNePal(X)) -> active(isNePal(X)),mark(U91(X1,X2)) -> active(U91(mark(X1),X2)),mark(U92(X)) -> active(U92(mark(X))),mark(a) -> active(a),mark(e) -> active(e),mark(i) -> active(i),mark(o) -> active(o),mark(u) -> active(u),__(mark(X1),X2) -> __(X1,X2),__(X1,mark(X2)) -> __(X1,X2),__(active(X1),X2) -> __(X1,X2),__(X1,active(X2)) -> __(X1,X2),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X1),X2) -> U12(X1,X2),U12(X1,mark(X2)) -> U12(X1,X2),U12(active(X1),X2) -> U12(X1,X2),U12(X1,active(X2)) -> U12(X1,X2),isPalListKind(mark(X)) -> isPalListKind(X),isPalListKind(active(X)) -> isPalListKind(X),U13(mark(X)) -> U13(X),U13(active(X)) -> U13(X),isNeList(mark(X)) -> isNeList(X),isNeList(active(X)) -> isNeList(X),U21(mark(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,mark(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,mark(X3)) -> U21(X1,X2,X3),U21(active(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,active(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,active(X3)) -> U21(X1,X2,X3),U22(mark(X1),X2,X3) -> U22(X1,X2,X3),U22(X1,mark(X2),X3) -> U22(X1,X2,X3),U22(X1,X2,mark(X3)) -> U22(X1,X2,X3),U22(active(X1),X2,X3) -> U22(X1,X2,X3),U22(X1,active(X2),X3) -> U22(X1,X2,X3),U22(X1,X2,active(X3)) -> U22(X1,X2,X3),U23(mark(X1),X2,X3) -> U23(X1,X2,X3),U23(X1,mark(X2),X3) -> U23(X1,X2,X3),U23(X1,X2,mark(X3)) -> U23(X1,X2,X3),U23(active(X1),X2,X3) -> U23(X1,X2,X3),U23(X1,active(X2),X3) -> U23(X1,X2,X3),U23(X1,X2,active(X3)) -> U23(X1,X2,X3),U24(mark(X1),X2,X3) -> U24(X1,X2,X3),U24(X1,mark(X2),X3) -> U24(X1,X2,X3),U24(X1,X2,mark(X3)) -> U24(X1,X2,X3),U24(active(X1),X2,X3) -> U24(X1,X2,X3),U24(X1,active(X2),X3) -> U24(X1,X2,X3),U24(X1,X2,active(X3)) -> U24(X1,X2,X3),U25(mark(X1),X2) -> U25(X1,X2),U25(X1,mark(X2)) -> U25(X1,X2),U25(active(X1),X2) -> U25(X1,X2),U25(X1,active(X2)) -> U25(X1,X2),isList(mark(X)) -> isList(X),isList(active(X)) -> isList(X),U26(mark(X)) -> U26(X),U26(active(X)) -> U26(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U32(mark(X1),X2) -> U32(X1,X2),U32(X1,mark(X2)) -> U32(X1,X2),U32(active(X1),X2) -> U32(X1,X2),U32(X1,active(X2)) -> U32(X1,X2),U33(mark(X)) -> U33(X),U33(active(X)) -> U33(X),isQid(mark(X)) -> isQid(X),isQid(active(X)) -> isQid(X),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,mark(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,mark(X3)) -> U42(X1,X2,X3),U42(active(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,active(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,active(X3)) -> U42(X1,X2,X3),U43(mark(X1),X2,X3) -> U43(X1,X2,X3),U43(X1,mark(X2),X3) -> U43(X1,X2,X3),U43(X1,X2,mark(X3)) -> U43(X1,X2,X3),U43(active(X1),X2,X3) -> U43(X1,X2,X3),U43(X1,active(X2),X3) -> U43(X1,X2,X3),U43(X1,X2,active(X3)) -> U43(X1,X2,X3),U44(mark(X1),X2,X3) -> U44(X1,X2,X3),U44(X1,mark(X2),X3) -> U44(X1,X2,X3),U44(X1,X2,mark(X3)) -> U44(X1,X2,X3),U44(active(X1),X2,X3) -> U44(X1,X2,X3),U44(X1,active(X2),X3) -> U44(X1,X2,X3),U44(X1,X2,active(X3)) -> U44(X1,X2,X3),U45(mark(X1),X2) -> U45(X1,X2),U45(X1,mark(X2)) -> U45(X1,X2),U45(active(X1),X2) -> U45(X1,X2),U45(X1,active(X2)) -> U45(X1,X2),U46(mark(X)) -> U46(X),U46(active(X)) -> U46(X),U51(mark(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,mark(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,mark(X3)) -> U51(X1,X2,X3),U51(active(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,active(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,active(X3)) -> U51(X1,X2,X3),U52(mark(X1),X2,X3) -> U52(X1,X2,X3),U52(X1,mark(X2),X3) -> U52(X1,X2,X3),U52(X1,X2,mark(X3)) -> U52(X1,X2,X3),U52(active(X1),X2,X3) -> U52(X1,X2,X3),U52(X1,active(X2),X3) -> U52(X1,X2,X3),U52(X1,X2,active(X3)) -> U52(X1,X2,X3),U53(mark(X1),X2,X3) -> U53(X1,X2,X3),U53(X1,mark(X2),X3) -> U53(X1,X2,X3),U53(X1,X2,mark(X3)) -> U53(X1,X2,X3),U53(active(X1),X2,X3) -> U53(X1,X2,X3),U53(X1,active(X2),X3) -> U53(X1,X2,X3),U53(X1,X2,active(X3)) -> U53(X1,X2,X3),U54(mark(X1),X2,X3) -> U54(X1,X2,X3),U54(X1,mark(X2),X3) -> U54(X1,X2,X3),U54(X1,X2,mark(X3)) -> U54(X1,X2,X3),U54(active(X1),X2,X3) -> U54(X1,X2,X3),U54(X1,active(X2),X3) -> U54(X1,X2,X3),U54(X1,X2,active(X3)) -> U54(X1,X2,X3),U55(mark(X1),X2) -> U55(X1,X2),U55(X1,mark(X2)) -> U55(X1,X2),U55(active(X1),X2) -> U55(X1,X2),U55(X1,active(X2)) -> U55(X1,X2),U56(mark(X)) -> U56(X),U56(active(X)) -> U56(X),U61(mark(X1),X2) -> U61(X1,X2),U61(X1,mark(X2)) -> U61(X1,X2),U61(active(X1),X2) -> U61(X1,X2),U61(X1,active(X2)) -> U61(X1,X2),U62(mark(X1),X2) -> U62(X1,X2),U62(X1,mark(X2)) -> U62(X1,X2),U62(active(X1),X2) -> U62(X1,X2),U62(X1,active(X2)) -> U62(X1,X2),U63(mark(X)) -> U63(X),U63(active(X)) -> U63(X),U71(mark(X1),X2,X3) -> U71(X1,X2,X3),U71(X1,mark(X2),X3) -> U71(X1,X2,X3),U71(X1,X2,mark(X3)) -> U71(X1,X2,X3),U71(active(X1),X2,X3) -> U71(X1,X2,X3),U71(X1,active(X2),X3) -> U71(X1,X2,X3),U71(X1,X2,active(X3)) -> U71(X1,X2,X3),U72(mark(X1),X2) -> U72(X1,X2),U72(X1,mark(X2)) -> U72(X1,X2),U72(active(X1),X2) -> U72(X1,X2),U72(X1,active(X2)) -> U72(X1,X2),U73(mark(X1),X2) -> U73(X1,X2),U73(X1,mark(X2)) -> U73(X1,X2),U73(active(X1),X2) -> U73(X1,X2),U73(X1,active(X2)) -> U73(X1,X2),isPal(mark(X)) -> isPal(X),isPal(active(X)) -> isPal(X),U74(mark(X)) -> U74(X),U74(active(X)) -> U74(X),U81(mark(X1),X2) -> U81(X1,X2),U81(X1,mark(X2)) -> U81(X1,X2),U81(active(X1),X2) -> U81(X1,X2),U81(X1,active(X2)) -> U81(X1,X2),U82(mark(X1),X2) -> U82(X1,X2),U82(X1,mark(X2)) -> U82(X1,X2),U82(active(X1),X2) -> U82(X1,X2),U82(X1,active(X2)) -> U82(X1,X2),U83(mark(X)) -> U83(X),U83(active(X)) -> U83(X),isNePal(mark(X)) -> isNePal(X),isNePal(active(X)) -> isNePal(X),U91(mark(X1),X2) -> U91(X1,X2),U91(X1,mark(X2)) -> U91(X1,X2),U91(active(X1),X2) -> U91(X1,X2),U91(X1,active(X2)) -> U91(X1,X2),U92(mark(X)) -> U92(X),U92(active(X)) -> U92(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_complete_noand_GM.xml" :
TRS {trsSignature = fromList [("U11",2),("U12",2),("U13",1),("U21",3),("U22",3),("U23",3),("U24",3),("U25",2),("U26",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",3),("U52",3),("U53",3),("U54",3),("U55",2),("U56",1),("U61",2),("U62",2),("U63",1),("U71",3),("U72",2),("U73",2),("U74",1),("U81",2),("U82",2),("U83",1),("U91",2),("U92",1),("__",2),("a",0),("a__U11",2),("a__U12",2),("a__U13",1),("a__U21",3),("a__U22",3),("a__U23",3),("a__U24",3),("a__U25",2),("a__U26",1),("a__U31",2),("a__U32",2),("a__U33",1),("a__U41",3),("a__U42",3),("a__U43",3),("a__U44",3),("a__U45",2),("a__U46",1),("a__U51",3),("a__U52",3),("a__U53",3),("a__U54",3),("a__U55",2),("a__U56",1),("a__U61",2),("a__U62",2),("a__U63",1),("a__U71",3),("a__U72",2),("a__U73",2),("a__U74",1),("a__U81",2),("a__U82",2),("a__U83",1),("a__U91",2),("a__U92",1),("a____",2),("a__isList",1),("a__isNeList",1),("a__isNePal",1),("a__isPal",1),("a__isPalListKind",1),("a__isQid",1),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isPalListKind",1),("isQid",1),("mark",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [a____(__(X,Y),Z) -> a____(mark(X),a____(mark(Y),mark(Z))),a____(X,nil) -> mark(X),a____(nil,X) -> mark(X),a__U11(tt,V) -> a__U12(a__isPalListKind(V),V),a__U12(tt,V) -> a__U13(a__isNeList(V)),a__U13(tt) -> tt,a__U21(tt,V1,V2) -> a__U22(a__isPalListKind(V1),V1,V2),a__U22(tt,V1,V2) -> a__U23(a__isPalListKind(V2),V1,V2),a__U23(tt,V1,V2) -> a__U24(a__isPalListKind(V2),V1,V2),a__U24(tt,V1,V2) -> a__U25(a__isList(V1),V2),a__U25(tt,V2) -> a__U26(a__isList(V2)),a__U26(tt) -> tt,a__U31(tt,V) -> a__U32(a__isPalListKind(V),V),a__U32(tt,V) -> a__U33(a__isQid(V)),a__U33(tt) -> tt,a__U41(tt,V1,V2) -> a__U42(a__isPalListKind(V1),V1,V2),a__U42(tt,V1,V2) -> a__U43(a__isPalListKind(V2),V1,V2),a__U43(tt,V1,V2) -> a__U44(a__isPalListKind(V2),V1,V2),a__U44(tt,V1,V2) -> a__U45(a__isList(V1),V2),a__U45(tt,V2) -> a__U46(a__isNeList(V2)),a__U46(tt) -> tt,a__U51(tt,V1,V2) -> a__U52(a__isPalListKind(V1),V1,V2),a__U52(tt,V1,V2) -> a__U53(a__isPalListKind(V2),V1,V2),a__U53(tt,V1,V2) -> a__U54(a__isPalListKind(V2),V1,V2),a__U54(tt,V1,V2) -> a__U55(a__isNeList(V1),V2),a__U55(tt,V2) -> a__U56(a__isList(V2)),a__U56(tt) -> tt,a__U61(tt,V) -> a__U62(a__isPalListKind(V),V),a__U62(tt,V) -> a__U63(a__isQid(V)),a__U63(tt) -> tt,a__U71(tt,I,P) -> a__U72(a__isPalListKind(I),P),a__U72(tt,P) -> a__U73(a__isPal(P),P),a__U73(tt,P) -> a__U74(a__isPalListKind(P)),a__U74(tt) -> tt,a__U81(tt,V) -> a__U82(a__isPalListKind(V),V),a__U82(tt,V) -> a__U83(a__isNePal(V)),a__U83(tt) -> tt,a__U91(tt,V2) -> a__U92(a__isPalListKind(V2)),a__U92(tt) -> tt,a__isList(V) -> a__U11(a__isPalListKind(V),V),a__isList(nil) -> tt,a__isList(__(V1,V2)) -> a__U21(a__isPalListKind(V1),V1,V2),a__isNeList(V) -> a__U31(a__isPalListKind(V),V),a__isNeList(__(V1,V2)) -> a__U41(a__isPalListKind(V1),V1,V2),a__isNeList(__(V1,V2)) -> a__U51(a__isPalListKind(V1),V1,V2),a__isNePal(V) -> a__U61(a__isPalListKind(V),V),a__isNePal(__(I,__(P,I))) -> a__U71(a__isQid(I),I,P),a__isPal(V) -> a__U81(a__isPalListKind(V),V),a__isPal(nil) -> tt,a__isPalListKind(a) -> tt,a__isPalListKind(e) -> tt,a__isPalListKind(i) -> tt,a__isPalListKind(nil) -> tt,a__isPalListKind(o) -> tt,a__isPalListKind(u) -> tt,a__isPalListKind(__(V1,V2)) -> a__U91(a__isPalListKind(V1),V2),a__isQid(a) -> tt,a__isQid(e) -> tt,a__isQid(i) -> tt,a__isQid(o) -> tt,a__isQid(u) -> tt,mark(__(X1,X2)) -> a____(mark(X1),mark(X2)),mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X1,X2)) -> a__U12(mark(X1),X2),mark(isPalListKind(X)) -> a__isPalListKind(X),mark(U13(X)) -> a__U13(mark(X)),mark(isNeList(X)) -> a__isNeList(X),mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3),mark(U22(X1,X2,X3)) -> a__U22(mark(X1),X2,X3),mark(U23(X1,X2,X3)) -> a__U23(mark(X1),X2,X3),mark(U24(X1,X2,X3)) -> a__U24(mark(X1),X2,X3),mark(U25(X1,X2)) -> a__U25(mark(X1),X2),mark(isList(X)) -> a__isList(X),mark(U26(X)) -> a__U26(mark(X)),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U32(X1,X2)) -> a__U32(mark(X1),X2),mark(U33(X)) -> a__U33(mark(X)),mark(isQid(X)) -> a__isQid(X),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2,X3)) -> a__U42(mark(X1),X2,X3),mark(U43(X1,X2,X3)) -> a__U43(mark(X1),X2,X3),mark(U44(X1,X2,X3)) -> a__U44(mark(X1),X2,X3),mark(U45(X1,X2)) -> a__U45(mark(X1),X2),mark(U46(X)) -> a__U46(mark(X)),mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3),mark(U52(X1,X2,X3)) -> a__U52(mark(X1),X2,X3),mark(U53(X1,X2,X3)) -> a__U53(mark(X1),X2,X3),mark(U54(X1,X2,X3)) -> a__U54(mark(X1),X2,X3),mark(U55(X1,X2)) -> a__U55(mark(X1),X2),mark(U56(X)) -> a__U56(mark(X)),mark(U61(X1,X2)) -> a__U61(mark(X1),X2),mark(U62(X1,X2)) -> a__U62(mark(X1),X2),mark(U63(X)) -> a__U63(mark(X)),mark(U71(X1,X2,X3)) -> a__U71(mark(X1),X2,X3),mark(U72(X1,X2)) -> a__U72(mark(X1),X2),mark(U73(X1,X2)) -> a__U73(mark(X1),X2),mark(isPal(X)) -> a__isPal(X),mark(U74(X)) -> a__U74(mark(X)),mark(U81(X1,X2)) -> a__U81(mark(X1),X2),mark(U82(X1,X2)) -> a__U82(mark(X1),X2),mark(U83(X)) -> a__U83(mark(X)),mark(isNePal(X)) -> a__isNePal(X),mark(U91(X1,X2)) -> a__U91(mark(X1),X2),mark(U92(X)) -> a__U92(mark(X)),mark(nil) -> nil,mark(tt) -> tt,mark(a) -> a,mark(e) -> e,mark(i) -> i,mark(o) -> o,mark(u) -> u,a____(X1,X2) -> __(X1,X2),a__U11(X1,X2) -> U11(X1,X2),a__U12(X1,X2) -> U12(X1,X2),a__isPalListKind(X) -> isPalListKind(X),a__U13(X) -> U13(X),a__isNeList(X) -> isNeList(X),a__U21(X1,X2,X3) -> U21(X1,X2,X3),a__U22(X1,X2,X3) -> U22(X1,X2,X3),a__U23(X1,X2,X3) -> U23(X1,X2,X3),a__U24(X1,X2,X3) -> U24(X1,X2,X3),a__U25(X1,X2) -> U25(X1,X2),a__isList(X) -> isList(X),a__U26(X) -> U26(X),a__U31(X1,X2) -> U31(X1,X2),a__U32(X1,X2) -> U32(X1,X2),a__U33(X) -> U33(X),a__isQid(X) -> isQid(X),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2,X3) -> U42(X1,X2,X3),a__U43(X1,X2,X3) -> U43(X1,X2,X3),a__U44(X1,X2,X3) -> U44(X1,X2,X3),a__U45(X1,X2) -> U45(X1,X2),a__U46(X) -> U46(X),a__U51(X1,X2,X3) -> U51(X1,X2,X3),a__U52(X1,X2,X3) -> U52(X1,X2,X3),a__U53(X1,X2,X3) -> U53(X1,X2,X3),a__U54(X1,X2,X3) -> U54(X1,X2,X3),a__U55(X1,X2) -> U55(X1,X2),a__U56(X) -> U56(X),a__U61(X1,X2) -> U61(X1,X2),a__U62(X1,X2) -> U62(X1,X2),a__U63(X) -> U63(X),a__U71(X1,X2,X3) -> U71(X1,X2,X3),a__U72(X1,X2) -> U72(X1,X2),a__U73(X1,X2) -> U73(X1,X2),a__isPal(X) -> isPal(X),a__U74(X) -> U74(X),a__U81(X1,X2) -> U81(X1,X2),a__U82(X1,X2) -> U82(X1,X2),a__U83(X) -> U83(X),a__isNePal(X) -> isNePal(X),a__U91(X1,X2) -> U91(X1,X2),a__U92(X) -> U92(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_complete_noand_C.xml" :
TRS {trsSignature = fromList [("U11",2),("U12",2),("U13",1),("U21",3),("U22",3),("U23",3),("U24",3),("U25",2),("U26",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",3),("U52",3),("U53",3),("U54",3),("U55",2),("U56",1),("U61",2),("U62",2),("U63",1),("U71",3),("U72",2),("U73",2),("U74",1),("U81",2),("U82",2),("U83",1),("U91",2),("U92",1),("__",2),("a",0),("active",1),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isPalListKind",1),("isQid",1),("mark",1),("nil",0),("o",0),("ok",1),("proper",1),("top",1),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(U11(tt,V)) -> mark(U12(isPalListKind(V),V)),active(U12(tt,V)) -> mark(U13(isNeList(V))),active(U13(tt)) -> mark(tt),active(U21(tt,V1,V2)) -> mark(U22(isPalListKind(V1),V1,V2)),active(U22(tt,V1,V2)) -> mark(U23(isPalListKind(V2),V1,V2)),active(U23(tt,V1,V2)) -> mark(U24(isPalListKind(V2),V1,V2)),active(U24(tt,V1,V2)) -> mark(U25(isList(V1),V2)),active(U25(tt,V2)) -> mark(U26(isList(V2))),active(U26(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isPalListKind(V),V)),active(U32(tt,V)) -> mark(U33(isQid(V))),active(U33(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isPalListKind(V1),V1,V2)),active(U42(tt,V1,V2)) -> mark(U43(isPalListKind(V2),V1,V2)),active(U43(tt,V1,V2)) -> mark(U44(isPalListKind(V2),V1,V2)),active(U44(tt,V1,V2)) -> mark(U45(isList(V1),V2)),active(U45(tt,V2)) -> mark(U46(isNeList(V2))),active(U46(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isPalListKind(V1),V1,V2)),active(U52(tt,V1,V2)) -> mark(U53(isPalListKind(V2),V1,V2)),active(U53(tt,V1,V2)) -> mark(U54(isPalListKind(V2),V1,V2)),active(U54(tt,V1,V2)) -> mark(U55(isNeList(V1),V2)),active(U55(tt,V2)) -> mark(U56(isList(V2))),active(U56(tt)) -> mark(tt),active(U61(tt,V)) -> mark(U62(isPalListKind(V),V)),active(U62(tt,V)) -> mark(U63(isQid(V))),active(U63(tt)) -> mark(tt),active(U71(tt,I,P)) -> mark(U72(isPalListKind(I),P)),active(U72(tt,P)) -> mark(U73(isPal(P),P)),active(U73(tt,P)) -> mark(U74(isPalListKind(P))),active(U74(tt)) -> mark(tt),active(U81(tt,V)) -> mark(U82(isPalListKind(V),V)),active(U82(tt,V)) -> mark(U83(isNePal(V))),active(U83(tt)) -> mark(tt),active(U91(tt,V2)) -> mark(U92(isPalListKind(V2))),active(U92(tt)) -> mark(tt),active(isList(V)) -> mark(U11(isPalListKind(V),V)),active(isList(nil)) -> mark(tt),active(isList(__(V1,V2))) -> mark(U21(isPalListKind(V1),V1,V2)),active(isNeList(V)) -> mark(U31(isPalListKind(V),V)),active(isNeList(__(V1,V2))) -> mark(U41(isPalListKind(V1),V1,V2)),active(isNeList(__(V1,V2))) -> mark(U51(isPalListKind(V1),V1,V2)),active(isNePal(V)) -> mark(U61(isPalListKind(V),V)),active(isNePal(__(I,__(P,I)))) -> mark(U71(isQid(I),I,P)),active(isPal(V)) -> mark(U81(isPalListKind(V),V)),active(isPal(nil)) -> mark(tt),active(isPalListKind(a)) -> mark(tt),active(isPalListKind(e)) -> mark(tt),active(isPalListKind(i)) -> mark(tt),active(isPalListKind(nil)) -> mark(tt),active(isPalListKind(o)) -> mark(tt),active(isPalListKind(u)) -> mark(tt),active(isPalListKind(__(V1,V2))) -> mark(U91(isPalListKind(V1),V2)),active(isQid(a)) -> mark(tt),active(isQid(e)) -> mark(tt),active(isQid(i)) -> mark(tt),active(isQid(o)) -> mark(tt),active(isQid(u)) -> mark(tt),active(__(X1,X2)) -> __(active(X1),X2),active(__(X1,X2)) -> __(X1,active(X2)),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X1,X2)) -> U12(active(X1),X2),active(U13(X)) -> U13(active(X)),active(U21(X1,X2,X3)) -> U21(active(X1),X2,X3),active(U22(X1,X2,X3)) -> U22(active(X1),X2,X3),active(U23(X1,X2,X3)) -> U23(active(X1),X2,X3),active(U24(X1,X2,X3)) -> U24(active(X1),X2,X3),active(U25(X1,X2)) -> U25(active(X1),X2),active(U26(X)) -> U26(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U32(X1,X2)) -> U32(active(X1),X2),active(U33(X)) -> U33(active(X)),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2,X3)) -> U42(active(X1),X2,X3),active(U43(X1,X2,X3)) -> U43(active(X1),X2,X3),active(U44(X1,X2,X3)) -> U44(active(X1),X2,X3),active(U45(X1,X2)) -> U45(active(X1),X2),active(U46(X)) -> U46(active(X)),active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3),active(U52(X1,X2,X3)) -> U52(active(X1),X2,X3),active(U53(X1,X2,X3)) -> U53(active(X1),X2,X3),active(U54(X1,X2,X3)) -> U54(active(X1),X2,X3),active(U55(X1,X2)) -> U55(active(X1),X2),active(U56(X)) -> U56(active(X)),active(U61(X1,X2)) -> U61(active(X1),X2),active(U62(X1,X2)) -> U62(active(X1),X2),active(U63(X)) -> U63(active(X)),active(U71(X1,X2,X3)) -> U71(active(X1),X2,X3),active(U72(X1,X2)) -> U72(active(X1),X2),active(U73(X1,X2)) -> U73(active(X1),X2),active(U74(X)) -> U74(active(X)),active(U81(X1,X2)) -> U81(active(X1),X2),active(U82(X1,X2)) -> U82(active(X1),X2),active(U83(X)) -> U83(active(X)),active(U91(X1,X2)) -> U91(active(X1),X2),active(U92(X)) -> U92(active(X)),__(mark(X1),X2) -> mark(__(X1,X2)),__(X1,mark(X2)) -> mark(__(X1,X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X1),X2) -> mark(U12(X1,X2)),U13(mark(X)) -> mark(U13(X)),U21(mark(X1),X2,X3) -> mark(U21(X1,X2,X3)),U22(mark(X1),X2,X3) -> mark(U22(X1,X2,X3)),U23(mark(X1),X2,X3) -> mark(U23(X1,X2,X3)),U24(mark(X1),X2,X3) -> mark(U24(X1,X2,X3)),U25(mark(X1),X2) -> mark(U25(X1,X2)),U26(mark(X)) -> mark(U26(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U32(mark(X1),X2) -> mark(U32(X1,X2)),U33(mark(X)) -> mark(U33(X)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2,X3) -> mark(U42(X1,X2,X3)),U43(mark(X1),X2,X3) -> mark(U43(X1,X2,X3)),U44(mark(X1),X2,X3) -> mark(U44(X1,X2,X3)),U45(mark(X1),X2) -> mark(U45(X1,X2)),U46(mark(X)) -> mark(U46(X)),U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3)),U52(mark(X1),X2,X3) -> mark(U52(X1,X2,X3)),U53(mark(X1),X2,X3) -> mark(U53(X1,X2,X3)),U54(mark(X1),X2,X3) -> mark(U54(X1,X2,X3)),U55(mark(X1),X2) -> mark(U55(X1,X2)),U56(mark(X)) -> mark(U56(X)),U61(mark(X1),X2) -> mark(U61(X1,X2)),U62(mark(X1),X2) -> mark(U62(X1,X2)),U63(mark(X)) -> mark(U63(X)),U71(mark(X1),X2,X3) -> mark(U71(X1,X2,X3)),U72(mark(X1),X2) -> mark(U72(X1,X2)),U73(mark(X1),X2) -> mark(U73(X1,X2)),U74(mark(X)) -> mark(U74(X)),U81(mark(X1),X2) -> mark(U81(X1,X2)),U82(mark(X1),X2) -> mark(U82(X1,X2)),U83(mark(X)) -> mark(U83(X)),U91(mark(X1),X2) -> mark(U91(X1,X2)),U92(mark(X)) -> mark(U92(X)),proper(__(X1,X2)) -> __(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U12(X1,X2)) -> U12(proper(X1),proper(X2)),proper(isPalListKind(X)) -> isPalListKind(proper(X)),proper(U13(X)) -> U13(proper(X)),proper(isNeList(X)) -> isNeList(proper(X)),proper(U21(X1,X2,X3)) -> U21(proper(X1),proper(X2),proper(X3)),proper(U22(X1,X2,X3)) -> U22(proper(X1),proper(X2),proper(X3)),proper(U23(X1,X2,X3)) -> U23(proper(X1),proper(X2),proper(X3)),proper(U24(X1,X2,X3)) -> U24(proper(X1),proper(X2),proper(X3)),proper(U25(X1,X2)) -> U25(proper(X1),proper(X2)),proper(isList(X)) -> isList(proper(X)),proper(U26(X)) -> U26(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U32(X1,X2)) -> U32(proper(X1),proper(X2)),proper(U33(X)) -> U33(proper(X)),proper(isQid(X)) -> isQid(proper(X)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2,X3)) -> U42(proper(X1),proper(X2),proper(X3)),proper(U43(X1,X2,X3)) -> U43(proper(X1),proper(X2),proper(X3)),proper(U44(X1,X2,X3)) -> U44(proper(X1),proper(X2),proper(X3)),proper(U45(X1,X2)) -> U45(proper(X1),proper(X2)),proper(U46(X)) -> U46(proper(X)),proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3)),proper(U52(X1,X2,X3)) -> U52(proper(X1),proper(X2),proper(X3)),proper(U53(X1,X2,X3)) -> U53(proper(X1),proper(X2),proper(X3)),proper(U54(X1,X2,X3)) -> U54(proper(X1),proper(X2),proper(X3)),proper(U55(X1,X2)) -> U55(proper(X1),proper(X2)),proper(U56(X)) -> U56(proper(X)),proper(U61(X1,X2)) -> U61(proper(X1),proper(X2)),proper(U62(X1,X2)) -> U62(proper(X1),proper(X2)),proper(U63(X)) -> U63(proper(X)),proper(U71(X1,X2,X3)) -> U71(proper(X1),proper(X2),proper(X3)),proper(U72(X1,X2)) -> U72(proper(X1),proper(X2)),proper(U73(X1,X2)) -> U73(proper(X1),proper(X2)),proper(isPal(X)) -> isPal(proper(X)),proper(U74(X)) -> U74(proper(X)),proper(U81(X1,X2)) -> U81(proper(X1),proper(X2)),proper(U82(X1,X2)) -> U82(proper(X1),proper(X2)),proper(U83(X)) -> U83(proper(X)),proper(isNePal(X)) -> isNePal(proper(X)),proper(U91(X1,X2)) -> U91(proper(X1),proper(X2)),proper(U92(X)) -> U92(proper(X)),proper(a) -> ok(a),proper(e) -> ok(e),proper(i) -> ok(i),proper(o) -> ok(o),proper(u) -> ok(u),__(ok(X1),ok(X2)) -> ok(__(X1,X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X1),ok(X2)) -> ok(U12(X1,X2)),isPalListKind(ok(X)) -> ok(isPalListKind(X)),U13(ok(X)) -> ok(U13(X)),isNeList(ok(X)) -> ok(isNeList(X)),U21(ok(X1),ok(X2),ok(X3)) -> ok(U21(X1,X2,X3)),U22(ok(X1),ok(X2),ok(X3)) -> ok(U22(X1,X2,X3)),U23(ok(X1),ok(X2),ok(X3)) -> ok(U23(X1,X2,X3)),U24(ok(X1),ok(X2),ok(X3)) -> ok(U24(X1,X2,X3)),U25(ok(X1),ok(X2)) -> ok(U25(X1,X2)),isList(ok(X)) -> ok(isList(X)),U26(ok(X)) -> ok(U26(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U32(ok(X1),ok(X2)) -> ok(U32(X1,X2)),U33(ok(X)) -> ok(U33(X)),isQid(ok(X)) -> ok(isQid(X)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2),ok(X3)) -> ok(U42(X1,X2,X3)),U43(ok(X1),ok(X2),ok(X3)) -> ok(U43(X1,X2,X3)),U44(ok(X1),ok(X2),ok(X3)) -> ok(U44(X1,X2,X3)),U45(ok(X1),ok(X2)) -> ok(U45(X1,X2)),U46(ok(X)) -> ok(U46(X)),U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3)),U52(ok(X1),ok(X2),ok(X3)) -> ok(U52(X1,X2,X3)),U53(ok(X1),ok(X2),ok(X3)) -> ok(U53(X1,X2,X3)),U54(ok(X1),ok(X2),ok(X3)) -> ok(U54(X1,X2,X3)),U55(ok(X1),ok(X2)) -> ok(U55(X1,X2)),U56(ok(X)) -> ok(U56(X)),U61(ok(X1),ok(X2)) -> ok(U61(X1,X2)),U62(ok(X1),ok(X2)) -> ok(U62(X1,X2)),U63(ok(X)) -> ok(U63(X)),U71(ok(X1),ok(X2),ok(X3)) -> ok(U71(X1,X2,X3)),U72(ok(X1),ok(X2)) -> ok(U72(X1,X2)),U73(ok(X1),ok(X2)) -> ok(U73(X1,X2)),isPal(ok(X)) -> ok(isPal(X)),U74(ok(X)) -> ok(U74(X)),U81(ok(X1),ok(X2)) -> ok(U81(X1,X2)),U82(ok(X1),ok(X2)) -> ok(U82(X1,X2)),U83(ok(X)) -> ok(U83(X)),isNePal(ok(X)) -> ok(isNePal(X)),U91(ok(X1),ok(X2)) -> ok(U91(X1,X2)),U92(ok(X)) -> ok(U92(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_complete_iGM.xml" :
TRS {trsSignature = fromList [("U11",2),("U12",1),("U21",3),("U22",2),("U23",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("U62",1),("U71",2),("U72",1),("__",2),("a",0),("active",1),("and",2),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isPalListKind",1),("isQid",1),("mark",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(U11(tt,V)) -> mark(U12(isNeList(V))),active(U12(tt)) -> mark(tt),active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2)),active(U22(tt,V2)) -> mark(U23(isList(V2))),active(U23(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isQid(V))),active(U32(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2)),active(U42(tt,V2)) -> mark(U43(isNeList(V2))),active(U43(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2)),active(U52(tt,V2)) -> mark(U53(isList(V2))),active(U53(tt)) -> mark(tt),active(U61(tt,V)) -> mark(U62(isQid(V))),active(U62(tt)) -> mark(tt),active(U71(tt,V)) -> mark(U72(isNePal(V))),active(U72(tt)) -> mark(tt),active(and(tt,X)) -> mark(X),active(isList(V)) -> mark(U11(isPalListKind(V),V)),active(isList(nil)) -> mark(tt),active(isList(__(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)),active(isNeList(V)) -> mark(U31(isPalListKind(V),V)),active(isNeList(__(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)),active(isNeList(__(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)),active(isNePal(V)) -> mark(U61(isPalListKind(V),V)),active(isNePal(__(I,__(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))),active(isPal(V)) -> mark(U71(isPalListKind(V),V)),active(isPal(nil)) -> mark(tt),active(isPalListKind(a)) -> mark(tt),active(isPalListKind(e)) -> mark(tt),active(isPalListKind(i)) -> mark(tt),active(isPalListKind(nil)) -> mark(tt),active(isPalListKind(o)) -> mark(tt),active(isPalListKind(u)) -> mark(tt),active(isPalListKind(__(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2))),active(isQid(a)) -> mark(tt),active(isQid(e)) -> mark(tt),active(isQid(i)) -> mark(tt),active(isQid(o)) -> mark(tt),active(isQid(u)) -> mark(tt),mark(__(X1,X2)) -> active(__(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U12(X)) -> active(U12(mark(X))),mark(isNeList(X)) -> active(isNeList(X)),mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3)),mark(U22(X1,X2)) -> active(U22(mark(X1),X2)),mark(isList(X)) -> active(isList(X)),mark(U23(X)) -> active(U23(mark(X))),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U32(X)) -> active(U32(mark(X))),mark(isQid(X)) -> active(isQid(X)),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2)) -> active(U42(mark(X1),X2)),mark(U43(X)) -> active(U43(mark(X))),mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3)),mark(U52(X1,X2)) -> active(U52(mark(X1),X2)),mark(U53(X)) -> active(U53(mark(X))),mark(U61(X1,X2)) -> active(U61(mark(X1),X2)),mark(U62(X)) -> active(U62(mark(X))),mark(U71(X1,X2)) -> active(U71(mark(X1),X2)),mark(U72(X)) -> active(U72(mark(X))),mark(isNePal(X)) -> active(isNePal(X)),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isPalListKind(X)) -> active(isPalListKind(X)),mark(isPal(X)) -> active(isPal(X)),mark(a) -> active(a),mark(e) -> active(e),mark(i) -> active(i),mark(o) -> active(o),mark(u) -> active(u),__(mark(X1),X2) -> __(X1,X2),__(X1,mark(X2)) -> __(X1,X2),__(active(X1),X2) -> __(X1,X2),__(X1,active(X2)) -> __(X1,X2),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X)) -> U12(X),U12(active(X)) -> U12(X),isNeList(mark(X)) -> isNeList(X),isNeList(active(X)) -> isNeList(X),U21(mark(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,mark(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,mark(X3)) -> U21(X1,X2,X3),U21(active(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,active(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,active(X3)) -> U21(X1,X2,X3),U22(mark(X1),X2) -> U22(X1,X2),U22(X1,mark(X2)) -> U22(X1,X2),U22(active(X1),X2) -> U22(X1,X2),U22(X1,active(X2)) -> U22(X1,X2),isList(mark(X)) -> isList(X),isList(active(X)) -> isList(X),U23(mark(X)) -> U23(X),U23(active(X)) -> U23(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U32(mark(X)) -> U32(X),U32(active(X)) -> U32(X),isQid(mark(X)) -> isQid(X),isQid(active(X)) -> isQid(X),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2) -> U42(X1,X2),U42(X1,mark(X2)) -> U42(X1,X2),U42(active(X1),X2) -> U42(X1,X2),U42(X1,active(X2)) -> U42(X1,X2),U43(mark(X)) -> U43(X),U43(active(X)) -> U43(X),U51(mark(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,mark(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,mark(X3)) -> U51(X1,X2,X3),U51(active(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,active(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,active(X3)) -> U51(X1,X2,X3),U52(mark(X1),X2) -> U52(X1,X2),U52(X1,mark(X2)) -> U52(X1,X2),U52(active(X1),X2) -> U52(X1,X2),U52(X1,active(X2)) -> U52(X1,X2),U53(mark(X)) -> U53(X),U53(active(X)) -> U53(X),U61(mark(X1),X2) -> U61(X1,X2),U61(X1,mark(X2)) -> U61(X1,X2),U61(active(X1),X2) -> U61(X1,X2),U61(X1,active(X2)) -> U61(X1,X2),U62(mark(X)) -> U62(X),U62(active(X)) -> U62(X),U71(mark(X1),X2) -> U71(X1,X2),U71(X1,mark(X2)) -> U71(X1,X2),U71(active(X1),X2) -> U71(X1,X2),U71(X1,active(X2)) -> U71(X1,X2),U72(mark(X)) -> U72(X),U72(active(X)) -> U72(X),isNePal(mark(X)) -> isNePal(X),isNePal(active(X)) -> isNePal(X),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isPalListKind(mark(X)) -> isPalListKind(X),isPalListKind(active(X)) -> isPalListKind(X),isPal(mark(X)) -> isPal(X),isPal(active(X)) -> isPal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_complete_GM.xml" :
TRS {trsSignature = fromList [("U11",2),("U12",1),("U21",3),("U22",2),("U23",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("U62",1),("U71",2),("U72",1),("__",2),("a",0),("a__U11",2),("a__U12",1),("a__U21",3),("a__U22",2),("a__U23",1),("a__U31",2),("a__U32",1),("a__U41",3),("a__U42",2),("a__U43",1),("a__U51",3),("a__U52",2),("a__U53",1),("a__U61",2),("a__U62",1),("a__U71",2),("a__U72",1),("a____",2),("a__and",2),("a__isList",1),("a__isNeList",1),("a__isNePal",1),("a__isPal",1),("a__isPalListKind",1),("a__isQid",1),("and",2),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isPalListKind",1),("isQid",1),("mark",1),("nil",0),("o",0),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [a____(__(X,Y),Z) -> a____(mark(X),a____(mark(Y),mark(Z))),a____(X,nil) -> mark(X),a____(nil,X) -> mark(X),a__U11(tt,V) -> a__U12(a__isNeList(V)),a__U12(tt) -> tt,a__U21(tt,V1,V2) -> a__U22(a__isList(V1),V2),a__U22(tt,V2) -> a__U23(a__isList(V2)),a__U23(tt) -> tt,a__U31(tt,V) -> a__U32(a__isQid(V)),a__U32(tt) -> tt,a__U41(tt,V1,V2) -> a__U42(a__isList(V1),V2),a__U42(tt,V2) -> a__U43(a__isNeList(V2)),a__U43(tt) -> tt,a__U51(tt,V1,V2) -> a__U52(a__isNeList(V1),V2),a__U52(tt,V2) -> a__U53(a__isList(V2)),a__U53(tt) -> tt,a__U61(tt,V) -> a__U62(a__isQid(V)),a__U62(tt) -> tt,a__U71(tt,V) -> a__U72(a__isNePal(V)),a__U72(tt) -> tt,a__and(tt,X) -> mark(X),a__isList(V) -> a__U11(a__isPalListKind(V),V),a__isList(nil) -> tt,a__isList(__(V1,V2)) -> a__U21(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2),a__isNeList(V) -> a__U31(a__isPalListKind(V),V),a__isNeList(__(V1,V2)) -> a__U41(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2),a__isNeList(__(V1,V2)) -> a__U51(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2),a__isNePal(V) -> a__U61(a__isPalListKind(V),V),a__isNePal(__(I,__(P,I))) -> a__and(a__and(a__isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))),a__isPal(V) -> a__U71(a__isPalListKind(V),V),a__isPal(nil) -> tt,a__isPalListKind(a) -> tt,a__isPalListKind(e) -> tt,a__isPalListKind(i) -> tt,a__isPalListKind(nil) -> tt,a__isPalListKind(o) -> tt,a__isPalListKind(u) -> tt,a__isPalListKind(__(V1,V2)) -> a__and(a__isPalListKind(V1),isPalListKind(V2)),a__isQid(a) -> tt,a__isQid(e) -> tt,a__isQid(i) -> tt,a__isQid(o) -> tt,a__isQid(u) -> tt,mark(__(X1,X2)) -> a____(mark(X1),mark(X2)),mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X)) -> a__U12(mark(X)),mark(isNeList(X)) -> a__isNeList(X),mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3),mark(U22(X1,X2)) -> a__U22(mark(X1),X2),mark(isList(X)) -> a__isList(X),mark(U23(X)) -> a__U23(mark(X)),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U32(X)) -> a__U32(mark(X)),mark(isQid(X)) -> a__isQid(X),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2)) -> a__U42(mark(X1),X2),mark(U43(X)) -> a__U43(mark(X)),mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3),mark(U52(X1,X2)) -> a__U52(mark(X1),X2),mark(U53(X)) -> a__U53(mark(X)),mark(U61(X1,X2)) -> a__U61(mark(X1),X2),mark(U62(X)) -> a__U62(mark(X)),mark(U71(X1,X2)) -> a__U71(mark(X1),X2),mark(U72(X)) -> a__U72(mark(X)),mark(isNePal(X)) -> a__isNePal(X),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isPalListKind(X)) -> a__isPalListKind(X),mark(isPal(X)) -> a__isPal(X),mark(nil) -> nil,mark(tt) -> tt,mark(a) -> a,mark(e) -> e,mark(i) -> i,mark(o) -> o,mark(u) -> u,a____(X1,X2) -> __(X1,X2),a__U11(X1,X2) -> U11(X1,X2),a__U12(X) -> U12(X),a__isNeList(X) -> isNeList(X),a__U21(X1,X2,X3) -> U21(X1,X2,X3),a__U22(X1,X2) -> U22(X1,X2),a__isList(X) -> isList(X),a__U23(X) -> U23(X),a__U31(X1,X2) -> U31(X1,X2),a__U32(X) -> U32(X),a__isQid(X) -> isQid(X),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2) -> U42(X1,X2),a__U43(X) -> U43(X),a__U51(X1,X2,X3) -> U51(X1,X2,X3),a__U52(X1,X2) -> U52(X1,X2),a__U53(X) -> U53(X),a__U61(X1,X2) -> U61(X1,X2),a__U62(X) -> U62(X),a__U71(X1,X2) -> U71(X1,X2),a__U72(X) -> U72(X),a__isNePal(X) -> isNePal(X),a__and(X1,X2) -> and(X1,X2),a__isPalListKind(X) -> isPalListKind(X),a__isPal(X) -> isPal(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\PALINDROME_complete_C.xml" :
TRS {trsSignature = fromList [("U11",2),("U12",1),("U21",3),("U22",2),("U23",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("U62",1),("U71",2),("U72",1),("__",2),("a",0),("active",1),("and",2),("e",0),("i",0),("isList",1),("isNeList",1),("isNePal",1),("isPal",1),("isPalListKind",1),("isQid",1),("mark",1),("nil",0),("o",0),("ok",1),("proper",1),("top",1),("tt",0),("u",0)], trsVariables = fromList ["I","P","V","V1","V2","X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z))),active(__(X,nil)) -> mark(X),active(__(nil,X)) -> mark(X),active(U11(tt,V)) -> mark(U12(isNeList(V))),active(U12(tt)) -> mark(tt),active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2)),active(U22(tt,V2)) -> mark(U23(isList(V2))),active(U23(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isQid(V))),active(U32(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2)),active(U42(tt,V2)) -> mark(U43(isNeList(V2))),active(U43(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2)),active(U52(tt,V2)) -> mark(U53(isList(V2))),active(U53(tt)) -> mark(tt),active(U61(tt,V)) -> mark(U62(isQid(V))),active(U62(tt)) -> mark(tt),active(U71(tt,V)) -> mark(U72(isNePal(V))),active(U72(tt)) -> mark(tt),active(and(tt,X)) -> mark(X),active(isList(V)) -> mark(U11(isPalListKind(V),V)),active(isList(nil)) -> mark(tt),active(isList(__(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)),active(isNeList(V)) -> mark(U31(isPalListKind(V),V)),active(isNeList(__(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)),active(isNeList(__(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)),active(isNePal(V)) -> mark(U61(isPalListKind(V),V)),active(isNePal(__(I,__(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))),active(isPal(V)) -> mark(U71(isPalListKind(V),V)),active(isPal(nil)) -> mark(tt),active(isPalListKind(a)) -> mark(tt),active(isPalListKind(e)) -> mark(tt),active(isPalListKind(i)) -> mark(tt),active(isPalListKind(nil)) -> mark(tt),active(isPalListKind(o)) -> mark(tt),active(isPalListKind(u)) -> mark(tt),active(isPalListKind(__(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2))),active(isQid(a)) -> mark(tt),active(isQid(e)) -> mark(tt),active(isQid(i)) -> mark(tt),active(isQid(o)) -> mark(tt),active(isQid(u)) -> mark(tt),active(__(X1,X2)) -> __(active(X1),X2),active(__(X1,X2)) -> __(X1,active(X2)),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X)) -> U12(active(X)),active(U21(X1,X2,X3)) -> U21(active(X1),X2,X3),active(U22(X1,X2)) -> U22(active(X1),X2),active(U23(X)) -> U23(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U32(X)) -> U32(active(X)),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2)) -> U42(active(X1),X2),active(U43(X)) -> U43(active(X)),active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3),active(U52(X1,X2)) -> U52(active(X1),X2),active(U53(X)) -> U53(active(X)),active(U61(X1,X2)) -> U61(active(X1),X2),active(U62(X)) -> U62(active(X)),active(U71(X1,X2)) -> U71(active(X1),X2),active(U72(X)) -> U72(active(X)),active(and(X1,X2)) -> and(active(X1),X2),__(mark(X1),X2) -> mark(__(X1,X2)),__(X1,mark(X2)) -> mark(__(X1,X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X)) -> mark(U12(X)),U21(mark(X1),X2,X3) -> mark(U21(X1,X2,X3)),U22(mark(X1),X2) -> mark(U22(X1,X2)),U23(mark(X)) -> mark(U23(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U32(mark(X)) -> mark(U32(X)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2) -> mark(U42(X1,X2)),U43(mark(X)) -> mark(U43(X)),U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3)),U52(mark(X1),X2) -> mark(U52(X1,X2)),U53(mark(X)) -> mark(U53(X)),U61(mark(X1),X2) -> mark(U61(X1,X2)),U62(mark(X)) -> mark(U62(X)),U71(mark(X1),X2) -> mark(U71(X1,X2)),U72(mark(X)) -> mark(U72(X)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(__(X1,X2)) -> __(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U12(X)) -> U12(proper(X)),proper(isNeList(X)) -> isNeList(proper(X)),proper(U21(X1,X2,X3)) -> U21(proper(X1),proper(X2),proper(X3)),proper(U22(X1,X2)) -> U22(proper(X1),proper(X2)),proper(isList(X)) -> isList(proper(X)),proper(U23(X)) -> U23(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U32(X)) -> U32(proper(X)),proper(isQid(X)) -> isQid(proper(X)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2)) -> U42(proper(X1),proper(X2)),proper(U43(X)) -> U43(proper(X)),proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3)),proper(U52(X1,X2)) -> U52(proper(X1),proper(X2)),proper(U53(X)) -> U53(proper(X)),proper(U61(X1,X2)) -> U61(proper(X1),proper(X2)),proper(U62(X)) -> U62(proper(X)),proper(U71(X1,X2)) -> U71(proper(X1),proper(X2)),proper(U72(X)) -> U72(proper(X)),proper(isNePal(X)) -> isNePal(proper(X)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isPalListKind(X)) -> isPalListKind(proper(X)),proper(isPal(X)) -> isPal(proper(X)),proper(a) -> ok(a),proper(e) -> ok(e),proper(i) -> ok(i),proper(o) -> ok(o),proper(u) -> ok(u),__(ok(X1),ok(X2)) -> ok(__(X1,X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X)) -> ok(U12(X)),isNeList(ok(X)) -> ok(isNeList(X)),U21(ok(X1),ok(X2),ok(X3)) -> ok(U21(X1,X2,X3)),U22(ok(X1),ok(X2)) -> ok(U22(X1,X2)),isList(ok(X)) -> ok(isList(X)),U23(ok(X)) -> ok(U23(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U32(ok(X)) -> ok(U32(X)),isQid(ok(X)) -> ok(isQid(X)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2)) -> ok(U42(X1,X2)),U43(ok(X)) -> ok(U43(X)),U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3)),U52(ok(X1),ok(X2)) -> ok(U52(X1,X2)),U53(ok(X)) -> ok(U53(X)),U61(ok(X1),ok(X2)) -> ok(U61(X1,X2)),U62(ok(X)) -> ok(U62(X)),U71(ok(X1),ok(X2)) -> ok(U71(X1,X2)),U72(ok(X)) -> ok(U72(X)),isNePal(ok(X)) -> ok(isNePal(X)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isPalListKind(ok(X)) -> ok(isPalListKind(X)),isPal(ok(X)) -> ok(isPal(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nosorts_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("U21",4),("U22",4),("U23",4),("active",1),("cons",2),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,L)) -> mark(U12(tt,L)),active(U12(tt,L)) -> mark(s(length(L))),active(U21(tt,IL,M,N)) -> mark(U22(tt,IL,M,N)),active(U22(tt,IL,M,N)) -> mark(U23(tt,IL,M,N)),active(U23(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U11(tt,L)),active(take(0,IL)) -> mark(nil),active(take(s(M),cons(N,IL))) -> mark(U21(tt,IL,M,N)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U12(X1,X2)) -> active(U12(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(U21(X1,X2,X3,X4)) -> active(U21(mark(X1),X2,X3,X4)),mark(U22(X1,X2,X3,X4)) -> active(U22(mark(X1),X2,X3,X4)),mark(U23(X1,X2,X3,X4)) -> active(U23(mark(X1),X2,X3,X4)),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(nil) -> active(nil),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X1),X2) -> U12(X1,X2),U12(X1,mark(X2)) -> U12(X1,X2),U12(active(X1),X2) -> U12(X1,X2),U12(X1,active(X2)) -> U12(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X),U21(mark(X1),X2,X3,X4) -> U21(X1,X2,X3,X4),U21(X1,mark(X2),X3,X4) -> U21(X1,X2,X3,X4),U21(X1,X2,mark(X3),X4) -> U21(X1,X2,X3,X4),U21(X1,X2,X3,mark(X4)) -> U21(X1,X2,X3,X4),U21(active(X1),X2,X3,X4) -> U21(X1,X2,X3,X4),U21(X1,active(X2),X3,X4) -> U21(X1,X2,X3,X4),U21(X1,X2,active(X3),X4) -> U21(X1,X2,X3,X4),U21(X1,X2,X3,active(X4)) -> U21(X1,X2,X3,X4),U22(mark(X1),X2,X3,X4) -> U22(X1,X2,X3,X4),U22(X1,mark(X2),X3,X4) -> U22(X1,X2,X3,X4),U22(X1,X2,mark(X3),X4) -> U22(X1,X2,X3,X4),U22(X1,X2,X3,mark(X4)) -> U22(X1,X2,X3,X4),U22(active(X1),X2,X3,X4) -> U22(X1,X2,X3,X4),U22(X1,active(X2),X3,X4) -> U22(X1,X2,X3,X4),U22(X1,X2,active(X3),X4) -> U22(X1,X2,X3,X4),U22(X1,X2,X3,active(X4)) -> U22(X1,X2,X3,X4),U23(mark(X1),X2,X3,X4) -> U23(X1,X2,X3,X4),U23(X1,mark(X2),X3,X4) -> U23(X1,X2,X3,X4),U23(X1,X2,mark(X3),X4) -> U23(X1,X2,X3,X4),U23(X1,X2,X3,mark(X4)) -> U23(X1,X2,X3,X4),U23(active(X1),X2,X3,X4) -> U23(X1,X2,X3,X4),U23(X1,active(X2),X3,X4) -> U23(X1,X2,X3,X4),U23(X1,X2,active(X3),X4) -> U23(X1,X2,X3,X4),U23(X1,X2,X3,active(X4)) -> U23(X1,X2,X3,X4),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nosorts_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("U21",4),("U22",4),("U23",4),("a__U11",2),("a__U12",2),("a__U21",4),("a__U22",4),("a__U23",4),("a__length",1),("a__take",2),("a__zeros",0),("cons",2),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U11(tt,L) -> a__U12(tt,L),a__U12(tt,L) -> s(a__length(mark(L))),a__U21(tt,IL,M,N) -> a__U22(tt,IL,M,N),a__U22(tt,IL,M,N) -> a__U23(tt,IL,M,N),a__U23(tt,IL,M,N) -> cons(mark(N),take(M,IL)),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U11(tt,L),a__take(0,IL) -> nil,a__take(s(M),cons(N,IL)) -> a__U21(tt,IL,M,N),mark(zeros) -> a__zeros,mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X1,X2)) -> a__U12(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(U21(X1,X2,X3,X4)) -> a__U21(mark(X1),X2,X3,X4),mark(U22(X1,X2,X3,X4)) -> a__U22(mark(X1),X2,X3,X4),mark(U23(X1,X2,X3,X4)) -> a__U23(mark(X1),X2,X3,X4),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U11(X1,X2) -> U11(X1,X2),a__U12(X1,X2) -> U12(X1,X2),a__length(X) -> length(X),a__U21(X1,X2,X3,X4) -> U21(X1,X2,X3,X4),a__U22(X1,X2,X3,X4) -> U22(X1,X2,X3,X4),a__U23(X1,X2,X3,X4) -> U23(X1,X2,X3,X4),a__take(X1,X2) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nosorts_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("U21",4),("U22",4),("U23",4),("active",1),("cons",2),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("take",2),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,L)) -> mark(U12(tt,L)),active(U12(tt,L)) -> mark(s(length(L))),active(U21(tt,IL,M,N)) -> mark(U22(tt,IL,M,N)),active(U22(tt,IL,M,N)) -> mark(U23(tt,IL,M,N)),active(U23(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U11(tt,L)),active(take(0,IL)) -> mark(nil),active(take(s(M),cons(N,IL))) -> mark(U21(tt,IL,M,N)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X1,X2)) -> U12(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),active(U21(X1,X2,X3,X4)) -> U21(active(X1),X2,X3,X4),active(U22(X1,X2,X3,X4)) -> U22(active(X1),X2,X3,X4),active(U23(X1,X2,X3,X4)) -> U23(active(X1),X2,X3,X4),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X1),X2) -> mark(U12(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),U21(mark(X1),X2,X3,X4) -> mark(U21(X1,X2,X3,X4)),U22(mark(X1),X2,X3,X4) -> mark(U22(X1,X2,X3,X4)),U23(mark(X1),X2,X3,X4) -> mark(U23(X1,X2,X3,X4)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U12(X1,X2)) -> U12(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(U21(X1,X2,X3,X4)) -> U21(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U22(X1,X2,X3,X4)) -> U22(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U23(X1,X2,X3,X4)) -> U23(proper(X1),proper(X2),proper(X3),proper(X4)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(nil) -> ok(nil),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X1),ok(X2)) -> ok(U12(X1,X2)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),U21(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U21(X1,X2,X3,X4)),U22(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U22(X1,X2,X3,X4)),U23(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U23(X1,X2,X3,X4)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nosorts_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("cons",2),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","X","X1","X2"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(and(tt,X)) -> mark(X),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(s(length(L))),active(take(0,IL)) -> mark(nil),active(take(s(M),cons(N,IL))) -> mark(cons(N,take(M,IL))),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(tt) -> active(tt),mark(length(X)) -> active(length(mark(X))),mark(nil) -> active(nil),mark(s(X)) -> active(s(mark(X))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),length(mark(X)) -> length(X),length(active(X)) -> length(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nosorts_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__and",2),("a__length",1),("a__take",2),("a__zeros",0),("and",2),("cons",2),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","X","X1","X2"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__and(tt,X) -> mark(X),a__length(nil) -> 0,a__length(cons(N,L)) -> s(a__length(mark(L))),a__take(0,IL) -> nil,a__take(s(M),cons(N,IL)) -> cons(mark(N),take(M,IL)),mark(zeros) -> a__zeros,mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(nil) -> nil,mark(s(X)) -> s(mark(X)),a__zeros -> zeros,a__and(X1,X2) -> and(X1,X2),a__length(X) -> length(X),a__take(X1,X2) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nosorts_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("cons",2),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("take",2),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","X","X1","X2"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(and(tt,X)) -> mark(X),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(s(length(L))),active(take(0,IL)) -> mark(nil),active(take(s(M),cons(N,IL))) -> mark(cons(N,take(M,IL))),active(cons(X1,X2)) -> cons(active(X1),X2),active(and(X1,X2)) -> and(active(X1),X2),active(length(X)) -> length(active(X)),active(s(X)) -> s(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),length(mark(X)) -> mark(length(X)),s(mark(X)) -> mark(s(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(length(X)) -> length(proper(X)),proper(nil) -> ok(nil),proper(s(X)) -> s(proper(X)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),length(ok(X)) -> ok(length(X)),s(ok(X)) -> ok(s(X)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nokinds_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",1),("U21",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",3),("U72",2),("U81",1),("U91",4),("U92",4),("U93",4),("active",1),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt)) -> mark(tt),active(U21(tt)) -> mark(tt),active(U31(tt)) -> mark(tt),active(U41(tt,V2)) -> mark(U42(isNatIList(V2))),active(U42(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isNatList(V2))),active(U52(tt)) -> mark(tt),active(U61(tt,V2)) -> mark(U62(isNatIList(V2))),active(U62(tt)) -> mark(tt),active(U71(tt,L,N)) -> mark(U72(isNat(N),L)),active(U72(tt,L)) -> mark(s(length(L))),active(U81(tt)) -> mark(nil),active(U91(tt,IL,M,N)) -> mark(U92(isNat(M),IL,M,N)),active(U92(tt,IL,M,N)) -> mark(U93(isNat(N),IL,M,N)),active(U93(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatList(V1))),active(isNat(s(V1))) -> mark(U21(isNat(V1))),active(isNatIList(V)) -> mark(U31(isNatList(V))),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(isNat(V1),V2)),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U51(isNat(V1),V2)),active(isNatList(take(V1,V2))) -> mark(U61(isNat(V1),V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U71(isNatList(L),L,N)),active(take(0,IL)) -> mark(U81(isNatIList(IL))),active(take(s(M),cons(N,IL))) -> mark(U91(isNatIList(IL),IL,M,N)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U11(X)) -> active(U11(mark(X))),mark(tt) -> active(tt),mark(U21(X)) -> active(U21(mark(X))),mark(U31(X)) -> active(U31(mark(X))),mark(U41(X1,X2)) -> active(U41(mark(X1),X2)),mark(U42(X)) -> active(U42(mark(X))),mark(isNatIList(X)) -> active(isNatIList(X)),mark(U51(X1,X2)) -> active(U51(mark(X1),X2)),mark(U52(X)) -> active(U52(mark(X))),mark(isNatList(X)) -> active(isNatList(X)),mark(U61(X1,X2)) -> active(U61(mark(X1),X2)),mark(U62(X)) -> active(U62(mark(X))),mark(U71(X1,X2,X3)) -> active(U71(mark(X1),X2,X3)),mark(U72(X1,X2)) -> active(U72(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(U81(X)) -> active(U81(mark(X))),mark(nil) -> active(nil),mark(U91(X1,X2,X3,X4)) -> active(U91(mark(X1),X2,X3,X4)),mark(U92(X1,X2,X3,X4)) -> active(U92(mark(X1),X2,X3,X4)),mark(U93(X1,X2,X3,X4)) -> active(U93(mark(X1),X2,X3,X4)),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U11(mark(X)) -> U11(X),U11(active(X)) -> U11(X),U21(mark(X)) -> U21(X),U21(active(X)) -> U21(X),U31(mark(X)) -> U31(X),U31(active(X)) -> U31(X),U41(mark(X1),X2) -> U41(X1,X2),U41(X1,mark(X2)) -> U41(X1,X2),U41(active(X1),X2) -> U41(X1,X2),U41(X1,active(X2)) -> U41(X1,X2),U42(mark(X)) -> U42(X),U42(active(X)) -> U42(X),isNatIList(mark(X)) -> isNatIList(X),isNatIList(active(X)) -> isNatIList(X),U51(mark(X1),X2) -> U51(X1,X2),U51(X1,mark(X2)) -> U51(X1,X2),U51(active(X1),X2) -> U51(X1,X2),U51(X1,active(X2)) -> U51(X1,X2),U52(mark(X)) -> U52(X),U52(active(X)) -> U52(X),isNatList(mark(X)) -> isNatList(X),isNatList(active(X)) -> isNatList(X),U61(mark(X1),X2) -> U61(X1,X2),U61(X1,mark(X2)) -> U61(X1,X2),U61(active(X1),X2) -> U61(X1,X2),U61(X1,active(X2)) -> U61(X1,X2),U62(mark(X)) -> U62(X),U62(active(X)) -> U62(X),U71(mark(X1),X2,X3) -> U71(X1,X2,X3),U71(X1,mark(X2),X3) -> U71(X1,X2,X3),U71(X1,X2,mark(X3)) -> U71(X1,X2,X3),U71(active(X1),X2,X3) -> U71(X1,X2,X3),U71(X1,active(X2),X3) -> U71(X1,X2,X3),U71(X1,X2,active(X3)) -> U71(X1,X2,X3),U72(mark(X1),X2) -> U72(X1,X2),U72(X1,mark(X2)) -> U72(X1,X2),U72(active(X1),X2) -> U72(X1,X2),U72(X1,active(X2)) -> U72(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X),U81(mark(X)) -> U81(X),U81(active(X)) -> U81(X),U91(mark(X1),X2,X3,X4) -> U91(X1,X2,X3,X4),U91(X1,mark(X2),X3,X4) -> U91(X1,X2,X3,X4),U91(X1,X2,mark(X3),X4) -> U91(X1,X2,X3,X4),U91(X1,X2,X3,mark(X4)) -> U91(X1,X2,X3,X4),U91(active(X1),X2,X3,X4) -> U91(X1,X2,X3,X4),U91(X1,active(X2),X3,X4) -> U91(X1,X2,X3,X4),U91(X1,X2,active(X3),X4) -> U91(X1,X2,X3,X4),U91(X1,X2,X3,active(X4)) -> U91(X1,X2,X3,X4),U92(mark(X1),X2,X3,X4) -> U92(X1,X2,X3,X4),U92(X1,mark(X2),X3,X4) -> U92(X1,X2,X3,X4),U92(X1,X2,mark(X3),X4) -> U92(X1,X2,X3,X4),U92(X1,X2,X3,mark(X4)) -> U92(X1,X2,X3,X4),U92(active(X1),X2,X3,X4) -> U92(X1,X2,X3,X4),U92(X1,active(X2),X3,X4) -> U92(X1,X2,X3,X4),U92(X1,X2,active(X3),X4) -> U92(X1,X2,X3,X4),U92(X1,X2,X3,active(X4)) -> U92(X1,X2,X3,X4),U93(mark(X1),X2,X3,X4) -> U93(X1,X2,X3,X4),U93(X1,mark(X2),X3,X4) -> U93(X1,X2,X3,X4),U93(X1,X2,mark(X3),X4) -> U93(X1,X2,X3,X4),U93(X1,X2,X3,mark(X4)) -> U93(X1,X2,X3,X4),U93(active(X1),X2,X3,X4) -> U93(X1,X2,X3,X4),U93(X1,active(X2),X3,X4) -> U93(X1,X2,X3,X4),U93(X1,X2,active(X3),X4) -> U93(X1,X2,X3,X4),U93(X1,X2,X3,active(X4)) -> U93(X1,X2,X3,X4),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nokinds_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",1),("U21",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",3),("U72",2),("U81",1),("U91",4),("U92",4),("U93",4),("a__U11",1),("a__U21",1),("a__U31",1),("a__U41",2),("a__U42",1),("a__U51",2),("a__U52",1),("a__U61",2),("a__U62",1),("a__U71",3),("a__U72",2),("a__U81",1),("a__U91",4),("a__U92",4),("a__U93",4),("a__isNat",1),("a__isNatIList",1),("a__isNatList",1),("a__length",1),("a__take",2),("a__zeros",0),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U11(tt) -> tt,a__U21(tt) -> tt,a__U31(tt) -> tt,a__U41(tt,V2) -> a__U42(a__isNatIList(V2)),a__U42(tt) -> tt,a__U51(tt,V2) -> a__U52(a__isNatList(V2)),a__U52(tt) -> tt,a__U61(tt,V2) -> a__U62(a__isNatIList(V2)),a__U62(tt) -> tt,a__U71(tt,L,N) -> a__U72(a__isNat(N),L),a__U72(tt,L) -> s(a__length(mark(L))),a__U81(tt) -> nil,a__U91(tt,IL,M,N) -> a__U92(a__isNat(M),IL,M,N),a__U92(tt,IL,M,N) -> a__U93(a__isNat(N),IL,M,N),a__U93(tt,IL,M,N) -> cons(mark(N),take(M,IL)),a__isNat(0) -> tt,a__isNat(length(V1)) -> a__U11(a__isNatList(V1)),a__isNat(s(V1)) -> a__U21(a__isNat(V1)),a__isNatIList(V) -> a__U31(a__isNatList(V)),a__isNatIList(zeros) -> tt,a__isNatIList(cons(V1,V2)) -> a__U41(a__isNat(V1),V2),a__isNatList(nil) -> tt,a__isNatList(cons(V1,V2)) -> a__U51(a__isNat(V1),V2),a__isNatList(take(V1,V2)) -> a__U61(a__isNat(V1),V2),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U71(a__isNatList(L),L,N),a__take(0,IL) -> a__U81(a__isNatIList(IL)),a__take(s(M),cons(N,IL)) -> a__U91(a__isNatIList(IL),IL,M,N),mark(zeros) -> a__zeros,mark(U11(X)) -> a__U11(mark(X)),mark(U21(X)) -> a__U21(mark(X)),mark(U31(X)) -> a__U31(mark(X)),mark(U41(X1,X2)) -> a__U41(mark(X1),X2),mark(U42(X)) -> a__U42(mark(X)),mark(isNatIList(X)) -> a__isNatIList(X),mark(U51(X1,X2)) -> a__U51(mark(X1),X2),mark(U52(X)) -> a__U52(mark(X)),mark(isNatList(X)) -> a__isNatList(X),mark(U61(X1,X2)) -> a__U61(mark(X1),X2),mark(U62(X)) -> a__U62(mark(X)),mark(U71(X1,X2,X3)) -> a__U71(mark(X1),X2,X3),mark(U72(X1,X2)) -> a__U72(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(length(X)) -> a__length(mark(X)),mark(U81(X)) -> a__U81(mark(X)),mark(U91(X1,X2,X3,X4)) -> a__U91(mark(X1),X2,X3,X4),mark(U92(X1,X2,X3,X4)) -> a__U92(mark(X1),X2,X3,X4),mark(U93(X1,X2,X3,X4)) -> a__U93(mark(X1),X2,X3,X4),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U11(X) -> U11(X),a__U21(X) -> U21(X),a__U31(X) -> U31(X),a__U41(X1,X2) -> U41(X1,X2),a__U42(X) -> U42(X),a__isNatIList(X) -> isNatIList(X),a__U51(X1,X2) -> U51(X1,X2),a__U52(X) -> U52(X),a__isNatList(X) -> isNatList(X),a__U61(X1,X2) -> U61(X1,X2),a__U62(X) -> U62(X),a__U71(X1,X2,X3) -> U71(X1,X2,X3),a__U72(X1,X2) -> U72(X1,X2),a__isNat(X) -> isNat(X),a__length(X) -> length(X),a__U81(X) -> U81(X),a__U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4),a__U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4),a__U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4),a__take(X1,X2) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nokinds_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",1),("U21",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",3),("U72",2),("U81",1),("U91",4),("U92",4),("U93",4),("active",1),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("take",2),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt)) -> mark(tt),active(U21(tt)) -> mark(tt),active(U31(tt)) -> mark(tt),active(U41(tt,V2)) -> mark(U42(isNatIList(V2))),active(U42(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isNatList(V2))),active(U52(tt)) -> mark(tt),active(U61(tt,V2)) -> mark(U62(isNatIList(V2))),active(U62(tt)) -> mark(tt),active(U71(tt,L,N)) -> mark(U72(isNat(N),L)),active(U72(tt,L)) -> mark(s(length(L))),active(U81(tt)) -> mark(nil),active(U91(tt,IL,M,N)) -> mark(U92(isNat(M),IL,M,N)),active(U92(tt,IL,M,N)) -> mark(U93(isNat(N),IL,M,N)),active(U93(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatList(V1))),active(isNat(s(V1))) -> mark(U21(isNat(V1))),active(isNatIList(V)) -> mark(U31(isNatList(V))),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(isNat(V1),V2)),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U51(isNat(V1),V2)),active(isNatList(take(V1,V2))) -> mark(U61(isNat(V1),V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U71(isNatList(L),L,N)),active(take(0,IL)) -> mark(U81(isNatIList(IL))),active(take(s(M),cons(N,IL))) -> mark(U91(isNatIList(IL),IL,M,N)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U11(X)) -> U11(active(X)),active(U21(X)) -> U21(active(X)),active(U31(X)) -> U31(active(X)),active(U41(X1,X2)) -> U41(active(X1),X2),active(U42(X)) -> U42(active(X)),active(U51(X1,X2)) -> U51(active(X1),X2),active(U52(X)) -> U52(active(X)),active(U61(X1,X2)) -> U61(active(X1),X2),active(U62(X)) -> U62(active(X)),active(U71(X1,X2,X3)) -> U71(active(X1),X2,X3),active(U72(X1,X2)) -> U72(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),active(U81(X)) -> U81(active(X)),active(U91(X1,X2,X3,X4)) -> U91(active(X1),X2,X3,X4),active(U92(X1,X2,X3,X4)) -> U92(active(X1),X2,X3,X4),active(U93(X1,X2,X3,X4)) -> U93(active(X1),X2,X3,X4),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),U11(mark(X)) -> mark(U11(X)),U21(mark(X)) -> mark(U21(X)),U31(mark(X)) -> mark(U31(X)),U41(mark(X1),X2) -> mark(U41(X1,X2)),U42(mark(X)) -> mark(U42(X)),U51(mark(X1),X2) -> mark(U51(X1,X2)),U52(mark(X)) -> mark(U52(X)),U61(mark(X1),X2) -> mark(U61(X1,X2)),U62(mark(X)) -> mark(U62(X)),U71(mark(X1),X2,X3) -> mark(U71(X1,X2,X3)),U72(mark(X1),X2) -> mark(U72(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),U81(mark(X)) -> mark(U81(X)),U91(mark(X1),X2,X3,X4) -> mark(U91(X1,X2,X3,X4)),U92(mark(X1),X2,X3,X4) -> mark(U92(X1,X2,X3,X4)),U93(mark(X1),X2,X3,X4) -> mark(U93(X1,X2,X3,X4)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U11(X)) -> U11(proper(X)),proper(tt) -> ok(tt),proper(U21(X)) -> U21(proper(X)),proper(U31(X)) -> U31(proper(X)),proper(U41(X1,X2)) -> U41(proper(X1),proper(X2)),proper(U42(X)) -> U42(proper(X)),proper(isNatIList(X)) -> isNatIList(proper(X)),proper(U51(X1,X2)) -> U51(proper(X1),proper(X2)),proper(U52(X)) -> U52(proper(X)),proper(isNatList(X)) -> isNatList(proper(X)),proper(U61(X1,X2)) -> U61(proper(X1),proper(X2)),proper(U62(X)) -> U62(proper(X)),proper(U71(X1,X2,X3)) -> U71(proper(X1),proper(X2),proper(X3)),proper(U72(X1,X2)) -> U72(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(U81(X)) -> U81(proper(X)),proper(nil) -> ok(nil),proper(U91(X1,X2,X3,X4)) -> U91(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U92(X1,X2,X3,X4)) -> U92(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U93(X1,X2,X3,X4)) -> U93(proper(X1),proper(X2),proper(X3),proper(X4)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U11(ok(X)) -> ok(U11(X)),U21(ok(X)) -> ok(U21(X)),U31(ok(X)) -> ok(U31(X)),U41(ok(X1),ok(X2)) -> ok(U41(X1,X2)),U42(ok(X)) -> ok(U42(X)),isNatIList(ok(X)) -> ok(isNatIList(X)),U51(ok(X1),ok(X2)) -> ok(U51(X1,X2)),U52(ok(X)) -> ok(U52(X)),isNatList(ok(X)) -> ok(isNatList(X)),U61(ok(X1),ok(X2)) -> ok(U61(X1,X2)),U62(ok(X)) -> ok(U62(X)),U71(ok(X1),ok(X2),ok(X3)) -> ok(U71(X1,X2,X3)),U72(ok(X1),ok(X2)) -> ok(U72(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),U81(ok(X)) -> ok(U81(X)),U91(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U91(X1,X2,X3,X4)),U92(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U92(X1,X2,X3,X4)),U93(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U93(X1,X2,X3,X4)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nokinds_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",1),("U31",4),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,L)) -> mark(s(length(L))),active(U21(tt)) -> mark(nil),active(U31(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(isNatList(V1)),active(isNat(s(V1))) -> mark(isNat(V1)),active(isNatIList(V)) -> mark(isNatList(V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(and(isNat(V1),isNatList(V2))),active(isNatList(take(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2))),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U11(and(isNatList(L),isNat(N)),L)),active(take(0,IL)) -> mark(U21(isNatIList(IL))),active(take(s(M),cons(N,IL))) -> mark(U31(and(isNatIList(IL),and(isNat(M),isNat(N))),IL,M,N)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(U21(X)) -> active(U21(mark(X))),mark(nil) -> active(nil),mark(U31(X1,X2,X3,X4)) -> active(U31(mark(X1),X2,X3,X4)),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),mark(isNatList(X)) -> active(isNatList(X)),mark(isNatIList(X)) -> active(isNatIList(X)),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X),U21(mark(X)) -> U21(X),U21(active(X)) -> U21(X),U31(mark(X1),X2,X3,X4) -> U31(X1,X2,X3,X4),U31(X1,mark(X2),X3,X4) -> U31(X1,X2,X3,X4),U31(X1,X2,mark(X3),X4) -> U31(X1,X2,X3,X4),U31(X1,X2,X3,mark(X4)) -> U31(X1,X2,X3,X4),U31(active(X1),X2,X3,X4) -> U31(X1,X2,X3,X4),U31(X1,active(X2),X3,X4) -> U31(X1,X2,X3,X4),U31(X1,X2,active(X3),X4) -> U31(X1,X2,X3,X4),U31(X1,X2,X3,active(X4)) -> U31(X1,X2,X3,X4),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),isNatList(mark(X)) -> isNatList(X),isNatList(active(X)) -> isNatList(X),isNatIList(mark(X)) -> isNatIList(X),isNatIList(active(X)) -> isNatIList(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nokinds_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",1),("U31",4),("a__U11",2),("a__U21",1),("a__U31",4),("a__and",2),("a__isNat",1),("a__isNatIList",1),("a__isNatList",1),("a__length",1),("a__take",2),("a__zeros",0),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U11(tt,L) -> s(a__length(mark(L))),a__U21(tt) -> nil,a__U31(tt,IL,M,N) -> cons(mark(N),take(M,IL)),a__and(tt,X) -> mark(X),a__isNat(0) -> tt,a__isNat(length(V1)) -> a__isNatList(V1),a__isNat(s(V1)) -> a__isNat(V1),a__isNatIList(V) -> a__isNatList(V),a__isNatIList(zeros) -> tt,a__isNatIList(cons(V1,V2)) -> a__and(a__isNat(V1),isNatIList(V2)),a__isNatList(nil) -> tt,a__isNatList(cons(V1,V2)) -> a__and(a__isNat(V1),isNatList(V2)),a__isNatList(take(V1,V2)) -> a__and(a__isNat(V1),isNatIList(V2)),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U11(a__and(a__isNatList(L),isNat(N)),L),a__take(0,IL) -> a__U21(a__isNatIList(IL)),a__take(s(M),cons(N,IL)) -> a__U31(a__and(a__isNatIList(IL),and(isNat(M),isNat(N))),IL,M,N),mark(zeros) -> a__zeros,mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(U21(X)) -> a__U21(mark(X)),mark(U31(X1,X2,X3,X4)) -> a__U31(mark(X1),X2,X3,X4),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(isNatList(X)) -> a__isNatList(X),mark(isNatIList(X)) -> a__isNatIList(X),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U11(X1,X2) -> U11(X1,X2),a__length(X) -> length(X),a__U21(X) -> U21(X),a__U31(X1,X2,X3,X4) -> U31(X1,X2,X3,X4),a__take(X1,X2) -> take(X1,X2),a__and(X1,X2) -> and(X1,X2),a__isNat(X) -> isNat(X),a__isNatList(X) -> isNatList(X),a__isNatIList(X) -> isNatIList(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_nokinds_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",1),("U31",4),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("take",2),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,L)) -> mark(s(length(L))),active(U21(tt)) -> mark(nil),active(U31(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(isNatList(V1)),active(isNat(s(V1))) -> mark(isNat(V1)),active(isNatIList(V)) -> mark(isNatList(V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(and(isNat(V1),isNatList(V2))),active(isNatList(take(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2))),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U11(and(isNatList(L),isNat(N)),L)),active(take(0,IL)) -> mark(U21(isNatIList(IL))),active(take(s(M),cons(N,IL))) -> mark(U31(and(isNatIList(IL),and(isNat(M),isNat(N))),IL,M,N)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U11(X1,X2)) -> U11(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),active(U21(X)) -> U21(active(X)),active(U31(X1,X2,X3,X4)) -> U31(active(X1),X2,X3,X4),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(and(X1,X2)) -> and(active(X1),X2),cons(mark(X1),X2) -> mark(cons(X1,X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),U21(mark(X)) -> mark(U21(X)),U31(mark(X1),X2,X3,X4) -> mark(U31(X1,X2,X3,X4)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(U21(X)) -> U21(proper(X)),proper(nil) -> ok(nil),proper(U31(X1,X2,X3,X4)) -> U31(proper(X1),proper(X2),proper(X3),proper(X4)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),proper(isNatList(X)) -> isNatList(proper(X)),proper(isNatIList(X)) -> isNatIList(proper(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),U21(ok(X)) -> ok(U21(X)),U31(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U31(X1,X2,X3,X4)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),isNatList(ok(X)) -> ok(isNatList(X)),isNatIList(ok(X)) -> ok(isNatIList(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_complete_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U105",2),("U106",1),("U11",2),("U111",3),("U112",3),("U113",3),("U114",2),("U12",2),("U121",2),("U122",1),("U13",1),("U131",4),("U132",4),("U133",4),("U134",4),("U135",4),("U136",4),("U21",2),("U22",2),("U23",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",1),("U81",1),("U91",3),("U92",3),("U93",3),("U94",3),("U95",2),("U96",1),("active",1),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U101(tt,V1,V2)) -> mark(U102(isNatKind(V1),V1,V2)),active(U102(tt,V1,V2)) -> mark(U103(isNatIListKind(V2),V1,V2)),active(U103(tt,V1,V2)) -> mark(U104(isNatIListKind(V2),V1,V2)),active(U104(tt,V1,V2)) -> mark(U105(isNat(V1),V2)),active(U105(tt,V2)) -> mark(U106(isNatIList(V2))),active(U106(tt)) -> mark(tt),active(U11(tt,V1)) -> mark(U12(isNatIListKind(V1),V1)),active(U111(tt,L,N)) -> mark(U112(isNatIListKind(L),L,N)),active(U112(tt,L,N)) -> mark(U113(isNat(N),L,N)),active(U113(tt,L,N)) -> mark(U114(isNatKind(N),L)),active(U114(tt,L)) -> mark(s(length(L))),active(U12(tt,V1)) -> mark(U13(isNatList(V1))),active(U121(tt,IL)) -> mark(U122(isNatIListKind(IL))),active(U122(tt)) -> mark(nil),active(U13(tt)) -> mark(tt),active(U131(tt,IL,M,N)) -> mark(U132(isNatIListKind(IL),IL,M,N)),active(U132(tt,IL,M,N)) -> mark(U133(isNat(M),IL,M,N)),active(U133(tt,IL,M,N)) -> mark(U134(isNatKind(M),IL,M,N)),active(U134(tt,IL,M,N)) -> mark(U135(isNat(N),IL,M,N)),active(U135(tt,IL,M,N)) -> mark(U136(isNatKind(N),IL,M,N)),active(U136(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(U21(tt,V1)) -> mark(U22(isNatKind(V1),V1)),active(U22(tt,V1)) -> mark(U23(isNat(V1))),active(U23(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isNatIListKind(V),V)),active(U32(tt,V)) -> mark(U33(isNatList(V))),active(U33(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isNatKind(V1),V1,V2)),active(U42(tt,V1,V2)) -> mark(U43(isNatIListKind(V2),V1,V2)),active(U43(tt,V1,V2)) -> mark(U44(isNatIListKind(V2),V1,V2)),active(U44(tt,V1,V2)) -> mark(U45(isNat(V1),V2)),active(U45(tt,V2)) -> mark(U46(isNatIList(V2))),active(U46(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isNatIListKind(V2))),active(U52(tt)) -> mark(tt),active(U61(tt,V2)) -> mark(U62(isNatIListKind(V2))),active(U62(tt)) -> mark(tt),active(U71(tt)) -> mark(tt),active(U81(tt)) -> mark(tt),active(U91(tt,V1,V2)) -> mark(U92(isNatKind(V1),V1,V2)),active(U92(tt,V1,V2)) -> mark(U93(isNatIListKind(V2),V1,V2)),active(U93(tt,V1,V2)) -> mark(U94(isNatIListKind(V2),V1,V2)),active(U94(tt,V1,V2)) -> mark(U95(isNat(V1),V2)),active(U95(tt,V2)) -> mark(U96(isNatList(V2))),active(U96(tt)) -> mark(tt),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(isNatKind(V1),V1,V2)),active(isNatIListKind(nil)) -> mark(tt),active(isNatIListKind(zeros)) -> mark(tt),active(isNatIListKind(cons(V1,V2))) -> mark(U51(isNatKind(V1),V2)),active(isNatIListKind(take(V1,V2))) -> mark(U61(isNatKind(V1),V2)),active(isNatKind(0)) -> mark(tt),active(isNatKind(length(V1))) -> mark(U71(isNatIListKind(V1))),active(isNatKind(s(V1))) -> mark(U81(isNatKind(V1))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U91(isNatKind(V1),V1,V2)),active(isNatList(take(V1,V2))) -> mark(U101(isNatKind(V1),V1,V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U111(isNatList(L),L,N)),active(take(0,IL)) -> mark(U121(isNatIList(IL),IL)),active(take(s(M),cons(N,IL))) -> mark(U131(isNatIList(IL),IL,M,N)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U101(X1,X2,X3)) -> active(U101(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U102(X1,X2,X3)) -> active(U102(mark(X1),X2,X3)),mark(isNatKind(X)) -> active(isNatKind(X)),mark(U103(X1,X2,X3)) -> active(U103(mark(X1),X2,X3)),mark(isNatIListKind(X)) -> active(isNatIListKind(X)),mark(U104(X1,X2,X3)) -> active(U104(mark(X1),X2,X3)),mark(U105(X1,X2)) -> active(U105(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),mark(U106(X)) -> active(U106(mark(X))),mark(isNatIList(X)) -> active(isNatIList(X)),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(U12(X1,X2)) -> active(U12(mark(X1),X2)),mark(U111(X1,X2,X3)) -> active(U111(mark(X1),X2,X3)),mark(U112(X1,X2,X3)) -> active(U112(mark(X1),X2,X3)),mark(U113(X1,X2,X3)) -> active(U113(mark(X1),X2,X3)),mark(U114(X1,X2)) -> active(U114(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(U13(X)) -> active(U13(mark(X))),mark(isNatList(X)) -> active(isNatList(X)),mark(U121(X1,X2)) -> active(U121(mark(X1),X2)),mark(U122(X)) -> active(U122(mark(X))),mark(nil) -> active(nil),mark(U131(X1,X2,X3,X4)) -> active(U131(mark(X1),X2,X3,X4)),mark(U132(X1,X2,X3,X4)) -> active(U132(mark(X1),X2,X3,X4)),mark(U133(X1,X2,X3,X4)) -> active(U133(mark(X1),X2,X3,X4)),mark(U134(X1,X2,X3,X4)) -> active(U134(mark(X1),X2,X3,X4)),mark(U135(X1,X2,X3,X4)) -> active(U135(mark(X1),X2,X3,X4)),mark(U136(X1,X2,X3,X4)) -> active(U136(mark(X1),X2,X3,X4)),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X1,X2)) -> active(U22(mark(X1),X2)),mark(U23(X)) -> active(U23(mark(X))),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U32(X1,X2)) -> active(U32(mark(X1),X2)),mark(U33(X)) -> active(U33(mark(X))),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2,X3)) -> active(U42(mark(X1),X2,X3)),mark(U43(X1,X2,X3)) -> active(U43(mark(X1),X2,X3)),mark(U44(X1,X2,X3)) -> active(U44(mark(X1),X2,X3)),mark(U45(X1,X2)) -> active(U45(mark(X1),X2)),mark(U46(X)) -> active(U46(mark(X))),mark(U51(X1,X2)) -> active(U51(mark(X1),X2)),mark(U52(X)) -> active(U52(mark(X))),mark(U61(X1,X2)) -> active(U61(mark(X1),X2)),mark(U62(X)) -> active(U62(mark(X))),mark(U71(X)) -> active(U71(mark(X))),mark(U81(X)) -> active(U81(mark(X))),mark(U91(X1,X2,X3)) -> active(U91(mark(X1),X2,X3)),mark(U92(X1,X2,X3)) -> active(U92(mark(X1),X2,X3)),mark(U93(X1,X2,X3)) -> active(U93(mark(X1),X2,X3)),mark(U94(X1,X2,X3)) -> active(U94(mark(X1),X2,X3)),mark(U95(X1,X2)) -> active(U95(mark(X1),X2)),mark(U96(X)) -> active(U96(mark(X))),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U101(mark(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,mark(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,mark(X3)) -> U101(X1,X2,X3),U101(active(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,active(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,active(X3)) -> U101(X1,X2,X3),U102(mark(X1),X2,X3) -> U102(X1,X2,X3),U102(X1,mark(X2),X3) -> U102(X1,X2,X3),U102(X1,X2,mark(X3)) -> U102(X1,X2,X3),U102(active(X1),X2,X3) -> U102(X1,X2,X3),U102(X1,active(X2),X3) -> U102(X1,X2,X3),U102(X1,X2,active(X3)) -> U102(X1,X2,X3),isNatKind(mark(X)) -> isNatKind(X),isNatKind(active(X)) -> isNatKind(X),U103(mark(X1),X2,X3) -> U103(X1,X2,X3),U103(X1,mark(X2),X3) -> U103(X1,X2,X3),U103(X1,X2,mark(X3)) -> U103(X1,X2,X3),U103(active(X1),X2,X3) -> U103(X1,X2,X3),U103(X1,active(X2),X3) -> U103(X1,X2,X3),U103(X1,X2,active(X3)) -> U103(X1,X2,X3),isNatIListKind(mark(X)) -> isNatIListKind(X),isNatIListKind(active(X)) -> isNatIListKind(X),U104(mark(X1),X2,X3) -> U104(X1,X2,X3),U104(X1,mark(X2),X3) -> U104(X1,X2,X3),U104(X1,X2,mark(X3)) -> U104(X1,X2,X3),U104(active(X1),X2,X3) -> U104(X1,X2,X3),U104(X1,active(X2),X3) -> U104(X1,X2,X3),U104(X1,X2,active(X3)) -> U104(X1,X2,X3),U105(mark(X1),X2) -> U105(X1,X2),U105(X1,mark(X2)) -> U105(X1,X2),U105(active(X1),X2) -> U105(X1,X2),U105(X1,active(X2)) -> U105(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U106(mark(X)) -> U106(X),U106(active(X)) -> U106(X),isNatIList(mark(X)) -> isNatIList(X),isNatIList(active(X)) -> isNatIList(X),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X1),X2) -> U12(X1,X2),U12(X1,mark(X2)) -> U12(X1,X2),U12(active(X1),X2) -> U12(X1,X2),U12(X1,active(X2)) -> U12(X1,X2),U111(mark(X1),X2,X3) -> U111(X1,X2,X3),U111(X1,mark(X2),X3) -> U111(X1,X2,X3),U111(X1,X2,mark(X3)) -> U111(X1,X2,X3),U111(active(X1),X2,X3) -> U111(X1,X2,X3),U111(X1,active(X2),X3) -> U111(X1,X2,X3),U111(X1,X2,active(X3)) -> U111(X1,X2,X3),U112(mark(X1),X2,X3) -> U112(X1,X2,X3),U112(X1,mark(X2),X3) -> U112(X1,X2,X3),U112(X1,X2,mark(X3)) -> U112(X1,X2,X3),U112(active(X1),X2,X3) -> U112(X1,X2,X3),U112(X1,active(X2),X3) -> U112(X1,X2,X3),U112(X1,X2,active(X3)) -> U112(X1,X2,X3),U113(mark(X1),X2,X3) -> U113(X1,X2,X3),U113(X1,mark(X2),X3) -> U113(X1,X2,X3),U113(X1,X2,mark(X3)) -> U113(X1,X2,X3),U113(active(X1),X2,X3) -> U113(X1,X2,X3),U113(X1,active(X2),X3) -> U113(X1,X2,X3),U113(X1,X2,active(X3)) -> U113(X1,X2,X3),U114(mark(X1),X2) -> U114(X1,X2),U114(X1,mark(X2)) -> U114(X1,X2),U114(active(X1),X2) -> U114(X1,X2),U114(X1,active(X2)) -> U114(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X),U13(mark(X)) -> U13(X),U13(active(X)) -> U13(X),isNatList(mark(X)) -> isNatList(X),isNatList(active(X)) -> isNatList(X),U121(mark(X1),X2) -> U121(X1,X2),U121(X1,mark(X2)) -> U121(X1,X2),U121(active(X1),X2) -> U121(X1,X2),U121(X1,active(X2)) -> U121(X1,X2),U122(mark(X)) -> U122(X),U122(active(X)) -> U122(X),U131(mark(X1),X2,X3,X4) -> U131(X1,X2,X3,X4),U131(X1,mark(X2),X3,X4) -> U131(X1,X2,X3,X4),U131(X1,X2,mark(X3),X4) -> U131(X1,X2,X3,X4),U131(X1,X2,X3,mark(X4)) -> U131(X1,X2,X3,X4),U131(active(X1),X2,X3,X4) -> U131(X1,X2,X3,X4),U131(X1,active(X2),X3,X4) -> U131(X1,X2,X3,X4),U131(X1,X2,active(X3),X4) -> U131(X1,X2,X3,X4),U131(X1,X2,X3,active(X4)) -> U131(X1,X2,X3,X4),U132(mark(X1),X2,X3,X4) -> U132(X1,X2,X3,X4),U132(X1,mark(X2),X3,X4) -> U132(X1,X2,X3,X4),U132(X1,X2,mark(X3),X4) -> U132(X1,X2,X3,X4),U132(X1,X2,X3,mark(X4)) -> U132(X1,X2,X3,X4),U132(active(X1),X2,X3,X4) -> U132(X1,X2,X3,X4),U132(X1,active(X2),X3,X4) -> U132(X1,X2,X3,X4),U132(X1,X2,active(X3),X4) -> U132(X1,X2,X3,X4),U132(X1,X2,X3,active(X4)) -> U132(X1,X2,X3,X4),U133(mark(X1),X2,X3,X4) -> U133(X1,X2,X3,X4),U133(X1,mark(X2),X3,X4) -> U133(X1,X2,X3,X4),U133(X1,X2,mark(X3),X4) -> U133(X1,X2,X3,X4),U133(X1,X2,X3,mark(X4)) -> U133(X1,X2,X3,X4),U133(active(X1),X2,X3,X4) -> U133(X1,X2,X3,X4),U133(X1,active(X2),X3,X4) -> U133(X1,X2,X3,X4),U133(X1,X2,active(X3),X4) -> U133(X1,X2,X3,X4),U133(X1,X2,X3,active(X4)) -> U133(X1,X2,X3,X4),U134(mark(X1),X2,X3,X4) -> U134(X1,X2,X3,X4),U134(X1,mark(X2),X3,X4) -> U134(X1,X2,X3,X4),U134(X1,X2,mark(X3),X4) -> U134(X1,X2,X3,X4),U134(X1,X2,X3,mark(X4)) -> U134(X1,X2,X3,X4),U134(active(X1),X2,X3,X4) -> U134(X1,X2,X3,X4),U134(X1,active(X2),X3,X4) -> U134(X1,X2,X3,X4),U134(X1,X2,active(X3),X4) -> U134(X1,X2,X3,X4),U134(X1,X2,X3,active(X4)) -> U134(X1,X2,X3,X4),U135(mark(X1),X2,X3,X4) -> U135(X1,X2,X3,X4),U135(X1,mark(X2),X3,X4) -> U135(X1,X2,X3,X4),U135(X1,X2,mark(X3),X4) -> U135(X1,X2,X3,X4),U135(X1,X2,X3,mark(X4)) -> U135(X1,X2,X3,X4),U135(active(X1),X2,X3,X4) -> U135(X1,X2,X3,X4),U135(X1,active(X2),X3,X4) -> U135(X1,X2,X3,X4),U135(X1,X2,active(X3),X4) -> U135(X1,X2,X3,X4),U135(X1,X2,X3,active(X4)) -> U135(X1,X2,X3,X4),U136(mark(X1),X2,X3,X4) -> U136(X1,X2,X3,X4),U136(X1,mark(X2),X3,X4) -> U136(X1,X2,X3,X4),U136(X1,X2,mark(X3),X4) -> U136(X1,X2,X3,X4),U136(X1,X2,X3,mark(X4)) -> U136(X1,X2,X3,X4),U136(active(X1),X2,X3,X4) -> U136(X1,X2,X3,X4),U136(X1,active(X2),X3,X4) -> U136(X1,X2,X3,X4),U136(X1,X2,active(X3),X4) -> U136(X1,X2,X3,X4),U136(X1,X2,X3,active(X4)) -> U136(X1,X2,X3,X4),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X1),X2) -> U22(X1,X2),U22(X1,mark(X2)) -> U22(X1,X2),U22(active(X1),X2) -> U22(X1,X2),U22(X1,active(X2)) -> U22(X1,X2),U23(mark(X)) -> U23(X),U23(active(X)) -> U23(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U32(mark(X1),X2) -> U32(X1,X2),U32(X1,mark(X2)) -> U32(X1,X2),U32(active(X1),X2) -> U32(X1,X2),U32(X1,active(X2)) -> U32(X1,X2),U33(mark(X)) -> U33(X),U33(active(X)) -> U33(X),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,mark(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,mark(X3)) -> U42(X1,X2,X3),U42(active(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,active(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,active(X3)) -> U42(X1,X2,X3),U43(mark(X1),X2,X3) -> U43(X1,X2,X3),U43(X1,mark(X2),X3) -> U43(X1,X2,X3),U43(X1,X2,mark(X3)) -> U43(X1,X2,X3),U43(active(X1),X2,X3) -> U43(X1,X2,X3),U43(X1,active(X2),X3) -> U43(X1,X2,X3),U43(X1,X2,active(X3)) -> U43(X1,X2,X3),U44(mark(X1),X2,X3) -> U44(X1,X2,X3),U44(X1,mark(X2),X3) -> U44(X1,X2,X3),U44(X1,X2,mark(X3)) -> U44(X1,X2,X3),U44(active(X1),X2,X3) -> U44(X1,X2,X3),U44(X1,active(X2),X3) -> U44(X1,X2,X3),U44(X1,X2,active(X3)) -> U44(X1,X2,X3),U45(mark(X1),X2) -> U45(X1,X2),U45(X1,mark(X2)) -> U45(X1,X2),U45(active(X1),X2) -> U45(X1,X2),U45(X1,active(X2)) -> U45(X1,X2),U46(mark(X)) -> U46(X),U46(active(X)) -> U46(X),U51(mark(X1),X2) -> U51(X1,X2),U51(X1,mark(X2)) -> U51(X1,X2),U51(active(X1),X2) -> U51(X1,X2),U51(X1,active(X2)) -> U51(X1,X2),U52(mark(X)) -> U52(X),U52(active(X)) -> U52(X),U61(mark(X1),X2) -> U61(X1,X2),U61(X1,mark(X2)) -> U61(X1,X2),U61(active(X1),X2) -> U61(X1,X2),U61(X1,active(X2)) -> U61(X1,X2),U62(mark(X)) -> U62(X),U62(active(X)) -> U62(X),U71(mark(X)) -> U71(X),U71(active(X)) -> U71(X),U81(mark(X)) -> U81(X),U81(active(X)) -> U81(X),U91(mark(X1),X2,X3) -> U91(X1,X2,X3),U91(X1,mark(X2),X3) -> U91(X1,X2,X3),U91(X1,X2,mark(X3)) -> U91(X1,X2,X3),U91(active(X1),X2,X3) -> U91(X1,X2,X3),U91(X1,active(X2),X3) -> U91(X1,X2,X3),U91(X1,X2,active(X3)) -> U91(X1,X2,X3),U92(mark(X1),X2,X3) -> U92(X1,X2,X3),U92(X1,mark(X2),X3) -> U92(X1,X2,X3),U92(X1,X2,mark(X3)) -> U92(X1,X2,X3),U92(active(X1),X2,X3) -> U92(X1,X2,X3),U92(X1,active(X2),X3) -> U92(X1,X2,X3),U92(X1,X2,active(X3)) -> U92(X1,X2,X3),U93(mark(X1),X2,X3) -> U93(X1,X2,X3),U93(X1,mark(X2),X3) -> U93(X1,X2,X3),U93(X1,X2,mark(X3)) -> U93(X1,X2,X3),U93(active(X1),X2,X3) -> U93(X1,X2,X3),U93(X1,active(X2),X3) -> U93(X1,X2,X3),U93(X1,X2,active(X3)) -> U93(X1,X2,X3),U94(mark(X1),X2,X3) -> U94(X1,X2,X3),U94(X1,mark(X2),X3) -> U94(X1,X2,X3),U94(X1,X2,mark(X3)) -> U94(X1,X2,X3),U94(active(X1),X2,X3) -> U94(X1,X2,X3),U94(X1,active(X2),X3) -> U94(X1,X2,X3),U94(X1,X2,active(X3)) -> U94(X1,X2,X3),U95(mark(X1),X2) -> U95(X1,X2),U95(X1,mark(X2)) -> U95(X1,X2),U95(active(X1),X2) -> U95(X1,X2),U95(X1,active(X2)) -> U95(X1,X2),U96(mark(X)) -> U96(X),U96(active(X)) -> U96(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_complete_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U105",2),("U106",1),("U11",2),("U111",3),("U112",3),("U113",3),("U114",2),("U12",2),("U121",2),("U122",1),("U13",1),("U131",4),("U132",4),("U133",4),("U134",4),("U135",4),("U136",4),("U21",2),("U22",2),("U23",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",1),("U81",1),("U91",3),("U92",3),("U93",3),("U94",3),("U95",2),("U96",1),("a__U101",3),("a__U102",3),("a__U103",3),("a__U104",3),("a__U105",2),("a__U106",1),("a__U11",2),("a__U111",3),("a__U112",3),("a__U113",3),("a__U114",2),("a__U12",2),("a__U121",2),("a__U122",1),("a__U13",1),("a__U131",4),("a__U132",4),("a__U133",4),("a__U134",4),("a__U135",4),("a__U136",4),("a__U21",2),("a__U22",2),("a__U23",1),("a__U31",2),("a__U32",2),("a__U33",1),("a__U41",3),("a__U42",3),("a__U43",3),("a__U44",3),("a__U45",2),("a__U46",1),("a__U51",2),("a__U52",1),("a__U61",2),("a__U62",1),("a__U71",1),("a__U81",1),("a__U91",3),("a__U92",3),("a__U93",3),("a__U94",3),("a__U95",2),("a__U96",1),("a__isNat",1),("a__isNatIList",1),("a__isNatIListKind",1),("a__isNatKind",1),("a__isNatList",1),("a__length",1),("a__take",2),("a__zeros",0),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U101(tt,V1,V2) -> a__U102(a__isNatKind(V1),V1,V2),a__U102(tt,V1,V2) -> a__U103(a__isNatIListKind(V2),V1,V2),a__U103(tt,V1,V2) -> a__U104(a__isNatIListKind(V2),V1,V2),a__U104(tt,V1,V2) -> a__U105(a__isNat(V1),V2),a__U105(tt,V2) -> a__U106(a__isNatIList(V2)),a__U106(tt) -> tt,a__U11(tt,V1) -> a__U12(a__isNatIListKind(V1),V1),a__U111(tt,L,N) -> a__U112(a__isNatIListKind(L),L,N),a__U112(tt,L,N) -> a__U113(a__isNat(N),L,N),a__U113(tt,L,N) -> a__U114(a__isNatKind(N),L),a__U114(tt,L) -> s(a__length(mark(L))),a__U12(tt,V1) -> a__U13(a__isNatList(V1)),a__U121(tt,IL) -> a__U122(a__isNatIListKind(IL)),a__U122(tt) -> nil,a__U13(tt) -> tt,a__U131(tt,IL,M,N) -> a__U132(a__isNatIListKind(IL),IL,M,N),a__U132(tt,IL,M,N) -> a__U133(a__isNat(M),IL,M,N),a__U133(tt,IL,M,N) -> a__U134(a__isNatKind(M),IL,M,N),a__U134(tt,IL,M,N) -> a__U135(a__isNat(N),IL,M,N),a__U135(tt,IL,M,N) -> a__U136(a__isNatKind(N),IL,M,N),a__U136(tt,IL,M,N) -> cons(mark(N),take(M,IL)),a__U21(tt,V1) -> a__U22(a__isNatKind(V1),V1),a__U22(tt,V1) -> a__U23(a__isNat(V1)),a__U23(tt) -> tt,a__U31(tt,V) -> a__U32(a__isNatIListKind(V),V),a__U32(tt,V) -> a__U33(a__isNatList(V)),a__U33(tt) -> tt,a__U41(tt,V1,V2) -> a__U42(a__isNatKind(V1),V1,V2),a__U42(tt,V1,V2) -> a__U43(a__isNatIListKind(V2),V1,V2),a__U43(tt,V1,V2) -> a__U44(a__isNatIListKind(V2),V1,V2),a__U44(tt,V1,V2) -> a__U45(a__isNat(V1),V2),a__U45(tt,V2) -> a__U46(a__isNatIList(V2)),a__U46(tt) -> tt,a__U51(tt,V2) -> a__U52(a__isNatIListKind(V2)),a__U52(tt) -> tt,a__U61(tt,V2) -> a__U62(a__isNatIListKind(V2)),a__U62(tt) -> tt,a__U71(tt) -> tt,a__U81(tt) -> tt,a__U91(tt,V1,V2) -> a__U92(a__isNatKind(V1),V1,V2),a__U92(tt,V1,V2) -> a__U93(a__isNatIListKind(V2),V1,V2),a__U93(tt,V1,V2) -> a__U94(a__isNatIListKind(V2),V1,V2),a__U94(tt,V1,V2) -> a__U95(a__isNat(V1),V2),a__U95(tt,V2) -> a__U96(a__isNatList(V2)),a__U96(tt) -> tt,a__isNat(0) -> tt,a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1),V1),a__isNat(s(V1)) -> a__U21(a__isNatKind(V1),V1),a__isNatIList(V) -> a__U31(a__isNatIListKind(V),V),a__isNatIList(zeros) -> tt,a__isNatIList(cons(V1,V2)) -> a__U41(a__isNatKind(V1),V1,V2),a__isNatIListKind(nil) -> tt,a__isNatIListKind(zeros) -> tt,a__isNatIListKind(cons(V1,V2)) -> a__U51(a__isNatKind(V1),V2),a__isNatIListKind(take(V1,V2)) -> a__U61(a__isNatKind(V1),V2),a__isNatKind(0) -> tt,a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1)),a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1)),a__isNatList(nil) -> tt,a__isNatList(cons(V1,V2)) -> a__U91(a__isNatKind(V1),V1,V2),a__isNatList(take(V1,V2)) -> a__U101(a__isNatKind(V1),V1,V2),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U111(a__isNatList(L),L,N),a__take(0,IL) -> a__U121(a__isNatIList(IL),IL),a__take(s(M),cons(N,IL)) -> a__U131(a__isNatIList(IL),IL,M,N),mark(zeros) -> a__zeros,mark(U101(X1,X2,X3)) -> a__U101(mark(X1),X2,X3),mark(U102(X1,X2,X3)) -> a__U102(mark(X1),X2,X3),mark(isNatKind(X)) -> a__isNatKind(X),mark(U103(X1,X2,X3)) -> a__U103(mark(X1),X2,X3),mark(isNatIListKind(X)) -> a__isNatIListKind(X),mark(U104(X1,X2,X3)) -> a__U104(mark(X1),X2,X3),mark(U105(X1,X2)) -> a__U105(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(U106(X)) -> a__U106(mark(X)),mark(isNatIList(X)) -> a__isNatIList(X),mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X1,X2)) -> a__U12(mark(X1),X2),mark(U111(X1,X2,X3)) -> a__U111(mark(X1),X2,X3),mark(U112(X1,X2,X3)) -> a__U112(mark(X1),X2,X3),mark(U113(X1,X2,X3)) -> a__U113(mark(X1),X2,X3),mark(U114(X1,X2)) -> a__U114(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(U13(X)) -> a__U13(mark(X)),mark(isNatList(X)) -> a__isNatList(X),mark(U121(X1,X2)) -> a__U121(mark(X1),X2),mark(U122(X)) -> a__U122(mark(X)),mark(U131(X1,X2,X3,X4)) -> a__U131(mark(X1),X2,X3,X4),mark(U132(X1,X2,X3,X4)) -> a__U132(mark(X1),X2,X3,X4),mark(U133(X1,X2,X3,X4)) -> a__U133(mark(X1),X2,X3,X4),mark(U134(X1,X2,X3,X4)) -> a__U134(mark(X1),X2,X3,X4),mark(U135(X1,X2,X3,X4)) -> a__U135(mark(X1),X2,X3,X4),mark(U136(X1,X2,X3,X4)) -> a__U136(mark(X1),X2,X3,X4),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X1,X2)) -> a__U22(mark(X1),X2),mark(U23(X)) -> a__U23(mark(X)),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U32(X1,X2)) -> a__U32(mark(X1),X2),mark(U33(X)) -> a__U33(mark(X)),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2,X3)) -> a__U42(mark(X1),X2,X3),mark(U43(X1,X2,X3)) -> a__U43(mark(X1),X2,X3),mark(U44(X1,X2,X3)) -> a__U44(mark(X1),X2,X3),mark(U45(X1,X2)) -> a__U45(mark(X1),X2),mark(U46(X)) -> a__U46(mark(X)),mark(U51(X1,X2)) -> a__U51(mark(X1),X2),mark(U52(X)) -> a__U52(mark(X)),mark(U61(X1,X2)) -> a__U61(mark(X1),X2),mark(U62(X)) -> a__U62(mark(X)),mark(U71(X)) -> a__U71(mark(X)),mark(U81(X)) -> a__U81(mark(X)),mark(U91(X1,X2,X3)) -> a__U91(mark(X1),X2,X3),mark(U92(X1,X2,X3)) -> a__U92(mark(X1),X2,X3),mark(U93(X1,X2,X3)) -> a__U93(mark(X1),X2,X3),mark(U94(X1,X2,X3)) -> a__U94(mark(X1),X2,X3),mark(U95(X1,X2)) -> a__U95(mark(X1),X2),mark(U96(X)) -> a__U96(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U101(X1,X2,X3) -> U101(X1,X2,X3),a__U102(X1,X2,X3) -> U102(X1,X2,X3),a__isNatKind(X) -> isNatKind(X),a__U103(X1,X2,X3) -> U103(X1,X2,X3),a__isNatIListKind(X) -> isNatIListKind(X),a__U104(X1,X2,X3) -> U104(X1,X2,X3),a__U105(X1,X2) -> U105(X1,X2),a__isNat(X) -> isNat(X),a__U106(X) -> U106(X),a__isNatIList(X) -> isNatIList(X),a__U11(X1,X2) -> U11(X1,X2),a__U12(X1,X2) -> U12(X1,X2),a__U111(X1,X2,X3) -> U111(X1,X2,X3),a__U112(X1,X2,X3) -> U112(X1,X2,X3),a__U113(X1,X2,X3) -> U113(X1,X2,X3),a__U114(X1,X2) -> U114(X1,X2),a__length(X) -> length(X),a__U13(X) -> U13(X),a__isNatList(X) -> isNatList(X),a__U121(X1,X2) -> U121(X1,X2),a__U122(X) -> U122(X),a__U131(X1,X2,X3,X4) -> U131(X1,X2,X3,X4),a__U132(X1,X2,X3,X4) -> U132(X1,X2,X3,X4),a__U133(X1,X2,X3,X4) -> U133(X1,X2,X3,X4),a__U134(X1,X2,X3,X4) -> U134(X1,X2,X3,X4),a__U135(X1,X2,X3,X4) -> U135(X1,X2,X3,X4),a__U136(X1,X2,X3,X4) -> U136(X1,X2,X3,X4),a__take(X1,X2) -> take(X1,X2),a__U21(X1,X2) -> U21(X1,X2),a__U22(X1,X2) -> U22(X1,X2),a__U23(X) -> U23(X),a__U31(X1,X2) -> U31(X1,X2),a__U32(X1,X2) -> U32(X1,X2),a__U33(X) -> U33(X),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2,X3) -> U42(X1,X2,X3),a__U43(X1,X2,X3) -> U43(X1,X2,X3),a__U44(X1,X2,X3) -> U44(X1,X2,X3),a__U45(X1,X2) -> U45(X1,X2),a__U46(X) -> U46(X),a__U51(X1,X2) -> U51(X1,X2),a__U52(X) -> U52(X),a__U61(X1,X2) -> U61(X1,X2),a__U62(X) -> U62(X),a__U71(X) -> U71(X),a__U81(X) -> U81(X),a__U91(X1,X2,X3) -> U91(X1,X2,X3),a__U92(X1,X2,X3) -> U92(X1,X2,X3),a__U93(X1,X2,X3) -> U93(X1,X2,X3),a__U94(X1,X2,X3) -> U94(X1,X2,X3),a__U95(X1,X2) -> U95(X1,X2),a__U96(X) -> U96(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_complete_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U105",2),("U106",1),("U11",2),("U111",3),("U112",3),("U113",3),("U114",2),("U12",2),("U121",2),("U122",1),("U13",1),("U131",4),("U132",4),("U133",4),("U134",4),("U135",4),("U136",4),("U21",2),("U22",2),("U23",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",2),("U52",1),("U61",2),("U62",1),("U71",1),("U81",1),("U91",3),("U92",3),("U93",3),("U94",3),("U95",2),("U96",1),("active",1),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("take",2),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U101(tt,V1,V2)) -> mark(U102(isNatKind(V1),V1,V2)),active(U102(tt,V1,V2)) -> mark(U103(isNatIListKind(V2),V1,V2)),active(U103(tt,V1,V2)) -> mark(U104(isNatIListKind(V2),V1,V2)),active(U104(tt,V1,V2)) -> mark(U105(isNat(V1),V2)),active(U105(tt,V2)) -> mark(U106(isNatIList(V2))),active(U106(tt)) -> mark(tt),active(U11(tt,V1)) -> mark(U12(isNatIListKind(V1),V1)),active(U111(tt,L,N)) -> mark(U112(isNatIListKind(L),L,N)),active(U112(tt,L,N)) -> mark(U113(isNat(N),L,N)),active(U113(tt,L,N)) -> mark(U114(isNatKind(N),L)),active(U114(tt,L)) -> mark(s(length(L))),active(U12(tt,V1)) -> mark(U13(isNatList(V1))),active(U121(tt,IL)) -> mark(U122(isNatIListKind(IL))),active(U122(tt)) -> mark(nil),active(U13(tt)) -> mark(tt),active(U131(tt,IL,M,N)) -> mark(U132(isNatIListKind(IL),IL,M,N)),active(U132(tt,IL,M,N)) -> mark(U133(isNat(M),IL,M,N)),active(U133(tt,IL,M,N)) -> mark(U134(isNatKind(M),IL,M,N)),active(U134(tt,IL,M,N)) -> mark(U135(isNat(N),IL,M,N)),active(U135(tt,IL,M,N)) -> mark(U136(isNatKind(N),IL,M,N)),active(U136(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(U21(tt,V1)) -> mark(U22(isNatKind(V1),V1)),active(U22(tt,V1)) -> mark(U23(isNat(V1))),active(U23(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isNatIListKind(V),V)),active(U32(tt,V)) -> mark(U33(isNatList(V))),active(U33(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isNatKind(V1),V1,V2)),active(U42(tt,V1,V2)) -> mark(U43(isNatIListKind(V2),V1,V2)),active(U43(tt,V1,V2)) -> mark(U44(isNatIListKind(V2),V1,V2)),active(U44(tt,V1,V2)) -> mark(U45(isNat(V1),V2)),active(U45(tt,V2)) -> mark(U46(isNatIList(V2))),active(U46(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isNatIListKind(V2))),active(U52(tt)) -> mark(tt),active(U61(tt,V2)) -> mark(U62(isNatIListKind(V2))),active(U62(tt)) -> mark(tt),active(U71(tt)) -> mark(tt),active(U81(tt)) -> mark(tt),active(U91(tt,V1,V2)) -> mark(U92(isNatKind(V1),V1,V2)),active(U92(tt,V1,V2)) -> mark(U93(isNatIListKind(V2),V1,V2)),active(U93(tt,V1,V2)) -> mark(U94(isNatIListKind(V2),V1,V2)),active(U94(tt,V1,V2)) -> mark(U95(isNat(V1),V2)),active(U95(tt,V2)) -> mark(U96(isNatList(V2))),active(U96(tt)) -> mark(tt),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(isNatKind(V1),V1,V2)),active(isNatIListKind(nil)) -> mark(tt),active(isNatIListKind(zeros)) -> mark(tt),active(isNatIListKind(cons(V1,V2))) -> mark(U51(isNatKind(V1),V2)),active(isNatIListKind(take(V1,V2))) -> mark(U61(isNatKind(V1),V2)),active(isNatKind(0)) -> mark(tt),active(isNatKind(length(V1))) -> mark(U71(isNatIListKind(V1))),active(isNatKind(s(V1))) -> mark(U81(isNatKind(V1))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U91(isNatKind(V1),V1,V2)),active(isNatList(take(V1,V2))) -> mark(U101(isNatKind(V1),V1,V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U111(isNatList(L),L,N)),active(take(0,IL)) -> mark(U121(isNatIList(IL),IL)),active(take(s(M),cons(N,IL))) -> mark(U131(isNatIList(IL),IL,M,N)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U101(X1,X2,X3)) -> U101(active(X1),X2,X3),active(U102(X1,X2,X3)) -> U102(active(X1),X2,X3),active(U103(X1,X2,X3)) -> U103(active(X1),X2,X3),active(U104(X1,X2,X3)) -> U104(active(X1),X2,X3),active(U105(X1,X2)) -> U105(active(X1),X2),active(U106(X)) -> U106(active(X)),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X1,X2)) -> U12(active(X1),X2),active(U111(X1,X2,X3)) -> U111(active(X1),X2,X3),active(U112(X1,X2,X3)) -> U112(active(X1),X2,X3),active(U113(X1,X2,X3)) -> U113(active(X1),X2,X3),active(U114(X1,X2)) -> U114(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),active(U13(X)) -> U13(active(X)),active(U121(X1,X2)) -> U121(active(X1),X2),active(U122(X)) -> U122(active(X)),active(U131(X1,X2,X3,X4)) -> U131(active(X1),X2,X3,X4),active(U132(X1,X2,X3,X4)) -> U132(active(X1),X2,X3,X4),active(U133(X1,X2,X3,X4)) -> U133(active(X1),X2,X3,X4),active(U134(X1,X2,X3,X4)) -> U134(active(X1),X2,X3,X4),active(U135(X1,X2,X3,X4)) -> U135(active(X1),X2,X3,X4),active(U136(X1,X2,X3,X4)) -> U136(active(X1),X2,X3,X4),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X1,X2)) -> U22(active(X1),X2),active(U23(X)) -> U23(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U32(X1,X2)) -> U32(active(X1),X2),active(U33(X)) -> U33(active(X)),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2,X3)) -> U42(active(X1),X2,X3),active(U43(X1,X2,X3)) -> U43(active(X1),X2,X3),active(U44(X1,X2,X3)) -> U44(active(X1),X2,X3),active(U45(X1,X2)) -> U45(active(X1),X2),active(U46(X)) -> U46(active(X)),active(U51(X1,X2)) -> U51(active(X1),X2),active(U52(X)) -> U52(active(X)),active(U61(X1,X2)) -> U61(active(X1),X2),active(U62(X)) -> U62(active(X)),active(U71(X)) -> U71(active(X)),active(U81(X)) -> U81(active(X)),active(U91(X1,X2,X3)) -> U91(active(X1),X2,X3),active(U92(X1,X2,X3)) -> U92(active(X1),X2,X3),active(U93(X1,X2,X3)) -> U93(active(X1),X2,X3),active(U94(X1,X2,X3)) -> U94(active(X1),X2,X3),active(U95(X1,X2)) -> U95(active(X1),X2),active(U96(X)) -> U96(active(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),U101(mark(X1),X2,X3) -> mark(U101(X1,X2,X3)),U102(mark(X1),X2,X3) -> mark(U102(X1,X2,X3)),U103(mark(X1),X2,X3) -> mark(U103(X1,X2,X3)),U104(mark(X1),X2,X3) -> mark(U104(X1,X2,X3)),U105(mark(X1),X2) -> mark(U105(X1,X2)),U106(mark(X)) -> mark(U106(X)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X1),X2) -> mark(U12(X1,X2)),U111(mark(X1),X2,X3) -> mark(U111(X1,X2,X3)),U112(mark(X1),X2,X3) -> mark(U112(X1,X2,X3)),U113(mark(X1),X2,X3) -> mark(U113(X1,X2,X3)),U114(mark(X1),X2) -> mark(U114(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),U13(mark(X)) -> mark(U13(X)),U121(mark(X1),X2) -> mark(U121(X1,X2)),U122(mark(X)) -> mark(U122(X)),U131(mark(X1),X2,X3,X4) -> mark(U131(X1,X2,X3,X4)),U132(mark(X1),X2,X3,X4) -> mark(U132(X1,X2,X3,X4)),U133(mark(X1),X2,X3,X4) -> mark(U133(X1,X2,X3,X4)),U134(mark(X1),X2,X3,X4) -> mark(U134(X1,X2,X3,X4)),U135(mark(X1),X2,X3,X4) -> mark(U135(X1,X2,X3,X4)),U136(mark(X1),X2,X3,X4) -> mark(U136(X1,X2,X3,X4)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X1),X2) -> mark(U22(X1,X2)),U23(mark(X)) -> mark(U23(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U32(mark(X1),X2) -> mark(U32(X1,X2)),U33(mark(X)) -> mark(U33(X)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2,X3) -> mark(U42(X1,X2,X3)),U43(mark(X1),X2,X3) -> mark(U43(X1,X2,X3)),U44(mark(X1),X2,X3) -> mark(U44(X1,X2,X3)),U45(mark(X1),X2) -> mark(U45(X1,X2)),U46(mark(X)) -> mark(U46(X)),U51(mark(X1),X2) -> mark(U51(X1,X2)),U52(mark(X)) -> mark(U52(X)),U61(mark(X1),X2) -> mark(U61(X1,X2)),U62(mark(X)) -> mark(U62(X)),U71(mark(X)) -> mark(U71(X)),U81(mark(X)) -> mark(U81(X)),U91(mark(X1),X2,X3) -> mark(U91(X1,X2,X3)),U92(mark(X1),X2,X3) -> mark(U92(X1,X2,X3)),U93(mark(X1),X2,X3) -> mark(U93(X1,X2,X3)),U94(mark(X1),X2,X3) -> mark(U94(X1,X2,X3)),U95(mark(X1),X2) -> mark(U95(X1,X2)),U96(mark(X)) -> mark(U96(X)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U101(X1,X2,X3)) -> U101(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U102(X1,X2,X3)) -> U102(proper(X1),proper(X2),proper(X3)),proper(isNatKind(X)) -> isNatKind(proper(X)),proper(U103(X1,X2,X3)) -> U103(proper(X1),proper(X2),proper(X3)),proper(isNatIListKind(X)) -> isNatIListKind(proper(X)),proper(U104(X1,X2,X3)) -> U104(proper(X1),proper(X2),proper(X3)),proper(U105(X1,X2)) -> U105(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),proper(U106(X)) -> U106(proper(X)),proper(isNatIList(X)) -> isNatIList(proper(X)),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(U12(X1,X2)) -> U12(proper(X1),proper(X2)),proper(U111(X1,X2,X3)) -> U111(proper(X1),proper(X2),proper(X3)),proper(U112(X1,X2,X3)) -> U112(proper(X1),proper(X2),proper(X3)),proper(U113(X1,X2,X3)) -> U113(proper(X1),proper(X2),proper(X3)),proper(U114(X1,X2)) -> U114(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(U13(X)) -> U13(proper(X)),proper(isNatList(X)) -> isNatList(proper(X)),proper(U121(X1,X2)) -> U121(proper(X1),proper(X2)),proper(U122(X)) -> U122(proper(X)),proper(nil) -> ok(nil),proper(U131(X1,X2,X3,X4)) -> U131(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U132(X1,X2,X3,X4)) -> U132(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U133(X1,X2,X3,X4)) -> U133(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U134(X1,X2,X3,X4)) -> U134(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U135(X1,X2,X3,X4)) -> U135(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U136(X1,X2,X3,X4)) -> U136(proper(X1),proper(X2),proper(X3),proper(X4)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X1,X2)) -> U22(proper(X1),proper(X2)),proper(U23(X)) -> U23(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U32(X1,X2)) -> U32(proper(X1),proper(X2)),proper(U33(X)) -> U33(proper(X)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2,X3)) -> U42(proper(X1),proper(X2),proper(X3)),proper(U43(X1,X2,X3)) -> U43(proper(X1),proper(X2),proper(X3)),proper(U44(X1,X2,X3)) -> U44(proper(X1),proper(X2),proper(X3)),proper(U45(X1,X2)) -> U45(proper(X1),proper(X2)),proper(U46(X)) -> U46(proper(X)),proper(U51(X1,X2)) -> U51(proper(X1),proper(X2)),proper(U52(X)) -> U52(proper(X)),proper(U61(X1,X2)) -> U61(proper(X1),proper(X2)),proper(U62(X)) -> U62(proper(X)),proper(U71(X)) -> U71(proper(X)),proper(U81(X)) -> U81(proper(X)),proper(U91(X1,X2,X3)) -> U91(proper(X1),proper(X2),proper(X3)),proper(U92(X1,X2,X3)) -> U92(proper(X1),proper(X2),proper(X3)),proper(U93(X1,X2,X3)) -> U93(proper(X1),proper(X2),proper(X3)),proper(U94(X1,X2,X3)) -> U94(proper(X1),proper(X2),proper(X3)),proper(U95(X1,X2)) -> U95(proper(X1),proper(X2)),proper(U96(X)) -> U96(proper(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U101(ok(X1),ok(X2),ok(X3)) -> ok(U101(X1,X2,X3)),U102(ok(X1),ok(X2),ok(X3)) -> ok(U102(X1,X2,X3)),isNatKind(ok(X)) -> ok(isNatKind(X)),U103(ok(X1),ok(X2),ok(X3)) -> ok(U103(X1,X2,X3)),isNatIListKind(ok(X)) -> ok(isNatIListKind(X)),U104(ok(X1),ok(X2),ok(X3)) -> ok(U104(X1,X2,X3)),U105(ok(X1),ok(X2)) -> ok(U105(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),U106(ok(X)) -> ok(U106(X)),isNatIList(ok(X)) -> ok(isNatIList(X)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X1),ok(X2)) -> ok(U12(X1,X2)),U111(ok(X1),ok(X2),ok(X3)) -> ok(U111(X1,X2,X3)),U112(ok(X1),ok(X2),ok(X3)) -> ok(U112(X1,X2,X3)),U113(ok(X1),ok(X2),ok(X3)) -> ok(U113(X1,X2,X3)),U114(ok(X1),ok(X2)) -> ok(U114(X1,X2)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),U13(ok(X)) -> ok(U13(X)),isNatList(ok(X)) -> ok(isNatList(X)),U121(ok(X1),ok(X2)) -> ok(U121(X1,X2)),U122(ok(X)) -> ok(U122(X)),U131(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U131(X1,X2,X3,X4)),U132(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U132(X1,X2,X3,X4)),U133(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U133(X1,X2,X3,X4)),U134(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U134(X1,X2,X3,X4)),U135(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U135(X1,X2,X3,X4)),U136(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U136(X1,X2,X3,X4)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X1),ok(X2)) -> ok(U22(X1,X2)),U23(ok(X)) -> ok(U23(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U32(ok(X1),ok(X2)) -> ok(U32(X1,X2)),U33(ok(X)) -> ok(U33(X)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2),ok(X3)) -> ok(U42(X1,X2,X3)),U43(ok(X1),ok(X2),ok(X3)) -> ok(U43(X1,X2,X3)),U44(ok(X1),ok(X2),ok(X3)) -> ok(U44(X1,X2,X3)),U45(ok(X1),ok(X2)) -> ok(U45(X1,X2)),U46(ok(X)) -> ok(U46(X)),U51(ok(X1),ok(X2)) -> ok(U51(X1,X2)),U52(ok(X)) -> ok(U52(X)),U61(ok(X1),ok(X2)) -> ok(U61(X1,X2)),U62(ok(X)) -> ok(U62(X)),U71(ok(X)) -> ok(U71(X)),U81(ok(X)) -> ok(U81(X)),U91(ok(X1),ok(X2),ok(X3)) -> ok(U91(X1,X2,X3)),U92(ok(X1),ok(X2),ok(X3)) -> ok(U92(X1,X2,X3)),U93(ok(X1),ok(X2),ok(X3)) -> ok(U93(X1,X2,X3)),U94(ok(X1),ok(X2),ok(X3)) -> ok(U94(X1,X2,X3)),U95(ok(X1),ok(X2)) -> ok(U95(X1,X2)),U96(ok(X)) -> ok(U96(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_complete_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",2),("U22",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",3),("U62",2),("U63",1),("U71",2),("U81",1),("U91",4),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,V1)) -> mark(U12(isNatList(V1))),active(U12(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNat(V1))),active(U22(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isNatList(V))),active(U32(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isNat(V1),V2)),active(U42(tt,V2)) -> mark(U43(isNatIList(V2))),active(U43(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNat(V1),V2)),active(U52(tt,V2)) -> mark(U53(isNatList(V2))),active(U53(tt)) -> mark(tt),active(U61(tt,V1,V2)) -> mark(U62(isNat(V1),V2)),active(U62(tt,V2)) -> mark(U63(isNatIList(V2))),active(U63(tt)) -> mark(tt),active(U71(tt,L)) -> mark(s(length(L))),active(U81(tt)) -> mark(nil),active(U91(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(isNatIListKind(nil)) -> mark(tt),active(isNatIListKind(zeros)) -> mark(tt),active(isNatIListKind(cons(V1,V2))) -> mark(and(isNatKind(V1),isNatIListKind(V2))),active(isNatIListKind(take(V1,V2))) -> mark(and(isNatKind(V1),isNatIListKind(V2))),active(isNatKind(0)) -> mark(tt),active(isNatKind(length(V1))) -> mark(isNatIListKind(V1)),active(isNatKind(s(V1))) -> mark(isNatKind(V1)),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(isNatList(take(V1,V2))) -> mark(U61(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U71(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L)),active(take(0,IL)) -> mark(U81(and(isNatIList(IL),isNatIListKind(IL)))),active(take(s(M),cons(N,IL))) -> mark(U91(and(and(isNatIList(IL),isNatIListKind(IL)),and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))),IL,M,N)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U12(X)) -> active(U12(mark(X))),mark(isNatList(X)) -> active(isNatList(X)),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X)) -> active(U22(mark(X))),mark(isNat(X)) -> active(isNat(X)),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U32(X)) -> active(U32(mark(X))),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2)) -> active(U42(mark(X1),X2)),mark(U43(X)) -> active(U43(mark(X))),mark(isNatIList(X)) -> active(isNatIList(X)),mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3)),mark(U52(X1,X2)) -> active(U52(mark(X1),X2)),mark(U53(X)) -> active(U53(mark(X))),mark(U61(X1,X2,X3)) -> active(U61(mark(X1),X2,X3)),mark(U62(X1,X2)) -> active(U62(mark(X1),X2)),mark(U63(X)) -> active(U63(mark(X))),mark(U71(X1,X2)) -> active(U71(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(U81(X)) -> active(U81(mark(X))),mark(nil) -> active(nil),mark(U91(X1,X2,X3,X4)) -> active(U91(mark(X1),X2,X3,X4)),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isNatIListKind(X)) -> active(isNatIListKind(X)),mark(isNatKind(X)) -> active(isNatKind(X)),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X)) -> U12(X),U12(active(X)) -> U12(X),isNatList(mark(X)) -> isNatList(X),isNatList(active(X)) -> isNatList(X),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X)) -> U22(X),U22(active(X)) -> U22(X),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U32(mark(X)) -> U32(X),U32(active(X)) -> U32(X),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2) -> U42(X1,X2),U42(X1,mark(X2)) -> U42(X1,X2),U42(active(X1),X2) -> U42(X1,X2),U42(X1,active(X2)) -> U42(X1,X2),U43(mark(X)) -> U43(X),U43(active(X)) -> U43(X),isNatIList(mark(X)) -> isNatIList(X),isNatIList(active(X)) -> isNatIList(X),U51(mark(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,mark(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,mark(X3)) -> U51(X1,X2,X3),U51(active(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,active(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,active(X3)) -> U51(X1,X2,X3),U52(mark(X1),X2) -> U52(X1,X2),U52(X1,mark(X2)) -> U52(X1,X2),U52(active(X1),X2) -> U52(X1,X2),U52(X1,active(X2)) -> U52(X1,X2),U53(mark(X)) -> U53(X),U53(active(X)) -> U53(X),U61(mark(X1),X2,X3) -> U61(X1,X2,X3),U61(X1,mark(X2),X3) -> U61(X1,X2,X3),U61(X1,X2,mark(X3)) -> U61(X1,X2,X3),U61(active(X1),X2,X3) -> U61(X1,X2,X3),U61(X1,active(X2),X3) -> U61(X1,X2,X3),U61(X1,X2,active(X3)) -> U61(X1,X2,X3),U62(mark(X1),X2) -> U62(X1,X2),U62(X1,mark(X2)) -> U62(X1,X2),U62(active(X1),X2) -> U62(X1,X2),U62(X1,active(X2)) -> U62(X1,X2),U63(mark(X)) -> U63(X),U63(active(X)) -> U63(X),U71(mark(X1),X2) -> U71(X1,X2),U71(X1,mark(X2)) -> U71(X1,X2),U71(active(X1),X2) -> U71(X1,X2),U71(X1,active(X2)) -> U71(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X),U81(mark(X)) -> U81(X),U81(active(X)) -> U81(X),U91(mark(X1),X2,X3,X4) -> U91(X1,X2,X3,X4),U91(X1,mark(X2),X3,X4) -> U91(X1,X2,X3,X4),U91(X1,X2,mark(X3),X4) -> U91(X1,X2,X3,X4),U91(X1,X2,X3,mark(X4)) -> U91(X1,X2,X3,X4),U91(active(X1),X2,X3,X4) -> U91(X1,X2,X3,X4),U91(X1,active(X2),X3,X4) -> U91(X1,X2,X3,X4),U91(X1,X2,active(X3),X4) -> U91(X1,X2,X3,X4),U91(X1,X2,X3,active(X4)) -> U91(X1,X2,X3,X4),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNatIListKind(mark(X)) -> isNatIListKind(X),isNatIListKind(active(X)) -> isNatIListKind(X),isNatKind(mark(X)) -> isNatKind(X),isNatKind(active(X)) -> isNatKind(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_complete_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",2),("U22",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",3),("U62",2),("U63",1),("U71",2),("U81",1),("U91",4),("a__U11",2),("a__U12",1),("a__U21",2),("a__U22",1),("a__U31",2),("a__U32",1),("a__U41",3),("a__U42",2),("a__U43",1),("a__U51",3),("a__U52",2),("a__U53",1),("a__U61",3),("a__U62",2),("a__U63",1),("a__U71",2),("a__U81",1),("a__U91",4),("a__and",2),("a__isNat",1),("a__isNatIList",1),("a__isNatIListKind",1),("a__isNatKind",1),("a__isNatList",1),("a__length",1),("a__take",2),("a__zeros",0),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U11(tt,V1) -> a__U12(a__isNatList(V1)),a__U12(tt) -> tt,a__U21(tt,V1) -> a__U22(a__isNat(V1)),a__U22(tt) -> tt,a__U31(tt,V) -> a__U32(a__isNatList(V)),a__U32(tt) -> tt,a__U41(tt,V1,V2) -> a__U42(a__isNat(V1),V2),a__U42(tt,V2) -> a__U43(a__isNatIList(V2)),a__U43(tt) -> tt,a__U51(tt,V1,V2) -> a__U52(a__isNat(V1),V2),a__U52(tt,V2) -> a__U53(a__isNatList(V2)),a__U53(tt) -> tt,a__U61(tt,V1,V2) -> a__U62(a__isNat(V1),V2),a__U62(tt,V2) -> a__U63(a__isNatIList(V2)),a__U63(tt) -> tt,a__U71(tt,L) -> s(a__length(mark(L))),a__U81(tt) -> nil,a__U91(tt,IL,M,N) -> cons(mark(N),take(M,IL)),a__and(tt,X) -> mark(X),a__isNat(0) -> tt,a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1),V1),a__isNat(s(V1)) -> a__U21(a__isNatKind(V1),V1),a__isNatIList(V) -> a__U31(a__isNatIListKind(V),V),a__isNatIList(zeros) -> tt,a__isNatIList(cons(V1,V2)) -> a__U41(a__and(a__isNatKind(V1),isNatIListKind(V2)),V1,V2),a__isNatIListKind(nil) -> tt,a__isNatIListKind(zeros) -> tt,a__isNatIListKind(cons(V1,V2)) -> a__and(a__isNatKind(V1),isNatIListKind(V2)),a__isNatIListKind(take(V1,V2)) -> a__and(a__isNatKind(V1),isNatIListKind(V2)),a__isNatKind(0) -> tt,a__isNatKind(length(V1)) -> a__isNatIListKind(V1),a__isNatKind(s(V1)) -> a__isNatKind(V1),a__isNatList(nil) -> tt,a__isNatList(cons(V1,V2)) -> a__U51(a__and(a__isNatKind(V1),isNatIListKind(V2)),V1,V2),a__isNatList(take(V1,V2)) -> a__U61(a__and(a__isNatKind(V1),isNatIListKind(V2)),V1,V2),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U71(a__and(a__and(a__isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L),a__take(0,IL) -> a__U81(a__and(a__isNatIList(IL),isNatIListKind(IL))),a__take(s(M),cons(N,IL)) -> a__U91(a__and(a__and(a__isNatIList(IL),isNatIListKind(IL)),and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))),IL,M,N),mark(zeros) -> a__zeros,mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X)) -> a__U12(mark(X)),mark(isNatList(X)) -> a__isNatList(X),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X)) -> a__U22(mark(X)),mark(isNat(X)) -> a__isNat(X),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U32(X)) -> a__U32(mark(X)),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2)) -> a__U42(mark(X1),X2),mark(U43(X)) -> a__U43(mark(X)),mark(isNatIList(X)) -> a__isNatIList(X),mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3),mark(U52(X1,X2)) -> a__U52(mark(X1),X2),mark(U53(X)) -> a__U53(mark(X)),mark(U61(X1,X2,X3)) -> a__U61(mark(X1),X2,X3),mark(U62(X1,X2)) -> a__U62(mark(X1),X2),mark(U63(X)) -> a__U63(mark(X)),mark(U71(X1,X2)) -> a__U71(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(U81(X)) -> a__U81(mark(X)),mark(U91(X1,X2,X3,X4)) -> a__U91(mark(X1),X2,X3,X4),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNatIListKind(X)) -> a__isNatIListKind(X),mark(isNatKind(X)) -> a__isNatKind(X),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U11(X1,X2) -> U11(X1,X2),a__U12(X) -> U12(X),a__isNatList(X) -> isNatList(X),a__U21(X1,X2) -> U21(X1,X2),a__U22(X) -> U22(X),a__isNat(X) -> isNat(X),a__U31(X1,X2) -> U31(X1,X2),a__U32(X) -> U32(X),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2) -> U42(X1,X2),a__U43(X) -> U43(X),a__isNatIList(X) -> isNatIList(X),a__U51(X1,X2,X3) -> U51(X1,X2,X3),a__U52(X1,X2) -> U52(X1,X2),a__U53(X) -> U53(X),a__U61(X1,X2,X3) -> U61(X1,X2,X3),a__U62(X1,X2) -> U62(X1,X2),a__U63(X) -> U63(X),a__U71(X1,X2) -> U71(X1,X2),a__length(X) -> length(X),a__U81(X) -> U81(X),a__U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4),a__take(X1,X2) -> take(X1,X2),a__and(X1,X2) -> and(X1,X2),a__isNatIListKind(X) -> isNatIListKind(X),a__isNatKind(X) -> isNatKind(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\OvConsOS_complete_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",2),("U22",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",3),("U62",2),("U63",1),("U71",2),("U81",1),("U91",4),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("take",2),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["IL","L","M","N","V","V1","V2","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,V1)) -> mark(U12(isNatList(V1))),active(U12(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNat(V1))),active(U22(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isNatList(V))),active(U32(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isNat(V1),V2)),active(U42(tt,V2)) -> mark(U43(isNatIList(V2))),active(U43(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNat(V1),V2)),active(U52(tt,V2)) -> mark(U53(isNatList(V2))),active(U53(tt)) -> mark(tt),active(U61(tt,V1,V2)) -> mark(U62(isNat(V1),V2)),active(U62(tt,V2)) -> mark(U63(isNatIList(V2))),active(U63(tt)) -> mark(tt),active(U71(tt,L)) -> mark(s(length(L))),active(U81(tt)) -> mark(nil),active(U91(tt,IL,M,N)) -> mark(cons(N,take(M,IL))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(isNatIListKind(nil)) -> mark(tt),active(isNatIListKind(zeros)) -> mark(tt),active(isNatIListKind(cons(V1,V2))) -> mark(and(isNatKind(V1),isNatIListKind(V2))),active(isNatIListKind(take(V1,V2))) -> mark(and(isNatKind(V1),isNatIListKind(V2))),active(isNatKind(0)) -> mark(tt),active(isNatKind(length(V1))) -> mark(isNatIListKind(V1)),active(isNatKind(s(V1))) -> mark(isNatKind(V1)),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(isNatList(take(V1,V2))) -> mark(U61(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U71(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L)),active(take(0,IL)) -> mark(U81(and(isNatIList(IL),isNatIListKind(IL)))),active(take(s(M),cons(N,IL))) -> mark(U91(and(and(isNatIList(IL),isNatIListKind(IL)),and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))),IL,M,N)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X)) -> U12(active(X)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X)) -> U22(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U32(X)) -> U32(active(X)),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2)) -> U42(active(X1),X2),active(U43(X)) -> U43(active(X)),active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3),active(U52(X1,X2)) -> U52(active(X1),X2),active(U53(X)) -> U53(active(X)),active(U61(X1,X2,X3)) -> U61(active(X1),X2,X3),active(U62(X1,X2)) -> U62(active(X1),X2),active(U63(X)) -> U63(active(X)),active(U71(X1,X2)) -> U71(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),active(U81(X)) -> U81(active(X)),active(U91(X1,X2,X3,X4)) -> U91(active(X1),X2,X3,X4),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(and(X1,X2)) -> and(active(X1),X2),cons(mark(X1),X2) -> mark(cons(X1,X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X)) -> mark(U12(X)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X)) -> mark(U22(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U32(mark(X)) -> mark(U32(X)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2) -> mark(U42(X1,X2)),U43(mark(X)) -> mark(U43(X)),U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3)),U52(mark(X1),X2) -> mark(U52(X1,X2)),U53(mark(X)) -> mark(U53(X)),U61(mark(X1),X2,X3) -> mark(U61(X1,X2,X3)),U62(mark(X1),X2) -> mark(U62(X1,X2)),U63(mark(X)) -> mark(U63(X)),U71(mark(X1),X2) -> mark(U71(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),U81(mark(X)) -> mark(U81(X)),U91(mark(X1),X2,X3,X4) -> mark(U91(X1,X2,X3,X4)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U12(X)) -> U12(proper(X)),proper(isNatList(X)) -> isNatList(proper(X)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X)) -> U22(proper(X)),proper(isNat(X)) -> isNat(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U32(X)) -> U32(proper(X)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2)) -> U42(proper(X1),proper(X2)),proper(U43(X)) -> U43(proper(X)),proper(isNatIList(X)) -> isNatIList(proper(X)),proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3)),proper(U52(X1,X2)) -> U52(proper(X1),proper(X2)),proper(U53(X)) -> U53(proper(X)),proper(U61(X1,X2,X3)) -> U61(proper(X1),proper(X2),proper(X3)),proper(U62(X1,X2)) -> U62(proper(X1),proper(X2)),proper(U63(X)) -> U63(proper(X)),proper(U71(X1,X2)) -> U71(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(U81(X)) -> U81(proper(X)),proper(nil) -> ok(nil),proper(U91(X1,X2,X3,X4)) -> U91(proper(X1),proper(X2),proper(X3),proper(X4)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isNatIListKind(X)) -> isNatIListKind(proper(X)),proper(isNatKind(X)) -> isNatKind(proper(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X)) -> ok(U12(X)),isNatList(ok(X)) -> ok(isNatList(X)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X)) -> ok(U22(X)),isNat(ok(X)) -> ok(isNat(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U32(ok(X)) -> ok(U32(X)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2)) -> ok(U42(X1,X2)),U43(ok(X)) -> ok(U43(X)),isNatIList(ok(X)) -> ok(isNatIList(X)),U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3)),U52(ok(X1),ok(X2)) -> ok(U52(X1,X2)),U53(ok(X)) -> ok(U53(X)),U61(ok(X1),ok(X2),ok(X3)) -> ok(U61(X1,X2,X3)),U62(ok(X1),ok(X2)) -> ok(U62(X1,X2)),U63(ok(X)) -> ok(U63(X)),U71(ok(X1),ok(X2)) -> ok(U71(X1,X2)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),U81(ok(X)) -> ok(U81(X)),U91(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U91(X1,X2,X3,X4)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNatIListKind(ok(X)) -> ok(isNatIListKind(X)),isNatKind(ok(X)) -> ok(isNatKind(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nosorts_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U21",3),("U22",3),("active",1),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,M,N)) -> mark(U12(tt,M,N)),active(U12(tt,M,N)) -> mark(s(plus(N,M))),active(U21(tt,M,N)) -> mark(U22(tt,M,N)),active(U22(tt,M,N)) -> mark(plus(x(N,M),N)),active(plus(N,0)) -> mark(N),active(plus(N,s(M))) -> mark(U11(tt,M,N)),active(x(N,0)) -> mark(0),active(x(N,s(M))) -> mark(U21(tt,M,N)),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U12(X1,X2,X3)) -> active(U12(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3)),mark(U22(X1,X2,X3)) -> active(U22(mark(X1),X2,X3)),mark(x(X1,X2)) -> active(x(mark(X1),mark(X2))),mark(0) -> active(0),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),U12(mark(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,mark(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,mark(X3)) -> U12(X1,X2,X3),U12(active(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,active(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,active(X3)) -> U12(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),U21(mark(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,mark(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,mark(X3)) -> U21(X1,X2,X3),U21(active(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,active(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,active(X3)) -> U21(X1,X2,X3),U22(mark(X1),X2,X3) -> U22(X1,X2,X3),U22(X1,mark(X2),X3) -> U22(X1,X2,X3),U22(X1,X2,mark(X3)) -> U22(X1,X2,X3),U22(active(X1),X2,X3) -> U22(X1,X2,X3),U22(X1,active(X2),X3) -> U22(X1,X2,X3),U22(X1,X2,active(X3)) -> U22(X1,X2,X3),x(mark(X1),X2) -> x(X1,X2),x(X1,mark(X2)) -> x(X1,X2),x(active(X1),X2) -> x(X1,X2),x(X1,active(X2)) -> x(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nosorts_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U21",3),("U22",3),("a__U11",3),("a__U12",3),("a__U21",3),("a__U22",3),("a__plus",2),("a__x",2),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U11(tt,M,N) -> a__U12(tt,M,N),a__U12(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__U21(tt,M,N) -> a__U22(tt,M,N),a__U22(tt,M,N) -> a__plus(a__x(mark(N),mark(M)),mark(N)),a__plus(N,0) -> mark(N),a__plus(N,s(M)) -> a__U11(tt,M,N),a__x(N,0) -> 0,a__x(N,s(M)) -> a__U21(tt,M,N),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(U12(X1,X2,X3)) -> a__U12(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3),mark(U22(X1,X2,X3)) -> a__U22(mark(X1),X2,X3),mark(x(X1,X2)) -> a__x(mark(X1),mark(X2)),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__U12(X1,X2,X3) -> U12(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2),a__U21(X1,X2,X3) -> U21(X1,X2,X3),a__U22(X1,X2,X3) -> U22(X1,X2,X3),a__x(X1,X2) -> x(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nosorts_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U21",3),("U22",3),("active",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,M,N)) -> mark(U12(tt,M,N)),active(U12(tt,M,N)) -> mark(s(plus(N,M))),active(U21(tt,M,N)) -> mark(U22(tt,M,N)),active(U22(tt,M,N)) -> mark(plus(x(N,M),N)),active(plus(N,0)) -> mark(N),active(plus(N,s(M))) -> mark(U11(tt,M,N)),active(x(N,0)) -> mark(0),active(x(N,s(M))) -> mark(U21(tt,M,N)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(U12(X1,X2,X3)) -> U12(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(U21(X1,X2,X3)) -> U21(active(X1),X2,X3),active(U22(X1,X2,X3)) -> U22(active(X1),X2,X3),active(x(X1,X2)) -> x(active(X1),X2),active(x(X1,X2)) -> x(X1,active(X2)),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),U12(mark(X1),X2,X3) -> mark(U12(X1,X2,X3)),s(mark(X)) -> mark(s(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),U21(mark(X1),X2,X3) -> mark(U21(X1,X2,X3)),U22(mark(X1),X2,X3) -> mark(U22(X1,X2,X3)),x(mark(X1),X2) -> mark(x(X1,X2)),x(X1,mark(X2)) -> mark(x(X1,X2)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U12(X1,X2,X3)) -> U12(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(U21(X1,X2,X3)) -> U21(proper(X1),proper(X2),proper(X3)),proper(U22(X1,X2,X3)) -> U22(proper(X1),proper(X2),proper(X3)),proper(x(X1,X2)) -> x(proper(X1),proper(X2)),proper(0) -> ok(0),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),U12(ok(X1),ok(X2),ok(X3)) -> ok(U12(X1,X2,X3)),s(ok(X)) -> ok(s(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),U21(ok(X1),ok(X2),ok(X3)) -> ok(U21(X1,X2,X3)),U22(ok(X1),ok(X2),ok(X3)) -> ok(U22(X1,X2,X3)),x(ok(X1),ok(X2)) -> ok(x(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nosorts_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","X","X1","X2"], trsRMap = [], trsRules = [active(and(tt,X)) -> mark(X),active(plus(N,0)) -> mark(N),active(plus(N,s(M))) -> mark(s(plus(N,M))),active(x(N,0)) -> mark(0),active(x(N,s(M))) -> mark(plus(x(N,M),N)),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(tt) -> active(tt),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(0) -> active(0),mark(s(X)) -> active(s(mark(X))),mark(x(X1,X2)) -> active(x(mark(X1),mark(X2))),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),x(mark(X1),X2) -> x(X1,X2),x(X1,mark(X2)) -> x(X1,X2),x(active(X1),X2) -> x(X1,X2),x(X1,active(X2)) -> x(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nosorts_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__and",2),("a__plus",2),("a__x",2),("and",2),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","X","X1","X2"], trsRMap = [], trsRules = [a__and(tt,X) -> mark(X),a__plus(N,0) -> mark(N),a__plus(N,s(M)) -> s(a__plus(mark(N),mark(M))),a__x(N,0) -> 0,a__x(N,s(M)) -> a__plus(a__x(mark(N),mark(M)),mark(N)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(x(X1,X2)) -> a__x(mark(X1),mark(X2)),mark(tt) -> tt,mark(0) -> 0,mark(s(X)) -> s(mark(X)),a__and(X1,X2) -> and(X1,X2),a__plus(X1,X2) -> plus(X1,X2),a__x(X1,X2) -> x(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nosorts_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","X","X1","X2"], trsRMap = [], trsRules = [active(and(tt,X)) -> mark(X),active(plus(N,0)) -> mark(N),active(plus(N,s(M))) -> mark(s(plus(N,M))),active(x(N,0)) -> mark(0),active(x(N,s(M))) -> mark(plus(x(N,M),N)),active(and(X1,X2)) -> and(active(X1),X2),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(s(X)) -> s(active(X)),active(x(X1,X2)) -> x(active(X1),X2),active(x(X1,X2)) -> x(X1,active(X2)),and(mark(X1),X2) -> mark(and(X1,X2)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),s(mark(X)) -> mark(s(X)),x(mark(X1),X2) -> mark(x(X1,X2)),x(X1,mark(X2)) -> mark(x(X1,X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(x(X1,X2)) -> x(proper(X1),proper(X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),s(ok(X)) -> ok(s(X)),x(ok(X1),ok(X2)) -> ok(x(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nokinds_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",1),("U31",2),("U32",1),("U41",2),("U51",3),("U52",3),("U61",1),("U71",3),("U72",3),("active",1),("isNat",1),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V2)) -> mark(U12(isNat(V2))),active(U12(tt)) -> mark(tt),active(U21(tt)) -> mark(tt),active(U31(tt,V2)) -> mark(U32(isNat(V2))),active(U32(tt)) -> mark(tt),active(U41(tt,N)) -> mark(N),active(U51(tt,M,N)) -> mark(U52(isNat(N),M,N)),active(U52(tt,M,N)) -> mark(s(plus(N,M))),active(U61(tt)) -> mark(0),active(U71(tt,M,N)) -> mark(U72(isNat(N),M,N)),active(U72(tt,M,N)) -> mark(plus(x(N,M),N)),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(isNat(V1),V2)),active(isNat(s(V1))) -> mark(U21(isNat(V1))),active(isNat(x(V1,V2))) -> mark(U31(isNat(V1),V2)),active(plus(N,0)) -> mark(U41(isNat(N),N)),active(plus(N,s(M))) -> mark(U51(isNat(M),M,N)),active(x(N,0)) -> mark(U61(isNat(N))),active(x(N,s(M))) -> mark(U71(isNat(M),M,N)),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U12(X)) -> active(U12(mark(X))),mark(isNat(X)) -> active(isNat(X)),mark(U21(X)) -> active(U21(mark(X))),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U32(X)) -> active(U32(mark(X))),mark(U41(X1,X2)) -> active(U41(mark(X1),X2)),mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3)),mark(U52(X1,X2,X3)) -> active(U52(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(U61(X)) -> active(U61(mark(X))),mark(0) -> active(0),mark(U71(X1,X2,X3)) -> active(U71(mark(X1),X2,X3)),mark(U72(X1,X2,X3)) -> active(U72(mark(X1),X2,X3)),mark(x(X1,X2)) -> active(x(mark(X1),mark(X2))),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X)) -> U12(X),U12(active(X)) -> U12(X),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U21(mark(X)) -> U21(X),U21(active(X)) -> U21(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U32(mark(X)) -> U32(X),U32(active(X)) -> U32(X),U41(mark(X1),X2) -> U41(X1,X2),U41(X1,mark(X2)) -> U41(X1,X2),U41(active(X1),X2) -> U41(X1,X2),U41(X1,active(X2)) -> U41(X1,X2),U51(mark(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,mark(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,mark(X3)) -> U51(X1,X2,X3),U51(active(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,active(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,active(X3)) -> U51(X1,X2,X3),U52(mark(X1),X2,X3) -> U52(X1,X2,X3),U52(X1,mark(X2),X3) -> U52(X1,X2,X3),U52(X1,X2,mark(X3)) -> U52(X1,X2,X3),U52(active(X1),X2,X3) -> U52(X1,X2,X3),U52(X1,active(X2),X3) -> U52(X1,X2,X3),U52(X1,X2,active(X3)) -> U52(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),U61(mark(X)) -> U61(X),U61(active(X)) -> U61(X),U71(mark(X1),X2,X3) -> U71(X1,X2,X3),U71(X1,mark(X2),X3) -> U71(X1,X2,X3),U71(X1,X2,mark(X3)) -> U71(X1,X2,X3),U71(active(X1),X2,X3) -> U71(X1,X2,X3),U71(X1,active(X2),X3) -> U71(X1,X2,X3),U71(X1,X2,active(X3)) -> U71(X1,X2,X3),U72(mark(X1),X2,X3) -> U72(X1,X2,X3),U72(X1,mark(X2),X3) -> U72(X1,X2,X3),U72(X1,X2,mark(X3)) -> U72(X1,X2,X3),U72(active(X1),X2,X3) -> U72(X1,X2,X3),U72(X1,active(X2),X3) -> U72(X1,X2,X3),U72(X1,X2,active(X3)) -> U72(X1,X2,X3),x(mark(X1),X2) -> x(X1,X2),x(X1,mark(X2)) -> x(X1,X2),x(active(X1),X2) -> x(X1,X2),x(X1,active(X2)) -> x(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nokinds_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",1),("U31",2),("U32",1),("U41",2),("U51",3),("U52",3),("U61",1),("U71",3),("U72",3),("a__U11",2),("a__U12",1),("a__U21",1),("a__U31",2),("a__U32",1),("a__U41",2),("a__U51",3),("a__U52",3),("a__U61",1),("a__U71",3),("a__U72",3),("a__isNat",1),("a__plus",2),("a__x",2),("isNat",1),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U11(tt,V2) -> a__U12(a__isNat(V2)),a__U12(tt) -> tt,a__U21(tt) -> tt,a__U31(tt,V2) -> a__U32(a__isNat(V2)),a__U32(tt) -> tt,a__U41(tt,N) -> mark(N),a__U51(tt,M,N) -> a__U52(a__isNat(N),M,N),a__U52(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__U61(tt) -> 0,a__U71(tt,M,N) -> a__U72(a__isNat(N),M,N),a__U72(tt,M,N) -> a__plus(a__x(mark(N),mark(M)),mark(N)),a__isNat(0) -> tt,a__isNat(plus(V1,V2)) -> a__U11(a__isNat(V1),V2),a__isNat(s(V1)) -> a__U21(a__isNat(V1)),a__isNat(x(V1,V2)) -> a__U31(a__isNat(V1),V2),a__plus(N,0) -> a__U41(a__isNat(N),N),a__plus(N,s(M)) -> a__U51(a__isNat(M),M,N),a__x(N,0) -> a__U61(a__isNat(N)),a__x(N,s(M)) -> a__U71(a__isNat(M),M,N),mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X)) -> a__U12(mark(X)),mark(isNat(X)) -> a__isNat(X),mark(U21(X)) -> a__U21(mark(X)),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U32(X)) -> a__U32(mark(X)),mark(U41(X1,X2)) -> a__U41(mark(X1),X2),mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3),mark(U52(X1,X2,X3)) -> a__U52(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(U61(X)) -> a__U61(mark(X)),mark(U71(X1,X2,X3)) -> a__U71(mark(X1),X2,X3),mark(U72(X1,X2,X3)) -> a__U72(mark(X1),X2,X3),mark(x(X1,X2)) -> a__x(mark(X1),mark(X2)),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U11(X1,X2) -> U11(X1,X2),a__U12(X) -> U12(X),a__isNat(X) -> isNat(X),a__U21(X) -> U21(X),a__U31(X1,X2) -> U31(X1,X2),a__U32(X) -> U32(X),a__U41(X1,X2) -> U41(X1,X2),a__U51(X1,X2,X3) -> U51(X1,X2,X3),a__U52(X1,X2,X3) -> U52(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2),a__U61(X) -> U61(X),a__U71(X1,X2,X3) -> U71(X1,X2,X3),a__U72(X1,X2,X3) -> U72(X1,X2,X3),a__x(X1,X2) -> x(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nokinds_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",1),("U31",2),("U32",1),("U41",2),("U51",3),("U52",3),("U61",1),("U71",3),("U72",3),("active",1),("isNat",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V2)) -> mark(U12(isNat(V2))),active(U12(tt)) -> mark(tt),active(U21(tt)) -> mark(tt),active(U31(tt,V2)) -> mark(U32(isNat(V2))),active(U32(tt)) -> mark(tt),active(U41(tt,N)) -> mark(N),active(U51(tt,M,N)) -> mark(U52(isNat(N),M,N)),active(U52(tt,M,N)) -> mark(s(plus(N,M))),active(U61(tt)) -> mark(0),active(U71(tt,M,N)) -> mark(U72(isNat(N),M,N)),active(U72(tt,M,N)) -> mark(plus(x(N,M),N)),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(isNat(V1),V2)),active(isNat(s(V1))) -> mark(U21(isNat(V1))),active(isNat(x(V1,V2))) -> mark(U31(isNat(V1),V2)),active(plus(N,0)) -> mark(U41(isNat(N),N)),active(plus(N,s(M))) -> mark(U51(isNat(M),M,N)),active(x(N,0)) -> mark(U61(isNat(N))),active(x(N,s(M))) -> mark(U71(isNat(M),M,N)),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X)) -> U12(active(X)),active(U21(X)) -> U21(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U32(X)) -> U32(active(X)),active(U41(X1,X2)) -> U41(active(X1),X2),active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3),active(U52(X1,X2,X3)) -> U52(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(U61(X)) -> U61(active(X)),active(U71(X1,X2,X3)) -> U71(active(X1),X2,X3),active(U72(X1,X2,X3)) -> U72(active(X1),X2,X3),active(x(X1,X2)) -> x(active(X1),X2),active(x(X1,X2)) -> x(X1,active(X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X)) -> mark(U12(X)),U21(mark(X)) -> mark(U21(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U32(mark(X)) -> mark(U32(X)),U41(mark(X1),X2) -> mark(U41(X1,X2)),U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3)),U52(mark(X1),X2,X3) -> mark(U52(X1,X2,X3)),s(mark(X)) -> mark(s(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),U61(mark(X)) -> mark(U61(X)),U71(mark(X1),X2,X3) -> mark(U71(X1,X2,X3)),U72(mark(X1),X2,X3) -> mark(U72(X1,X2,X3)),x(mark(X1),X2) -> mark(x(X1,X2)),x(X1,mark(X2)) -> mark(x(X1,X2)),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U12(X)) -> U12(proper(X)),proper(isNat(X)) -> isNat(proper(X)),proper(U21(X)) -> U21(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U32(X)) -> U32(proper(X)),proper(U41(X1,X2)) -> U41(proper(X1),proper(X2)),proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3)),proper(U52(X1,X2,X3)) -> U52(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(U61(X)) -> U61(proper(X)),proper(0) -> ok(0),proper(U71(X1,X2,X3)) -> U71(proper(X1),proper(X2),proper(X3)),proper(U72(X1,X2,X3)) -> U72(proper(X1),proper(X2),proper(X3)),proper(x(X1,X2)) -> x(proper(X1),proper(X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X)) -> ok(U12(X)),isNat(ok(X)) -> ok(isNat(X)),U21(ok(X)) -> ok(U21(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U32(ok(X)) -> ok(U32(X)),U41(ok(X1),ok(X2)) -> ok(U41(X1,X2)),U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3)),U52(ok(X1),ok(X2),ok(X3)) -> ok(U52(X1,X2,X3)),s(ok(X)) -> ok(s(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),U61(ok(X)) -> ok(U61(X)),U71(ok(X1),ok(X2),ok(X3)) -> ok(U71(X1,X2,X3)),U72(ok(X1),ok(X2),ok(X3)) -> ok(U72(X1,X2,X3)),x(ok(X1),ok(X2)) -> ok(x(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nokinds_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",3),("U31",1),("U41",3),("active",1),("and",2),("isNat",1),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,N)) -> mark(N),active(U21(tt,M,N)) -> mark(s(plus(N,M))),active(U31(tt)) -> mark(0),active(U41(tt,M,N)) -> mark(plus(x(N,M),N)),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(and(isNat(V1),isNat(V2))),active(isNat(s(V1))) -> mark(isNat(V1)),active(isNat(x(V1,V2))) -> mark(and(isNat(V1),isNat(V2))),active(plus(N,0)) -> mark(U11(isNat(N),N)),active(plus(N,s(M))) -> mark(U21(and(isNat(M),isNat(N)),M,N)),active(x(N,0)) -> mark(U31(isNat(N))),active(x(N,s(M))) -> mark(U41(and(isNat(M),isNat(N)),M,N)),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(U31(X)) -> active(U31(mark(X))),mark(0) -> active(0),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(x(X1,X2)) -> active(x(mark(X1),mark(X2))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U21(mark(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,mark(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,mark(X3)) -> U21(X1,X2,X3),U21(active(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,active(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,active(X3)) -> U21(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),U31(mark(X)) -> U31(X),U31(active(X)) -> U31(X),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),x(mark(X1),X2) -> x(X1,X2),x(X1,mark(X2)) -> x(X1,X2),x(active(X1),X2) -> x(X1,X2),x(X1,active(X2)) -> x(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nokinds_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",3),("U31",1),("U41",3),("a__U11",2),("a__U21",3),("a__U31",1),("a__U41",3),("a__and",2),("a__isNat",1),("a__plus",2),("a__x",2),("and",2),("isNat",1),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U11(tt,N) -> mark(N),a__U21(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__U31(tt) -> 0,a__U41(tt,M,N) -> a__plus(a__x(mark(N),mark(M)),mark(N)),a__and(tt,X) -> mark(X),a__isNat(0) -> tt,a__isNat(plus(V1,V2)) -> a__and(a__isNat(V1),isNat(V2)),a__isNat(s(V1)) -> a__isNat(V1),a__isNat(x(V1,V2)) -> a__and(a__isNat(V1),isNat(V2)),a__plus(N,0) -> a__U11(a__isNat(N),N),a__plus(N,s(M)) -> a__U21(a__and(a__isNat(M),isNat(N)),M,N),a__x(N,0) -> a__U31(a__isNat(N)),a__x(N,s(M)) -> a__U41(a__and(a__isNat(M),isNat(N)),M,N),mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(U31(X)) -> a__U31(mark(X)),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(x(X1,X2)) -> a__x(mark(X1),mark(X2)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U11(X1,X2) -> U11(X1,X2),a__U21(X1,X2,X3) -> U21(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2),a__U31(X) -> U31(X),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__x(X1,X2) -> x(X1,X2),a__and(X1,X2) -> and(X1,X2),a__isNat(X) -> isNat(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_nokinds_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U21",3),("U31",1),("U41",3),("active",1),("and",2),("isNat",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,N)) -> mark(N),active(U21(tt,M,N)) -> mark(s(plus(N,M))),active(U31(tt)) -> mark(0),active(U41(tt,M,N)) -> mark(plus(x(N,M),N)),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(and(isNat(V1),isNat(V2))),active(isNat(s(V1))) -> mark(isNat(V1)),active(isNat(x(V1,V2))) -> mark(and(isNat(V1),isNat(V2))),active(plus(N,0)) -> mark(U11(isNat(N),N)),active(plus(N,s(M))) -> mark(U21(and(isNat(M),isNat(N)),M,N)),active(x(N,0)) -> mark(U31(isNat(N))),active(x(N,s(M))) -> mark(U41(and(isNat(M),isNat(N)),M,N)),active(U11(X1,X2)) -> U11(active(X1),X2),active(U21(X1,X2,X3)) -> U21(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(U31(X)) -> U31(active(X)),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(x(X1,X2)) -> x(active(X1),X2),active(x(X1,X2)) -> x(X1,active(X2)),active(and(X1,X2)) -> and(active(X1),X2),U11(mark(X1),X2) -> mark(U11(X1,X2)),U21(mark(X1),X2,X3) -> mark(U21(X1,X2,X3)),s(mark(X)) -> mark(s(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),U31(mark(X)) -> mark(U31(X)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),x(mark(X1),X2) -> mark(x(X1,X2)),x(X1,mark(X2)) -> mark(x(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U21(X1,X2,X3)) -> U21(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(U31(X)) -> U31(proper(X)),proper(0) -> ok(0),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(x(X1,X2)) -> x(proper(X1),proper(X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U21(ok(X1),ok(X2),ok(X3)) -> ok(U21(X1,X2,X3)),s(ok(X)) -> ok(s(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),U31(ok(X)) -> ok(U31(X)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),x(ok(X1),ok(X2)) -> ok(x(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_complete_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U11",3),("U12",3),("U13",3),("U14",3),("U15",2),("U16",1),("U21",2),("U22",2),("U23",1),("U31",3),("U32",3),("U33",3),("U34",3),("U35",2),("U36",1),("U41",2),("U42",1),("U51",1),("U61",2),("U62",1),("U71",2),("U72",2),("U81",3),("U82",3),("U83",3),("U84",3),("U91",2),("U92",1),("active",1),("isNat",1),("isNatKind",1),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U101(tt,M,N)) -> mark(U102(isNatKind(M),M,N)),active(U102(tt,M,N)) -> mark(U103(isNat(N),M,N)),active(U103(tt,M,N)) -> mark(U104(isNatKind(N),M,N)),active(U104(tt,M,N)) -> mark(plus(x(N,M),N)),active(U11(tt,V1,V2)) -> mark(U12(isNatKind(V1),V1,V2)),active(U12(tt,V1,V2)) -> mark(U13(isNatKind(V2),V1,V2)),active(U13(tt,V1,V2)) -> mark(U14(isNatKind(V2),V1,V2)),active(U14(tt,V1,V2)) -> mark(U15(isNat(V1),V2)),active(U15(tt,V2)) -> mark(U16(isNat(V2))),active(U16(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNatKind(V1),V1)),active(U22(tt,V1)) -> mark(U23(isNat(V1))),active(U23(tt)) -> mark(tt),active(U31(tt,V1,V2)) -> mark(U32(isNatKind(V1),V1,V2)),active(U32(tt,V1,V2)) -> mark(U33(isNatKind(V2),V1,V2)),active(U33(tt,V1,V2)) -> mark(U34(isNatKind(V2),V1,V2)),active(U34(tt,V1,V2)) -> mark(U35(isNat(V1),V2)),active(U35(tt,V2)) -> mark(U36(isNat(V2))),active(U36(tt)) -> mark(tt),active(U41(tt,V2)) -> mark(U42(isNatKind(V2))),active(U42(tt)) -> mark(tt),active(U51(tt)) -> mark(tt),active(U61(tt,V2)) -> mark(U62(isNatKind(V2))),active(U62(tt)) -> mark(tt),active(U71(tt,N)) -> mark(U72(isNatKind(N),N)),active(U72(tt,N)) -> mark(N),active(U81(tt,M,N)) -> mark(U82(isNatKind(M),M,N)),active(U82(tt,M,N)) -> mark(U83(isNat(N),M,N)),active(U83(tt,M,N)) -> mark(U84(isNatKind(N),M,N)),active(U84(tt,M,N)) -> mark(s(plus(N,M))),active(U91(tt,N)) -> mark(U92(isNatKind(N))),active(U92(tt)) -> mark(0),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(isNatKind(V1),V1,V2)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNat(x(V1,V2))) -> mark(U31(isNatKind(V1),V1,V2)),active(isNatKind(0)) -> mark(tt),active(isNatKind(plus(V1,V2))) -> mark(U41(isNatKind(V1),V2)),active(isNatKind(s(V1))) -> mark(U51(isNatKind(V1))),active(isNatKind(x(V1,V2))) -> mark(U61(isNatKind(V1),V2)),active(plus(N,0)) -> mark(U71(isNat(N),N)),active(plus(N,s(M))) -> mark(U81(isNat(M),M,N)),active(x(N,0)) -> mark(U91(isNat(N),N)),active(x(N,s(M))) -> mark(U101(isNat(M),M,N)),mark(U101(X1,X2,X3)) -> active(U101(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U102(X1,X2,X3)) -> active(U102(mark(X1),X2,X3)),mark(isNatKind(X)) -> active(isNatKind(X)),mark(U103(X1,X2,X3)) -> active(U103(mark(X1),X2,X3)),mark(isNat(X)) -> active(isNat(X)),mark(U104(X1,X2,X3)) -> active(U104(mark(X1),X2,X3)),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(x(X1,X2)) -> active(x(mark(X1),mark(X2))),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(U12(X1,X2,X3)) -> active(U12(mark(X1),X2,X3)),mark(U13(X1,X2,X3)) -> active(U13(mark(X1),X2,X3)),mark(U14(X1,X2,X3)) -> active(U14(mark(X1),X2,X3)),mark(U15(X1,X2)) -> active(U15(mark(X1),X2)),mark(U16(X)) -> active(U16(mark(X))),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X1,X2)) -> active(U22(mark(X1),X2)),mark(U23(X)) -> active(U23(mark(X))),mark(U31(X1,X2,X3)) -> active(U31(mark(X1),X2,X3)),mark(U32(X1,X2,X3)) -> active(U32(mark(X1),X2,X3)),mark(U33(X1,X2,X3)) -> active(U33(mark(X1),X2,X3)),mark(U34(X1,X2,X3)) -> active(U34(mark(X1),X2,X3)),mark(U35(X1,X2)) -> active(U35(mark(X1),X2)),mark(U36(X)) -> active(U36(mark(X))),mark(U41(X1,X2)) -> active(U41(mark(X1),X2)),mark(U42(X)) -> active(U42(mark(X))),mark(U51(X)) -> active(U51(mark(X))),mark(U61(X1,X2)) -> active(U61(mark(X1),X2)),mark(U62(X)) -> active(U62(mark(X))),mark(U71(X1,X2)) -> active(U71(mark(X1),X2)),mark(U72(X1,X2)) -> active(U72(mark(X1),X2)),mark(U81(X1,X2,X3)) -> active(U81(mark(X1),X2,X3)),mark(U82(X1,X2,X3)) -> active(U82(mark(X1),X2,X3)),mark(U83(X1,X2,X3)) -> active(U83(mark(X1),X2,X3)),mark(U84(X1,X2,X3)) -> active(U84(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(U91(X1,X2)) -> active(U91(mark(X1),X2)),mark(U92(X)) -> active(U92(mark(X))),mark(0) -> active(0),U101(mark(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,mark(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,mark(X3)) -> U101(X1,X2,X3),U101(active(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,active(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,active(X3)) -> U101(X1,X2,X3),U102(mark(X1),X2,X3) -> U102(X1,X2,X3),U102(X1,mark(X2),X3) -> U102(X1,X2,X3),U102(X1,X2,mark(X3)) -> U102(X1,X2,X3),U102(active(X1),X2,X3) -> U102(X1,X2,X3),U102(X1,active(X2),X3) -> U102(X1,X2,X3),U102(X1,X2,active(X3)) -> U102(X1,X2,X3),isNatKind(mark(X)) -> isNatKind(X),isNatKind(active(X)) -> isNatKind(X),U103(mark(X1),X2,X3) -> U103(X1,X2,X3),U103(X1,mark(X2),X3) -> U103(X1,X2,X3),U103(X1,X2,mark(X3)) -> U103(X1,X2,X3),U103(active(X1),X2,X3) -> U103(X1,X2,X3),U103(X1,active(X2),X3) -> U103(X1,X2,X3),U103(X1,X2,active(X3)) -> U103(X1,X2,X3),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U104(mark(X1),X2,X3) -> U104(X1,X2,X3),U104(X1,mark(X2),X3) -> U104(X1,X2,X3),U104(X1,X2,mark(X3)) -> U104(X1,X2,X3),U104(active(X1),X2,X3) -> U104(X1,X2,X3),U104(X1,active(X2),X3) -> U104(X1,X2,X3),U104(X1,X2,active(X3)) -> U104(X1,X2,X3),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),x(mark(X1),X2) -> x(X1,X2),x(X1,mark(X2)) -> x(X1,X2),x(active(X1),X2) -> x(X1,X2),x(X1,active(X2)) -> x(X1,X2),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),U12(mark(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,mark(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,mark(X3)) -> U12(X1,X2,X3),U12(active(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,active(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,active(X3)) -> U12(X1,X2,X3),U13(mark(X1),X2,X3) -> U13(X1,X2,X3),U13(X1,mark(X2),X3) -> U13(X1,X2,X3),U13(X1,X2,mark(X3)) -> U13(X1,X2,X3),U13(active(X1),X2,X3) -> U13(X1,X2,X3),U13(X1,active(X2),X3) -> U13(X1,X2,X3),U13(X1,X2,active(X3)) -> U13(X1,X2,X3),U14(mark(X1),X2,X3) -> U14(X1,X2,X3),U14(X1,mark(X2),X3) -> U14(X1,X2,X3),U14(X1,X2,mark(X3)) -> U14(X1,X2,X3),U14(active(X1),X2,X3) -> U14(X1,X2,X3),U14(X1,active(X2),X3) -> U14(X1,X2,X3),U14(X1,X2,active(X3)) -> U14(X1,X2,X3),U15(mark(X1),X2) -> U15(X1,X2),U15(X1,mark(X2)) -> U15(X1,X2),U15(active(X1),X2) -> U15(X1,X2),U15(X1,active(X2)) -> U15(X1,X2),U16(mark(X)) -> U16(X),U16(active(X)) -> U16(X),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X1),X2) -> U22(X1,X2),U22(X1,mark(X2)) -> U22(X1,X2),U22(active(X1),X2) -> U22(X1,X2),U22(X1,active(X2)) -> U22(X1,X2),U23(mark(X)) -> U23(X),U23(active(X)) -> U23(X),U31(mark(X1),X2,X3) -> U31(X1,X2,X3),U31(X1,mark(X2),X3) -> U31(X1,X2,X3),U31(X1,X2,mark(X3)) -> U31(X1,X2,X3),U31(active(X1),X2,X3) -> U31(X1,X2,X3),U31(X1,active(X2),X3) -> U31(X1,X2,X3),U31(X1,X2,active(X3)) -> U31(X1,X2,X3),U32(mark(X1),X2,X3) -> U32(X1,X2,X3),U32(X1,mark(X2),X3) -> U32(X1,X2,X3),U32(X1,X2,mark(X3)) -> U32(X1,X2,X3),U32(active(X1),X2,X3) -> U32(X1,X2,X3),U32(X1,active(X2),X3) -> U32(X1,X2,X3),U32(X1,X2,active(X3)) -> U32(X1,X2,X3),U33(mark(X1),X2,X3) -> U33(X1,X2,X3),U33(X1,mark(X2),X3) -> U33(X1,X2,X3),U33(X1,X2,mark(X3)) -> U33(X1,X2,X3),U33(active(X1),X2,X3) -> U33(X1,X2,X3),U33(X1,active(X2),X3) -> U33(X1,X2,X3),U33(X1,X2,active(X3)) -> U33(X1,X2,X3),U34(mark(X1),X2,X3) -> U34(X1,X2,X3),U34(X1,mark(X2),X3) -> U34(X1,X2,X3),U34(X1,X2,mark(X3)) -> U34(X1,X2,X3),U34(active(X1),X2,X3) -> U34(X1,X2,X3),U34(X1,active(X2),X3) -> U34(X1,X2,X3),U34(X1,X2,active(X3)) -> U34(X1,X2,X3),U35(mark(X1),X2) -> U35(X1,X2),U35(X1,mark(X2)) -> U35(X1,X2),U35(active(X1),X2) -> U35(X1,X2),U35(X1,active(X2)) -> U35(X1,X2),U36(mark(X)) -> U36(X),U36(active(X)) -> U36(X),U41(mark(X1),X2) -> U41(X1,X2),U41(X1,mark(X2)) -> U41(X1,X2),U41(active(X1),X2) -> U41(X1,X2),U41(X1,active(X2)) -> U41(X1,X2),U42(mark(X)) -> U42(X),U42(active(X)) -> U42(X),U51(mark(X)) -> U51(X),U51(active(X)) -> U51(X),U61(mark(X1),X2) -> U61(X1,X2),U61(X1,mark(X2)) -> U61(X1,X2),U61(active(X1),X2) -> U61(X1,X2),U61(X1,active(X2)) -> U61(X1,X2),U62(mark(X)) -> U62(X),U62(active(X)) -> U62(X),U71(mark(X1),X2) -> U71(X1,X2),U71(X1,mark(X2)) -> U71(X1,X2),U71(active(X1),X2) -> U71(X1,X2),U71(X1,active(X2)) -> U71(X1,X2),U72(mark(X1),X2) -> U72(X1,X2),U72(X1,mark(X2)) -> U72(X1,X2),U72(active(X1),X2) -> U72(X1,X2),U72(X1,active(X2)) -> U72(X1,X2),U81(mark(X1),X2,X3) -> U81(X1,X2,X3),U81(X1,mark(X2),X3) -> U81(X1,X2,X3),U81(X1,X2,mark(X3)) -> U81(X1,X2,X3),U81(active(X1),X2,X3) -> U81(X1,X2,X3),U81(X1,active(X2),X3) -> U81(X1,X2,X3),U81(X1,X2,active(X3)) -> U81(X1,X2,X3),U82(mark(X1),X2,X3) -> U82(X1,X2,X3),U82(X1,mark(X2),X3) -> U82(X1,X2,X3),U82(X1,X2,mark(X3)) -> U82(X1,X2,X3),U82(active(X1),X2,X3) -> U82(X1,X2,X3),U82(X1,active(X2),X3) -> U82(X1,X2,X3),U82(X1,X2,active(X3)) -> U82(X1,X2,X3),U83(mark(X1),X2,X3) -> U83(X1,X2,X3),U83(X1,mark(X2),X3) -> U83(X1,X2,X3),U83(X1,X2,mark(X3)) -> U83(X1,X2,X3),U83(active(X1),X2,X3) -> U83(X1,X2,X3),U83(X1,active(X2),X3) -> U83(X1,X2,X3),U83(X1,X2,active(X3)) -> U83(X1,X2,X3),U84(mark(X1),X2,X3) -> U84(X1,X2,X3),U84(X1,mark(X2),X3) -> U84(X1,X2,X3),U84(X1,X2,mark(X3)) -> U84(X1,X2,X3),U84(active(X1),X2,X3) -> U84(X1,X2,X3),U84(X1,active(X2),X3) -> U84(X1,X2,X3),U84(X1,X2,active(X3)) -> U84(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),U91(mark(X1),X2) -> U91(X1,X2),U91(X1,mark(X2)) -> U91(X1,X2),U91(active(X1),X2) -> U91(X1,X2),U91(X1,active(X2)) -> U91(X1,X2),U92(mark(X)) -> U92(X),U92(active(X)) -> U92(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_complete_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U11",3),("U12",3),("U13",3),("U14",3),("U15",2),("U16",1),("U21",2),("U22",2),("U23",1),("U31",3),("U32",3),("U33",3),("U34",3),("U35",2),("U36",1),("U41",2),("U42",1),("U51",1),("U61",2),("U62",1),("U71",2),("U72",2),("U81",3),("U82",3),("U83",3),("U84",3),("U91",2),("U92",1),("a__U101",3),("a__U102",3),("a__U103",3),("a__U104",3),("a__U11",3),("a__U12",3),("a__U13",3),("a__U14",3),("a__U15",2),("a__U16",1),("a__U21",2),("a__U22",2),("a__U23",1),("a__U31",3),("a__U32",3),("a__U33",3),("a__U34",3),("a__U35",2),("a__U36",1),("a__U41",2),("a__U42",1),("a__U51",1),("a__U61",2),("a__U62",1),("a__U71",2),("a__U72",2),("a__U81",3),("a__U82",3),("a__U83",3),("a__U84",3),("a__U91",2),("a__U92",1),("a__isNat",1),("a__isNatKind",1),("a__plus",2),("a__x",2),("isNat",1),("isNatKind",1),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U101(tt,M,N) -> a__U102(a__isNatKind(M),M,N),a__U102(tt,M,N) -> a__U103(a__isNat(N),M,N),a__U103(tt,M,N) -> a__U104(a__isNatKind(N),M,N),a__U104(tt,M,N) -> a__plus(a__x(mark(N),mark(M)),mark(N)),a__U11(tt,V1,V2) -> a__U12(a__isNatKind(V1),V1,V2),a__U12(tt,V1,V2) -> a__U13(a__isNatKind(V2),V1,V2),a__U13(tt,V1,V2) -> a__U14(a__isNatKind(V2),V1,V2),a__U14(tt,V1,V2) -> a__U15(a__isNat(V1),V2),a__U15(tt,V2) -> a__U16(a__isNat(V2)),a__U16(tt) -> tt,a__U21(tt,V1) -> a__U22(a__isNatKind(V1),V1),a__U22(tt,V1) -> a__U23(a__isNat(V1)),a__U23(tt) -> tt,a__U31(tt,V1,V2) -> a__U32(a__isNatKind(V1),V1,V2),a__U32(tt,V1,V2) -> a__U33(a__isNatKind(V2),V1,V2),a__U33(tt,V1,V2) -> a__U34(a__isNatKind(V2),V1,V2),a__U34(tt,V1,V2) -> a__U35(a__isNat(V1),V2),a__U35(tt,V2) -> a__U36(a__isNat(V2)),a__U36(tt) -> tt,a__U41(tt,V2) -> a__U42(a__isNatKind(V2)),a__U42(tt) -> tt,a__U51(tt) -> tt,a__U61(tt,V2) -> a__U62(a__isNatKind(V2)),a__U62(tt) -> tt,a__U71(tt,N) -> a__U72(a__isNatKind(N),N),a__U72(tt,N) -> mark(N),a__U81(tt,M,N) -> a__U82(a__isNatKind(M),M,N),a__U82(tt,M,N) -> a__U83(a__isNat(N),M,N),a__U83(tt,M,N) -> a__U84(a__isNatKind(N),M,N),a__U84(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__U91(tt,N) -> a__U92(a__isNatKind(N)),a__U92(tt) -> 0,a__isNat(0) -> tt,a__isNat(plus(V1,V2)) -> a__U11(a__isNatKind(V1),V1,V2),a__isNat(s(V1)) -> a__U21(a__isNatKind(V1),V1),a__isNat(x(V1,V2)) -> a__U31(a__isNatKind(V1),V1,V2),a__isNatKind(0) -> tt,a__isNatKind(plus(V1,V2)) -> a__U41(a__isNatKind(V1),V2),a__isNatKind(s(V1)) -> a__U51(a__isNatKind(V1)),a__isNatKind(x(V1,V2)) -> a__U61(a__isNatKind(V1),V2),a__plus(N,0) -> a__U71(a__isNat(N),N),a__plus(N,s(M)) -> a__U81(a__isNat(M),M,N),a__x(N,0) -> a__U91(a__isNat(N),N),a__x(N,s(M)) -> a__U101(a__isNat(M),M,N),mark(U101(X1,X2,X3)) -> a__U101(mark(X1),X2,X3),mark(U102(X1,X2,X3)) -> a__U102(mark(X1),X2,X3),mark(isNatKind(X)) -> a__isNatKind(X),mark(U103(X1,X2,X3)) -> a__U103(mark(X1),X2,X3),mark(isNat(X)) -> a__isNat(X),mark(U104(X1,X2,X3)) -> a__U104(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(x(X1,X2)) -> a__x(mark(X1),mark(X2)),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(U12(X1,X2,X3)) -> a__U12(mark(X1),X2,X3),mark(U13(X1,X2,X3)) -> a__U13(mark(X1),X2,X3),mark(U14(X1,X2,X3)) -> a__U14(mark(X1),X2,X3),mark(U15(X1,X2)) -> a__U15(mark(X1),X2),mark(U16(X)) -> a__U16(mark(X)),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X1,X2)) -> a__U22(mark(X1),X2),mark(U23(X)) -> a__U23(mark(X)),mark(U31(X1,X2,X3)) -> a__U31(mark(X1),X2,X3),mark(U32(X1,X2,X3)) -> a__U32(mark(X1),X2,X3),mark(U33(X1,X2,X3)) -> a__U33(mark(X1),X2,X3),mark(U34(X1,X2,X3)) -> a__U34(mark(X1),X2,X3),mark(U35(X1,X2)) -> a__U35(mark(X1),X2),mark(U36(X)) -> a__U36(mark(X)),mark(U41(X1,X2)) -> a__U41(mark(X1),X2),mark(U42(X)) -> a__U42(mark(X)),mark(U51(X)) -> a__U51(mark(X)),mark(U61(X1,X2)) -> a__U61(mark(X1),X2),mark(U62(X)) -> a__U62(mark(X)),mark(U71(X1,X2)) -> a__U71(mark(X1),X2),mark(U72(X1,X2)) -> a__U72(mark(X1),X2),mark(U81(X1,X2,X3)) -> a__U81(mark(X1),X2,X3),mark(U82(X1,X2,X3)) -> a__U82(mark(X1),X2,X3),mark(U83(X1,X2,X3)) -> a__U83(mark(X1),X2,X3),mark(U84(X1,X2,X3)) -> a__U84(mark(X1),X2,X3),mark(U91(X1,X2)) -> a__U91(mark(X1),X2),mark(U92(X)) -> a__U92(mark(X)),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U101(X1,X2,X3) -> U101(X1,X2,X3),a__U102(X1,X2,X3) -> U102(X1,X2,X3),a__isNatKind(X) -> isNatKind(X),a__U103(X1,X2,X3) -> U103(X1,X2,X3),a__isNat(X) -> isNat(X),a__U104(X1,X2,X3) -> U104(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2),a__x(X1,X2) -> x(X1,X2),a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__U12(X1,X2,X3) -> U12(X1,X2,X3),a__U13(X1,X2,X3) -> U13(X1,X2,X3),a__U14(X1,X2,X3) -> U14(X1,X2,X3),a__U15(X1,X2) -> U15(X1,X2),a__U16(X) -> U16(X),a__U21(X1,X2) -> U21(X1,X2),a__U22(X1,X2) -> U22(X1,X2),a__U23(X) -> U23(X),a__U31(X1,X2,X3) -> U31(X1,X2,X3),a__U32(X1,X2,X3) -> U32(X1,X2,X3),a__U33(X1,X2,X3) -> U33(X1,X2,X3),a__U34(X1,X2,X3) -> U34(X1,X2,X3),a__U35(X1,X2) -> U35(X1,X2),a__U36(X) -> U36(X),a__U41(X1,X2) -> U41(X1,X2),a__U42(X) -> U42(X),a__U51(X) -> U51(X),a__U61(X1,X2) -> U61(X1,X2),a__U62(X) -> U62(X),a__U71(X1,X2) -> U71(X1,X2),a__U72(X1,X2) -> U72(X1,X2),a__U81(X1,X2,X3) -> U81(X1,X2,X3),a__U82(X1,X2,X3) -> U82(X1,X2,X3),a__U83(X1,X2,X3) -> U83(X1,X2,X3),a__U84(X1,X2,X3) -> U84(X1,X2,X3),a__U91(X1,X2) -> U91(X1,X2),a__U92(X) -> U92(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_complete_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U11",3),("U12",3),("U13",3),("U14",3),("U15",2),("U16",1),("U21",2),("U22",2),("U23",1),("U31",3),("U32",3),("U33",3),("U34",3),("U35",2),("U36",1),("U41",2),("U42",1),("U51",1),("U61",2),("U62",1),("U71",2),("U72",2),("U81",3),("U82",3),("U83",3),("U84",3),("U91",2),("U92",1),("active",1),("isNat",1),("isNatKind",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U101(tt,M,N)) -> mark(U102(isNatKind(M),M,N)),active(U102(tt,M,N)) -> mark(U103(isNat(N),M,N)),active(U103(tt,M,N)) -> mark(U104(isNatKind(N),M,N)),active(U104(tt,M,N)) -> mark(plus(x(N,M),N)),active(U11(tt,V1,V2)) -> mark(U12(isNatKind(V1),V1,V2)),active(U12(tt,V1,V2)) -> mark(U13(isNatKind(V2),V1,V2)),active(U13(tt,V1,V2)) -> mark(U14(isNatKind(V2),V1,V2)),active(U14(tt,V1,V2)) -> mark(U15(isNat(V1),V2)),active(U15(tt,V2)) -> mark(U16(isNat(V2))),active(U16(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNatKind(V1),V1)),active(U22(tt,V1)) -> mark(U23(isNat(V1))),active(U23(tt)) -> mark(tt),active(U31(tt,V1,V2)) -> mark(U32(isNatKind(V1),V1,V2)),active(U32(tt,V1,V2)) -> mark(U33(isNatKind(V2),V1,V2)),active(U33(tt,V1,V2)) -> mark(U34(isNatKind(V2),V1,V2)),active(U34(tt,V1,V2)) -> mark(U35(isNat(V1),V2)),active(U35(tt,V2)) -> mark(U36(isNat(V2))),active(U36(tt)) -> mark(tt),active(U41(tt,V2)) -> mark(U42(isNatKind(V2))),active(U42(tt)) -> mark(tt),active(U51(tt)) -> mark(tt),active(U61(tt,V2)) -> mark(U62(isNatKind(V2))),active(U62(tt)) -> mark(tt),active(U71(tt,N)) -> mark(U72(isNatKind(N),N)),active(U72(tt,N)) -> mark(N),active(U81(tt,M,N)) -> mark(U82(isNatKind(M),M,N)),active(U82(tt,M,N)) -> mark(U83(isNat(N),M,N)),active(U83(tt,M,N)) -> mark(U84(isNatKind(N),M,N)),active(U84(tt,M,N)) -> mark(s(plus(N,M))),active(U91(tt,N)) -> mark(U92(isNatKind(N))),active(U92(tt)) -> mark(0),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(isNatKind(V1),V1,V2)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNat(x(V1,V2))) -> mark(U31(isNatKind(V1),V1,V2)),active(isNatKind(0)) -> mark(tt),active(isNatKind(plus(V1,V2))) -> mark(U41(isNatKind(V1),V2)),active(isNatKind(s(V1))) -> mark(U51(isNatKind(V1))),active(isNatKind(x(V1,V2))) -> mark(U61(isNatKind(V1),V2)),active(plus(N,0)) -> mark(U71(isNat(N),N)),active(plus(N,s(M))) -> mark(U81(isNat(M),M,N)),active(x(N,0)) -> mark(U91(isNat(N),N)),active(x(N,s(M))) -> mark(U101(isNat(M),M,N)),active(U101(X1,X2,X3)) -> U101(active(X1),X2,X3),active(U102(X1,X2,X3)) -> U102(active(X1),X2,X3),active(U103(X1,X2,X3)) -> U103(active(X1),X2,X3),active(U104(X1,X2,X3)) -> U104(active(X1),X2,X3),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(x(X1,X2)) -> x(active(X1),X2),active(x(X1,X2)) -> x(X1,active(X2)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(U12(X1,X2,X3)) -> U12(active(X1),X2,X3),active(U13(X1,X2,X3)) -> U13(active(X1),X2,X3),active(U14(X1,X2,X3)) -> U14(active(X1),X2,X3),active(U15(X1,X2)) -> U15(active(X1),X2),active(U16(X)) -> U16(active(X)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X1,X2)) -> U22(active(X1),X2),active(U23(X)) -> U23(active(X)),active(U31(X1,X2,X3)) -> U31(active(X1),X2,X3),active(U32(X1,X2,X3)) -> U32(active(X1),X2,X3),active(U33(X1,X2,X3)) -> U33(active(X1),X2,X3),active(U34(X1,X2,X3)) -> U34(active(X1),X2,X3),active(U35(X1,X2)) -> U35(active(X1),X2),active(U36(X)) -> U36(active(X)),active(U41(X1,X2)) -> U41(active(X1),X2),active(U42(X)) -> U42(active(X)),active(U51(X)) -> U51(active(X)),active(U61(X1,X2)) -> U61(active(X1),X2),active(U62(X)) -> U62(active(X)),active(U71(X1,X2)) -> U71(active(X1),X2),active(U72(X1,X2)) -> U72(active(X1),X2),active(U81(X1,X2,X3)) -> U81(active(X1),X2,X3),active(U82(X1,X2,X3)) -> U82(active(X1),X2,X3),active(U83(X1,X2,X3)) -> U83(active(X1),X2,X3),active(U84(X1,X2,X3)) -> U84(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(U91(X1,X2)) -> U91(active(X1),X2),active(U92(X)) -> U92(active(X)),U101(mark(X1),X2,X3) -> mark(U101(X1,X2,X3)),U102(mark(X1),X2,X3) -> mark(U102(X1,X2,X3)),U103(mark(X1),X2,X3) -> mark(U103(X1,X2,X3)),U104(mark(X1),X2,X3) -> mark(U104(X1,X2,X3)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),x(mark(X1),X2) -> mark(x(X1,X2)),x(X1,mark(X2)) -> mark(x(X1,X2)),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),U12(mark(X1),X2,X3) -> mark(U12(X1,X2,X3)),U13(mark(X1),X2,X3) -> mark(U13(X1,X2,X3)),U14(mark(X1),X2,X3) -> mark(U14(X1,X2,X3)),U15(mark(X1),X2) -> mark(U15(X1,X2)),U16(mark(X)) -> mark(U16(X)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X1),X2) -> mark(U22(X1,X2)),U23(mark(X)) -> mark(U23(X)),U31(mark(X1),X2,X3) -> mark(U31(X1,X2,X3)),U32(mark(X1),X2,X3) -> mark(U32(X1,X2,X3)),U33(mark(X1),X2,X3) -> mark(U33(X1,X2,X3)),U34(mark(X1),X2,X3) -> mark(U34(X1,X2,X3)),U35(mark(X1),X2) -> mark(U35(X1,X2)),U36(mark(X)) -> mark(U36(X)),U41(mark(X1),X2) -> mark(U41(X1,X2)),U42(mark(X)) -> mark(U42(X)),U51(mark(X)) -> mark(U51(X)),U61(mark(X1),X2) -> mark(U61(X1,X2)),U62(mark(X)) -> mark(U62(X)),U71(mark(X1),X2) -> mark(U71(X1,X2)),U72(mark(X1),X2) -> mark(U72(X1,X2)),U81(mark(X1),X2,X3) -> mark(U81(X1,X2,X3)),U82(mark(X1),X2,X3) -> mark(U82(X1,X2,X3)),U83(mark(X1),X2,X3) -> mark(U83(X1,X2,X3)),U84(mark(X1),X2,X3) -> mark(U84(X1,X2,X3)),s(mark(X)) -> mark(s(X)),U91(mark(X1),X2) -> mark(U91(X1,X2)),U92(mark(X)) -> mark(U92(X)),proper(U101(X1,X2,X3)) -> U101(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U102(X1,X2,X3)) -> U102(proper(X1),proper(X2),proper(X3)),proper(isNatKind(X)) -> isNatKind(proper(X)),proper(U103(X1,X2,X3)) -> U103(proper(X1),proper(X2),proper(X3)),proper(isNat(X)) -> isNat(proper(X)),proper(U104(X1,X2,X3)) -> U104(proper(X1),proper(X2),proper(X3)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(x(X1,X2)) -> x(proper(X1),proper(X2)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(U12(X1,X2,X3)) -> U12(proper(X1),proper(X2),proper(X3)),proper(U13(X1,X2,X3)) -> U13(proper(X1),proper(X2),proper(X3)),proper(U14(X1,X2,X3)) -> U14(proper(X1),proper(X2),proper(X3)),proper(U15(X1,X2)) -> U15(proper(X1),proper(X2)),proper(U16(X)) -> U16(proper(X)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X1,X2)) -> U22(proper(X1),proper(X2)),proper(U23(X)) -> U23(proper(X)),proper(U31(X1,X2,X3)) -> U31(proper(X1),proper(X2),proper(X3)),proper(U32(X1,X2,X3)) -> U32(proper(X1),proper(X2),proper(X3)),proper(U33(X1,X2,X3)) -> U33(proper(X1),proper(X2),proper(X3)),proper(U34(X1,X2,X3)) -> U34(proper(X1),proper(X2),proper(X3)),proper(U35(X1,X2)) -> U35(proper(X1),proper(X2)),proper(U36(X)) -> U36(proper(X)),proper(U41(X1,X2)) -> U41(proper(X1),proper(X2)),proper(U42(X)) -> U42(proper(X)),proper(U51(X)) -> U51(proper(X)),proper(U61(X1,X2)) -> U61(proper(X1),proper(X2)),proper(U62(X)) -> U62(proper(X)),proper(U71(X1,X2)) -> U71(proper(X1),proper(X2)),proper(U72(X1,X2)) -> U72(proper(X1),proper(X2)),proper(U81(X1,X2,X3)) -> U81(proper(X1),proper(X2),proper(X3)),proper(U82(X1,X2,X3)) -> U82(proper(X1),proper(X2),proper(X3)),proper(U83(X1,X2,X3)) -> U83(proper(X1),proper(X2),proper(X3)),proper(U84(X1,X2,X3)) -> U84(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(U91(X1,X2)) -> U91(proper(X1),proper(X2)),proper(U92(X)) -> U92(proper(X)),proper(0) -> ok(0),U101(ok(X1),ok(X2),ok(X3)) -> ok(U101(X1,X2,X3)),U102(ok(X1),ok(X2),ok(X3)) -> ok(U102(X1,X2,X3)),isNatKind(ok(X)) -> ok(isNatKind(X)),U103(ok(X1),ok(X2),ok(X3)) -> ok(U103(X1,X2,X3)),isNat(ok(X)) -> ok(isNat(X)),U104(ok(X1),ok(X2),ok(X3)) -> ok(U104(X1,X2,X3)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),x(ok(X1),ok(X2)) -> ok(x(X1,X2)),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),U12(ok(X1),ok(X2),ok(X3)) -> ok(U12(X1,X2,X3)),U13(ok(X1),ok(X2),ok(X3)) -> ok(U13(X1,X2,X3)),U14(ok(X1),ok(X2),ok(X3)) -> ok(U14(X1,X2,X3)),U15(ok(X1),ok(X2)) -> ok(U15(X1,X2)),U16(ok(X)) -> ok(U16(X)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X1),ok(X2)) -> ok(U22(X1,X2)),U23(ok(X)) -> ok(U23(X)),U31(ok(X1),ok(X2),ok(X3)) -> ok(U31(X1,X2,X3)),U32(ok(X1),ok(X2),ok(X3)) -> ok(U32(X1,X2,X3)),U33(ok(X1),ok(X2),ok(X3)) -> ok(U33(X1,X2,X3)),U34(ok(X1),ok(X2),ok(X3)) -> ok(U34(X1,X2,X3)),U35(ok(X1),ok(X2)) -> ok(U35(X1,X2)),U36(ok(X)) -> ok(U36(X)),U41(ok(X1),ok(X2)) -> ok(U41(X1,X2)),U42(ok(X)) -> ok(U42(X)),U51(ok(X)) -> ok(U51(X)),U61(ok(X1),ok(X2)) -> ok(U61(X1,X2)),U62(ok(X)) -> ok(U62(X)),U71(ok(X1),ok(X2)) -> ok(U71(X1,X2)),U72(ok(X1),ok(X2)) -> ok(U72(X1,X2)),U81(ok(X1),ok(X2),ok(X3)) -> ok(U81(X1,X2,X3)),U82(ok(X1),ok(X2),ok(X3)) -> ok(U82(X1,X2,X3)),U83(ok(X1),ok(X2),ok(X3)) -> ok(U83(X1,X2,X3)),U84(ok(X1),ok(X2),ok(X3)) -> ok(U84(X1,X2,X3)),s(ok(X)) -> ok(s(X)),U91(ok(X1),ok(X2)) -> ok(U91(X1,X2)),U92(ok(X)) -> ok(U92(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_complete_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",2),("U13",1),("U21",2),("U22",1),("U31",3),("U32",2),("U33",1),("U41",2),("U51",3),("U61",1),("U71",3),("active",1),("and",2),("isNat",1),("isNatKind",1),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V1,V2)) -> mark(U12(isNat(V1),V2)),active(U12(tt,V2)) -> mark(U13(isNat(V2))),active(U13(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNat(V1))),active(U22(tt)) -> mark(tt),active(U31(tt,V1,V2)) -> mark(U32(isNat(V1),V2)),active(U32(tt,V2)) -> mark(U33(isNat(V2))),active(U33(tt)) -> mark(tt),active(U41(tt,N)) -> mark(N),active(U51(tt,M,N)) -> mark(s(plus(N,M))),active(U61(tt)) -> mark(0),active(U71(tt,M,N)) -> mark(plus(x(N,M),N)),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(and(isNatKind(V1),isNatKind(V2)),V1,V2)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNat(x(V1,V2))) -> mark(U31(and(isNatKind(V1),isNatKind(V2)),V1,V2)),active(isNatKind(0)) -> mark(tt),active(isNatKind(plus(V1,V2))) -> mark(and(isNatKind(V1),isNatKind(V2))),active(isNatKind(s(V1))) -> mark(isNatKind(V1)),active(isNatKind(x(V1,V2))) -> mark(and(isNatKind(V1),isNatKind(V2))),active(plus(N,0)) -> mark(U41(and(isNat(N),isNatKind(N)),N)),active(plus(N,s(M))) -> mark(U51(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)),active(x(N,0)) -> mark(U61(and(isNat(N),isNatKind(N)))),active(x(N,s(M))) -> mark(U71(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U12(X1,X2)) -> active(U12(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),mark(U13(X)) -> active(U13(mark(X))),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X)) -> active(U22(mark(X))),mark(U31(X1,X2,X3)) -> active(U31(mark(X1),X2,X3)),mark(U32(X1,X2)) -> active(U32(mark(X1),X2)),mark(U33(X)) -> active(U33(mark(X))),mark(U41(X1,X2)) -> active(U41(mark(X1),X2)),mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3)),mark(s(X)) -> active(s(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(U61(X)) -> active(U61(mark(X))),mark(0) -> active(0),mark(U71(X1,X2,X3)) -> active(U71(mark(X1),X2,X3)),mark(x(X1,X2)) -> active(x(mark(X1),mark(X2))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isNatKind(X)) -> active(isNatKind(X)),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),U12(mark(X1),X2) -> U12(X1,X2),U12(X1,mark(X2)) -> U12(X1,X2),U12(active(X1),X2) -> U12(X1,X2),U12(X1,active(X2)) -> U12(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U13(mark(X)) -> U13(X),U13(active(X)) -> U13(X),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X)) -> U22(X),U22(active(X)) -> U22(X),U31(mark(X1),X2,X3) -> U31(X1,X2,X3),U31(X1,mark(X2),X3) -> U31(X1,X2,X3),U31(X1,X2,mark(X3)) -> U31(X1,X2,X3),U31(active(X1),X2,X3) -> U31(X1,X2,X3),U31(X1,active(X2),X3) -> U31(X1,X2,X3),U31(X1,X2,active(X3)) -> U31(X1,X2,X3),U32(mark(X1),X2) -> U32(X1,X2),U32(X1,mark(X2)) -> U32(X1,X2),U32(active(X1),X2) -> U32(X1,X2),U32(X1,active(X2)) -> U32(X1,X2),U33(mark(X)) -> U33(X),U33(active(X)) -> U33(X),U41(mark(X1),X2) -> U41(X1,X2),U41(X1,mark(X2)) -> U41(X1,X2),U41(active(X1),X2) -> U41(X1,X2),U41(X1,active(X2)) -> U41(X1,X2),U51(mark(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,mark(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,mark(X3)) -> U51(X1,X2,X3),U51(active(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,active(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,active(X3)) -> U51(X1,X2,X3),s(mark(X)) -> s(X),s(active(X)) -> s(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),U61(mark(X)) -> U61(X),U61(active(X)) -> U61(X),U71(mark(X1),X2,X3) -> U71(X1,X2,X3),U71(X1,mark(X2),X3) -> U71(X1,X2,X3),U71(X1,X2,mark(X3)) -> U71(X1,X2,X3),U71(active(X1),X2,X3) -> U71(X1,X2,X3),U71(X1,active(X2),X3) -> U71(X1,X2,X3),U71(X1,X2,active(X3)) -> U71(X1,X2,X3),x(mark(X1),X2) -> x(X1,X2),x(X1,mark(X2)) -> x(X1,X2),x(active(X1),X2) -> x(X1,X2),x(X1,active(X2)) -> x(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNatKind(mark(X)) -> isNatKind(X),isNatKind(active(X)) -> isNatKind(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_complete_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",2),("U13",1),("U21",2),("U22",1),("U31",3),("U32",2),("U33",1),("U41",2),("U51",3),("U61",1),("U71",3),("a__U11",3),("a__U12",2),("a__U13",1),("a__U21",2),("a__U22",1),("a__U31",3),("a__U32",2),("a__U33",1),("a__U41",2),("a__U51",3),("a__U61",1),("a__U71",3),("a__and",2),("a__isNat",1),("a__isNatKind",1),("a__plus",2),("a__x",2),("and",2),("isNat",1),("isNatKind",1),("mark",1),("plus",2),("s",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__U11(tt,V1,V2) -> a__U12(a__isNat(V1),V2),a__U12(tt,V2) -> a__U13(a__isNat(V2)),a__U13(tt) -> tt,a__U21(tt,V1) -> a__U22(a__isNat(V1)),a__U22(tt) -> tt,a__U31(tt,V1,V2) -> a__U32(a__isNat(V1),V2),a__U32(tt,V2) -> a__U33(a__isNat(V2)),a__U33(tt) -> tt,a__U41(tt,N) -> mark(N),a__U51(tt,M,N) -> s(a__plus(mark(N),mark(M))),a__U61(tt) -> 0,a__U71(tt,M,N) -> a__plus(a__x(mark(N),mark(M)),mark(N)),a__and(tt,X) -> mark(X),a__isNat(0) -> tt,a__isNat(plus(V1,V2)) -> a__U11(a__and(a__isNatKind(V1),isNatKind(V2)),V1,V2),a__isNat(s(V1)) -> a__U21(a__isNatKind(V1),V1),a__isNat(x(V1,V2)) -> a__U31(a__and(a__isNatKind(V1),isNatKind(V2)),V1,V2),a__isNatKind(0) -> tt,a__isNatKind(plus(V1,V2)) -> a__and(a__isNatKind(V1),isNatKind(V2)),a__isNatKind(s(V1)) -> a__isNatKind(V1),a__isNatKind(x(V1,V2)) -> a__and(a__isNatKind(V1),isNatKind(V2)),a__plus(N,0) -> a__U41(a__and(a__isNat(N),isNatKind(N)),N),a__plus(N,s(M)) -> a__U51(a__and(a__and(a__isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),a__x(N,0) -> a__U61(a__and(a__isNat(N),isNatKind(N))),a__x(N,s(M)) -> a__U71(a__and(a__and(a__isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(U12(X1,X2)) -> a__U12(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(U13(X)) -> a__U13(mark(X)),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X)) -> a__U22(mark(X)),mark(U31(X1,X2,X3)) -> a__U31(mark(X1),X2,X3),mark(U32(X1,X2)) -> a__U32(mark(X1),X2),mark(U33(X)) -> a__U33(mark(X)),mark(U41(X1,X2)) -> a__U41(mark(X1),X2),mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(U61(X)) -> a__U61(mark(X)),mark(U71(X1,X2,X3)) -> a__U71(mark(X1),X2,X3),mark(x(X1,X2)) -> a__x(mark(X1),mark(X2)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNatKind(X)) -> a__isNatKind(X),mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__U12(X1,X2) -> U12(X1,X2),a__isNat(X) -> isNat(X),a__U13(X) -> U13(X),a__U21(X1,X2) -> U21(X1,X2),a__U22(X) -> U22(X),a__U31(X1,X2,X3) -> U31(X1,X2,X3),a__U32(X1,X2) -> U32(X1,X2),a__U33(X) -> U33(X),a__U41(X1,X2) -> U41(X1,X2),a__U51(X1,X2,X3) -> U51(X1,X2,X3),a__plus(X1,X2) -> plus(X1,X2),a__U61(X) -> U61(X),a__U71(X1,X2,X3) -> U71(X1,X2,X3),a__x(X1,X2) -> x(X1,X2),a__and(X1,X2) -> and(X1,X2),a__isNatKind(X) -> isNatKind(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\MYNAT_complete_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",2),("U13",1),("U21",2),("U22",1),("U31",3),("U32",2),("U33",1),("U41",2),("U51",3),("U61",1),("U71",3),("active",1),("and",2),("isNat",1),("isNatKind",1),("mark",1),("ok",1),("plus",2),("proper",1),("s",1),("top",1),("tt",0),("x",2)], trsVariables = fromList ["M","N","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(U11(tt,V1,V2)) -> mark(U12(isNat(V1),V2)),active(U12(tt,V2)) -> mark(U13(isNat(V2))),active(U13(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNat(V1))),active(U22(tt)) -> mark(tt),active(U31(tt,V1,V2)) -> mark(U32(isNat(V1),V2)),active(U32(tt,V2)) -> mark(U33(isNat(V2))),active(U33(tt)) -> mark(tt),active(U41(tt,N)) -> mark(N),active(U51(tt,M,N)) -> mark(s(plus(N,M))),active(U61(tt)) -> mark(0),active(U71(tt,M,N)) -> mark(plus(x(N,M),N)),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(plus(V1,V2))) -> mark(U11(and(isNatKind(V1),isNatKind(V2)),V1,V2)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNat(x(V1,V2))) -> mark(U31(and(isNatKind(V1),isNatKind(V2)),V1,V2)),active(isNatKind(0)) -> mark(tt),active(isNatKind(plus(V1,V2))) -> mark(and(isNatKind(V1),isNatKind(V2))),active(isNatKind(s(V1))) -> mark(isNatKind(V1)),active(isNatKind(x(V1,V2))) -> mark(and(isNatKind(V1),isNatKind(V2))),active(plus(N,0)) -> mark(U41(and(isNat(N),isNatKind(N)),N)),active(plus(N,s(M))) -> mark(U51(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)),active(x(N,0)) -> mark(U61(and(isNat(N),isNatKind(N)))),active(x(N,s(M))) -> mark(U71(and(and(isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(U12(X1,X2)) -> U12(active(X1),X2),active(U13(X)) -> U13(active(X)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X)) -> U22(active(X)),active(U31(X1,X2,X3)) -> U31(active(X1),X2,X3),active(U32(X1,X2)) -> U32(active(X1),X2),active(U33(X)) -> U33(active(X)),active(U41(X1,X2)) -> U41(active(X1),X2),active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3),active(s(X)) -> s(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(U61(X)) -> U61(active(X)),active(U71(X1,X2,X3)) -> U71(active(X1),X2,X3),active(x(X1,X2)) -> x(active(X1),X2),active(x(X1,X2)) -> x(X1,active(X2)),active(and(X1,X2)) -> and(active(X1),X2),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),U12(mark(X1),X2) -> mark(U12(X1,X2)),U13(mark(X)) -> mark(U13(X)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X)) -> mark(U22(X)),U31(mark(X1),X2,X3) -> mark(U31(X1,X2,X3)),U32(mark(X1),X2) -> mark(U32(X1,X2)),U33(mark(X)) -> mark(U33(X)),U41(mark(X1),X2) -> mark(U41(X1,X2)),U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3)),s(mark(X)) -> mark(s(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),U61(mark(X)) -> mark(U61(X)),U71(mark(X1),X2,X3) -> mark(U71(X1,X2,X3)),x(mark(X1),X2) -> mark(x(X1,X2)),x(X1,mark(X2)) -> mark(x(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U12(X1,X2)) -> U12(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),proper(U13(X)) -> U13(proper(X)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X)) -> U22(proper(X)),proper(U31(X1,X2,X3)) -> U31(proper(X1),proper(X2),proper(X3)),proper(U32(X1,X2)) -> U32(proper(X1),proper(X2)),proper(U33(X)) -> U33(proper(X)),proper(U41(X1,X2)) -> U41(proper(X1),proper(X2)),proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3)),proper(s(X)) -> s(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(U61(X)) -> U61(proper(X)),proper(0) -> ok(0),proper(U71(X1,X2,X3)) -> U71(proper(X1),proper(X2),proper(X3)),proper(x(X1,X2)) -> x(proper(X1),proper(X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isNatKind(X)) -> isNatKind(proper(X)),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),U12(ok(X1),ok(X2)) -> ok(U12(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),U13(ok(X)) -> ok(U13(X)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X)) -> ok(U22(X)),U31(ok(X1),ok(X2),ok(X3)) -> ok(U31(X1,X2,X3)),U32(ok(X1),ok(X2)) -> ok(U32(X1,X2)),U33(ok(X)) -> ok(U33(X)),U41(ok(X1),ok(X2)) -> ok(U41(X1,X2)),U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3)),s(ok(X)) -> ok(s(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),U61(ok(X)) -> ok(U61(X)),U71(ok(X1),ok(X2),ok(X3)) -> ok(U71(X1,X2,X3)),x(ok(X1),ok(X2)) -> ok(x(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNatKind(ok(X)) -> ok(isNatKind(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nosorts_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U21",2),("U22",2),("U31",2),("U32",2),("U41",3),("U42",3),("U51",2),("U52",2),("U61",4),("U62",4),("U63",4),("U64",2),("U71",2),("U72",2),("U81",3),("U82",3),("active",1),("afterNth",2),("cons",2),("fst",1),("head",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U11(tt,N,XS)) -> mark(U12(tt,N,XS)),active(U12(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U21(tt,X)) -> mark(U22(tt,X)),active(U22(tt,X)) -> mark(X),active(U31(tt,N)) -> mark(U32(tt,N)),active(U32(tt,N)) -> mark(N),active(U41(tt,N,XS)) -> mark(U42(tt,N,XS)),active(U42(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U51(tt,Y)) -> mark(U52(tt,Y)),active(U52(tt,Y)) -> mark(Y),active(U61(tt,N,X,XS)) -> mark(U62(tt,N,X,XS)),active(U62(tt,N,X,XS)) -> mark(U63(tt,N,X,XS)),active(U63(tt,N,X,XS)) -> mark(U64(splitAt(N,XS),X)),active(U64(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U71(tt,XS)) -> mark(U72(tt,XS)),active(U72(tt,XS)) -> mark(XS),active(U81(tt,N,XS)) -> mark(U82(tt,N,XS)),active(U82(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(afterNth(N,XS)) -> mark(U11(tt,N,XS)),active(fst(pair(X,Y))) -> mark(U21(tt,X)),active(head(cons(N,XS))) -> mark(U31(tt,N)),active(natsFrom(N)) -> mark(cons(N,natsFrom(s(N)))),active(sel(N,XS)) -> mark(U41(tt,N,XS)),active(snd(pair(X,Y))) -> mark(U51(tt,Y)),active(splitAt(0,XS)) -> mark(pair(nil,XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U61(tt,N,X,XS)),active(tail(cons(N,XS))) -> mark(U71(tt,XS)),active(take(N,XS)) -> mark(U81(tt,N,XS)),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U12(X1,X2,X3)) -> active(U12(mark(X1),X2,X3)),mark(snd(X)) -> active(snd(mark(X))),mark(splitAt(X1,X2)) -> active(splitAt(mark(X1),mark(X2))),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X1,X2)) -> active(U22(mark(X1),X2)),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U32(X1,X2)) -> active(U32(mark(X1),X2)),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2,X3)) -> active(U42(mark(X1),X2,X3)),mark(head(X)) -> active(head(mark(X))),mark(afterNth(X1,X2)) -> active(afterNth(mark(X1),mark(X2))),mark(U51(X1,X2)) -> active(U51(mark(X1),X2)),mark(U52(X1,X2)) -> active(U52(mark(X1),X2)),mark(U61(X1,X2,X3,X4)) -> active(U61(mark(X1),X2,X3,X4)),mark(U62(X1,X2,X3,X4)) -> active(U62(mark(X1),X2,X3,X4)),mark(U63(X1,X2,X3,X4)) -> active(U63(mark(X1),X2,X3,X4)),mark(U64(X1,X2)) -> active(U64(mark(X1),X2)),mark(pair(X1,X2)) -> active(pair(mark(X1),mark(X2))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(U71(X1,X2)) -> active(U71(mark(X1),X2)),mark(U72(X1,X2)) -> active(U72(mark(X1),X2)),mark(U81(X1,X2,X3)) -> active(U81(mark(X1),X2,X3)),mark(U82(X1,X2,X3)) -> active(U82(mark(X1),X2,X3)),mark(fst(X)) -> active(fst(mark(X))),mark(natsFrom(X)) -> active(natsFrom(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),mark(0) -> active(0),mark(nil) -> active(nil),mark(tail(X)) -> active(tail(mark(X))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),U12(mark(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,mark(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,mark(X3)) -> U12(X1,X2,X3),U12(active(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,active(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,active(X3)) -> U12(X1,X2,X3),snd(mark(X)) -> snd(X),snd(active(X)) -> snd(X),splitAt(mark(X1),X2) -> splitAt(X1,X2),splitAt(X1,mark(X2)) -> splitAt(X1,X2),splitAt(active(X1),X2) -> splitAt(X1,X2),splitAt(X1,active(X2)) -> splitAt(X1,X2),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X1),X2) -> U22(X1,X2),U22(X1,mark(X2)) -> U22(X1,X2),U22(active(X1),X2) -> U22(X1,X2),U22(X1,active(X2)) -> U22(X1,X2),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U32(mark(X1),X2) -> U32(X1,X2),U32(X1,mark(X2)) -> U32(X1,X2),U32(active(X1),X2) -> U32(X1,X2),U32(X1,active(X2)) -> U32(X1,X2),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,mark(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,mark(X3)) -> U42(X1,X2,X3),U42(active(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,active(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,active(X3)) -> U42(X1,X2,X3),head(mark(X)) -> head(X),head(active(X)) -> head(X),afterNth(mark(X1),X2) -> afterNth(X1,X2),afterNth(X1,mark(X2)) -> afterNth(X1,X2),afterNth(active(X1),X2) -> afterNth(X1,X2),afterNth(X1,active(X2)) -> afterNth(X1,X2),U51(mark(X1),X2) -> U51(X1,X2),U51(X1,mark(X2)) -> U51(X1,X2),U51(active(X1),X2) -> U51(X1,X2),U51(X1,active(X2)) -> U51(X1,X2),U52(mark(X1),X2) -> U52(X1,X2),U52(X1,mark(X2)) -> U52(X1,X2),U52(active(X1),X2) -> U52(X1,X2),U52(X1,active(X2)) -> U52(X1,X2),U61(mark(X1),X2,X3,X4) -> U61(X1,X2,X3,X4),U61(X1,mark(X2),X3,X4) -> U61(X1,X2,X3,X4),U61(X1,X2,mark(X3),X4) -> U61(X1,X2,X3,X4),U61(X1,X2,X3,mark(X4)) -> U61(X1,X2,X3,X4),U61(active(X1),X2,X3,X4) -> U61(X1,X2,X3,X4),U61(X1,active(X2),X3,X4) -> U61(X1,X2,X3,X4),U61(X1,X2,active(X3),X4) -> U61(X1,X2,X3,X4),U61(X1,X2,X3,active(X4)) -> U61(X1,X2,X3,X4),U62(mark(X1),X2,X3,X4) -> U62(X1,X2,X3,X4),U62(X1,mark(X2),X3,X4) -> U62(X1,X2,X3,X4),U62(X1,X2,mark(X3),X4) -> U62(X1,X2,X3,X4),U62(X1,X2,X3,mark(X4)) -> U62(X1,X2,X3,X4),U62(active(X1),X2,X3,X4) -> U62(X1,X2,X3,X4),U62(X1,active(X2),X3,X4) -> U62(X1,X2,X3,X4),U62(X1,X2,active(X3),X4) -> U62(X1,X2,X3,X4),U62(X1,X2,X3,active(X4)) -> U62(X1,X2,X3,X4),U63(mark(X1),X2,X3,X4) -> U63(X1,X2,X3,X4),U63(X1,mark(X2),X3,X4) -> U63(X1,X2,X3,X4),U63(X1,X2,mark(X3),X4) -> U63(X1,X2,X3,X4),U63(X1,X2,X3,mark(X4)) -> U63(X1,X2,X3,X4),U63(active(X1),X2,X3,X4) -> U63(X1,X2,X3,X4),U63(X1,active(X2),X3,X4) -> U63(X1,X2,X3,X4),U63(X1,X2,active(X3),X4) -> U63(X1,X2,X3,X4),U63(X1,X2,X3,active(X4)) -> U63(X1,X2,X3,X4),U64(mark(X1),X2) -> U64(X1,X2),U64(X1,mark(X2)) -> U64(X1,X2),U64(active(X1),X2) -> U64(X1,X2),U64(X1,active(X2)) -> U64(X1,X2),pair(mark(X1),X2) -> pair(X1,X2),pair(X1,mark(X2)) -> pair(X1,X2),pair(active(X1),X2) -> pair(X1,X2),pair(X1,active(X2)) -> pair(X1,X2),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U71(mark(X1),X2) -> U71(X1,X2),U71(X1,mark(X2)) -> U71(X1,X2),U71(active(X1),X2) -> U71(X1,X2),U71(X1,active(X2)) -> U71(X1,X2),U72(mark(X1),X2) -> U72(X1,X2),U72(X1,mark(X2)) -> U72(X1,X2),U72(active(X1),X2) -> U72(X1,X2),U72(X1,active(X2)) -> U72(X1,X2),U81(mark(X1),X2,X3) -> U81(X1,X2,X3),U81(X1,mark(X2),X3) -> U81(X1,X2,X3),U81(X1,X2,mark(X3)) -> U81(X1,X2,X3),U81(active(X1),X2,X3) -> U81(X1,X2,X3),U81(X1,active(X2),X3) -> U81(X1,X2,X3),U81(X1,X2,active(X3)) -> U81(X1,X2,X3),U82(mark(X1),X2,X3) -> U82(X1,X2,X3),U82(X1,mark(X2),X3) -> U82(X1,X2,X3),U82(X1,X2,mark(X3)) -> U82(X1,X2,X3),U82(active(X1),X2,X3) -> U82(X1,X2,X3),U82(X1,active(X2),X3) -> U82(X1,X2,X3),U82(X1,X2,active(X3)) -> U82(X1,X2,X3),fst(mark(X)) -> fst(X),fst(active(X)) -> fst(X),natsFrom(mark(X)) -> natsFrom(X),natsFrom(active(X)) -> natsFrom(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nosorts_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U21",2),("U22",2),("U31",2),("U32",2),("U41",3),("U42",3),("U51",2),("U52",2),("U61",4),("U62",4),("U63",4),("U64",2),("U71",2),("U72",2),("U81",3),("U82",3),("a__U11",3),("a__U12",3),("a__U21",2),("a__U22",2),("a__U31",2),("a__U32",2),("a__U41",3),("a__U42",3),("a__U51",2),("a__U52",2),("a__U61",4),("a__U62",4),("a__U63",4),("a__U64",2),("a__U71",2),("a__U72",2),("a__U81",3),("a__U82",3),("a__afterNth",2),("a__fst",1),("a__head",1),("a__natsFrom",1),("a__sel",2),("a__snd",1),("a__splitAt",2),("a__tail",1),("a__take",2),("afterNth",2),("cons",2),("fst",1),("head",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [a__U11(tt,N,XS) -> a__U12(tt,N,XS),a__U12(tt,N,XS) -> a__snd(a__splitAt(mark(N),mark(XS))),a__U21(tt,X) -> a__U22(tt,X),a__U22(tt,X) -> mark(X),a__U31(tt,N) -> a__U32(tt,N),a__U32(tt,N) -> mark(N),a__U41(tt,N,XS) -> a__U42(tt,N,XS),a__U42(tt,N,XS) -> a__head(a__afterNth(mark(N),mark(XS))),a__U51(tt,Y) -> a__U52(tt,Y),a__U52(tt,Y) -> mark(Y),a__U61(tt,N,X,XS) -> a__U62(tt,N,X,XS),a__U62(tt,N,X,XS) -> a__U63(tt,N,X,XS),a__U63(tt,N,X,XS) -> a__U64(a__splitAt(mark(N),mark(XS)),X),a__U64(pair(YS,ZS),X) -> pair(cons(mark(X),YS),mark(ZS)),a__U71(tt,XS) -> a__U72(tt,XS),a__U72(tt,XS) -> mark(XS),a__U81(tt,N,XS) -> a__U82(tt,N,XS),a__U82(tt,N,XS) -> a__fst(a__splitAt(mark(N),mark(XS))),a__afterNth(N,XS) -> a__U11(tt,N,XS),a__fst(pair(X,Y)) -> a__U21(tt,X),a__head(cons(N,XS)) -> a__U31(tt,N),a__natsFrom(N) -> cons(mark(N),natsFrom(s(N))),a__sel(N,XS) -> a__U41(tt,N,XS),a__snd(pair(X,Y)) -> a__U51(tt,Y),a__splitAt(0,XS) -> pair(nil,mark(XS)),a__splitAt(s(N),cons(X,XS)) -> a__U61(tt,N,X,XS),a__tail(cons(N,XS)) -> a__U71(tt,XS),a__take(N,XS) -> a__U81(tt,N,XS),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(U12(X1,X2,X3)) -> a__U12(mark(X1),X2,X3),mark(snd(X)) -> a__snd(mark(X)),mark(splitAt(X1,X2)) -> a__splitAt(mark(X1),mark(X2)),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X1,X2)) -> a__U22(mark(X1),X2),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U32(X1,X2)) -> a__U32(mark(X1),X2),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2,X3)) -> a__U42(mark(X1),X2,X3),mark(head(X)) -> a__head(mark(X)),mark(afterNth(X1,X2)) -> a__afterNth(mark(X1),mark(X2)),mark(U51(X1,X2)) -> a__U51(mark(X1),X2),mark(U52(X1,X2)) -> a__U52(mark(X1),X2),mark(U61(X1,X2,X3,X4)) -> a__U61(mark(X1),X2,X3,X4),mark(U62(X1,X2,X3,X4)) -> a__U62(mark(X1),X2,X3,X4),mark(U63(X1,X2,X3,X4)) -> a__U63(mark(X1),X2,X3,X4),mark(U64(X1,X2)) -> a__U64(mark(X1),X2),mark(U71(X1,X2)) -> a__U71(mark(X1),X2),mark(U72(X1,X2)) -> a__U72(mark(X1),X2),mark(U81(X1,X2,X3)) -> a__U81(mark(X1),X2,X3),mark(U82(X1,X2,X3)) -> a__U82(mark(X1),X2,X3),mark(fst(X)) -> a__fst(mark(X)),mark(natsFrom(X)) -> a__natsFrom(mark(X)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(tail(X)) -> a__tail(mark(X)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(tt) -> tt,mark(pair(X1,X2)) -> pair(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(nil) -> nil,a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__U12(X1,X2,X3) -> U12(X1,X2,X3),a__snd(X) -> snd(X),a__splitAt(X1,X2) -> splitAt(X1,X2),a__U21(X1,X2) -> U21(X1,X2),a__U22(X1,X2) -> U22(X1,X2),a__U31(X1,X2) -> U31(X1,X2),a__U32(X1,X2) -> U32(X1,X2),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2,X3) -> U42(X1,X2,X3),a__head(X) -> head(X),a__afterNth(X1,X2) -> afterNth(X1,X2),a__U51(X1,X2) -> U51(X1,X2),a__U52(X1,X2) -> U52(X1,X2),a__U61(X1,X2,X3,X4) -> U61(X1,X2,X3,X4),a__U62(X1,X2,X3,X4) -> U62(X1,X2,X3,X4),a__U63(X1,X2,X3,X4) -> U63(X1,X2,X3,X4),a__U64(X1,X2) -> U64(X1,X2),a__U71(X1,X2) -> U71(X1,X2),a__U72(X1,X2) -> U72(X1,X2),a__U81(X1,X2,X3) -> U81(X1,X2,X3),a__U82(X1,X2,X3) -> U82(X1,X2,X3),a__fst(X) -> fst(X),a__natsFrom(X) -> natsFrom(X),a__sel(X1,X2) -> sel(X1,X2),a__tail(X) -> tail(X),a__take(X1,X2) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nosorts_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",3),("U12",3),("U21",2),("U22",2),("U31",2),("U32",2),("U41",3),("U42",3),("U51",2),("U52",2),("U61",4),("U62",4),("U63",4),("U64",2),("U71",2),("U72",2),("U81",3),("U82",3),("active",1),("afterNth",2),("cons",2),("fst",1),("head",1),("mark",1),("natsFrom",1),("nil",0),("ok",1),("pair",2),("proper",1),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("top",1),("tt",0)], trsVariables = fromList ["N","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U11(tt,N,XS)) -> mark(U12(tt,N,XS)),active(U12(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U21(tt,X)) -> mark(U22(tt,X)),active(U22(tt,X)) -> mark(X),active(U31(tt,N)) -> mark(U32(tt,N)),active(U32(tt,N)) -> mark(N),active(U41(tt,N,XS)) -> mark(U42(tt,N,XS)),active(U42(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U51(tt,Y)) -> mark(U52(tt,Y)),active(U52(tt,Y)) -> mark(Y),active(U61(tt,N,X,XS)) -> mark(U62(tt,N,X,XS)),active(U62(tt,N,X,XS)) -> mark(U63(tt,N,X,XS)),active(U63(tt,N,X,XS)) -> mark(U64(splitAt(N,XS),X)),active(U64(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U71(tt,XS)) -> mark(U72(tt,XS)),active(U72(tt,XS)) -> mark(XS),active(U81(tt,N,XS)) -> mark(U82(tt,N,XS)),active(U82(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(afterNth(N,XS)) -> mark(U11(tt,N,XS)),active(fst(pair(X,Y))) -> mark(U21(tt,X)),active(head(cons(N,XS))) -> mark(U31(tt,N)),active(natsFrom(N)) -> mark(cons(N,natsFrom(s(N)))),active(sel(N,XS)) -> mark(U41(tt,N,XS)),active(snd(pair(X,Y))) -> mark(U51(tt,Y)),active(splitAt(0,XS)) -> mark(pair(nil,XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U61(tt,N,X,XS)),active(tail(cons(N,XS))) -> mark(U71(tt,XS)),active(take(N,XS)) -> mark(U81(tt,N,XS)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(U12(X1,X2,X3)) -> U12(active(X1),X2,X3),active(snd(X)) -> snd(active(X)),active(splitAt(X1,X2)) -> splitAt(active(X1),X2),active(splitAt(X1,X2)) -> splitAt(X1,active(X2)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X1,X2)) -> U22(active(X1),X2),active(U31(X1,X2)) -> U31(active(X1),X2),active(U32(X1,X2)) -> U32(active(X1),X2),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2,X3)) -> U42(active(X1),X2,X3),active(head(X)) -> head(active(X)),active(afterNth(X1,X2)) -> afterNth(active(X1),X2),active(afterNth(X1,X2)) -> afterNth(X1,active(X2)),active(U51(X1,X2)) -> U51(active(X1),X2),active(U52(X1,X2)) -> U52(active(X1),X2),active(U61(X1,X2,X3,X4)) -> U61(active(X1),X2,X3,X4),active(U62(X1,X2,X3,X4)) -> U62(active(X1),X2,X3,X4),active(U63(X1,X2,X3,X4)) -> U63(active(X1),X2,X3,X4),active(U64(X1,X2)) -> U64(active(X1),X2),active(pair(X1,X2)) -> pair(active(X1),X2),active(pair(X1,X2)) -> pair(X1,active(X2)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U71(X1,X2)) -> U71(active(X1),X2),active(U72(X1,X2)) -> U72(active(X1),X2),active(U81(X1,X2,X3)) -> U81(active(X1),X2,X3),active(U82(X1,X2,X3)) -> U82(active(X1),X2,X3),active(fst(X)) -> fst(active(X)),active(natsFrom(X)) -> natsFrom(active(X)),active(s(X)) -> s(active(X)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),active(tail(X)) -> tail(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),U12(mark(X1),X2,X3) -> mark(U12(X1,X2,X3)),snd(mark(X)) -> mark(snd(X)),splitAt(mark(X1),X2) -> mark(splitAt(X1,X2)),splitAt(X1,mark(X2)) -> mark(splitAt(X1,X2)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X1),X2) -> mark(U22(X1,X2)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U32(mark(X1),X2) -> mark(U32(X1,X2)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2,X3) -> mark(U42(X1,X2,X3)),head(mark(X)) -> mark(head(X)),afterNth(mark(X1),X2) -> mark(afterNth(X1,X2)),afterNth(X1,mark(X2)) -> mark(afterNth(X1,X2)),U51(mark(X1),X2) -> mark(U51(X1,X2)),U52(mark(X1),X2) -> mark(U52(X1,X2)),U61(mark(X1),X2,X3,X4) -> mark(U61(X1,X2,X3,X4)),U62(mark(X1),X2,X3,X4) -> mark(U62(X1,X2,X3,X4)),U63(mark(X1),X2,X3,X4) -> mark(U63(X1,X2,X3,X4)),U64(mark(X1),X2) -> mark(U64(X1,X2)),pair(mark(X1),X2) -> mark(pair(X1,X2)),pair(X1,mark(X2)) -> mark(pair(X1,X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),U71(mark(X1),X2) -> mark(U71(X1,X2)),U72(mark(X1),X2) -> mark(U72(X1,X2)),U81(mark(X1),X2,X3) -> mark(U81(X1,X2,X3)),U82(mark(X1),X2,X3) -> mark(U82(X1,X2,X3)),fst(mark(X)) -> mark(fst(X)),natsFrom(mark(X)) -> mark(natsFrom(X)),s(mark(X)) -> mark(s(X)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),tail(mark(X)) -> mark(tail(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U12(X1,X2,X3)) -> U12(proper(X1),proper(X2),proper(X3)),proper(snd(X)) -> snd(proper(X)),proper(splitAt(X1,X2)) -> splitAt(proper(X1),proper(X2)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X1,X2)) -> U22(proper(X1),proper(X2)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U32(X1,X2)) -> U32(proper(X1),proper(X2)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2,X3)) -> U42(proper(X1),proper(X2),proper(X3)),proper(head(X)) -> head(proper(X)),proper(afterNth(X1,X2)) -> afterNth(proper(X1),proper(X2)),proper(U51(X1,X2)) -> U51(proper(X1),proper(X2)),proper(U52(X1,X2)) -> U52(proper(X1),proper(X2)),proper(U61(X1,X2,X3,X4)) -> U61(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U62(X1,X2,X3,X4)) -> U62(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U63(X1,X2,X3,X4)) -> U63(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U64(X1,X2)) -> U64(proper(X1),proper(X2)),proper(pair(X1,X2)) -> pair(proper(X1),proper(X2)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(U71(X1,X2)) -> U71(proper(X1),proper(X2)),proper(U72(X1,X2)) -> U72(proper(X1),proper(X2)),proper(U81(X1,X2,X3)) -> U81(proper(X1),proper(X2),proper(X3)),proper(U82(X1,X2,X3)) -> U82(proper(X1),proper(X2),proper(X3)),proper(fst(X)) -> fst(proper(X)),proper(natsFrom(X)) -> natsFrom(proper(X)),proper(s(X)) -> s(proper(X)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),proper(0) -> ok(0),proper(nil) -> ok(nil),proper(tail(X)) -> tail(proper(X)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),U12(ok(X1),ok(X2),ok(X3)) -> ok(U12(X1,X2,X3)),snd(ok(X)) -> ok(snd(X)),splitAt(ok(X1),ok(X2)) -> ok(splitAt(X1,X2)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X1),ok(X2)) -> ok(U22(X1,X2)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U32(ok(X1),ok(X2)) -> ok(U32(X1,X2)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2),ok(X3)) -> ok(U42(X1,X2,X3)),head(ok(X)) -> ok(head(X)),afterNth(ok(X1),ok(X2)) -> ok(afterNth(X1,X2)),U51(ok(X1),ok(X2)) -> ok(U51(X1,X2)),U52(ok(X1),ok(X2)) -> ok(U52(X1,X2)),U61(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U61(X1,X2,X3,X4)),U62(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U62(X1,X2,X3,X4)),U63(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U63(X1,X2,X3,X4)),U64(ok(X1),ok(X2)) -> ok(U64(X1,X2)),pair(ok(X1),ok(X2)) -> ok(pair(X1,X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U71(ok(X1),ok(X2)) -> ok(U71(X1,X2)),U72(ok(X1),ok(X2)) -> ok(U72(X1,X2)),U81(ok(X1),ok(X2),ok(X3)) -> ok(U81(X1,X2,X3)),U82(ok(X1),ok(X2),ok(X3)) -> ok(U82(X1,X2,X3)),fst(ok(X)) -> ok(fst(X)),natsFrom(ok(X)) -> ok(natsFrom(X)),s(ok(X)) -> ok(s(X)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),tail(ok(X)) -> ok(tail(X)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nosorts_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",4),("U12",2),("active",1),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U11(tt,N,X,XS)) -> mark(U12(splitAt(N,XS),X)),active(U12(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(afterNth(N,XS)) -> mark(snd(splitAt(N,XS))),active(and(tt,X)) -> mark(X),active(fst(pair(X,Y))) -> mark(X),active(head(cons(N,XS))) -> mark(N),active(natsFrom(N)) -> mark(cons(N,natsFrom(s(N)))),active(sel(N,XS)) -> mark(head(afterNth(N,XS))),active(snd(pair(X,Y))) -> mark(Y),active(splitAt(0,XS)) -> mark(pair(nil,XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U11(tt,N,X,XS)),active(tail(cons(N,XS))) -> mark(XS),active(take(N,XS)) -> mark(fst(splitAt(N,XS))),mark(U11(X1,X2,X3,X4)) -> active(U11(mark(X1),X2,X3,X4)),mark(tt) -> active(tt),mark(U12(X1,X2)) -> active(U12(mark(X1),X2)),mark(splitAt(X1,X2)) -> active(splitAt(mark(X1),mark(X2))),mark(pair(X1,X2)) -> active(pair(mark(X1),mark(X2))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(afterNth(X1,X2)) -> active(afterNth(mark(X1),mark(X2))),mark(snd(X)) -> active(snd(mark(X))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(fst(X)) -> active(fst(mark(X))),mark(head(X)) -> active(head(mark(X))),mark(natsFrom(X)) -> active(natsFrom(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),mark(0) -> active(0),mark(nil) -> active(nil),mark(tail(X)) -> active(tail(mark(X))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),U11(mark(X1),X2,X3,X4) -> U11(X1,X2,X3,X4),U11(X1,mark(X2),X3,X4) -> U11(X1,X2,X3,X4),U11(X1,X2,mark(X3),X4) -> U11(X1,X2,X3,X4),U11(X1,X2,X3,mark(X4)) -> U11(X1,X2,X3,X4),U11(active(X1),X2,X3,X4) -> U11(X1,X2,X3,X4),U11(X1,active(X2),X3,X4) -> U11(X1,X2,X3,X4),U11(X1,X2,active(X3),X4) -> U11(X1,X2,X3,X4),U11(X1,X2,X3,active(X4)) -> U11(X1,X2,X3,X4),U12(mark(X1),X2) -> U12(X1,X2),U12(X1,mark(X2)) -> U12(X1,X2),U12(active(X1),X2) -> U12(X1,X2),U12(X1,active(X2)) -> U12(X1,X2),splitAt(mark(X1),X2) -> splitAt(X1,X2),splitAt(X1,mark(X2)) -> splitAt(X1,X2),splitAt(active(X1),X2) -> splitAt(X1,X2),splitAt(X1,active(X2)) -> splitAt(X1,X2),pair(mark(X1),X2) -> pair(X1,X2),pair(X1,mark(X2)) -> pair(X1,X2),pair(active(X1),X2) -> pair(X1,X2),pair(X1,active(X2)) -> pair(X1,X2),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),afterNth(mark(X1),X2) -> afterNth(X1,X2),afterNth(X1,mark(X2)) -> afterNth(X1,X2),afterNth(active(X1),X2) -> afterNth(X1,X2),afterNth(X1,active(X2)) -> afterNth(X1,X2),snd(mark(X)) -> snd(X),snd(active(X)) -> snd(X),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),fst(mark(X)) -> fst(X),fst(active(X)) -> fst(X),head(mark(X)) -> head(X),head(active(X)) -> head(X),natsFrom(mark(X)) -> natsFrom(X),natsFrom(active(X)) -> natsFrom(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nosorts_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",4),("U12",2),("a__U11",4),("a__U12",2),("a__afterNth",2),("a__and",2),("a__fst",1),("a__head",1),("a__natsFrom",1),("a__sel",2),("a__snd",1),("a__splitAt",2),("a__tail",1),("a__take",2),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [a__U11(tt,N,X,XS) -> a__U12(a__splitAt(mark(N),mark(XS)),X),a__U12(pair(YS,ZS),X) -> pair(cons(mark(X),YS),mark(ZS)),a__afterNth(N,XS) -> a__snd(a__splitAt(mark(N),mark(XS))),a__and(tt,X) -> mark(X),a__fst(pair(X,Y)) -> mark(X),a__head(cons(N,XS)) -> mark(N),a__natsFrom(N) -> cons(mark(N),natsFrom(s(N))),a__sel(N,XS) -> a__head(a__afterNth(mark(N),mark(XS))),a__snd(pair(X,Y)) -> mark(Y),a__splitAt(0,XS) -> pair(nil,mark(XS)),a__splitAt(s(N),cons(X,XS)) -> a__U11(tt,N,X,XS),a__tail(cons(N,XS)) -> mark(XS),a__take(N,XS) -> a__fst(a__splitAt(mark(N),mark(XS))),mark(U11(X1,X2,X3,X4)) -> a__U11(mark(X1),X2,X3,X4),mark(U12(X1,X2)) -> a__U12(mark(X1),X2),mark(splitAt(X1,X2)) -> a__splitAt(mark(X1),mark(X2)),mark(afterNth(X1,X2)) -> a__afterNth(mark(X1),mark(X2)),mark(snd(X)) -> a__snd(mark(X)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(fst(X)) -> a__fst(mark(X)),mark(head(X)) -> a__head(mark(X)),mark(natsFrom(X)) -> a__natsFrom(mark(X)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(tail(X)) -> a__tail(mark(X)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(tt) -> tt,mark(pair(X1,X2)) -> pair(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(nil) -> nil,a__U11(X1,X2,X3,X4) -> U11(X1,X2,X3,X4),a__U12(X1,X2) -> U12(X1,X2),a__splitAt(X1,X2) -> splitAt(X1,X2),a__afterNth(X1,X2) -> afterNth(X1,X2),a__snd(X) -> snd(X),a__and(X1,X2) -> and(X1,X2),a__fst(X) -> fst(X),a__head(X) -> head(X),a__natsFrom(X) -> natsFrom(X),a__sel(X1,X2) -> sel(X1,X2),a__tail(X) -> tail(X),a__take(X1,X2) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nosorts_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",4),("U12",2),("active",1),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("mark",1),("natsFrom",1),("nil",0),("ok",1),("pair",2),("proper",1),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("top",1),("tt",0)], trsVariables = fromList ["N","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U11(tt,N,X,XS)) -> mark(U12(splitAt(N,XS),X)),active(U12(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(afterNth(N,XS)) -> mark(snd(splitAt(N,XS))),active(and(tt,X)) -> mark(X),active(fst(pair(X,Y))) -> mark(X),active(head(cons(N,XS))) -> mark(N),active(natsFrom(N)) -> mark(cons(N,natsFrom(s(N)))),active(sel(N,XS)) -> mark(head(afterNth(N,XS))),active(snd(pair(X,Y))) -> mark(Y),active(splitAt(0,XS)) -> mark(pair(nil,XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U11(tt,N,X,XS)),active(tail(cons(N,XS))) -> mark(XS),active(take(N,XS)) -> mark(fst(splitAt(N,XS))),active(U11(X1,X2,X3,X4)) -> U11(active(X1),X2,X3,X4),active(U12(X1,X2)) -> U12(active(X1),X2),active(splitAt(X1,X2)) -> splitAt(active(X1),X2),active(splitAt(X1,X2)) -> splitAt(X1,active(X2)),active(pair(X1,X2)) -> pair(active(X1),X2),active(pair(X1,X2)) -> pair(X1,active(X2)),active(cons(X1,X2)) -> cons(active(X1),X2),active(afterNth(X1,X2)) -> afterNth(active(X1),X2),active(afterNth(X1,X2)) -> afterNth(X1,active(X2)),active(snd(X)) -> snd(active(X)),active(and(X1,X2)) -> and(active(X1),X2),active(fst(X)) -> fst(active(X)),active(head(X)) -> head(active(X)),active(natsFrom(X)) -> natsFrom(active(X)),active(s(X)) -> s(active(X)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),active(tail(X)) -> tail(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),U11(mark(X1),X2,X3,X4) -> mark(U11(X1,X2,X3,X4)),U12(mark(X1),X2) -> mark(U12(X1,X2)),splitAt(mark(X1),X2) -> mark(splitAt(X1,X2)),splitAt(X1,mark(X2)) -> mark(splitAt(X1,X2)),pair(mark(X1),X2) -> mark(pair(X1,X2)),pair(X1,mark(X2)) -> mark(pair(X1,X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),afterNth(mark(X1),X2) -> mark(afterNth(X1,X2)),afterNth(X1,mark(X2)) -> mark(afterNth(X1,X2)),snd(mark(X)) -> mark(snd(X)),and(mark(X1),X2) -> mark(and(X1,X2)),fst(mark(X)) -> mark(fst(X)),head(mark(X)) -> mark(head(X)),natsFrom(mark(X)) -> mark(natsFrom(X)),s(mark(X)) -> mark(s(X)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),tail(mark(X)) -> mark(tail(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),proper(U11(X1,X2,X3,X4)) -> U11(proper(X1),proper(X2),proper(X3),proper(X4)),proper(tt) -> ok(tt),proper(U12(X1,X2)) -> U12(proper(X1),proper(X2)),proper(splitAt(X1,X2)) -> splitAt(proper(X1),proper(X2)),proper(pair(X1,X2)) -> pair(proper(X1),proper(X2)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(afterNth(X1,X2)) -> afterNth(proper(X1),proper(X2)),proper(snd(X)) -> snd(proper(X)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(fst(X)) -> fst(proper(X)),proper(head(X)) -> head(proper(X)),proper(natsFrom(X)) -> natsFrom(proper(X)),proper(s(X)) -> s(proper(X)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),proper(0) -> ok(0),proper(nil) -> ok(nil),proper(tail(X)) -> tail(proper(X)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),U11(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U11(X1,X2,X3,X4)),U12(ok(X1),ok(X2)) -> ok(U12(X1,X2)),splitAt(ok(X1),ok(X2)) -> ok(splitAt(X1,X2)),pair(ok(X1),ok(X2)) -> ok(pair(X1,X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),afterNth(ok(X1),ok(X2)) -> ok(afterNth(X1,X2)),snd(ok(X)) -> ok(snd(X)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),fst(ok(X)) -> ok(fst(X)),head(ok(X)) -> ok(head(X)),natsFrom(ok(X)) -> ok(natsFrom(X)),s(ok(X)) -> ok(s(X)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),tail(ok(X)) -> ok(tail(X)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nokinds_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",2),("U102",1),("U11",3),("U111",1),("U12",3),("U121",1),("U131",2),("U132",1),("U141",2),("U142",1),("U151",2),("U152",1),("U161",2),("U171",3),("U172",3),("U181",2),("U182",2),("U191",2),("U201",4),("U202",4),("U203",4),("U204",2),("U21",3),("U211",2),("U212",2),("U22",2),("U221",3),("U222",3),("U31",3),("U32",2),("U41",2),("U42",1),("U51",2),("U52",1),("U61",1),("U71",1),("U81",1),("U91",1),("active",1),("afterNth",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isNatural",1),("isPLNat",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U101(tt,V2)) -> mark(U102(isLNat(V2))),active(U102(tt)) -> mark(tt),active(U11(tt,N,XS)) -> mark(U12(isLNat(XS),N,XS)),active(U111(tt)) -> mark(tt),active(U12(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U121(tt)) -> mark(tt),active(U131(tt,V2)) -> mark(U132(isLNat(V2))),active(U132(tt)) -> mark(tt),active(U141(tt,V2)) -> mark(U142(isLNat(V2))),active(U142(tt)) -> mark(tt),active(U151(tt,V2)) -> mark(U152(isLNat(V2))),active(U152(tt)) -> mark(tt),active(U161(tt,N)) -> mark(cons(N,natsFrom(s(N)))),active(U171(tt,N,XS)) -> mark(U172(isLNat(XS),N,XS)),active(U172(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U181(tt,Y)) -> mark(U182(isLNat(Y),Y)),active(U182(tt,Y)) -> mark(Y),active(U191(tt,XS)) -> mark(pair(nil,XS)),active(U201(tt,N,X,XS)) -> mark(U202(isNatural(X),N,X,XS)),active(U202(tt,N,X,XS)) -> mark(U203(isLNat(XS),N,X,XS)),active(U203(tt,N,X,XS)) -> mark(U204(splitAt(N,XS),X)),active(U204(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U21(tt,X,Y)) -> mark(U22(isLNat(Y),X)),active(U211(tt,XS)) -> mark(U212(isLNat(XS),XS)),active(U212(tt,XS)) -> mark(XS),active(U22(tt,X)) -> mark(X),active(U221(tt,N,XS)) -> mark(U222(isLNat(XS),N,XS)),active(U222(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(U31(tt,N,XS)) -> mark(U32(isLNat(XS),N)),active(U32(tt,N)) -> mark(N),active(U41(tt,V2)) -> mark(U42(isLNat(V2))),active(U42(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isLNat(V2))),active(U52(tt)) -> mark(tt),active(U61(tt)) -> mark(tt),active(U71(tt)) -> mark(tt),active(U81(tt)) -> mark(tt),active(U91(tt)) -> mark(tt),active(afterNth(N,XS)) -> mark(U11(isNatural(N),N,XS)),active(fst(pair(X,Y))) -> mark(U21(isLNat(X),X,Y)),active(head(cons(N,XS))) -> mark(U31(isNatural(N),N,XS)),active(isLNat(nil)) -> mark(tt),active(isLNat(afterNth(V1,V2))) -> mark(U41(isNatural(V1),V2)),active(isLNat(cons(V1,V2))) -> mark(U51(isNatural(V1),V2)),active(isLNat(fst(V1))) -> mark(U61(isPLNat(V1))),active(isLNat(natsFrom(V1))) -> mark(U71(isNatural(V1))),active(isLNat(snd(V1))) -> mark(U81(isPLNat(V1))),active(isLNat(tail(V1))) -> mark(U91(isLNat(V1))),active(isLNat(take(V1,V2))) -> mark(U101(isNatural(V1),V2)),active(isNatural(0)) -> mark(tt),active(isNatural(head(V1))) -> mark(U111(isLNat(V1))),active(isNatural(s(V1))) -> mark(U121(isNatural(V1))),active(isNatural(sel(V1,V2))) -> mark(U131(isNatural(V1),V2)),active(isPLNat(pair(V1,V2))) -> mark(U141(isLNat(V1),V2)),active(isPLNat(splitAt(V1,V2))) -> mark(U151(isNatural(V1),V2)),active(natsFrom(N)) -> mark(U161(isNatural(N),N)),active(sel(N,XS)) -> mark(U171(isNatural(N),N,XS)),active(snd(pair(X,Y))) -> mark(U181(isLNat(X),Y)),active(splitAt(0,XS)) -> mark(U191(isLNat(XS),XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U201(isNatural(N),N,X,XS)),active(tail(cons(N,XS))) -> mark(U211(isNatural(N),XS)),active(take(N,XS)) -> mark(U221(isNatural(N),N,XS)),mark(U101(X1,X2)) -> active(U101(mark(X1),X2)),mark(tt) -> active(tt),mark(U102(X)) -> active(U102(mark(X))),mark(isLNat(X)) -> active(isLNat(X)),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(U12(X1,X2,X3)) -> active(U12(mark(X1),X2,X3)),mark(U111(X)) -> active(U111(mark(X))),mark(snd(X)) -> active(snd(mark(X))),mark(splitAt(X1,X2)) -> active(splitAt(mark(X1),mark(X2))),mark(U121(X)) -> active(U121(mark(X))),mark(U131(X1,X2)) -> active(U131(mark(X1),X2)),mark(U132(X)) -> active(U132(mark(X))),mark(U141(X1,X2)) -> active(U141(mark(X1),X2)),mark(U142(X)) -> active(U142(mark(X))),mark(U151(X1,X2)) -> active(U151(mark(X1),X2)),mark(U152(X)) -> active(U152(mark(X))),mark(U161(X1,X2)) -> active(U161(mark(X1),X2)),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(natsFrom(X)) -> active(natsFrom(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(U171(X1,X2,X3)) -> active(U171(mark(X1),X2,X3)),mark(U172(X1,X2,X3)) -> active(U172(mark(X1),X2,X3)),mark(head(X)) -> active(head(mark(X))),mark(afterNth(X1,X2)) -> active(afterNth(mark(X1),mark(X2))),mark(U181(X1,X2)) -> active(U181(mark(X1),X2)),mark(U182(X1,X2)) -> active(U182(mark(X1),X2)),mark(U191(X1,X2)) -> active(U191(mark(X1),X2)),mark(pair(X1,X2)) -> active(pair(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(U201(X1,X2,X3,X4)) -> active(U201(mark(X1),X2,X3,X4)),mark(U202(X1,X2,X3,X4)) -> active(U202(mark(X1),X2,X3,X4)),mark(isNatural(X)) -> active(isNatural(X)),mark(U203(X1,X2,X3,X4)) -> active(U203(mark(X1),X2,X3,X4)),mark(U204(X1,X2)) -> active(U204(mark(X1),X2)),mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3)),mark(U22(X1,X2)) -> active(U22(mark(X1),X2)),mark(U211(X1,X2)) -> active(U211(mark(X1),X2)),mark(U212(X1,X2)) -> active(U212(mark(X1),X2)),mark(U221(X1,X2,X3)) -> active(U221(mark(X1),X2,X3)),mark(U222(X1,X2,X3)) -> active(U222(mark(X1),X2,X3)),mark(fst(X)) -> active(fst(mark(X))),mark(U31(X1,X2,X3)) -> active(U31(mark(X1),X2,X3)),mark(U32(X1,X2)) -> active(U32(mark(X1),X2)),mark(U41(X1,X2)) -> active(U41(mark(X1),X2)),mark(U42(X)) -> active(U42(mark(X))),mark(U51(X1,X2)) -> active(U51(mark(X1),X2)),mark(U52(X)) -> active(U52(mark(X))),mark(U61(X)) -> active(U61(mark(X))),mark(U71(X)) -> active(U71(mark(X))),mark(U81(X)) -> active(U81(mark(X))),mark(U91(X)) -> active(U91(mark(X))),mark(isPLNat(X)) -> active(isPLNat(X)),mark(tail(X)) -> active(tail(mark(X))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(0) -> active(0),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),U101(mark(X1),X2) -> U101(X1,X2),U101(X1,mark(X2)) -> U101(X1,X2),U101(active(X1),X2) -> U101(X1,X2),U101(X1,active(X2)) -> U101(X1,X2),U102(mark(X)) -> U102(X),U102(active(X)) -> U102(X),isLNat(mark(X)) -> isLNat(X),isLNat(active(X)) -> isLNat(X),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),U12(mark(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,mark(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,mark(X3)) -> U12(X1,X2,X3),U12(active(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,active(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,active(X3)) -> U12(X1,X2,X3),U111(mark(X)) -> U111(X),U111(active(X)) -> U111(X),snd(mark(X)) -> snd(X),snd(active(X)) -> snd(X),splitAt(mark(X1),X2) -> splitAt(X1,X2),splitAt(X1,mark(X2)) -> splitAt(X1,X2),splitAt(active(X1),X2) -> splitAt(X1,X2),splitAt(X1,active(X2)) -> splitAt(X1,X2),U121(mark(X)) -> U121(X),U121(active(X)) -> U121(X),U131(mark(X1),X2) -> U131(X1,X2),U131(X1,mark(X2)) -> U131(X1,X2),U131(active(X1),X2) -> U131(X1,X2),U131(X1,active(X2)) -> U131(X1,X2),U132(mark(X)) -> U132(X),U132(active(X)) -> U132(X),U141(mark(X1),X2) -> U141(X1,X2),U141(X1,mark(X2)) -> U141(X1,X2),U141(active(X1),X2) -> U141(X1,X2),U141(X1,active(X2)) -> U141(X1,X2),U142(mark(X)) -> U142(X),U142(active(X)) -> U142(X),U151(mark(X1),X2) -> U151(X1,X2),U151(X1,mark(X2)) -> U151(X1,X2),U151(active(X1),X2) -> U151(X1,X2),U151(X1,active(X2)) -> U151(X1,X2),U152(mark(X)) -> U152(X),U152(active(X)) -> U152(X),U161(mark(X1),X2) -> U161(X1,X2),U161(X1,mark(X2)) -> U161(X1,X2),U161(active(X1),X2) -> U161(X1,X2),U161(X1,active(X2)) -> U161(X1,X2),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),natsFrom(mark(X)) -> natsFrom(X),natsFrom(active(X)) -> natsFrom(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),U171(mark(X1),X2,X3) -> U171(X1,X2,X3),U171(X1,mark(X2),X3) -> U171(X1,X2,X3),U171(X1,X2,mark(X3)) -> U171(X1,X2,X3),U171(active(X1),X2,X3) -> U171(X1,X2,X3),U171(X1,active(X2),X3) -> U171(X1,X2,X3),U171(X1,X2,active(X3)) -> U171(X1,X2,X3),U172(mark(X1),X2,X3) -> U172(X1,X2,X3),U172(X1,mark(X2),X3) -> U172(X1,X2,X3),U172(X1,X2,mark(X3)) -> U172(X1,X2,X3),U172(active(X1),X2,X3) -> U172(X1,X2,X3),U172(X1,active(X2),X3) -> U172(X1,X2,X3),U172(X1,X2,active(X3)) -> U172(X1,X2,X3),head(mark(X)) -> head(X),head(active(X)) -> head(X),afterNth(mark(X1),X2) -> afterNth(X1,X2),afterNth(X1,mark(X2)) -> afterNth(X1,X2),afterNth(active(X1),X2) -> afterNth(X1,X2),afterNth(X1,active(X2)) -> afterNth(X1,X2),U181(mark(X1),X2) -> U181(X1,X2),U181(X1,mark(X2)) -> U181(X1,X2),U181(active(X1),X2) -> U181(X1,X2),U181(X1,active(X2)) -> U181(X1,X2),U182(mark(X1),X2) -> U182(X1,X2),U182(X1,mark(X2)) -> U182(X1,X2),U182(active(X1),X2) -> U182(X1,X2),U182(X1,active(X2)) -> U182(X1,X2),U191(mark(X1),X2) -> U191(X1,X2),U191(X1,mark(X2)) -> U191(X1,X2),U191(active(X1),X2) -> U191(X1,X2),U191(X1,active(X2)) -> U191(X1,X2),pair(mark(X1),X2) -> pair(X1,X2),pair(X1,mark(X2)) -> pair(X1,X2),pair(active(X1),X2) -> pair(X1,X2),pair(X1,active(X2)) -> pair(X1,X2),U201(mark(X1),X2,X3,X4) -> U201(X1,X2,X3,X4),U201(X1,mark(X2),X3,X4) -> U201(X1,X2,X3,X4),U201(X1,X2,mark(X3),X4) -> U201(X1,X2,X3,X4),U201(X1,X2,X3,mark(X4)) -> U201(X1,X2,X3,X4),U201(active(X1),X2,X3,X4) -> U201(X1,X2,X3,X4),U201(X1,active(X2),X3,X4) -> U201(X1,X2,X3,X4),U201(X1,X2,active(X3),X4) -> U201(X1,X2,X3,X4),U201(X1,X2,X3,active(X4)) -> U201(X1,X2,X3,X4),U202(mark(X1),X2,X3,X4) -> U202(X1,X2,X3,X4),U202(X1,mark(X2),X3,X4) -> U202(X1,X2,X3,X4),U202(X1,X2,mark(X3),X4) -> U202(X1,X2,X3,X4),U202(X1,X2,X3,mark(X4)) -> U202(X1,X2,X3,X4),U202(active(X1),X2,X3,X4) -> U202(X1,X2,X3,X4),U202(X1,active(X2),X3,X4) -> U202(X1,X2,X3,X4),U202(X1,X2,active(X3),X4) -> U202(X1,X2,X3,X4),U202(X1,X2,X3,active(X4)) -> U202(X1,X2,X3,X4),isNatural(mark(X)) -> isNatural(X),isNatural(active(X)) -> isNatural(X),U203(mark(X1),X2,X3,X4) -> U203(X1,X2,X3,X4),U203(X1,mark(X2),X3,X4) -> U203(X1,X2,X3,X4),U203(X1,X2,mark(X3),X4) -> U203(X1,X2,X3,X4),U203(X1,X2,X3,mark(X4)) -> U203(X1,X2,X3,X4),U203(active(X1),X2,X3,X4) -> U203(X1,X2,X3,X4),U203(X1,active(X2),X3,X4) -> U203(X1,X2,X3,X4),U203(X1,X2,active(X3),X4) -> U203(X1,X2,X3,X4),U203(X1,X2,X3,active(X4)) -> U203(X1,X2,X3,X4),U204(mark(X1),X2) -> U204(X1,X2),U204(X1,mark(X2)) -> U204(X1,X2),U204(active(X1),X2) -> U204(X1,X2),U204(X1,active(X2)) -> U204(X1,X2),U21(mark(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,mark(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,mark(X3)) -> U21(X1,X2,X3),U21(active(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,active(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,active(X3)) -> U21(X1,X2,X3),U22(mark(X1),X2) -> U22(X1,X2),U22(X1,mark(X2)) -> U22(X1,X2),U22(active(X1),X2) -> U22(X1,X2),U22(X1,active(X2)) -> U22(X1,X2),U211(mark(X1),X2) -> U211(X1,X2),U211(X1,mark(X2)) -> U211(X1,X2),U211(active(X1),X2) -> U211(X1,X2),U211(X1,active(X2)) -> U211(X1,X2),U212(mark(X1),X2) -> U212(X1,X2),U212(X1,mark(X2)) -> U212(X1,X2),U212(active(X1),X2) -> U212(X1,X2),U212(X1,active(X2)) -> U212(X1,X2),U221(mark(X1),X2,X3) -> U221(X1,X2,X3),U221(X1,mark(X2),X3) -> U221(X1,X2,X3),U221(X1,X2,mark(X3)) -> U221(X1,X2,X3),U221(active(X1),X2,X3) -> U221(X1,X2,X3),U221(X1,active(X2),X3) -> U221(X1,X2,X3),U221(X1,X2,active(X3)) -> U221(X1,X2,X3),U222(mark(X1),X2,X3) -> U222(X1,X2,X3),U222(X1,mark(X2),X3) -> U222(X1,X2,X3),U222(X1,X2,mark(X3)) -> U222(X1,X2,X3),U222(active(X1),X2,X3) -> U222(X1,X2,X3),U222(X1,active(X2),X3) -> U222(X1,X2,X3),U222(X1,X2,active(X3)) -> U222(X1,X2,X3),fst(mark(X)) -> fst(X),fst(active(X)) -> fst(X),U31(mark(X1),X2,X3) -> U31(X1,X2,X3),U31(X1,mark(X2),X3) -> U31(X1,X2,X3),U31(X1,X2,mark(X3)) -> U31(X1,X2,X3),U31(active(X1),X2,X3) -> U31(X1,X2,X3),U31(X1,active(X2),X3) -> U31(X1,X2,X3),U31(X1,X2,active(X3)) -> U31(X1,X2,X3),U32(mark(X1),X2) -> U32(X1,X2),U32(X1,mark(X2)) -> U32(X1,X2),U32(active(X1),X2) -> U32(X1,X2),U32(X1,active(X2)) -> U32(X1,X2),U41(mark(X1),X2) -> U41(X1,X2),U41(X1,mark(X2)) -> U41(X1,X2),U41(active(X1),X2) -> U41(X1,X2),U41(X1,active(X2)) -> U41(X1,X2),U42(mark(X)) -> U42(X),U42(active(X)) -> U42(X),U51(mark(X1),X2) -> U51(X1,X2),U51(X1,mark(X2)) -> U51(X1,X2),U51(active(X1),X2) -> U51(X1,X2),U51(X1,active(X2)) -> U51(X1,X2),U52(mark(X)) -> U52(X),U52(active(X)) -> U52(X),U61(mark(X)) -> U61(X),U61(active(X)) -> U61(X),U71(mark(X)) -> U71(X),U71(active(X)) -> U71(X),U81(mark(X)) -> U81(X),U81(active(X)) -> U81(X),U91(mark(X)) -> U91(X),U91(active(X)) -> U91(X),isPLNat(mark(X)) -> isPLNat(X),isPLNat(active(X)) -> isPLNat(X),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nokinds_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",2),("U102",1),("U11",3),("U111",1),("U12",3),("U121",1),("U131",2),("U132",1),("U141",2),("U142",1),("U151",2),("U152",1),("U161",2),("U171",3),("U172",3),("U181",2),("U182",2),("U191",2),("U201",4),("U202",4),("U203",4),("U204",2),("U21",3),("U211",2),("U212",2),("U22",2),("U221",3),("U222",3),("U31",3),("U32",2),("U41",2),("U42",1),("U51",2),("U52",1),("U61",1),("U71",1),("U81",1),("U91",1),("a__U101",2),("a__U102",1),("a__U11",3),("a__U111",1),("a__U12",3),("a__U121",1),("a__U131",2),("a__U132",1),("a__U141",2),("a__U142",1),("a__U151",2),("a__U152",1),("a__U161",2),("a__U171",3),("a__U172",3),("a__U181",2),("a__U182",2),("a__U191",2),("a__U201",4),("a__U202",4),("a__U203",4),("a__U204",2),("a__U21",3),("a__U211",2),("a__U212",2),("a__U22",2),("a__U221",3),("a__U222",3),("a__U31",3),("a__U32",2),("a__U41",2),("a__U42",1),("a__U51",2),("a__U52",1),("a__U61",1),("a__U71",1),("a__U81",1),("a__U91",1),("a__afterNth",2),("a__fst",1),("a__head",1),("a__isLNat",1),("a__isNatural",1),("a__isPLNat",1),("a__natsFrom",1),("a__sel",2),("a__snd",1),("a__splitAt",2),("a__tail",1),("a__take",2),("afterNth",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isNatural",1),("isPLNat",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [a__U101(tt,V2) -> a__U102(a__isLNat(V2)),a__U102(tt) -> tt,a__U11(tt,N,XS) -> a__U12(a__isLNat(XS),N,XS),a__U111(tt) -> tt,a__U12(tt,N,XS) -> a__snd(a__splitAt(mark(N),mark(XS))),a__U121(tt) -> tt,a__U131(tt,V2) -> a__U132(a__isLNat(V2)),a__U132(tt) -> tt,a__U141(tt,V2) -> a__U142(a__isLNat(V2)),a__U142(tt) -> tt,a__U151(tt,V2) -> a__U152(a__isLNat(V2)),a__U152(tt) -> tt,a__U161(tt,N) -> cons(mark(N),natsFrom(s(N))),a__U171(tt,N,XS) -> a__U172(a__isLNat(XS),N,XS),a__U172(tt,N,XS) -> a__head(a__afterNth(mark(N),mark(XS))),a__U181(tt,Y) -> a__U182(a__isLNat(Y),Y),a__U182(tt,Y) -> mark(Y),a__U191(tt,XS) -> pair(nil,mark(XS)),a__U201(tt,N,X,XS) -> a__U202(a__isNatural(X),N,X,XS),a__U202(tt,N,X,XS) -> a__U203(a__isLNat(XS),N,X,XS),a__U203(tt,N,X,XS) -> a__U204(a__splitAt(mark(N),mark(XS)),X),a__U204(pair(YS,ZS),X) -> pair(cons(mark(X),YS),mark(ZS)),a__U21(tt,X,Y) -> a__U22(a__isLNat(Y),X),a__U211(tt,XS) -> a__U212(a__isLNat(XS),XS),a__U212(tt,XS) -> mark(XS),a__U22(tt,X) -> mark(X),a__U221(tt,N,XS) -> a__U222(a__isLNat(XS),N,XS),a__U222(tt,N,XS) -> a__fst(a__splitAt(mark(N),mark(XS))),a__U31(tt,N,XS) -> a__U32(a__isLNat(XS),N),a__U32(tt,N) -> mark(N),a__U41(tt,V2) -> a__U42(a__isLNat(V2)),a__U42(tt) -> tt,a__U51(tt,V2) -> a__U52(a__isLNat(V2)),a__U52(tt) -> tt,a__U61(tt) -> tt,a__U71(tt) -> tt,a__U81(tt) -> tt,a__U91(tt) -> tt,a__afterNth(N,XS) -> a__U11(a__isNatural(N),N,XS),a__fst(pair(X,Y)) -> a__U21(a__isLNat(X),X,Y),a__head(cons(N,XS)) -> a__U31(a__isNatural(N),N,XS),a__isLNat(nil) -> tt,a__isLNat(afterNth(V1,V2)) -> a__U41(a__isNatural(V1),V2),a__isLNat(cons(V1,V2)) -> a__U51(a__isNatural(V1),V2),a__isLNat(fst(V1)) -> a__U61(a__isPLNat(V1)),a__isLNat(natsFrom(V1)) -> a__U71(a__isNatural(V1)),a__isLNat(snd(V1)) -> a__U81(a__isPLNat(V1)),a__isLNat(tail(V1)) -> a__U91(a__isLNat(V1)),a__isLNat(take(V1,V2)) -> a__U101(a__isNatural(V1),V2),a__isNatural(0) -> tt,a__isNatural(head(V1)) -> a__U111(a__isLNat(V1)),a__isNatural(s(V1)) -> a__U121(a__isNatural(V1)),a__isNatural(sel(V1,V2)) -> a__U131(a__isNatural(V1),V2),a__isPLNat(pair(V1,V2)) -> a__U141(a__isLNat(V1),V2),a__isPLNat(splitAt(V1,V2)) -> a__U151(a__isNatural(V1),V2),a__natsFrom(N) -> a__U161(a__isNatural(N),N),a__sel(N,XS) -> a__U171(a__isNatural(N),N,XS),a__snd(pair(X,Y)) -> a__U181(a__isLNat(X),Y),a__splitAt(0,XS) -> a__U191(a__isLNat(XS),XS),a__splitAt(s(N),cons(X,XS)) -> a__U201(a__isNatural(N),N,X,XS),a__tail(cons(N,XS)) -> a__U211(a__isNatural(N),XS),a__take(N,XS) -> a__U221(a__isNatural(N),N,XS),mark(U101(X1,X2)) -> a__U101(mark(X1),X2),mark(U102(X)) -> a__U102(mark(X)),mark(isLNat(X)) -> a__isLNat(X),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(U12(X1,X2,X3)) -> a__U12(mark(X1),X2,X3),mark(U111(X)) -> a__U111(mark(X)),mark(snd(X)) -> a__snd(mark(X)),mark(splitAt(X1,X2)) -> a__splitAt(mark(X1),mark(X2)),mark(U121(X)) -> a__U121(mark(X)),mark(U131(X1,X2)) -> a__U131(mark(X1),X2),mark(U132(X)) -> a__U132(mark(X)),mark(U141(X1,X2)) -> a__U141(mark(X1),X2),mark(U142(X)) -> a__U142(mark(X)),mark(U151(X1,X2)) -> a__U151(mark(X1),X2),mark(U152(X)) -> a__U152(mark(X)),mark(U161(X1,X2)) -> a__U161(mark(X1),X2),mark(natsFrom(X)) -> a__natsFrom(mark(X)),mark(U171(X1,X2,X3)) -> a__U171(mark(X1),X2,X3),mark(U172(X1,X2,X3)) -> a__U172(mark(X1),X2,X3),mark(head(X)) -> a__head(mark(X)),mark(afterNth(X1,X2)) -> a__afterNth(mark(X1),mark(X2)),mark(U181(X1,X2)) -> a__U181(mark(X1),X2),mark(U182(X1,X2)) -> a__U182(mark(X1),X2),mark(U191(X1,X2)) -> a__U191(mark(X1),X2),mark(U201(X1,X2,X3,X4)) -> a__U201(mark(X1),X2,X3,X4),mark(U202(X1,X2,X3,X4)) -> a__U202(mark(X1),X2,X3,X4),mark(isNatural(X)) -> a__isNatural(X),mark(U203(X1,X2,X3,X4)) -> a__U203(mark(X1),X2,X3,X4),mark(U204(X1,X2)) -> a__U204(mark(X1),X2),mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3),mark(U22(X1,X2)) -> a__U22(mark(X1),X2),mark(U211(X1,X2)) -> a__U211(mark(X1),X2),mark(U212(X1,X2)) -> a__U212(mark(X1),X2),mark(U221(X1,X2,X3)) -> a__U221(mark(X1),X2,X3),mark(U222(X1,X2,X3)) -> a__U222(mark(X1),X2,X3),mark(fst(X)) -> a__fst(mark(X)),mark(U31(X1,X2,X3)) -> a__U31(mark(X1),X2,X3),mark(U32(X1,X2)) -> a__U32(mark(X1),X2),mark(U41(X1,X2)) -> a__U41(mark(X1),X2),mark(U42(X)) -> a__U42(mark(X)),mark(U51(X1,X2)) -> a__U51(mark(X1),X2),mark(U52(X)) -> a__U52(mark(X)),mark(U61(X)) -> a__U61(mark(X)),mark(U71(X)) -> a__U71(mark(X)),mark(U81(X)) -> a__U81(mark(X)),mark(U91(X)) -> a__U91(mark(X)),mark(isPLNat(X)) -> a__isPLNat(X),mark(tail(X)) -> a__tail(mark(X)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(tt) -> tt,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(pair(X1,X2)) -> pair(mark(X1),mark(X2)),mark(nil) -> nil,mark(0) -> 0,a__U101(X1,X2) -> U101(X1,X2),a__U102(X) -> U102(X),a__isLNat(X) -> isLNat(X),a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__U12(X1,X2,X3) -> U12(X1,X2,X3),a__U111(X) -> U111(X),a__snd(X) -> snd(X),a__splitAt(X1,X2) -> splitAt(X1,X2),a__U121(X) -> U121(X),a__U131(X1,X2) -> U131(X1,X2),a__U132(X) -> U132(X),a__U141(X1,X2) -> U141(X1,X2),a__U142(X) -> U142(X),a__U151(X1,X2) -> U151(X1,X2),a__U152(X) -> U152(X),a__U161(X1,X2) -> U161(X1,X2),a__natsFrom(X) -> natsFrom(X),a__U171(X1,X2,X3) -> U171(X1,X2,X3),a__U172(X1,X2,X3) -> U172(X1,X2,X3),a__head(X) -> head(X),a__afterNth(X1,X2) -> afterNth(X1,X2),a__U181(X1,X2) -> U181(X1,X2),a__U182(X1,X2) -> U182(X1,X2),a__U191(X1,X2) -> U191(X1,X2),a__U201(X1,X2,X3,X4) -> U201(X1,X2,X3,X4),a__U202(X1,X2,X3,X4) -> U202(X1,X2,X3,X4),a__isNatural(X) -> isNatural(X),a__U203(X1,X2,X3,X4) -> U203(X1,X2,X3,X4),a__U204(X1,X2) -> U204(X1,X2),a__U21(X1,X2,X3) -> U21(X1,X2,X3),a__U22(X1,X2) -> U22(X1,X2),a__U211(X1,X2) -> U211(X1,X2),a__U212(X1,X2) -> U212(X1,X2),a__U221(X1,X2,X3) -> U221(X1,X2,X3),a__U222(X1,X2,X3) -> U222(X1,X2,X3),a__fst(X) -> fst(X),a__U31(X1,X2,X3) -> U31(X1,X2,X3),a__U32(X1,X2) -> U32(X1,X2),a__U41(X1,X2) -> U41(X1,X2),a__U42(X) -> U42(X),a__U51(X1,X2) -> U51(X1,X2),a__U52(X) -> U52(X),a__U61(X) -> U61(X),a__U71(X) -> U71(X),a__U81(X) -> U81(X),a__U91(X) -> U91(X),a__isPLNat(X) -> isPLNat(X),a__tail(X) -> tail(X),a__take(X1,X2) -> take(X1,X2),a__sel(X1,X2) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nokinds_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U101",2),("U102",1),("U11",3),("U111",1),("U12",3),("U121",1),("U131",2),("U132",1),("U141",2),("U142",1),("U151",2),("U152",1),("U161",2),("U171",3),("U172",3),("U181",2),("U182",2),("U191",2),("U201",4),("U202",4),("U203",4),("U204",2),("U21",3),("U211",2),("U212",2),("U22",2),("U221",3),("U222",3),("U31",3),("U32",2),("U41",2),("U42",1),("U51",2),("U52",1),("U61",1),("U71",1),("U81",1),("U91",1),("active",1),("afterNth",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isNatural",1),("isPLNat",1),("mark",1),("natsFrom",1),("nil",0),("ok",1),("pair",2),("proper",1),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("top",1),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U101(tt,V2)) -> mark(U102(isLNat(V2))),active(U102(tt)) -> mark(tt),active(U11(tt,N,XS)) -> mark(U12(isLNat(XS),N,XS)),active(U111(tt)) -> mark(tt),active(U12(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U121(tt)) -> mark(tt),active(U131(tt,V2)) -> mark(U132(isLNat(V2))),active(U132(tt)) -> mark(tt),active(U141(tt,V2)) -> mark(U142(isLNat(V2))),active(U142(tt)) -> mark(tt),active(U151(tt,V2)) -> mark(U152(isLNat(V2))),active(U152(tt)) -> mark(tt),active(U161(tt,N)) -> mark(cons(N,natsFrom(s(N)))),active(U171(tt,N,XS)) -> mark(U172(isLNat(XS),N,XS)),active(U172(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U181(tt,Y)) -> mark(U182(isLNat(Y),Y)),active(U182(tt,Y)) -> mark(Y),active(U191(tt,XS)) -> mark(pair(nil,XS)),active(U201(tt,N,X,XS)) -> mark(U202(isNatural(X),N,X,XS)),active(U202(tt,N,X,XS)) -> mark(U203(isLNat(XS),N,X,XS)),active(U203(tt,N,X,XS)) -> mark(U204(splitAt(N,XS),X)),active(U204(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U21(tt,X,Y)) -> mark(U22(isLNat(Y),X)),active(U211(tt,XS)) -> mark(U212(isLNat(XS),XS)),active(U212(tt,XS)) -> mark(XS),active(U22(tt,X)) -> mark(X),active(U221(tt,N,XS)) -> mark(U222(isLNat(XS),N,XS)),active(U222(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(U31(tt,N,XS)) -> mark(U32(isLNat(XS),N)),active(U32(tt,N)) -> mark(N),active(U41(tt,V2)) -> mark(U42(isLNat(V2))),active(U42(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isLNat(V2))),active(U52(tt)) -> mark(tt),active(U61(tt)) -> mark(tt),active(U71(tt)) -> mark(tt),active(U81(tt)) -> mark(tt),active(U91(tt)) -> mark(tt),active(afterNth(N,XS)) -> mark(U11(isNatural(N),N,XS)),active(fst(pair(X,Y))) -> mark(U21(isLNat(X),X,Y)),active(head(cons(N,XS))) -> mark(U31(isNatural(N),N,XS)),active(isLNat(nil)) -> mark(tt),active(isLNat(afterNth(V1,V2))) -> mark(U41(isNatural(V1),V2)),active(isLNat(cons(V1,V2))) -> mark(U51(isNatural(V1),V2)),active(isLNat(fst(V1))) -> mark(U61(isPLNat(V1))),active(isLNat(natsFrom(V1))) -> mark(U71(isNatural(V1))),active(isLNat(snd(V1))) -> mark(U81(isPLNat(V1))),active(isLNat(tail(V1))) -> mark(U91(isLNat(V1))),active(isLNat(take(V1,V2))) -> mark(U101(isNatural(V1),V2)),active(isNatural(0)) -> mark(tt),active(isNatural(head(V1))) -> mark(U111(isLNat(V1))),active(isNatural(s(V1))) -> mark(U121(isNatural(V1))),active(isNatural(sel(V1,V2))) -> mark(U131(isNatural(V1),V2)),active(isPLNat(pair(V1,V2))) -> mark(U141(isLNat(V1),V2)),active(isPLNat(splitAt(V1,V2))) -> mark(U151(isNatural(V1),V2)),active(natsFrom(N)) -> mark(U161(isNatural(N),N)),active(sel(N,XS)) -> mark(U171(isNatural(N),N,XS)),active(snd(pair(X,Y))) -> mark(U181(isLNat(X),Y)),active(splitAt(0,XS)) -> mark(U191(isLNat(XS),XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U201(isNatural(N),N,X,XS)),active(tail(cons(N,XS))) -> mark(U211(isNatural(N),XS)),active(take(N,XS)) -> mark(U221(isNatural(N),N,XS)),active(U101(X1,X2)) -> U101(active(X1),X2),active(U102(X)) -> U102(active(X)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(U12(X1,X2,X3)) -> U12(active(X1),X2,X3),active(U111(X)) -> U111(active(X)),active(snd(X)) -> snd(active(X)),active(splitAt(X1,X2)) -> splitAt(active(X1),X2),active(splitAt(X1,X2)) -> splitAt(X1,active(X2)),active(U121(X)) -> U121(active(X)),active(U131(X1,X2)) -> U131(active(X1),X2),active(U132(X)) -> U132(active(X)),active(U141(X1,X2)) -> U141(active(X1),X2),active(U142(X)) -> U142(active(X)),active(U151(X1,X2)) -> U151(active(X1),X2),active(U152(X)) -> U152(active(X)),active(U161(X1,X2)) -> U161(active(X1),X2),active(cons(X1,X2)) -> cons(active(X1),X2),active(natsFrom(X)) -> natsFrom(active(X)),active(s(X)) -> s(active(X)),active(U171(X1,X2,X3)) -> U171(active(X1),X2,X3),active(U172(X1,X2,X3)) -> U172(active(X1),X2,X3),active(head(X)) -> head(active(X)),active(afterNth(X1,X2)) -> afterNth(active(X1),X2),active(afterNth(X1,X2)) -> afterNth(X1,active(X2)),active(U181(X1,X2)) -> U181(active(X1),X2),active(U182(X1,X2)) -> U182(active(X1),X2),active(U191(X1,X2)) -> U191(active(X1),X2),active(pair(X1,X2)) -> pair(active(X1),X2),active(pair(X1,X2)) -> pair(X1,active(X2)),active(U201(X1,X2,X3,X4)) -> U201(active(X1),X2,X3,X4),active(U202(X1,X2,X3,X4)) -> U202(active(X1),X2,X3,X4),active(U203(X1,X2,X3,X4)) -> U203(active(X1),X2,X3,X4),active(U204(X1,X2)) -> U204(active(X1),X2),active(U21(X1,X2,X3)) -> U21(active(X1),X2,X3),active(U22(X1,X2)) -> U22(active(X1),X2),active(U211(X1,X2)) -> U211(active(X1),X2),active(U212(X1,X2)) -> U212(active(X1),X2),active(U221(X1,X2,X3)) -> U221(active(X1),X2,X3),active(U222(X1,X2,X3)) -> U222(active(X1),X2,X3),active(fst(X)) -> fst(active(X)),active(U31(X1,X2,X3)) -> U31(active(X1),X2,X3),active(U32(X1,X2)) -> U32(active(X1),X2),active(U41(X1,X2)) -> U41(active(X1),X2),active(U42(X)) -> U42(active(X)),active(U51(X1,X2)) -> U51(active(X1),X2),active(U52(X)) -> U52(active(X)),active(U61(X)) -> U61(active(X)),active(U71(X)) -> U71(active(X)),active(U81(X)) -> U81(active(X)),active(U91(X)) -> U91(active(X)),active(tail(X)) -> tail(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),U101(mark(X1),X2) -> mark(U101(X1,X2)),U102(mark(X)) -> mark(U102(X)),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),U12(mark(X1),X2,X3) -> mark(U12(X1,X2,X3)),U111(mark(X)) -> mark(U111(X)),snd(mark(X)) -> mark(snd(X)),splitAt(mark(X1),X2) -> mark(splitAt(X1,X2)),splitAt(X1,mark(X2)) -> mark(splitAt(X1,X2)),U121(mark(X)) -> mark(U121(X)),U131(mark(X1),X2) -> mark(U131(X1,X2)),U132(mark(X)) -> mark(U132(X)),U141(mark(X1),X2) -> mark(U141(X1,X2)),U142(mark(X)) -> mark(U142(X)),U151(mark(X1),X2) -> mark(U151(X1,X2)),U152(mark(X)) -> mark(U152(X)),U161(mark(X1),X2) -> mark(U161(X1,X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),natsFrom(mark(X)) -> mark(natsFrom(X)),s(mark(X)) -> mark(s(X)),U171(mark(X1),X2,X3) -> mark(U171(X1,X2,X3)),U172(mark(X1),X2,X3) -> mark(U172(X1,X2,X3)),head(mark(X)) -> mark(head(X)),afterNth(mark(X1),X2) -> mark(afterNth(X1,X2)),afterNth(X1,mark(X2)) -> mark(afterNth(X1,X2)),U181(mark(X1),X2) -> mark(U181(X1,X2)),U182(mark(X1),X2) -> mark(U182(X1,X2)),U191(mark(X1),X2) -> mark(U191(X1,X2)),pair(mark(X1),X2) -> mark(pair(X1,X2)),pair(X1,mark(X2)) -> mark(pair(X1,X2)),U201(mark(X1),X2,X3,X4) -> mark(U201(X1,X2,X3,X4)),U202(mark(X1),X2,X3,X4) -> mark(U202(X1,X2,X3,X4)),U203(mark(X1),X2,X3,X4) -> mark(U203(X1,X2,X3,X4)),U204(mark(X1),X2) -> mark(U204(X1,X2)),U21(mark(X1),X2,X3) -> mark(U21(X1,X2,X3)),U22(mark(X1),X2) -> mark(U22(X1,X2)),U211(mark(X1),X2) -> mark(U211(X1,X2)),U212(mark(X1),X2) -> mark(U212(X1,X2)),U221(mark(X1),X2,X3) -> mark(U221(X1,X2,X3)),U222(mark(X1),X2,X3) -> mark(U222(X1,X2,X3)),fst(mark(X)) -> mark(fst(X)),U31(mark(X1),X2,X3) -> mark(U31(X1,X2,X3)),U32(mark(X1),X2) -> mark(U32(X1,X2)),U41(mark(X1),X2) -> mark(U41(X1,X2)),U42(mark(X)) -> mark(U42(X)),U51(mark(X1),X2) -> mark(U51(X1,X2)),U52(mark(X)) -> mark(U52(X)),U61(mark(X)) -> mark(U61(X)),U71(mark(X)) -> mark(U71(X)),U81(mark(X)) -> mark(U81(X)),U91(mark(X)) -> mark(U91(X)),tail(mark(X)) -> mark(tail(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),proper(U101(X1,X2)) -> U101(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U102(X)) -> U102(proper(X)),proper(isLNat(X)) -> isLNat(proper(X)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(U12(X1,X2,X3)) -> U12(proper(X1),proper(X2),proper(X3)),proper(U111(X)) -> U111(proper(X)),proper(snd(X)) -> snd(proper(X)),proper(splitAt(X1,X2)) -> splitAt(proper(X1),proper(X2)),proper(U121(X)) -> U121(proper(X)),proper(U131(X1,X2)) -> U131(proper(X1),proper(X2)),proper(U132(X)) -> U132(proper(X)),proper(U141(X1,X2)) -> U141(proper(X1),proper(X2)),proper(U142(X)) -> U142(proper(X)),proper(U151(X1,X2)) -> U151(proper(X1),proper(X2)),proper(U152(X)) -> U152(proper(X)),proper(U161(X1,X2)) -> U161(proper(X1),proper(X2)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(natsFrom(X)) -> natsFrom(proper(X)),proper(s(X)) -> s(proper(X)),proper(U171(X1,X2,X3)) -> U171(proper(X1),proper(X2),proper(X3)),proper(U172(X1,X2,X3)) -> U172(proper(X1),proper(X2),proper(X3)),proper(head(X)) -> head(proper(X)),proper(afterNth(X1,X2)) -> afterNth(proper(X1),proper(X2)),proper(U181(X1,X2)) -> U181(proper(X1),proper(X2)),proper(U182(X1,X2)) -> U182(proper(X1),proper(X2)),proper(U191(X1,X2)) -> U191(proper(X1),proper(X2)),proper(pair(X1,X2)) -> pair(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(U201(X1,X2,X3,X4)) -> U201(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U202(X1,X2,X3,X4)) -> U202(proper(X1),proper(X2),proper(X3),proper(X4)),proper(isNatural(X)) -> isNatural(proper(X)),proper(U203(X1,X2,X3,X4)) -> U203(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U204(X1,X2)) -> U204(proper(X1),proper(X2)),proper(U21(X1,X2,X3)) -> U21(proper(X1),proper(X2),proper(X3)),proper(U22(X1,X2)) -> U22(proper(X1),proper(X2)),proper(U211(X1,X2)) -> U211(proper(X1),proper(X2)),proper(U212(X1,X2)) -> U212(proper(X1),proper(X2)),proper(U221(X1,X2,X3)) -> U221(proper(X1),proper(X2),proper(X3)),proper(U222(X1,X2,X3)) -> U222(proper(X1),proper(X2),proper(X3)),proper(fst(X)) -> fst(proper(X)),proper(U31(X1,X2,X3)) -> U31(proper(X1),proper(X2),proper(X3)),proper(U32(X1,X2)) -> U32(proper(X1),proper(X2)),proper(U41(X1,X2)) -> U41(proper(X1),proper(X2)),proper(U42(X)) -> U42(proper(X)),proper(U51(X1,X2)) -> U51(proper(X1),proper(X2)),proper(U52(X)) -> U52(proper(X)),proper(U61(X)) -> U61(proper(X)),proper(U71(X)) -> U71(proper(X)),proper(U81(X)) -> U81(proper(X)),proper(U91(X)) -> U91(proper(X)),proper(isPLNat(X)) -> isPLNat(proper(X)),proper(tail(X)) -> tail(proper(X)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(0) -> ok(0),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),U101(ok(X1),ok(X2)) -> ok(U101(X1,X2)),U102(ok(X)) -> ok(U102(X)),isLNat(ok(X)) -> ok(isLNat(X)),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),U12(ok(X1),ok(X2),ok(X3)) -> ok(U12(X1,X2,X3)),U111(ok(X)) -> ok(U111(X)),snd(ok(X)) -> ok(snd(X)),splitAt(ok(X1),ok(X2)) -> ok(splitAt(X1,X2)),U121(ok(X)) -> ok(U121(X)),U131(ok(X1),ok(X2)) -> ok(U131(X1,X2)),U132(ok(X)) -> ok(U132(X)),U141(ok(X1),ok(X2)) -> ok(U141(X1,X2)),U142(ok(X)) -> ok(U142(X)),U151(ok(X1),ok(X2)) -> ok(U151(X1,X2)),U152(ok(X)) -> ok(U152(X)),U161(ok(X1),ok(X2)) -> ok(U161(X1,X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),natsFrom(ok(X)) -> ok(natsFrom(X)),s(ok(X)) -> ok(s(X)),U171(ok(X1),ok(X2),ok(X3)) -> ok(U171(X1,X2,X3)),U172(ok(X1),ok(X2),ok(X3)) -> ok(U172(X1,X2,X3)),head(ok(X)) -> ok(head(X)),afterNth(ok(X1),ok(X2)) -> ok(afterNth(X1,X2)),U181(ok(X1),ok(X2)) -> ok(U181(X1,X2)),U182(ok(X1),ok(X2)) -> ok(U182(X1,X2)),U191(ok(X1),ok(X2)) -> ok(U191(X1,X2)),pair(ok(X1),ok(X2)) -> ok(pair(X1,X2)),U201(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U201(X1,X2,X3,X4)),U202(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U202(X1,X2,X3,X4)),isNatural(ok(X)) -> ok(isNatural(X)),U203(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U203(X1,X2,X3,X4)),U204(ok(X1),ok(X2)) -> ok(U204(X1,X2)),U21(ok(X1),ok(X2),ok(X3)) -> ok(U21(X1,X2,X3)),U22(ok(X1),ok(X2)) -> ok(U22(X1,X2)),U211(ok(X1),ok(X2)) -> ok(U211(X1,X2)),U212(ok(X1),ok(X2)) -> ok(U212(X1,X2)),U221(ok(X1),ok(X2),ok(X3)) -> ok(U221(X1,X2,X3)),U222(ok(X1),ok(X2),ok(X3)) -> ok(U222(X1,X2,X3)),fst(ok(X)) -> ok(fst(X)),U31(ok(X1),ok(X2),ok(X3)) -> ok(U31(X1,X2,X3)),U32(ok(X1),ok(X2)) -> ok(U32(X1,X2)),U41(ok(X1),ok(X2)) -> ok(U41(X1,X2)),U42(ok(X)) -> ok(U42(X)),U51(ok(X1),ok(X2)) -> ok(U51(X1,X2)),U52(ok(X)) -> ok(U52(X)),U61(ok(X)) -> ok(U61(X)),U71(ok(X)) -> ok(U71(X)),U81(ok(X)) -> ok(U81(X)),U91(ok(X)) -> ok(U91(X)),isPLNat(ok(X)) -> ok(isPLNat(X)),tail(ok(X)) -> ok(tail(X)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nokinds_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U11",3),("U21",2),("U31",2),("U41",2),("U51",3),("U61",2),("U71",2),("U81",4),("U82",2),("U91",2),("active",1),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isNatural",1),("isPLNat",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U101(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(U11(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U21(tt,X)) -> mark(X),active(U31(tt,N)) -> mark(N),active(U41(tt,N)) -> mark(cons(N,natsFrom(s(N)))),active(U51(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U61(tt,Y)) -> mark(Y),active(U71(tt,XS)) -> mark(pair(nil,XS)),active(U81(tt,N,X,XS)) -> mark(U82(splitAt(N,XS),X)),active(U82(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U91(tt,XS)) -> mark(XS),active(afterNth(N,XS)) -> mark(U11(and(isNatural(N),isLNat(XS)),N,XS)),active(and(tt,X)) -> mark(X),active(fst(pair(X,Y))) -> mark(U21(and(isLNat(X),isLNat(Y)),X)),active(head(cons(N,XS))) -> mark(U31(and(isNatural(N),isLNat(XS)),N)),active(isLNat(nil)) -> mark(tt),active(isLNat(afterNth(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(isLNat(cons(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(isLNat(fst(V1))) -> mark(isPLNat(V1)),active(isLNat(natsFrom(V1))) -> mark(isNatural(V1)),active(isLNat(snd(V1))) -> mark(isPLNat(V1)),active(isLNat(tail(V1))) -> mark(isLNat(V1)),active(isLNat(take(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(isNatural(0)) -> mark(tt),active(isNatural(head(V1))) -> mark(isLNat(V1)),active(isNatural(s(V1))) -> mark(isNatural(V1)),active(isNatural(sel(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(isPLNat(pair(V1,V2))) -> mark(and(isLNat(V1),isLNat(V2))),active(isPLNat(splitAt(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(natsFrom(N)) -> mark(U41(isNatural(N),N)),active(sel(N,XS)) -> mark(U51(and(isNatural(N),isLNat(XS)),N,XS)),active(snd(pair(X,Y))) -> mark(U61(and(isLNat(X),isLNat(Y)),Y)),active(splitAt(0,XS)) -> mark(U71(isLNat(XS),XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U81(and(isNatural(N),and(isNatural(X),isLNat(XS))),N,X,XS)),active(tail(cons(N,XS))) -> mark(U91(and(isNatural(N),isLNat(XS)),XS)),active(take(N,XS)) -> mark(U101(and(isNatural(N),isLNat(XS)),N,XS)),mark(U101(X1,X2,X3)) -> active(U101(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(fst(X)) -> active(fst(mark(X))),mark(splitAt(X1,X2)) -> active(splitAt(mark(X1),mark(X2))),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(snd(X)) -> active(snd(mark(X))),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U41(X1,X2)) -> active(U41(mark(X1),X2)),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(natsFrom(X)) -> active(natsFrom(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3)),mark(head(X)) -> active(head(mark(X))),mark(afterNth(X1,X2)) -> active(afterNth(mark(X1),mark(X2))),mark(U61(X1,X2)) -> active(U61(mark(X1),X2)),mark(U71(X1,X2)) -> active(U71(mark(X1),X2)),mark(pair(X1,X2)) -> active(pair(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(U81(X1,X2,X3,X4)) -> active(U81(mark(X1),X2,X3,X4)),mark(U82(X1,X2)) -> active(U82(mark(X1),X2)),mark(U91(X1,X2)) -> active(U91(mark(X1),X2)),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isNatural(X)) -> active(isNatural(X)),mark(isLNat(X)) -> active(isLNat(X)),mark(isPLNat(X)) -> active(isPLNat(X)),mark(tail(X)) -> active(tail(mark(X))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(0) -> active(0),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),U101(mark(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,mark(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,mark(X3)) -> U101(X1,X2,X3),U101(active(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,active(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,active(X3)) -> U101(X1,X2,X3),fst(mark(X)) -> fst(X),fst(active(X)) -> fst(X),splitAt(mark(X1),X2) -> splitAt(X1,X2),splitAt(X1,mark(X2)) -> splitAt(X1,X2),splitAt(active(X1),X2) -> splitAt(X1,X2),splitAt(X1,active(X2)) -> splitAt(X1,X2),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),snd(mark(X)) -> snd(X),snd(active(X)) -> snd(X),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U41(mark(X1),X2) -> U41(X1,X2),U41(X1,mark(X2)) -> U41(X1,X2),U41(active(X1),X2) -> U41(X1,X2),U41(X1,active(X2)) -> U41(X1,X2),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),natsFrom(mark(X)) -> natsFrom(X),natsFrom(active(X)) -> natsFrom(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),U51(mark(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,mark(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,mark(X3)) -> U51(X1,X2,X3),U51(active(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,active(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,active(X3)) -> U51(X1,X2,X3),head(mark(X)) -> head(X),head(active(X)) -> head(X),afterNth(mark(X1),X2) -> afterNth(X1,X2),afterNth(X1,mark(X2)) -> afterNth(X1,X2),afterNth(active(X1),X2) -> afterNth(X1,X2),afterNth(X1,active(X2)) -> afterNth(X1,X2),U61(mark(X1),X2) -> U61(X1,X2),U61(X1,mark(X2)) -> U61(X1,X2),U61(active(X1),X2) -> U61(X1,X2),U61(X1,active(X2)) -> U61(X1,X2),U71(mark(X1),X2) -> U71(X1,X2),U71(X1,mark(X2)) -> U71(X1,X2),U71(active(X1),X2) -> U71(X1,X2),U71(X1,active(X2)) -> U71(X1,X2),pair(mark(X1),X2) -> pair(X1,X2),pair(X1,mark(X2)) -> pair(X1,X2),pair(active(X1),X2) -> pair(X1,X2),pair(X1,active(X2)) -> pair(X1,X2),U81(mark(X1),X2,X3,X4) -> U81(X1,X2,X3,X4),U81(X1,mark(X2),X3,X4) -> U81(X1,X2,X3,X4),U81(X1,X2,mark(X3),X4) -> U81(X1,X2,X3,X4),U81(X1,X2,X3,mark(X4)) -> U81(X1,X2,X3,X4),U81(active(X1),X2,X3,X4) -> U81(X1,X2,X3,X4),U81(X1,active(X2),X3,X4) -> U81(X1,X2,X3,X4),U81(X1,X2,active(X3),X4) -> U81(X1,X2,X3,X4),U81(X1,X2,X3,active(X4)) -> U81(X1,X2,X3,X4),U82(mark(X1),X2) -> U82(X1,X2),U82(X1,mark(X2)) -> U82(X1,X2),U82(active(X1),X2) -> U82(X1,X2),U82(X1,active(X2)) -> U82(X1,X2),U91(mark(X1),X2) -> U91(X1,X2),U91(X1,mark(X2)) -> U91(X1,X2),U91(active(X1),X2) -> U91(X1,X2),U91(X1,active(X2)) -> U91(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNatural(mark(X)) -> isNatural(X),isNatural(active(X)) -> isNatural(X),isLNat(mark(X)) -> isLNat(X),isLNat(active(X)) -> isLNat(X),isPLNat(mark(X)) -> isPLNat(X),isPLNat(active(X)) -> isPLNat(X),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nokinds_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U11",3),("U21",2),("U31",2),("U41",2),("U51",3),("U61",2),("U71",2),("U81",4),("U82",2),("U91",2),("a__U101",3),("a__U11",3),("a__U21",2),("a__U31",2),("a__U41",2),("a__U51",3),("a__U61",2),("a__U71",2),("a__U81",4),("a__U82",2),("a__U91",2),("a__afterNth",2),("a__and",2),("a__fst",1),("a__head",1),("a__isLNat",1),("a__isNatural",1),("a__isPLNat",1),("a__natsFrom",1),("a__sel",2),("a__snd",1),("a__splitAt",2),("a__tail",1),("a__take",2),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isNatural",1),("isPLNat",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [a__U101(tt,N,XS) -> a__fst(a__splitAt(mark(N),mark(XS))),a__U11(tt,N,XS) -> a__snd(a__splitAt(mark(N),mark(XS))),a__U21(tt,X) -> mark(X),a__U31(tt,N) -> mark(N),a__U41(tt,N) -> cons(mark(N),natsFrom(s(N))),a__U51(tt,N,XS) -> a__head(a__afterNth(mark(N),mark(XS))),a__U61(tt,Y) -> mark(Y),a__U71(tt,XS) -> pair(nil,mark(XS)),a__U81(tt,N,X,XS) -> a__U82(a__splitAt(mark(N),mark(XS)),X),a__U82(pair(YS,ZS),X) -> pair(cons(mark(X),YS),mark(ZS)),a__U91(tt,XS) -> mark(XS),a__afterNth(N,XS) -> a__U11(a__and(a__isNatural(N),isLNat(XS)),N,XS),a__and(tt,X) -> mark(X),a__fst(pair(X,Y)) -> a__U21(a__and(a__isLNat(X),isLNat(Y)),X),a__head(cons(N,XS)) -> a__U31(a__and(a__isNatural(N),isLNat(XS)),N),a__isLNat(nil) -> tt,a__isLNat(afterNth(V1,V2)) -> a__and(a__isNatural(V1),isLNat(V2)),a__isLNat(cons(V1,V2)) -> a__and(a__isNatural(V1),isLNat(V2)),a__isLNat(fst(V1)) -> a__isPLNat(V1),a__isLNat(natsFrom(V1)) -> a__isNatural(V1),a__isLNat(snd(V1)) -> a__isPLNat(V1),a__isLNat(tail(V1)) -> a__isLNat(V1),a__isLNat(take(V1,V2)) -> a__and(a__isNatural(V1),isLNat(V2)),a__isNatural(0) -> tt,a__isNatural(head(V1)) -> a__isLNat(V1),a__isNatural(s(V1)) -> a__isNatural(V1),a__isNatural(sel(V1,V2)) -> a__and(a__isNatural(V1),isLNat(V2)),a__isPLNat(pair(V1,V2)) -> a__and(a__isLNat(V1),isLNat(V2)),a__isPLNat(splitAt(V1,V2)) -> a__and(a__isNatural(V1),isLNat(V2)),a__natsFrom(N) -> a__U41(a__isNatural(N),N),a__sel(N,XS) -> a__U51(a__and(a__isNatural(N),isLNat(XS)),N,XS),a__snd(pair(X,Y)) -> a__U61(a__and(a__isLNat(X),isLNat(Y)),Y),a__splitAt(0,XS) -> a__U71(a__isLNat(XS),XS),a__splitAt(s(N),cons(X,XS)) -> a__U81(a__and(a__isNatural(N),and(isNatural(X),isLNat(XS))),N,X,XS),a__tail(cons(N,XS)) -> a__U91(a__and(a__isNatural(N),isLNat(XS)),XS),a__take(N,XS) -> a__U101(a__and(a__isNatural(N),isLNat(XS)),N,XS),mark(U101(X1,X2,X3)) -> a__U101(mark(X1),X2,X3),mark(fst(X)) -> a__fst(mark(X)),mark(splitAt(X1,X2)) -> a__splitAt(mark(X1),mark(X2)),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(snd(X)) -> a__snd(mark(X)),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U41(X1,X2)) -> a__U41(mark(X1),X2),mark(natsFrom(X)) -> a__natsFrom(mark(X)),mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3),mark(head(X)) -> a__head(mark(X)),mark(afterNth(X1,X2)) -> a__afterNth(mark(X1),mark(X2)),mark(U61(X1,X2)) -> a__U61(mark(X1),X2),mark(U71(X1,X2)) -> a__U71(mark(X1),X2),mark(U81(X1,X2,X3,X4)) -> a__U81(mark(X1),X2,X3,X4),mark(U82(X1,X2)) -> a__U82(mark(X1),X2),mark(U91(X1,X2)) -> a__U91(mark(X1),X2),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNatural(X)) -> a__isNatural(X),mark(isLNat(X)) -> a__isLNat(X),mark(isPLNat(X)) -> a__isPLNat(X),mark(tail(X)) -> a__tail(mark(X)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(tt) -> tt,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(pair(X1,X2)) -> pair(mark(X1),mark(X2)),mark(nil) -> nil,mark(0) -> 0,a__U101(X1,X2,X3) -> U101(X1,X2,X3),a__fst(X) -> fst(X),a__splitAt(X1,X2) -> splitAt(X1,X2),a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__snd(X) -> snd(X),a__U21(X1,X2) -> U21(X1,X2),a__U31(X1,X2) -> U31(X1,X2),a__U41(X1,X2) -> U41(X1,X2),a__natsFrom(X) -> natsFrom(X),a__U51(X1,X2,X3) -> U51(X1,X2,X3),a__head(X) -> head(X),a__afterNth(X1,X2) -> afterNth(X1,X2),a__U61(X1,X2) -> U61(X1,X2),a__U71(X1,X2) -> U71(X1,X2),a__U81(X1,X2,X3,X4) -> U81(X1,X2,X3,X4),a__U82(X1,X2) -> U82(X1,X2),a__U91(X1,X2) -> U91(X1,X2),a__and(X1,X2) -> and(X1,X2),a__isNatural(X) -> isNatural(X),a__isLNat(X) -> isLNat(X),a__isPLNat(X) -> isPLNat(X),a__tail(X) -> tail(X),a__take(X1,X2) -> take(X1,X2),a__sel(X1,X2) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_nokinds_C.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U11",3),("U21",2),("U31",2),("U41",2),("U51",3),("U61",2),("U71",2),("U81",4),("U82",2),("U91",2),("active",1),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isNatural",1),("isPLNat",1),("mark",1),("natsFrom",1),("nil",0),("ok",1),("pair",2),("proper",1),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("top",1),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U101(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(U11(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U21(tt,X)) -> mark(X),active(U31(tt,N)) -> mark(N),active(U41(tt,N)) -> mark(cons(N,natsFrom(s(N)))),active(U51(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U61(tt,Y)) -> mark(Y),active(U71(tt,XS)) -> mark(pair(nil,XS)),active(U81(tt,N,X,XS)) -> mark(U82(splitAt(N,XS),X)),active(U82(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U91(tt,XS)) -> mark(XS),active(afterNth(N,XS)) -> mark(U11(and(isNatural(N),isLNat(XS)),N,XS)),active(and(tt,X)) -> mark(X),active(fst(pair(X,Y))) -> mark(U21(and(isLNat(X),isLNat(Y)),X)),active(head(cons(N,XS))) -> mark(U31(and(isNatural(N),isLNat(XS)),N)),active(isLNat(nil)) -> mark(tt),active(isLNat(afterNth(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(isLNat(cons(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(isLNat(fst(V1))) -> mark(isPLNat(V1)),active(isLNat(natsFrom(V1))) -> mark(isNatural(V1)),active(isLNat(snd(V1))) -> mark(isPLNat(V1)),active(isLNat(tail(V1))) -> mark(isLNat(V1)),active(isLNat(take(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(isNatural(0)) -> mark(tt),active(isNatural(head(V1))) -> mark(isLNat(V1)),active(isNatural(s(V1))) -> mark(isNatural(V1)),active(isNatural(sel(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(isPLNat(pair(V1,V2))) -> mark(and(isLNat(V1),isLNat(V2))),active(isPLNat(splitAt(V1,V2))) -> mark(and(isNatural(V1),isLNat(V2))),active(natsFrom(N)) -> mark(U41(isNatural(N),N)),active(sel(N,XS)) -> mark(U51(and(isNatural(N),isLNat(XS)),N,XS)),active(snd(pair(X,Y))) -> mark(U61(and(isLNat(X),isLNat(Y)),Y)),active(splitAt(0,XS)) -> mark(U71(isLNat(XS),XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U81(and(isNatural(N),and(isNatural(X),isLNat(XS))),N,X,XS)),active(tail(cons(N,XS))) -> mark(U91(and(isNatural(N),isLNat(XS)),XS)),active(take(N,XS)) -> mark(U101(and(isNatural(N),isLNat(XS)),N,XS)),active(U101(X1,X2,X3)) -> U101(active(X1),X2,X3),active(fst(X)) -> fst(active(X)),active(splitAt(X1,X2)) -> splitAt(active(X1),X2),active(splitAt(X1,X2)) -> splitAt(X1,active(X2)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(snd(X)) -> snd(active(X)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U31(X1,X2)) -> U31(active(X1),X2),active(U41(X1,X2)) -> U41(active(X1),X2),active(cons(X1,X2)) -> cons(active(X1),X2),active(natsFrom(X)) -> natsFrom(active(X)),active(s(X)) -> s(active(X)),active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3),active(head(X)) -> head(active(X)),active(afterNth(X1,X2)) -> afterNth(active(X1),X2),active(afterNth(X1,X2)) -> afterNth(X1,active(X2)),active(U61(X1,X2)) -> U61(active(X1),X2),active(U71(X1,X2)) -> U71(active(X1),X2),active(pair(X1,X2)) -> pair(active(X1),X2),active(pair(X1,X2)) -> pair(X1,active(X2)),active(U81(X1,X2,X3,X4)) -> U81(active(X1),X2,X3,X4),active(U82(X1,X2)) -> U82(active(X1),X2),active(U91(X1,X2)) -> U91(active(X1),X2),active(and(X1,X2)) -> and(active(X1),X2),active(tail(X)) -> tail(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),U101(mark(X1),X2,X3) -> mark(U101(X1,X2,X3)),fst(mark(X)) -> mark(fst(X)),splitAt(mark(X1),X2) -> mark(splitAt(X1,X2)),splitAt(X1,mark(X2)) -> mark(splitAt(X1,X2)),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),snd(mark(X)) -> mark(snd(X)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U41(mark(X1),X2) -> mark(U41(X1,X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),natsFrom(mark(X)) -> mark(natsFrom(X)),s(mark(X)) -> mark(s(X)),U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3)),head(mark(X)) -> mark(head(X)),afterNth(mark(X1),X2) -> mark(afterNth(X1,X2)),afterNth(X1,mark(X2)) -> mark(afterNth(X1,X2)),U61(mark(X1),X2) -> mark(U61(X1,X2)),U71(mark(X1),X2) -> mark(U71(X1,X2)),pair(mark(X1),X2) -> mark(pair(X1,X2)),pair(X1,mark(X2)) -> mark(pair(X1,X2)),U81(mark(X1),X2,X3,X4) -> mark(U81(X1,X2,X3,X4)),U82(mark(X1),X2) -> mark(U82(X1,X2)),U91(mark(X1),X2) -> mark(U91(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),tail(mark(X)) -> mark(tail(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),proper(U101(X1,X2,X3)) -> U101(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(fst(X)) -> fst(proper(X)),proper(splitAt(X1,X2)) -> splitAt(proper(X1),proper(X2)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(snd(X)) -> snd(proper(X)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U41(X1,X2)) -> U41(proper(X1),proper(X2)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(natsFrom(X)) -> natsFrom(proper(X)),proper(s(X)) -> s(proper(X)),proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3)),proper(head(X)) -> head(proper(X)),proper(afterNth(X1,X2)) -> afterNth(proper(X1),proper(X2)),proper(U61(X1,X2)) -> U61(proper(X1),proper(X2)),proper(U71(X1,X2)) -> U71(proper(X1),proper(X2)),proper(pair(X1,X2)) -> pair(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(U81(X1,X2,X3,X4)) -> U81(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U82(X1,X2)) -> U82(proper(X1),proper(X2)),proper(U91(X1,X2)) -> U91(proper(X1),proper(X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isNatural(X)) -> isNatural(proper(X)),proper(isLNat(X)) -> isLNat(proper(X)),proper(isPLNat(X)) -> isPLNat(proper(X)),proper(tail(X)) -> tail(proper(X)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(0) -> ok(0),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),U101(ok(X1),ok(X2),ok(X3)) -> ok(U101(X1,X2,X3)),fst(ok(X)) -> ok(fst(X)),splitAt(ok(X1),ok(X2)) -> ok(splitAt(X1,X2)),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),snd(ok(X)) -> ok(snd(X)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U41(ok(X1),ok(X2)) -> ok(U41(X1,X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),natsFrom(ok(X)) -> ok(natsFrom(X)),s(ok(X)) -> ok(s(X)),U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3)),head(ok(X)) -> ok(head(X)),afterNth(ok(X1),ok(X2)) -> ok(afterNth(X1,X2)),U61(ok(X1),ok(X2)) -> ok(U61(X1,X2)),U71(ok(X1),ok(X2)) -> ok(U71(X1,X2)),pair(ok(X1),ok(X2)) -> ok(pair(X1,X2)),U81(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U81(X1,X2,X3,X4)),U82(ok(X1),ok(X2)) -> ok(U82(X1,X2)),U91(ok(X1),ok(X2)) -> ok(U91(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNatural(ok(X)) -> ok(isNatural(X)),isLNat(ok(X)) -> ok(isLNat(X)),isPLNat(ok(X)) -> ok(isPLNat(X)),tail(ok(X)) -> ok(tail(X)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_complete_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U105",2),("U106",1),("U11",3),("U111",2),("U112",1),("U12",3),("U121",2),("U122",1),("U13",3),("U131",1),("U14",3),("U141",1),("U151",1),("U161",1),("U171",2),("U172",1),("U181",2),("U182",2),("U183",1),("U191",2),("U192",2),("U193",1),("U201",3),("U202",3),("U203",3),("U204",3),("U205",2),("U206",1),("U21",3),("U211",1),("U22",3),("U221",1),("U23",3),("U231",2),("U232",1),("U24",2),("U241",3),("U242",3),("U243",3),("U244",3),("U245",2),("U246",1),("U251",3),("U252",3),("U253",3),("U254",3),("U255",2),("U256",1),("U261",2),("U262",1),("U271",2),("U272",1),("U281",2),("U282",2),("U291",3),("U292",3),("U293",3),("U294",3),("U301",3),("U302",2),("U303",2),("U304",2),("U31",3),("U311",2),("U312",2),("U32",3),("U321",4),("U322",4),("U323",4),("U324",4),("U325",4),("U326",4),("U327",2),("U33",3),("U331",3),("U332",2),("U333",2),("U334",2),("U34",2),("U341",3),("U342",3),("U343",3),("U344",3),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",3),("U52",3),("U53",3),("U54",3),("U55",2),("U56",1),("U61",2),("U62",2),("U63",1),("U71",2),("U72",2),("U73",1),("U81",2),("U82",2),("U83",1),("U91",2),("U92",2),("U93",1),("active",1),("afterNth",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isLNatKind",1),("isNatural",1),("isNaturalKind",1),("isPLNat",1),("isPLNatKind",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U101(tt,V1,V2)) -> mark(U102(isNaturalKind(V1),V1,V2)),active(U102(tt,V1,V2)) -> mark(U103(isLNatKind(V2),V1,V2)),active(U103(tt,V1,V2)) -> mark(U104(isLNatKind(V2),V1,V2)),active(U104(tt,V1,V2)) -> mark(U105(isNatural(V1),V2)),active(U105(tt,V2)) -> mark(U106(isLNat(V2))),active(U106(tt)) -> mark(tt),active(U11(tt,N,XS)) -> mark(U12(isNaturalKind(N),N,XS)),active(U111(tt,V2)) -> mark(U112(isLNatKind(V2))),active(U112(tt)) -> mark(tt),active(U12(tt,N,XS)) -> mark(U13(isLNat(XS),N,XS)),active(U121(tt,V2)) -> mark(U122(isLNatKind(V2))),active(U122(tt)) -> mark(tt),active(U13(tt,N,XS)) -> mark(U14(isLNatKind(XS),N,XS)),active(U131(tt)) -> mark(tt),active(U14(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U141(tt)) -> mark(tt),active(U151(tt)) -> mark(tt),active(U161(tt)) -> mark(tt),active(U171(tt,V2)) -> mark(U172(isLNatKind(V2))),active(U172(tt)) -> mark(tt),active(U181(tt,V1)) -> mark(U182(isLNatKind(V1),V1)),active(U182(tt,V1)) -> mark(U183(isLNat(V1))),active(U183(tt)) -> mark(tt),active(U191(tt,V1)) -> mark(U192(isNaturalKind(V1),V1)),active(U192(tt,V1)) -> mark(U193(isNatural(V1))),active(U193(tt)) -> mark(tt),active(U201(tt,V1,V2)) -> mark(U202(isNaturalKind(V1),V1,V2)),active(U202(tt,V1,V2)) -> mark(U203(isLNatKind(V2),V1,V2)),active(U203(tt,V1,V2)) -> mark(U204(isLNatKind(V2),V1,V2)),active(U204(tt,V1,V2)) -> mark(U205(isNatural(V1),V2)),active(U205(tt,V2)) -> mark(U206(isLNat(V2))),active(U206(tt)) -> mark(tt),active(U21(tt,X,Y)) -> mark(U22(isLNatKind(X),X,Y)),active(U211(tt)) -> mark(tt),active(U22(tt,X,Y)) -> mark(U23(isLNat(Y),X,Y)),active(U221(tt)) -> mark(tt),active(U23(tt,X,Y)) -> mark(U24(isLNatKind(Y),X)),active(U231(tt,V2)) -> mark(U232(isLNatKind(V2))),active(U232(tt)) -> mark(tt),active(U24(tt,X)) -> mark(X),active(U241(tt,V1,V2)) -> mark(U242(isLNatKind(V1),V1,V2)),active(U242(tt,V1,V2)) -> mark(U243(isLNatKind(V2),V1,V2)),active(U243(tt,V1,V2)) -> mark(U244(isLNatKind(V2),V1,V2)),active(U244(tt,V1,V2)) -> mark(U245(isLNat(V1),V2)),active(U245(tt,V2)) -> mark(U246(isLNat(V2))),active(U246(tt)) -> mark(tt),active(U251(tt,V1,V2)) -> mark(U252(isNaturalKind(V1),V1,V2)),active(U252(tt,V1,V2)) -> mark(U253(isLNatKind(V2),V1,V2)),active(U253(tt,V1,V2)) -> mark(U254(isLNatKind(V2),V1,V2)),active(U254(tt,V1,V2)) -> mark(U255(isNatural(V1),V2)),active(U255(tt,V2)) -> mark(U256(isLNat(V2))),active(U256(tt)) -> mark(tt),active(U261(tt,V2)) -> mark(U262(isLNatKind(V2))),active(U262(tt)) -> mark(tt),active(U271(tt,V2)) -> mark(U272(isLNatKind(V2))),active(U272(tt)) -> mark(tt),active(U281(tt,N)) -> mark(U282(isNaturalKind(N),N)),active(U282(tt,N)) -> mark(cons(N,natsFrom(s(N)))),active(U291(tt,N,XS)) -> mark(U292(isNaturalKind(N),N,XS)),active(U292(tt,N,XS)) -> mark(U293(isLNat(XS),N,XS)),active(U293(tt,N,XS)) -> mark(U294(isLNatKind(XS),N,XS)),active(U294(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U301(tt,X,Y)) -> mark(U302(isLNatKind(X),Y)),active(U302(tt,Y)) -> mark(U303(isLNat(Y),Y)),active(U303(tt,Y)) -> mark(U304(isLNatKind(Y),Y)),active(U304(tt,Y)) -> mark(Y),active(U31(tt,N,XS)) -> mark(U32(isNaturalKind(N),N,XS)),active(U311(tt,XS)) -> mark(U312(isLNatKind(XS),XS)),active(U312(tt,XS)) -> mark(pair(nil,XS)),active(U32(tt,N,XS)) -> mark(U33(isLNat(XS),N,XS)),active(U321(tt,N,X,XS)) -> mark(U322(isNaturalKind(N),N,X,XS)),active(U322(tt,N,X,XS)) -> mark(U323(isNatural(X),N,X,XS)),active(U323(tt,N,X,XS)) -> mark(U324(isNaturalKind(X),N,X,XS)),active(U324(tt,N,X,XS)) -> mark(U325(isLNat(XS),N,X,XS)),active(U325(tt,N,X,XS)) -> mark(U326(isLNatKind(XS),N,X,XS)),active(U326(tt,N,X,XS)) -> mark(U327(splitAt(N,XS),X)),active(U327(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U33(tt,N,XS)) -> mark(U34(isLNatKind(XS),N)),active(U331(tt,N,XS)) -> mark(U332(isNaturalKind(N),XS)),active(U332(tt,XS)) -> mark(U333(isLNat(XS),XS)),active(U333(tt,XS)) -> mark(U334(isLNatKind(XS),XS)),active(U334(tt,XS)) -> mark(XS),active(U34(tt,N)) -> mark(N),active(U341(tt,N,XS)) -> mark(U342(isNaturalKind(N),N,XS)),active(U342(tt,N,XS)) -> mark(U343(isLNat(XS),N,XS)),active(U343(tt,N,XS)) -> mark(U344(isLNatKind(XS),N,XS)),active(U344(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(U41(tt,V1,V2)) -> mark(U42(isNaturalKind(V1),V1,V2)),active(U42(tt,V1,V2)) -> mark(U43(isLNatKind(V2),V1,V2)),active(U43(tt,V1,V2)) -> mark(U44(isLNatKind(V2),V1,V2)),active(U44(tt,V1,V2)) -> mark(U45(isNatural(V1),V2)),active(U45(tt,V2)) -> mark(U46(isLNat(V2))),active(U46(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNaturalKind(V1),V1,V2)),active(U52(tt,V1,V2)) -> mark(U53(isLNatKind(V2),V1,V2)),active(U53(tt,V1,V2)) -> mark(U54(isLNatKind(V2),V1,V2)),active(U54(tt,V1,V2)) -> mark(U55(isNatural(V1),V2)),active(U55(tt,V2)) -> mark(U56(isLNat(V2))),active(U56(tt)) -> mark(tt),active(U61(tt,V1)) -> mark(U62(isPLNatKind(V1),V1)),active(U62(tt,V1)) -> mark(U63(isPLNat(V1))),active(U63(tt)) -> mark(tt),active(U71(tt,V1)) -> mark(U72(isNaturalKind(V1),V1)),active(U72(tt,V1)) -> mark(U73(isNatural(V1))),active(U73(tt)) -> mark(tt),active(U81(tt,V1)) -> mark(U82(isPLNatKind(V1),V1)),active(U82(tt,V1)) -> mark(U83(isPLNat(V1))),active(U83(tt)) -> mark(tt),active(U91(tt,V1)) -> mark(U92(isLNatKind(V1),V1)),active(U92(tt,V1)) -> mark(U93(isLNat(V1))),active(U93(tt)) -> mark(tt),active(afterNth(N,XS)) -> mark(U11(isNatural(N),N,XS)),active(fst(pair(X,Y))) -> mark(U21(isLNat(X),X,Y)),active(head(cons(N,XS))) -> mark(U31(isNatural(N),N,XS)),active(isLNat(nil)) -> mark(tt),active(isLNat(afterNth(V1,V2))) -> mark(U41(isNaturalKind(V1),V1,V2)),active(isLNat(cons(V1,V2))) -> mark(U51(isNaturalKind(V1),V1,V2)),active(isLNat(fst(V1))) -> mark(U61(isPLNatKind(V1),V1)),active(isLNat(natsFrom(V1))) -> mark(U71(isNaturalKind(V1),V1)),active(isLNat(snd(V1))) -> mark(U81(isPLNatKind(V1),V1)),active(isLNat(tail(V1))) -> mark(U91(isLNatKind(V1),V1)),active(isLNat(take(V1,V2))) -> mark(U101(isNaturalKind(V1),V1,V2)),active(isLNatKind(nil)) -> mark(tt),active(isLNatKind(afterNth(V1,V2))) -> mark(U111(isNaturalKind(V1),V2)),active(isLNatKind(cons(V1,V2))) -> mark(U121(isNaturalKind(V1),V2)),active(isLNatKind(fst(V1))) -> mark(U131(isPLNatKind(V1))),active(isLNatKind(natsFrom(V1))) -> mark(U141(isNaturalKind(V1))),active(isLNatKind(snd(V1))) -> mark(U151(isPLNatKind(V1))),active(isLNatKind(tail(V1))) -> mark(U161(isLNatKind(V1))),active(isLNatKind(take(V1,V2))) -> mark(U171(isNaturalKind(V1),V2)),active(isNatural(0)) -> mark(tt),active(isNatural(head(V1))) -> mark(U181(isLNatKind(V1),V1)),active(isNatural(s(V1))) -> mark(U191(isNaturalKind(V1),V1)),active(isNatural(sel(V1,V2))) -> mark(U201(isNaturalKind(V1),V1,V2)),active(isNaturalKind(0)) -> mark(tt),active(isNaturalKind(head(V1))) -> mark(U211(isLNatKind(V1))),active(isNaturalKind(s(V1))) -> mark(U221(isNaturalKind(V1))),active(isNaturalKind(sel(V1,V2))) -> mark(U231(isNaturalKind(V1),V2)),active(isPLNat(pair(V1,V2))) -> mark(U241(isLNatKind(V1),V1,V2)),active(isPLNat(splitAt(V1,V2))) -> mark(U251(isNaturalKind(V1),V1,V2)),active(isPLNatKind(pair(V1,V2))) -> mark(U261(isLNatKind(V1),V2)),active(isPLNatKind(splitAt(V1,V2))) -> mark(U271(isNaturalKind(V1),V2)),active(natsFrom(N)) -> mark(U281(isNatural(N),N)),active(sel(N,XS)) -> mark(U291(isNatural(N),N,XS)),active(snd(pair(X,Y))) -> mark(U301(isLNat(X),X,Y)),active(splitAt(0,XS)) -> mark(U311(isLNat(XS),XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U321(isNatural(N),N,X,XS)),active(tail(cons(N,XS))) -> mark(U331(isNatural(N),N,XS)),active(take(N,XS)) -> mark(U341(isNatural(N),N,XS)),mark(U101(X1,X2,X3)) -> active(U101(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U102(X1,X2,X3)) -> active(U102(mark(X1),X2,X3)),mark(isNaturalKind(X)) -> active(isNaturalKind(X)),mark(U103(X1,X2,X3)) -> active(U103(mark(X1),X2,X3)),mark(isLNatKind(X)) -> active(isLNatKind(X)),mark(U104(X1,X2,X3)) -> active(U104(mark(X1),X2,X3)),mark(U105(X1,X2)) -> active(U105(mark(X1),X2)),mark(isNatural(X)) -> active(isNatural(X)),mark(U106(X)) -> active(U106(mark(X))),mark(isLNat(X)) -> active(isLNat(X)),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(U12(X1,X2,X3)) -> active(U12(mark(X1),X2,X3)),mark(U111(X1,X2)) -> active(U111(mark(X1),X2)),mark(U112(X)) -> active(U112(mark(X))),mark(U13(X1,X2,X3)) -> active(U13(mark(X1),X2,X3)),mark(U121(X1,X2)) -> active(U121(mark(X1),X2)),mark(U122(X)) -> active(U122(mark(X))),mark(U14(X1,X2,X3)) -> active(U14(mark(X1),X2,X3)),mark(U131(X)) -> active(U131(mark(X))),mark(snd(X)) -> active(snd(mark(X))),mark(splitAt(X1,X2)) -> active(splitAt(mark(X1),mark(X2))),mark(U141(X)) -> active(U141(mark(X))),mark(U151(X)) -> active(U151(mark(X))),mark(U161(X)) -> active(U161(mark(X))),mark(U171(X1,X2)) -> active(U171(mark(X1),X2)),mark(U172(X)) -> active(U172(mark(X))),mark(U181(X1,X2)) -> active(U181(mark(X1),X2)),mark(U182(X1,X2)) -> active(U182(mark(X1),X2)),mark(U183(X)) -> active(U183(mark(X))),mark(U191(X1,X2)) -> active(U191(mark(X1),X2)),mark(U192(X1,X2)) -> active(U192(mark(X1),X2)),mark(U193(X)) -> active(U193(mark(X))),mark(U201(X1,X2,X3)) -> active(U201(mark(X1),X2,X3)),mark(U202(X1,X2,X3)) -> active(U202(mark(X1),X2,X3)),mark(U203(X1,X2,X3)) -> active(U203(mark(X1),X2,X3)),mark(U204(X1,X2,X3)) -> active(U204(mark(X1),X2,X3)),mark(U205(X1,X2)) -> active(U205(mark(X1),X2)),mark(U206(X)) -> active(U206(mark(X))),mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3)),mark(U22(X1,X2,X3)) -> active(U22(mark(X1),X2,X3)),mark(U211(X)) -> active(U211(mark(X))),mark(U23(X1,X2,X3)) -> active(U23(mark(X1),X2,X3)),mark(U221(X)) -> active(U221(mark(X))),mark(U24(X1,X2)) -> active(U24(mark(X1),X2)),mark(U231(X1,X2)) -> active(U231(mark(X1),X2)),mark(U232(X)) -> active(U232(mark(X))),mark(U241(X1,X2,X3)) -> active(U241(mark(X1),X2,X3)),mark(U242(X1,X2,X3)) -> active(U242(mark(X1),X2,X3)),mark(U243(X1,X2,X3)) -> active(U243(mark(X1),X2,X3)),mark(U244(X1,X2,X3)) -> active(U244(mark(X1),X2,X3)),mark(U245(X1,X2)) -> active(U245(mark(X1),X2)),mark(U246(X)) -> active(U246(mark(X))),mark(U251(X1,X2,X3)) -> active(U251(mark(X1),X2,X3)),mark(U252(X1,X2,X3)) -> active(U252(mark(X1),X2,X3)),mark(U253(X1,X2,X3)) -> active(U253(mark(X1),X2,X3)),mark(U254(X1,X2,X3)) -> active(U254(mark(X1),X2,X3)),mark(U255(X1,X2)) -> active(U255(mark(X1),X2)),mark(U256(X)) -> active(U256(mark(X))),mark(U261(X1,X2)) -> active(U261(mark(X1),X2)),mark(U262(X)) -> active(U262(mark(X))),mark(U271(X1,X2)) -> active(U271(mark(X1),X2)),mark(U272(X)) -> active(U272(mark(X))),mark(U281(X1,X2)) -> active(U281(mark(X1),X2)),mark(U282(X1,X2)) -> active(U282(mark(X1),X2)),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(natsFrom(X)) -> active(natsFrom(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(U291(X1,X2,X3)) -> active(U291(mark(X1),X2,X3)),mark(U292(X1,X2,X3)) -> active(U292(mark(X1),X2,X3)),mark(U293(X1,X2,X3)) -> active(U293(mark(X1),X2,X3)),mark(U294(X1,X2,X3)) -> active(U294(mark(X1),X2,X3)),mark(head(X)) -> active(head(mark(X))),mark(afterNth(X1,X2)) -> active(afterNth(mark(X1),mark(X2))),mark(U301(X1,X2,X3)) -> active(U301(mark(X1),X2,X3)),mark(U302(X1,X2)) -> active(U302(mark(X1),X2)),mark(U303(X1,X2)) -> active(U303(mark(X1),X2)),mark(U304(X1,X2)) -> active(U304(mark(X1),X2)),mark(U31(X1,X2,X3)) -> active(U31(mark(X1),X2,X3)),mark(U32(X1,X2,X3)) -> active(U32(mark(X1),X2,X3)),mark(U311(X1,X2)) -> active(U311(mark(X1),X2)),mark(U312(X1,X2)) -> active(U312(mark(X1),X2)),mark(pair(X1,X2)) -> active(pair(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(U33(X1,X2,X3)) -> active(U33(mark(X1),X2,X3)),mark(U321(X1,X2,X3,X4)) -> active(U321(mark(X1),X2,X3,X4)),mark(U322(X1,X2,X3,X4)) -> active(U322(mark(X1),X2,X3,X4)),mark(U323(X1,X2,X3,X4)) -> active(U323(mark(X1),X2,X3,X4)),mark(U324(X1,X2,X3,X4)) -> active(U324(mark(X1),X2,X3,X4)),mark(U325(X1,X2,X3,X4)) -> active(U325(mark(X1),X2,X3,X4)),mark(U326(X1,X2,X3,X4)) -> active(U326(mark(X1),X2,X3,X4)),mark(U327(X1,X2)) -> active(U327(mark(X1),X2)),mark(U34(X1,X2)) -> active(U34(mark(X1),X2)),mark(U331(X1,X2,X3)) -> active(U331(mark(X1),X2,X3)),mark(U332(X1,X2)) -> active(U332(mark(X1),X2)),mark(U333(X1,X2)) -> active(U333(mark(X1),X2)),mark(U334(X1,X2)) -> active(U334(mark(X1),X2)),mark(U341(X1,X2,X3)) -> active(U341(mark(X1),X2,X3)),mark(U342(X1,X2,X3)) -> active(U342(mark(X1),X2,X3)),mark(U343(X1,X2,X3)) -> active(U343(mark(X1),X2,X3)),mark(U344(X1,X2,X3)) -> active(U344(mark(X1),X2,X3)),mark(fst(X)) -> active(fst(mark(X))),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2,X3)) -> active(U42(mark(X1),X2,X3)),mark(U43(X1,X2,X3)) -> active(U43(mark(X1),X2,X3)),mark(U44(X1,X2,X3)) -> active(U44(mark(X1),X2,X3)),mark(U45(X1,X2)) -> active(U45(mark(X1),X2)),mark(U46(X)) -> active(U46(mark(X))),mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3)),mark(U52(X1,X2,X3)) -> active(U52(mark(X1),X2,X3)),mark(U53(X1,X2,X3)) -> active(U53(mark(X1),X2,X3)),mark(U54(X1,X2,X3)) -> active(U54(mark(X1),X2,X3)),mark(U55(X1,X2)) -> active(U55(mark(X1),X2)),mark(U56(X)) -> active(U56(mark(X))),mark(U61(X1,X2)) -> active(U61(mark(X1),X2)),mark(U62(X1,X2)) -> active(U62(mark(X1),X2)),mark(isPLNatKind(X)) -> active(isPLNatKind(X)),mark(U63(X)) -> active(U63(mark(X))),mark(isPLNat(X)) -> active(isPLNat(X)),mark(U71(X1,X2)) -> active(U71(mark(X1),X2)),mark(U72(X1,X2)) -> active(U72(mark(X1),X2)),mark(U73(X)) -> active(U73(mark(X))),mark(U81(X1,X2)) -> active(U81(mark(X1),X2)),mark(U82(X1,X2)) -> active(U82(mark(X1),X2)),mark(U83(X)) -> active(U83(mark(X))),mark(U91(X1,X2)) -> active(U91(mark(X1),X2)),mark(U92(X1,X2)) -> active(U92(mark(X1),X2)),mark(U93(X)) -> active(U93(mark(X))),mark(tail(X)) -> active(tail(mark(X))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(0) -> active(0),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),U101(mark(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,mark(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,mark(X3)) -> U101(X1,X2,X3),U101(active(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,active(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,active(X3)) -> U101(X1,X2,X3),U102(mark(X1),X2,X3) -> U102(X1,X2,X3),U102(X1,mark(X2),X3) -> U102(X1,X2,X3),U102(X1,X2,mark(X3)) -> U102(X1,X2,X3),U102(active(X1),X2,X3) -> U102(X1,X2,X3),U102(X1,active(X2),X3) -> U102(X1,X2,X3),U102(X1,X2,active(X3)) -> U102(X1,X2,X3),isNaturalKind(mark(X)) -> isNaturalKind(X),isNaturalKind(active(X)) -> isNaturalKind(X),U103(mark(X1),X2,X3) -> U103(X1,X2,X3),U103(X1,mark(X2),X3) -> U103(X1,X2,X3),U103(X1,X2,mark(X3)) -> U103(X1,X2,X3),U103(active(X1),X2,X3) -> U103(X1,X2,X3),U103(X1,active(X2),X3) -> U103(X1,X2,X3),U103(X1,X2,active(X3)) -> U103(X1,X2,X3),isLNatKind(mark(X)) -> isLNatKind(X),isLNatKind(active(X)) -> isLNatKind(X),U104(mark(X1),X2,X3) -> U104(X1,X2,X3),U104(X1,mark(X2),X3) -> U104(X1,X2,X3),U104(X1,X2,mark(X3)) -> U104(X1,X2,X3),U104(active(X1),X2,X3) -> U104(X1,X2,X3),U104(X1,active(X2),X3) -> U104(X1,X2,X3),U104(X1,X2,active(X3)) -> U104(X1,X2,X3),U105(mark(X1),X2) -> U105(X1,X2),U105(X1,mark(X2)) -> U105(X1,X2),U105(active(X1),X2) -> U105(X1,X2),U105(X1,active(X2)) -> U105(X1,X2),isNatural(mark(X)) -> isNatural(X),isNatural(active(X)) -> isNatural(X),U106(mark(X)) -> U106(X),U106(active(X)) -> U106(X),isLNat(mark(X)) -> isLNat(X),isLNat(active(X)) -> isLNat(X),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),U12(mark(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,mark(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,mark(X3)) -> U12(X1,X2,X3),U12(active(X1),X2,X3) -> U12(X1,X2,X3),U12(X1,active(X2),X3) -> U12(X1,X2,X3),U12(X1,X2,active(X3)) -> U12(X1,X2,X3),U111(mark(X1),X2) -> U111(X1,X2),U111(X1,mark(X2)) -> U111(X1,X2),U111(active(X1),X2) -> U111(X1,X2),U111(X1,active(X2)) -> U111(X1,X2),U112(mark(X)) -> U112(X),U112(active(X)) -> U112(X),U13(mark(X1),X2,X3) -> U13(X1,X2,X3),U13(X1,mark(X2),X3) -> U13(X1,X2,X3),U13(X1,X2,mark(X3)) -> U13(X1,X2,X3),U13(active(X1),X2,X3) -> U13(X1,X2,X3),U13(X1,active(X2),X3) -> U13(X1,X2,X3),U13(X1,X2,active(X3)) -> U13(X1,X2,X3),U121(mark(X1),X2) -> U121(X1,X2),U121(X1,mark(X2)) -> U121(X1,X2),U121(active(X1),X2) -> U121(X1,X2),U121(X1,active(X2)) -> U121(X1,X2),U122(mark(X)) -> U122(X),U122(active(X)) -> U122(X),U14(mark(X1),X2,X3) -> U14(X1,X2,X3),U14(X1,mark(X2),X3) -> U14(X1,X2,X3),U14(X1,X2,mark(X3)) -> U14(X1,X2,X3),U14(active(X1),X2,X3) -> U14(X1,X2,X3),U14(X1,active(X2),X3) -> U14(X1,X2,X3),U14(X1,X2,active(X3)) -> U14(X1,X2,X3),U131(mark(X)) -> U131(X),U131(active(X)) -> U131(X),snd(mark(X)) -> snd(X),snd(active(X)) -> snd(X),splitAt(mark(X1),X2) -> splitAt(X1,X2),splitAt(X1,mark(X2)) -> splitAt(X1,X2),splitAt(active(X1),X2) -> splitAt(X1,X2),splitAt(X1,active(X2)) -> splitAt(X1,X2),U141(mark(X)) -> U141(X),U141(active(X)) -> U141(X),U151(mark(X)) -> U151(X),U151(active(X)) -> U151(X),U161(mark(X)) -> U161(X),U161(active(X)) -> U161(X),U171(mark(X1),X2) -> U171(X1,X2),U171(X1,mark(X2)) -> U171(X1,X2),U171(active(X1),X2) -> U171(X1,X2),U171(X1,active(X2)) -> U171(X1,X2),U172(mark(X)) -> U172(X),U172(active(X)) -> U172(X),U181(mark(X1),X2) -> U181(X1,X2),U181(X1,mark(X2)) -> U181(X1,X2),U181(active(X1),X2) -> U181(X1,X2),U181(X1,active(X2)) -> U181(X1,X2),U182(mark(X1),X2) -> U182(X1,X2),U182(X1,mark(X2)) -> U182(X1,X2),U182(active(X1),X2) -> U182(X1,X2),U182(X1,active(X2)) -> U182(X1,X2),U183(mark(X)) -> U183(X),U183(active(X)) -> U183(X),U191(mark(X1),X2) -> U191(X1,X2),U191(X1,mark(X2)) -> U191(X1,X2),U191(active(X1),X2) -> U191(X1,X2),U191(X1,active(X2)) -> U191(X1,X2),U192(mark(X1),X2) -> U192(X1,X2),U192(X1,mark(X2)) -> U192(X1,X2),U192(active(X1),X2) -> U192(X1,X2),U192(X1,active(X2)) -> U192(X1,X2),U193(mark(X)) -> U193(X),U193(active(X)) -> U193(X),U201(mark(X1),X2,X3) -> U201(X1,X2,X3),U201(X1,mark(X2),X3) -> U201(X1,X2,X3),U201(X1,X2,mark(X3)) -> U201(X1,X2,X3),U201(active(X1),X2,X3) -> U201(X1,X2,X3),U201(X1,active(X2),X3) -> U201(X1,X2,X3),U201(X1,X2,active(X3)) -> U201(X1,X2,X3),U202(mark(X1),X2,X3) -> U202(X1,X2,X3),U202(X1,mark(X2),X3) -> U202(X1,X2,X3),U202(X1,X2,mark(X3)) -> U202(X1,X2,X3),U202(active(X1),X2,X3) -> U202(X1,X2,X3),U202(X1,active(X2),X3) -> U202(X1,X2,X3),U202(X1,X2,active(X3)) -> U202(X1,X2,X3),U203(mark(X1),X2,X3) -> U203(X1,X2,X3),U203(X1,mark(X2),X3) -> U203(X1,X2,X3),U203(X1,X2,mark(X3)) -> U203(X1,X2,X3),U203(active(X1),X2,X3) -> U203(X1,X2,X3),U203(X1,active(X2),X3) -> U203(X1,X2,X3),U203(X1,X2,active(X3)) -> U203(X1,X2,X3),U204(mark(X1),X2,X3) -> U204(X1,X2,X3),U204(X1,mark(X2),X3) -> U204(X1,X2,X3),U204(X1,X2,mark(X3)) -> U204(X1,X2,X3),U204(active(X1),X2,X3) -> U204(X1,X2,X3),U204(X1,active(X2),X3) -> U204(X1,X2,X3),U204(X1,X2,active(X3)) -> U204(X1,X2,X3),U205(mark(X1),X2) -> U205(X1,X2),U205(X1,mark(X2)) -> U205(X1,X2),U205(active(X1),X2) -> U205(X1,X2),U205(X1,active(X2)) -> U205(X1,X2),U206(mark(X)) -> U206(X),U206(active(X)) -> U206(X),U21(mark(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,mark(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,mark(X3)) -> U21(X1,X2,X3),U21(active(X1),X2,X3) -> U21(X1,X2,X3),U21(X1,active(X2),X3) -> U21(X1,X2,X3),U21(X1,X2,active(X3)) -> U21(X1,X2,X3),U22(mark(X1),X2,X3) -> U22(X1,X2,X3),U22(X1,mark(X2),X3) -> U22(X1,X2,X3),U22(X1,X2,mark(X3)) -> U22(X1,X2,X3),U22(active(X1),X2,X3) -> U22(X1,X2,X3),U22(X1,active(X2),X3) -> U22(X1,X2,X3),U22(X1,X2,active(X3)) -> U22(X1,X2,X3),U211(mark(X)) -> U211(X),U211(active(X)) -> U211(X),U23(mark(X1),X2,X3) -> U23(X1,X2,X3),U23(X1,mark(X2),X3) -> U23(X1,X2,X3),U23(X1,X2,mark(X3)) -> U23(X1,X2,X3),U23(active(X1),X2,X3) -> U23(X1,X2,X3),U23(X1,active(X2),X3) -> U23(X1,X2,X3),U23(X1,X2,active(X3)) -> U23(X1,X2,X3),U221(mark(X)) -> U221(X),U221(active(X)) -> U221(X),U24(mark(X1),X2) -> U24(X1,X2),U24(X1,mark(X2)) -> U24(X1,X2),U24(active(X1),X2) -> U24(X1,X2),U24(X1,active(X2)) -> U24(X1,X2),U231(mark(X1),X2) -> U231(X1,X2),U231(X1,mark(X2)) -> U231(X1,X2),U231(active(X1),X2) -> U231(X1,X2),U231(X1,active(X2)) -> U231(X1,X2),U232(mark(X)) -> U232(X),U232(active(X)) -> U232(X),U241(mark(X1),X2,X3) -> U241(X1,X2,X3),U241(X1,mark(X2),X3) -> U241(X1,X2,X3),U241(X1,X2,mark(X3)) -> U241(X1,X2,X3),U241(active(X1),X2,X3) -> U241(X1,X2,X3),U241(X1,active(X2),X3) -> U241(X1,X2,X3),U241(X1,X2,active(X3)) -> U241(X1,X2,X3),U242(mark(X1),X2,X3) -> U242(X1,X2,X3),U242(X1,mark(X2),X3) -> U242(X1,X2,X3),U242(X1,X2,mark(X3)) -> U242(X1,X2,X3),U242(active(X1),X2,X3) -> U242(X1,X2,X3),U242(X1,active(X2),X3) -> U242(X1,X2,X3),U242(X1,X2,active(X3)) -> U242(X1,X2,X3),U243(mark(X1),X2,X3) -> U243(X1,X2,X3),U243(X1,mark(X2),X3) -> U243(X1,X2,X3),U243(X1,X2,mark(X3)) -> U243(X1,X2,X3),U243(active(X1),X2,X3) -> U243(X1,X2,X3),U243(X1,active(X2),X3) -> U243(X1,X2,X3),U243(X1,X2,active(X3)) -> U243(X1,X2,X3),U244(mark(X1),X2,X3) -> U244(X1,X2,X3),U244(X1,mark(X2),X3) -> U244(X1,X2,X3),U244(X1,X2,mark(X3)) -> U244(X1,X2,X3),U244(active(X1),X2,X3) -> U244(X1,X2,X3),U244(X1,active(X2),X3) -> U244(X1,X2,X3),U244(X1,X2,active(X3)) -> U244(X1,X2,X3),U245(mark(X1),X2) -> U245(X1,X2),U245(X1,mark(X2)) -> U245(X1,X2),U245(active(X1),X2) -> U245(X1,X2),U245(X1,active(X2)) -> U245(X1,X2),U246(mark(X)) -> U246(X),U246(active(X)) -> U246(X),U251(mark(X1),X2,X3) -> U251(X1,X2,X3),U251(X1,mark(X2),X3) -> U251(X1,X2,X3),U251(X1,X2,mark(X3)) -> U251(X1,X2,X3),U251(active(X1),X2,X3) -> U251(X1,X2,X3),U251(X1,active(X2),X3) -> U251(X1,X2,X3),U251(X1,X2,active(X3)) -> U251(X1,X2,X3),U252(mark(X1),X2,X3) -> U252(X1,X2,X3),U252(X1,mark(X2),X3) -> U252(X1,X2,X3),U252(X1,X2,mark(X3)) -> U252(X1,X2,X3),U252(active(X1),X2,X3) -> U252(X1,X2,X3),U252(X1,active(X2),X3) -> U252(X1,X2,X3),U252(X1,X2,active(X3)) -> U252(X1,X2,X3),U253(mark(X1),X2,X3) -> U253(X1,X2,X3),U253(X1,mark(X2),X3) -> U253(X1,X2,X3),U253(X1,X2,mark(X3)) -> U253(X1,X2,X3),U253(active(X1),X2,X3) -> U253(X1,X2,X3),U253(X1,active(X2),X3) -> U253(X1,X2,X3),U253(X1,X2,active(X3)) -> U253(X1,X2,X3),U254(mark(X1),X2,X3) -> U254(X1,X2,X3),U254(X1,mark(X2),X3) -> U254(X1,X2,X3),U254(X1,X2,mark(X3)) -> U254(X1,X2,X3),U254(active(X1),X2,X3) -> U254(X1,X2,X3),U254(X1,active(X2),X3) -> U254(X1,X2,X3),U254(X1,X2,active(X3)) -> U254(X1,X2,X3),U255(mark(X1),X2) -> U255(X1,X2),U255(X1,mark(X2)) -> U255(X1,X2),U255(active(X1),X2) -> U255(X1,X2),U255(X1,active(X2)) -> U255(X1,X2),U256(mark(X)) -> U256(X),U256(active(X)) -> U256(X),U261(mark(X1),X2) -> U261(X1,X2),U261(X1,mark(X2)) -> U261(X1,X2),U261(active(X1),X2) -> U261(X1,X2),U261(X1,active(X2)) -> U261(X1,X2),U262(mark(X)) -> U262(X),U262(active(X)) -> U262(X),U271(mark(X1),X2) -> U271(X1,X2),U271(X1,mark(X2)) -> U271(X1,X2),U271(active(X1),X2) -> U271(X1,X2),U271(X1,active(X2)) -> U271(X1,X2),U272(mark(X)) -> U272(X),U272(active(X)) -> U272(X),U281(mark(X1),X2) -> U281(X1,X2),U281(X1,mark(X2)) -> U281(X1,X2),U281(active(X1),X2) -> U281(X1,X2),U281(X1,active(X2)) -> U281(X1,X2),U282(mark(X1),X2) -> U282(X1,X2),U282(X1,mark(X2)) -> U282(X1,X2),U282(active(X1),X2) -> U282(X1,X2),U282(X1,active(X2)) -> U282(X1,X2),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),natsFrom(mark(X)) -> natsFrom(X),natsFrom(active(X)) -> natsFrom(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),U291(mark(X1),X2,X3) -> U291(X1,X2,X3),U291(X1,mark(X2),X3) -> U291(X1,X2,X3),U291(X1,X2,mark(X3)) -> U291(X1,X2,X3),U291(active(X1),X2,X3) -> U291(X1,X2,X3),U291(X1,active(X2),X3) -> U291(X1,X2,X3),U291(X1,X2,active(X3)) -> U291(X1,X2,X3),U292(mark(X1),X2,X3) -> U292(X1,X2,X3),U292(X1,mark(X2),X3) -> U292(X1,X2,X3),U292(X1,X2,mark(X3)) -> U292(X1,X2,X3),U292(active(X1),X2,X3) -> U292(X1,X2,X3),U292(X1,active(X2),X3) -> U292(X1,X2,X3),U292(X1,X2,active(X3)) -> U292(X1,X2,X3),U293(mark(X1),X2,X3) -> U293(X1,X2,X3),U293(X1,mark(X2),X3) -> U293(X1,X2,X3),U293(X1,X2,mark(X3)) -> U293(X1,X2,X3),U293(active(X1),X2,X3) -> U293(X1,X2,X3),U293(X1,active(X2),X3) -> U293(X1,X2,X3),U293(X1,X2,active(X3)) -> U293(X1,X2,X3),U294(mark(X1),X2,X3) -> U294(X1,X2,X3),U294(X1,mark(X2),X3) -> U294(X1,X2,X3),U294(X1,X2,mark(X3)) -> U294(X1,X2,X3),U294(active(X1),X2,X3) -> U294(X1,X2,X3),U294(X1,active(X2),X3) -> U294(X1,X2,X3),U294(X1,X2,active(X3)) -> U294(X1,X2,X3),head(mark(X)) -> head(X),head(active(X)) -> head(X),afterNth(mark(X1),X2) -> afterNth(X1,X2),afterNth(X1,mark(X2)) -> afterNth(X1,X2),afterNth(active(X1),X2) -> afterNth(X1,X2),afterNth(X1,active(X2)) -> afterNth(X1,X2),U301(mark(X1),X2,X3) -> U301(X1,X2,X3),U301(X1,mark(X2),X3) -> U301(X1,X2,X3),U301(X1,X2,mark(X3)) -> U301(X1,X2,X3),U301(active(X1),X2,X3) -> U301(X1,X2,X3),U301(X1,active(X2),X3) -> U301(X1,X2,X3),U301(X1,X2,active(X3)) -> U301(X1,X2,X3),U302(mark(X1),X2) -> U302(X1,X2),U302(X1,mark(X2)) -> U302(X1,X2),U302(active(X1),X2) -> U302(X1,X2),U302(X1,active(X2)) -> U302(X1,X2),U303(mark(X1),X2) -> U303(X1,X2),U303(X1,mark(X2)) -> U303(X1,X2),U303(active(X1),X2) -> U303(X1,X2),U303(X1,active(X2)) -> U303(X1,X2),U304(mark(X1),X2) -> U304(X1,X2),U304(X1,mark(X2)) -> U304(X1,X2),U304(active(X1),X2) -> U304(X1,X2),U304(X1,active(X2)) -> U304(X1,X2),U31(mark(X1),X2,X3) -> U31(X1,X2,X3),U31(X1,mark(X2),X3) -> U31(X1,X2,X3),U31(X1,X2,mark(X3)) -> U31(X1,X2,X3),U31(active(X1),X2,X3) -> U31(X1,X2,X3),U31(X1,active(X2),X3) -> U31(X1,X2,X3),U31(X1,X2,active(X3)) -> U31(X1,X2,X3),U32(mark(X1),X2,X3) -> U32(X1,X2,X3),U32(X1,mark(X2),X3) -> U32(X1,X2,X3),U32(X1,X2,mark(X3)) -> U32(X1,X2,X3),U32(active(X1),X2,X3) -> U32(X1,X2,X3),U32(X1,active(X2),X3) -> U32(X1,X2,X3),U32(X1,X2,active(X3)) -> U32(X1,X2,X3),U311(mark(X1),X2) -> U311(X1,X2),U311(X1,mark(X2)) -> U311(X1,X2),U311(active(X1),X2) -> U311(X1,X2),U311(X1,active(X2)) -> U311(X1,X2),U312(mark(X1),X2) -> U312(X1,X2),U312(X1,mark(X2)) -> U312(X1,X2),U312(active(X1),X2) -> U312(X1,X2),U312(X1,active(X2)) -> U312(X1,X2),pair(mark(X1),X2) -> pair(X1,X2),pair(X1,mark(X2)) -> pair(X1,X2),pair(active(X1),X2) -> pair(X1,X2),pair(X1,active(X2)) -> pair(X1,X2),U33(mark(X1),X2,X3) -> U33(X1,X2,X3),U33(X1,mark(X2),X3) -> U33(X1,X2,X3),U33(X1,X2,mark(X3)) -> U33(X1,X2,X3),U33(active(X1),X2,X3) -> U33(X1,X2,X3),U33(X1,active(X2),X3) -> U33(X1,X2,X3),U33(X1,X2,active(X3)) -> U33(X1,X2,X3),U321(mark(X1),X2,X3,X4) -> U321(X1,X2,X3,X4),U321(X1,mark(X2),X3,X4) -> U321(X1,X2,X3,X4),U321(X1,X2,mark(X3),X4) -> U321(X1,X2,X3,X4),U321(X1,X2,X3,mark(X4)) -> U321(X1,X2,X3,X4),U321(active(X1),X2,X3,X4) -> U321(X1,X2,X3,X4),U321(X1,active(X2),X3,X4) -> U321(X1,X2,X3,X4),U321(X1,X2,active(X3),X4) -> U321(X1,X2,X3,X4),U321(X1,X2,X3,active(X4)) -> U321(X1,X2,X3,X4),U322(mark(X1),X2,X3,X4) -> U322(X1,X2,X3,X4),U322(X1,mark(X2),X3,X4) -> U322(X1,X2,X3,X4),U322(X1,X2,mark(X3),X4) -> U322(X1,X2,X3,X4),U322(X1,X2,X3,mark(X4)) -> U322(X1,X2,X3,X4),U322(active(X1),X2,X3,X4) -> U322(X1,X2,X3,X4),U322(X1,active(X2),X3,X4) -> U322(X1,X2,X3,X4),U322(X1,X2,active(X3),X4) -> U322(X1,X2,X3,X4),U322(X1,X2,X3,active(X4)) -> U322(X1,X2,X3,X4),U323(mark(X1),X2,X3,X4) -> U323(X1,X2,X3,X4),U323(X1,mark(X2),X3,X4) -> U323(X1,X2,X3,X4),U323(X1,X2,mark(X3),X4) -> U323(X1,X2,X3,X4),U323(X1,X2,X3,mark(X4)) -> U323(X1,X2,X3,X4),U323(active(X1),X2,X3,X4) -> U323(X1,X2,X3,X4),U323(X1,active(X2),X3,X4) -> U323(X1,X2,X3,X4),U323(X1,X2,active(X3),X4) -> U323(X1,X2,X3,X4),U323(X1,X2,X3,active(X4)) -> U323(X1,X2,X3,X4),U324(mark(X1),X2,X3,X4) -> U324(X1,X2,X3,X4),U324(X1,mark(X2),X3,X4) -> U324(X1,X2,X3,X4),U324(X1,X2,mark(X3),X4) -> U324(X1,X2,X3,X4),U324(X1,X2,X3,mark(X4)) -> U324(X1,X2,X3,X4),U324(active(X1),X2,X3,X4) -> U324(X1,X2,X3,X4),U324(X1,active(X2),X3,X4) -> U324(X1,X2,X3,X4),U324(X1,X2,active(X3),X4) -> U324(X1,X2,X3,X4),U324(X1,X2,X3,active(X4)) -> U324(X1,X2,X3,X4),U325(mark(X1),X2,X3,X4) -> U325(X1,X2,X3,X4),U325(X1,mark(X2),X3,X4) -> U325(X1,X2,X3,X4),U325(X1,X2,mark(X3),X4) -> U325(X1,X2,X3,X4),U325(X1,X2,X3,mark(X4)) -> U325(X1,X2,X3,X4),U325(active(X1),X2,X3,X4) -> U325(X1,X2,X3,X4),U325(X1,active(X2),X3,X4) -> U325(X1,X2,X3,X4),U325(X1,X2,active(X3),X4) -> U325(X1,X2,X3,X4),U325(X1,X2,X3,active(X4)) -> U325(X1,X2,X3,X4),U326(mark(X1),X2,X3,X4) -> U326(X1,X2,X3,X4),U326(X1,mark(X2),X3,X4) -> U326(X1,X2,X3,X4),U326(X1,X2,mark(X3),X4) -> U326(X1,X2,X3,X4),U326(X1,X2,X3,mark(X4)) -> U326(X1,X2,X3,X4),U326(active(X1),X2,X3,X4) -> U326(X1,X2,X3,X4),U326(X1,active(X2),X3,X4) -> U326(X1,X2,X3,X4),U326(X1,X2,active(X3),X4) -> U326(X1,X2,X3,X4),U326(X1,X2,X3,active(X4)) -> U326(X1,X2,X3,X4),U327(mark(X1),X2) -> U327(X1,X2),U327(X1,mark(X2)) -> U327(X1,X2),U327(active(X1),X2) -> U327(X1,X2),U327(X1,active(X2)) -> U327(X1,X2),U34(mark(X1),X2) -> U34(X1,X2),U34(X1,mark(X2)) -> U34(X1,X2),U34(active(X1),X2) -> U34(X1,X2),U34(X1,active(X2)) -> U34(X1,X2),U331(mark(X1),X2,X3) -> U331(X1,X2,X3),U331(X1,mark(X2),X3) -> U331(X1,X2,X3),U331(X1,X2,mark(X3)) -> U331(X1,X2,X3),U331(active(X1),X2,X3) -> U331(X1,X2,X3),U331(X1,active(X2),X3) -> U331(X1,X2,X3),U331(X1,X2,active(X3)) -> U331(X1,X2,X3),U332(mark(X1),X2) -> U332(X1,X2),U332(X1,mark(X2)) -> U332(X1,X2),U332(active(X1),X2) -> U332(X1,X2),U332(X1,active(X2)) -> U332(X1,X2),U333(mark(X1),X2) -> U333(X1,X2),U333(X1,mark(X2)) -> U333(X1,X2),U333(active(X1),X2) -> U333(X1,X2),U333(X1,active(X2)) -> U333(X1,X2),U334(mark(X1),X2) -> U334(X1,X2),U334(X1,mark(X2)) -> U334(X1,X2),U334(active(X1),X2) -> U334(X1,X2),U334(X1,active(X2)) -> U334(X1,X2),U341(mark(X1),X2,X3) -> U341(X1,X2,X3),U341(X1,mark(X2),X3) -> U341(X1,X2,X3),U341(X1,X2,mark(X3)) -> U341(X1,X2,X3),U341(active(X1),X2,X3) -> U341(X1,X2,X3),U341(X1,active(X2),X3) -> U341(X1,X2,X3),U341(X1,X2,active(X3)) -> U341(X1,X2,X3),U342(mark(X1),X2,X3) -> U342(X1,X2,X3),U342(X1,mark(X2),X3) -> U342(X1,X2,X3),U342(X1,X2,mark(X3)) -> U342(X1,X2,X3),U342(active(X1),X2,X3) -> U342(X1,X2,X3),U342(X1,active(X2),X3) -> U342(X1,X2,X3),U342(X1,X2,active(X3)) -> U342(X1,X2,X3),U343(mark(X1),X2,X3) -> U343(X1,X2,X3),U343(X1,mark(X2),X3) -> U343(X1,X2,X3),U343(X1,X2,mark(X3)) -> U343(X1,X2,X3),U343(active(X1),X2,X3) -> U343(X1,X2,X3),U343(X1,active(X2),X3) -> U343(X1,X2,X3),U343(X1,X2,active(X3)) -> U343(X1,X2,X3),U344(mark(X1),X2,X3) -> U344(X1,X2,X3),U344(X1,mark(X2),X3) -> U344(X1,X2,X3),U344(X1,X2,mark(X3)) -> U344(X1,X2,X3),U344(active(X1),X2,X3) -> U344(X1,X2,X3),U344(X1,active(X2),X3) -> U344(X1,X2,X3),U344(X1,X2,active(X3)) -> U344(X1,X2,X3),fst(mark(X)) -> fst(X),fst(active(X)) -> fst(X),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,mark(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,mark(X3)) -> U42(X1,X2,X3),U42(active(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,active(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,active(X3)) -> U42(X1,X2,X3),U43(mark(X1),X2,X3) -> U43(X1,X2,X3),U43(X1,mark(X2),X3) -> U43(X1,X2,X3),U43(X1,X2,mark(X3)) -> U43(X1,X2,X3),U43(active(X1),X2,X3) -> U43(X1,X2,X3),U43(X1,active(X2),X3) -> U43(X1,X2,X3),U43(X1,X2,active(X3)) -> U43(X1,X2,X3),U44(mark(X1),X2,X3) -> U44(X1,X2,X3),U44(X1,mark(X2),X3) -> U44(X1,X2,X3),U44(X1,X2,mark(X3)) -> U44(X1,X2,X3),U44(active(X1),X2,X3) -> U44(X1,X2,X3),U44(X1,active(X2),X3) -> U44(X1,X2,X3),U44(X1,X2,active(X3)) -> U44(X1,X2,X3),U45(mark(X1),X2) -> U45(X1,X2),U45(X1,mark(X2)) -> U45(X1,X2),U45(active(X1),X2) -> U45(X1,X2),U45(X1,active(X2)) -> U45(X1,X2),U46(mark(X)) -> U46(X),U46(active(X)) -> U46(X),U51(mark(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,mark(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,mark(X3)) -> U51(X1,X2,X3),U51(active(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,active(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,active(X3)) -> U51(X1,X2,X3),U52(mark(X1),X2,X3) -> U52(X1,X2,X3),U52(X1,mark(X2),X3) -> U52(X1,X2,X3),U52(X1,X2,mark(X3)) -> U52(X1,X2,X3),U52(active(X1),X2,X3) -> U52(X1,X2,X3),U52(X1,active(X2),X3) -> U52(X1,X2,X3),U52(X1,X2,active(X3)) -> U52(X1,X2,X3),U53(mark(X1),X2,X3) -> U53(X1,X2,X3),U53(X1,mark(X2),X3) -> U53(X1,X2,X3),U53(X1,X2,mark(X3)) -> U53(X1,X2,X3),U53(active(X1),X2,X3) -> U53(X1,X2,X3),U53(X1,active(X2),X3) -> U53(X1,X2,X3),U53(X1,X2,active(X3)) -> U53(X1,X2,X3),U54(mark(X1),X2,X3) -> U54(X1,X2,X3),U54(X1,mark(X2),X3) -> U54(X1,X2,X3),U54(X1,X2,mark(X3)) -> U54(X1,X2,X3),U54(active(X1),X2,X3) -> U54(X1,X2,X3),U54(X1,active(X2),X3) -> U54(X1,X2,X3),U54(X1,X2,active(X3)) -> U54(X1,X2,X3),U55(mark(X1),X2) -> U55(X1,X2),U55(X1,mark(X2)) -> U55(X1,X2),U55(active(X1),X2) -> U55(X1,X2),U55(X1,active(X2)) -> U55(X1,X2),U56(mark(X)) -> U56(X),U56(active(X)) -> U56(X),U61(mark(X1),X2) -> U61(X1,X2),U61(X1,mark(X2)) -> U61(X1,X2),U61(active(X1),X2) -> U61(X1,X2),U61(X1,active(X2)) -> U61(X1,X2),U62(mark(X1),X2) -> U62(X1,X2),U62(X1,mark(X2)) -> U62(X1,X2),U62(active(X1),X2) -> U62(X1,X2),U62(X1,active(X2)) -> U62(X1,X2),isPLNatKind(mark(X)) -> isPLNatKind(X),isPLNatKind(active(X)) -> isPLNatKind(X),U63(mark(X)) -> U63(X),U63(active(X)) -> U63(X),isPLNat(mark(X)) -> isPLNat(X),isPLNat(active(X)) -> isPLNat(X),U71(mark(X1),X2) -> U71(X1,X2),U71(X1,mark(X2)) -> U71(X1,X2),U71(active(X1),X2) -> U71(X1,X2),U71(X1,active(X2)) -> U71(X1,X2),U72(mark(X1),X2) -> U72(X1,X2),U72(X1,mark(X2)) -> U72(X1,X2),U72(active(X1),X2) -> U72(X1,X2),U72(X1,active(X2)) -> U72(X1,X2),U73(mark(X)) -> U73(X),U73(active(X)) -> U73(X),U81(mark(X1),X2) -> U81(X1,X2),U81(X1,mark(X2)) -> U81(X1,X2),U81(active(X1),X2) -> U81(X1,X2),U81(X1,active(X2)) -> U81(X1,X2),U82(mark(X1),X2) -> U82(X1,X2),U82(X1,mark(X2)) -> U82(X1,X2),U82(active(X1),X2) -> U82(X1,X2),U82(X1,active(X2)) -> U82(X1,X2),U83(mark(X)) -> U83(X),U83(active(X)) -> U83(X),U91(mark(X1),X2) -> U91(X1,X2),U91(X1,mark(X2)) -> U91(X1,X2),U91(active(X1),X2) -> U91(X1,X2),U91(X1,active(X2)) -> U91(X1,X2),U92(mark(X1),X2) -> U92(X1,X2),U92(X1,mark(X2)) -> U92(X1,X2),U92(active(X1),X2) -> U92(X1,X2),U92(X1,active(X2)) -> U92(X1,X2),U93(mark(X)) -> U93(X),U93(active(X)) -> U93(X),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_complete_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U105",2),("U106",1),("U11",3),("U111",2),("U112",1),("U12",3),("U121",2),("U122",1),("U13",3),("U131",1),("U14",3),("U141",1),("U151",1),("U161",1),("U171",2),("U172",1),("U181",2),("U182",2),("U183",1),("U191",2),("U192",2),("U193",1),("U201",3),("U202",3),("U203",3),("U204",3),("U205",2),("U206",1),("U21",3),("U211",1),("U22",3),("U221",1),("U23",3),("U231",2),("U232",1),("U24",2),("U241",3),("U242",3),("U243",3),("U244",3),("U245",2),("U246",1),("U251",3),("U252",3),("U253",3),("U254",3),("U255",2),("U256",1),("U261",2),("U262",1),("U271",2),("U272",1),("U281",2),("U282",2),("U291",3),("U292",3),("U293",3),("U294",3),("U301",3),("U302",2),("U303",2),("U304",2),("U31",3),("U311",2),("U312",2),("U32",3),("U321",4),("U322",4),("U323",4),("U324",4),("U325",4),("U326",4),("U327",2),("U33",3),("U331",3),("U332",2),("U333",2),("U334",2),("U34",2),("U341",3),("U342",3),("U343",3),("U344",3),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",3),("U52",3),("U53",3),("U54",3),("U55",2),("U56",1),("U61",2),("U62",2),("U63",1),("U71",2),("U72",2),("U73",1),("U81",2),("U82",2),("U83",1),("U91",2),("U92",2),("U93",1),("a__U101",3),("a__U102",3),("a__U103",3),("a__U104",3),("a__U105",2),("a__U106",1),("a__U11",3),("a__U111",2),("a__U112",1),("a__U12",3),("a__U121",2),("a__U122",1),("a__U13",3),("a__U131",1),("a__U14",3),("a__U141",1),("a__U151",1),("a__U161",1),("a__U171",2),("a__U172",1),("a__U181",2),("a__U182",2),("a__U183",1),("a__U191",2),("a__U192",2),("a__U193",1),("a__U201",3),("a__U202",3),("a__U203",3),("a__U204",3),("a__U205",2),("a__U206",1),("a__U21",3),("a__U211",1),("a__U22",3),("a__U221",1),("a__U23",3),("a__U231",2),("a__U232",1),("a__U24",2),("a__U241",3),("a__U242",3),("a__U243",3),("a__U244",3),("a__U245",2),("a__U246",1),("a__U251",3),("a__U252",3),("a__U253",3),("a__U254",3),("a__U255",2),("a__U256",1),("a__U261",2),("a__U262",1),("a__U271",2),("a__U272",1),("a__U281",2),("a__U282",2),("a__U291",3),("a__U292",3),("a__U293",3),("a__U294",3),("a__U301",3),("a__U302",2),("a__U303",2),("a__U304",2),("a__U31",3),("a__U311",2),("a__U312",2),("a__U32",3),("a__U321",4),("a__U322",4),("a__U323",4),("a__U324",4),("a__U325",4),("a__U326",4),("a__U327",2),("a__U33",3),("a__U331",3),("a__U332",2),("a__U333",2),("a__U334",2),("a__U34",2),("a__U341",3),("a__U342",3),("a__U343",3),("a__U344",3),("a__U41",3),("a__U42",3),("a__U43",3),("a__U44",3),("a__U45",2),("a__U46",1),("a__U51",3),("a__U52",3),("a__U53",3),("a__U54",3),("a__U55",2),("a__U56",1),("a__U61",2),("a__U62",2),("a__U63",1),("a__U71",2),("a__U72",2),("a__U73",1),("a__U81",2),("a__U82",2),("a__U83",1),("a__U91",2),("a__U92",2),("a__U93",1),("a__afterNth",2),("a__fst",1),("a__head",1),("a__isLNat",1),("a__isLNatKind",1),("a__isNatural",1),("a__isNaturalKind",1),("a__isPLNat",1),("a__isPLNatKind",1),("a__natsFrom",1),("a__sel",2),("a__snd",1),("a__splitAt",2),("a__tail",1),("a__take",2),("afterNth",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isLNatKind",1),("isNatural",1),("isNaturalKind",1),("isPLNat",1),("isPLNatKind",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [a__U101(tt,V1,V2) -> a__U102(a__isNaturalKind(V1),V1,V2),a__U102(tt,V1,V2) -> a__U103(a__isLNatKind(V2),V1,V2),a__U103(tt,V1,V2) -> a__U104(a__isLNatKind(V2),V1,V2),a__U104(tt,V1,V2) -> a__U105(a__isNatural(V1),V2),a__U105(tt,V2) -> a__U106(a__isLNat(V2)),a__U106(tt) -> tt,a__U11(tt,N,XS) -> a__U12(a__isNaturalKind(N),N,XS),a__U111(tt,V2) -> a__U112(a__isLNatKind(V2)),a__U112(tt) -> tt,a__U12(tt,N,XS) -> a__U13(a__isLNat(XS),N,XS),a__U121(tt,V2) -> a__U122(a__isLNatKind(V2)),a__U122(tt) -> tt,a__U13(tt,N,XS) -> a__U14(a__isLNatKind(XS),N,XS),a__U131(tt) -> tt,a__U14(tt,N,XS) -> a__snd(a__splitAt(mark(N),mark(XS))),a__U141(tt) -> tt,a__U151(tt) -> tt,a__U161(tt) -> tt,a__U171(tt,V2) -> a__U172(a__isLNatKind(V2)),a__U172(tt) -> tt,a__U181(tt,V1) -> a__U182(a__isLNatKind(V1),V1),a__U182(tt,V1) -> a__U183(a__isLNat(V1)),a__U183(tt) -> tt,a__U191(tt,V1) -> a__U192(a__isNaturalKind(V1),V1),a__U192(tt,V1) -> a__U193(a__isNatural(V1)),a__U193(tt) -> tt,a__U201(tt,V1,V2) -> a__U202(a__isNaturalKind(V1),V1,V2),a__U202(tt,V1,V2) -> a__U203(a__isLNatKind(V2),V1,V2),a__U203(tt,V1,V2) -> a__U204(a__isLNatKind(V2),V1,V2),a__U204(tt,V1,V2) -> a__U205(a__isNatural(V1),V2),a__U205(tt,V2) -> a__U206(a__isLNat(V2)),a__U206(tt) -> tt,a__U21(tt,X,Y) -> a__U22(a__isLNatKind(X),X,Y),a__U211(tt) -> tt,a__U22(tt,X,Y) -> a__U23(a__isLNat(Y),X,Y),a__U221(tt) -> tt,a__U23(tt,X,Y) -> a__U24(a__isLNatKind(Y),X),a__U231(tt,V2) -> a__U232(a__isLNatKind(V2)),a__U232(tt) -> tt,a__U24(tt,X) -> mark(X),a__U241(tt,V1,V2) -> a__U242(a__isLNatKind(V1),V1,V2),a__U242(tt,V1,V2) -> a__U243(a__isLNatKind(V2),V1,V2),a__U243(tt,V1,V2) -> a__U244(a__isLNatKind(V2),V1,V2),a__U244(tt,V1,V2) -> a__U245(a__isLNat(V1),V2),a__U245(tt,V2) -> a__U246(a__isLNat(V2)),a__U246(tt) -> tt,a__U251(tt,V1,V2) -> a__U252(a__isNaturalKind(V1),V1,V2),a__U252(tt,V1,V2) -> a__U253(a__isLNatKind(V2),V1,V2),a__U253(tt,V1,V2) -> a__U254(a__isLNatKind(V2),V1,V2),a__U254(tt,V1,V2) -> a__U255(a__isNatural(V1),V2),a__U255(tt,V2) -> a__U256(a__isLNat(V2)),a__U256(tt) -> tt,a__U261(tt,V2) -> a__U262(a__isLNatKind(V2)),a__U262(tt) -> tt,a__U271(tt,V2) -> a__U272(a__isLNatKind(V2)),a__U272(tt) -> tt,a__U281(tt,N) -> a__U282(a__isNaturalKind(N),N),a__U282(tt,N) -> cons(mark(N),natsFrom(s(N))),a__U291(tt,N,XS) -> a__U292(a__isNaturalKind(N),N,XS),a__U292(tt,N,XS) -> a__U293(a__isLNat(XS),N,XS),a__U293(tt,N,XS) -> a__U294(a__isLNatKind(XS),N,XS),a__U294(tt,N,XS) -> a__head(a__afterNth(mark(N),mark(XS))),a__U301(tt,X,Y) -> a__U302(a__isLNatKind(X),Y),a__U302(tt,Y) -> a__U303(a__isLNat(Y),Y),a__U303(tt,Y) -> a__U304(a__isLNatKind(Y),Y),a__U304(tt,Y) -> mark(Y),a__U31(tt,N,XS) -> a__U32(a__isNaturalKind(N),N,XS),a__U311(tt,XS) -> a__U312(a__isLNatKind(XS),XS),a__U312(tt,XS) -> pair(nil,mark(XS)),a__U32(tt,N,XS) -> a__U33(a__isLNat(XS),N,XS),a__U321(tt,N,X,XS) -> a__U322(a__isNaturalKind(N),N,X,XS),a__U322(tt,N,X,XS) -> a__U323(a__isNatural(X),N,X,XS),a__U323(tt,N,X,XS) -> a__U324(a__isNaturalKind(X),N,X,XS),a__U324(tt,N,X,XS) -> a__U325(a__isLNat(XS),N,X,XS),a__U325(tt,N,X,XS) -> a__U326(a__isLNatKind(XS),N,X,XS),a__U326(tt,N,X,XS) -> a__U327(a__splitAt(mark(N),mark(XS)),X),a__U327(pair(YS,ZS),X) -> pair(cons(mark(X),YS),mark(ZS)),a__U33(tt,N,XS) -> a__U34(a__isLNatKind(XS),N),a__U331(tt,N,XS) -> a__U332(a__isNaturalKind(N),XS),a__U332(tt,XS) -> a__U333(a__isLNat(XS),XS),a__U333(tt,XS) -> a__U334(a__isLNatKind(XS),XS),a__U334(tt,XS) -> mark(XS),a__U34(tt,N) -> mark(N),a__U341(tt,N,XS) -> a__U342(a__isNaturalKind(N),N,XS),a__U342(tt,N,XS) -> a__U343(a__isLNat(XS),N,XS),a__U343(tt,N,XS) -> a__U344(a__isLNatKind(XS),N,XS),a__U344(tt,N,XS) -> a__fst(a__splitAt(mark(N),mark(XS))),a__U41(tt,V1,V2) -> a__U42(a__isNaturalKind(V1),V1,V2),a__U42(tt,V1,V2) -> a__U43(a__isLNatKind(V2),V1,V2),a__U43(tt,V1,V2) -> a__U44(a__isLNatKind(V2),V1,V2),a__U44(tt,V1,V2) -> a__U45(a__isNatural(V1),V2),a__U45(tt,V2) -> a__U46(a__isLNat(V2)),a__U46(tt) -> tt,a__U51(tt,V1,V2) -> a__U52(a__isNaturalKind(V1),V1,V2),a__U52(tt,V1,V2) -> a__U53(a__isLNatKind(V2),V1,V2),a__U53(tt,V1,V2) -> a__U54(a__isLNatKind(V2),V1,V2),a__U54(tt,V1,V2) -> a__U55(a__isNatural(V1),V2),a__U55(tt,V2) -> a__U56(a__isLNat(V2)),a__U56(tt) -> tt,a__U61(tt,V1) -> a__U62(a__isPLNatKind(V1),V1),a__U62(tt,V1) -> a__U63(a__isPLNat(V1)),a__U63(tt) -> tt,a__U71(tt,V1) -> a__U72(a__isNaturalKind(V1),V1),a__U72(tt,V1) -> a__U73(a__isNatural(V1)),a__U73(tt) -> tt,a__U81(tt,V1) -> a__U82(a__isPLNatKind(V1),V1),a__U82(tt,V1) -> a__U83(a__isPLNat(V1)),a__U83(tt) -> tt,a__U91(tt,V1) -> a__U92(a__isLNatKind(V1),V1),a__U92(tt,V1) -> a__U93(a__isLNat(V1)),a__U93(tt) -> tt,a__afterNth(N,XS) -> a__U11(a__isNatural(N),N,XS),a__fst(pair(X,Y)) -> a__U21(a__isLNat(X),X,Y),a__head(cons(N,XS)) -> a__U31(a__isNatural(N),N,XS),a__isLNat(nil) -> tt,a__isLNat(afterNth(V1,V2)) -> a__U41(a__isNaturalKind(V1),V1,V2),a__isLNat(cons(V1,V2)) -> a__U51(a__isNaturalKind(V1),V1,V2),a__isLNat(fst(V1)) -> a__U61(a__isPLNatKind(V1),V1),a__isLNat(natsFrom(V1)) -> a__U71(a__isNaturalKind(V1),V1),a__isLNat(snd(V1)) -> a__U81(a__isPLNatKind(V1),V1),a__isLNat(tail(V1)) -> a__U91(a__isLNatKind(V1),V1),a__isLNat(take(V1,V2)) -> a__U101(a__isNaturalKind(V1),V1,V2),a__isLNatKind(nil) -> tt,a__isLNatKind(afterNth(V1,V2)) -> a__U111(a__isNaturalKind(V1),V2),a__isLNatKind(cons(V1,V2)) -> a__U121(a__isNaturalKind(V1),V2),a__isLNatKind(fst(V1)) -> a__U131(a__isPLNatKind(V1)),a__isLNatKind(natsFrom(V1)) -> a__U141(a__isNaturalKind(V1)),a__isLNatKind(snd(V1)) -> a__U151(a__isPLNatKind(V1)),a__isLNatKind(tail(V1)) -> a__U161(a__isLNatKind(V1)),a__isLNatKind(take(V1,V2)) -> a__U171(a__isNaturalKind(V1),V2),a__isNatural(0) -> tt,a__isNatural(head(V1)) -> a__U181(a__isLNatKind(V1),V1),a__isNatural(s(V1)) -> a__U191(a__isNaturalKind(V1),V1),a__isNatural(sel(V1,V2)) -> a__U201(a__isNaturalKind(V1),V1,V2),a__isNaturalKind(0) -> tt,a__isNaturalKind(head(V1)) -> a__U211(a__isLNatKind(V1)),a__isNaturalKind(s(V1)) -> a__U221(a__isNaturalKind(V1)),a__isNaturalKind(sel(V1,V2)) -> a__U231(a__isNaturalKind(V1),V2),a__isPLNat(pair(V1,V2)) -> a__U241(a__isLNatKind(V1),V1,V2),a__isPLNat(splitAt(V1,V2)) -> a__U251(a__isNaturalKind(V1),V1,V2),a__isPLNatKind(pair(V1,V2)) -> a__U261(a__isLNatKind(V1),V2),a__isPLNatKind(splitAt(V1,V2)) -> a__U271(a__isNaturalKind(V1),V2),a__natsFrom(N) -> a__U281(a__isNatural(N),N),a__sel(N,XS) -> a__U291(a__isNatural(N),N,XS),a__snd(pair(X,Y)) -> a__U301(a__isLNat(X),X,Y),a__splitAt(0,XS) -> a__U311(a__isLNat(XS),XS),a__splitAt(s(N),cons(X,XS)) -> a__U321(a__isNatural(N),N,X,XS),a__tail(cons(N,XS)) -> a__U331(a__isNatural(N),N,XS),a__take(N,XS) -> a__U341(a__isNatural(N),N,XS),mark(U101(X1,X2,X3)) -> a__U101(mark(X1),X2,X3),mark(U102(X1,X2,X3)) -> a__U102(mark(X1),X2,X3),mark(isNaturalKind(X)) -> a__isNaturalKind(X),mark(U103(X1,X2,X3)) -> a__U103(mark(X1),X2,X3),mark(isLNatKind(X)) -> a__isLNatKind(X),mark(U104(X1,X2,X3)) -> a__U104(mark(X1),X2,X3),mark(U105(X1,X2)) -> a__U105(mark(X1),X2),mark(isNatural(X)) -> a__isNatural(X),mark(U106(X)) -> a__U106(mark(X)),mark(isLNat(X)) -> a__isLNat(X),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(U12(X1,X2,X3)) -> a__U12(mark(X1),X2,X3),mark(U111(X1,X2)) -> a__U111(mark(X1),X2),mark(U112(X)) -> a__U112(mark(X)),mark(U13(X1,X2,X3)) -> a__U13(mark(X1),X2,X3),mark(U121(X1,X2)) -> a__U121(mark(X1),X2),mark(U122(X)) -> a__U122(mark(X)),mark(U14(X1,X2,X3)) -> a__U14(mark(X1),X2,X3),mark(U131(X)) -> a__U131(mark(X)),mark(snd(X)) -> a__snd(mark(X)),mark(splitAt(X1,X2)) -> a__splitAt(mark(X1),mark(X2)),mark(U141(X)) -> a__U141(mark(X)),mark(U151(X)) -> a__U151(mark(X)),mark(U161(X)) -> a__U161(mark(X)),mark(U171(X1,X2)) -> a__U171(mark(X1),X2),mark(U172(X)) -> a__U172(mark(X)),mark(U181(X1,X2)) -> a__U181(mark(X1),X2),mark(U182(X1,X2)) -> a__U182(mark(X1),X2),mark(U183(X)) -> a__U183(mark(X)),mark(U191(X1,X2)) -> a__U191(mark(X1),X2),mark(U192(X1,X2)) -> a__U192(mark(X1),X2),mark(U193(X)) -> a__U193(mark(X)),mark(U201(X1,X2,X3)) -> a__U201(mark(X1),X2,X3),mark(U202(X1,X2,X3)) -> a__U202(mark(X1),X2,X3),mark(U203(X1,X2,X3)) -> a__U203(mark(X1),X2,X3),mark(U204(X1,X2,X3)) -> a__U204(mark(X1),X2,X3),mark(U205(X1,X2)) -> a__U205(mark(X1),X2),mark(U206(X)) -> a__U206(mark(X)),mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3),mark(U22(X1,X2,X3)) -> a__U22(mark(X1),X2,X3),mark(U211(X)) -> a__U211(mark(X)),mark(U23(X1,X2,X3)) -> a__U23(mark(X1),X2,X3),mark(U221(X)) -> a__U221(mark(X)),mark(U24(X1,X2)) -> a__U24(mark(X1),X2),mark(U231(X1,X2)) -> a__U231(mark(X1),X2),mark(U232(X)) -> a__U232(mark(X)),mark(U241(X1,X2,X3)) -> a__U241(mark(X1),X2,X3),mark(U242(X1,X2,X3)) -> a__U242(mark(X1),X2,X3),mark(U243(X1,X2,X3)) -> a__U243(mark(X1),X2,X3),mark(U244(X1,X2,X3)) -> a__U244(mark(X1),X2,X3),mark(U245(X1,X2)) -> a__U245(mark(X1),X2),mark(U246(X)) -> a__U246(mark(X)),mark(U251(X1,X2,X3)) -> a__U251(mark(X1),X2,X3),mark(U252(X1,X2,X3)) -> a__U252(mark(X1),X2,X3),mark(U253(X1,X2,X3)) -> a__U253(mark(X1),X2,X3),mark(U254(X1,X2,X3)) -> a__U254(mark(X1),X2,X3),mark(U255(X1,X2)) -> a__U255(mark(X1),X2),mark(U256(X)) -> a__U256(mark(X)),mark(U261(X1,X2)) -> a__U261(mark(X1),X2),mark(U262(X)) -> a__U262(mark(X)),mark(U271(X1,X2)) -> a__U271(mark(X1),X2),mark(U272(X)) -> a__U272(mark(X)),mark(U281(X1,X2)) -> a__U281(mark(X1),X2),mark(U282(X1,X2)) -> a__U282(mark(X1),X2),mark(natsFrom(X)) -> a__natsFrom(mark(X)),mark(U291(X1,X2,X3)) -> a__U291(mark(X1),X2,X3),mark(U292(X1,X2,X3)) -> a__U292(mark(X1),X2,X3),mark(U293(X1,X2,X3)) -> a__U293(mark(X1),X2,X3),mark(U294(X1,X2,X3)) -> a__U294(mark(X1),X2,X3),mark(head(X)) -> a__head(mark(X)),mark(afterNth(X1,X2)) -> a__afterNth(mark(X1),mark(X2)),mark(U301(X1,X2,X3)) -> a__U301(mark(X1),X2,X3),mark(U302(X1,X2)) -> a__U302(mark(X1),X2),mark(U303(X1,X2)) -> a__U303(mark(X1),X2),mark(U304(X1,X2)) -> a__U304(mark(X1),X2),mark(U31(X1,X2,X3)) -> a__U31(mark(X1),X2,X3),mark(U32(X1,X2,X3)) -> a__U32(mark(X1),X2,X3),mark(U311(X1,X2)) -> a__U311(mark(X1),X2),mark(U312(X1,X2)) -> a__U312(mark(X1),X2),mark(U33(X1,X2,X3)) -> a__U33(mark(X1),X2,X3),mark(U321(X1,X2,X3,X4)) -> a__U321(mark(X1),X2,X3,X4),mark(U322(X1,X2,X3,X4)) -> a__U322(mark(X1),X2,X3,X4),mark(U323(X1,X2,X3,X4)) -> a__U323(mark(X1),X2,X3,X4),mark(U324(X1,X2,X3,X4)) -> a__U324(mark(X1),X2,X3,X4),mark(U325(X1,X2,X3,X4)) -> a__U325(mark(X1),X2,X3,X4),mark(U326(X1,X2,X3,X4)) -> a__U326(mark(X1),X2,X3,X4),mark(U327(X1,X2)) -> a__U327(mark(X1),X2),mark(U34(X1,X2)) -> a__U34(mark(X1),X2),mark(U331(X1,X2,X3)) -> a__U331(mark(X1),X2,X3),mark(U332(X1,X2)) -> a__U332(mark(X1),X2),mark(U333(X1,X2)) -> a__U333(mark(X1),X2),mark(U334(X1,X2)) -> a__U334(mark(X1),X2),mark(U341(X1,X2,X3)) -> a__U341(mark(X1),X2,X3),mark(U342(X1,X2,X3)) -> a__U342(mark(X1),X2,X3),mark(U343(X1,X2,X3)) -> a__U343(mark(X1),X2,X3),mark(U344(X1,X2,X3)) -> a__U344(mark(X1),X2,X3),mark(fst(X)) -> a__fst(mark(X)),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2,X3)) -> a__U42(mark(X1),X2,X3),mark(U43(X1,X2,X3)) -> a__U43(mark(X1),X2,X3),mark(U44(X1,X2,X3)) -> a__U44(mark(X1),X2,X3),mark(U45(X1,X2)) -> a__U45(mark(X1),X2),mark(U46(X)) -> a__U46(mark(X)),mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3),mark(U52(X1,X2,X3)) -> a__U52(mark(X1),X2,X3),mark(U53(X1,X2,X3)) -> a__U53(mark(X1),X2,X3),mark(U54(X1,X2,X3)) -> a__U54(mark(X1),X2,X3),mark(U55(X1,X2)) -> a__U55(mark(X1),X2),mark(U56(X)) -> a__U56(mark(X)),mark(U61(X1,X2)) -> a__U61(mark(X1),X2),mark(U62(X1,X2)) -> a__U62(mark(X1),X2),mark(isPLNatKind(X)) -> a__isPLNatKind(X),mark(U63(X)) -> a__U63(mark(X)),mark(isPLNat(X)) -> a__isPLNat(X),mark(U71(X1,X2)) -> a__U71(mark(X1),X2),mark(U72(X1,X2)) -> a__U72(mark(X1),X2),mark(U73(X)) -> a__U73(mark(X)),mark(U81(X1,X2)) -> a__U81(mark(X1),X2),mark(U82(X1,X2)) -> a__U82(mark(X1),X2),mark(U83(X)) -> a__U83(mark(X)),mark(U91(X1,X2)) -> a__U91(mark(X1),X2),mark(U92(X1,X2)) -> a__U92(mark(X1),X2),mark(U93(X)) -> a__U93(mark(X)),mark(tail(X)) -> a__tail(mark(X)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(tt) -> tt,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(pair(X1,X2)) -> pair(mark(X1),mark(X2)),mark(nil) -> nil,mark(0) -> 0,a__U101(X1,X2,X3) -> U101(X1,X2,X3),a__U102(X1,X2,X3) -> U102(X1,X2,X3),a__isNaturalKind(X) -> isNaturalKind(X),a__U103(X1,X2,X3) -> U103(X1,X2,X3),a__isLNatKind(X) -> isLNatKind(X),a__U104(X1,X2,X3) -> U104(X1,X2,X3),a__U105(X1,X2) -> U105(X1,X2),a__isNatural(X) -> isNatural(X),a__U106(X) -> U106(X),a__isLNat(X) -> isLNat(X),a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__U12(X1,X2,X3) -> U12(X1,X2,X3),a__U111(X1,X2) -> U111(X1,X2),a__U112(X) -> U112(X),a__U13(X1,X2,X3) -> U13(X1,X2,X3),a__U121(X1,X2) -> U121(X1,X2),a__U122(X) -> U122(X),a__U14(X1,X2,X3) -> U14(X1,X2,X3),a__U131(X) -> U131(X),a__snd(X) -> snd(X),a__splitAt(X1,X2) -> splitAt(X1,X2),a__U141(X) -> U141(X),a__U151(X) -> U151(X),a__U161(X) -> U161(X),a__U171(X1,X2) -> U171(X1,X2),a__U172(X) -> U172(X),a__U181(X1,X2) -> U181(X1,X2),a__U182(X1,X2) -> U182(X1,X2),a__U183(X) -> U183(X),a__U191(X1,X2) -> U191(X1,X2),a__U192(X1,X2) -> U192(X1,X2),a__U193(X) -> U193(X),a__U201(X1,X2,X3) -> U201(X1,X2,X3),a__U202(X1,X2,X3) -> U202(X1,X2,X3),a__U203(X1,X2,X3) -> U203(X1,X2,X3),a__U204(X1,X2,X3) -> U204(X1,X2,X3),a__U205(X1,X2) -> U205(X1,X2),a__U206(X) -> U206(X),a__U21(X1,X2,X3) -> U21(X1,X2,X3),a__U22(X1,X2,X3) -> U22(X1,X2,X3),a__U211(X) -> U211(X),a__U23(X1,X2,X3) -> U23(X1,X2,X3),a__U221(X) -> U221(X),a__U24(X1,X2) -> U24(X1,X2),a__U231(X1,X2) -> U231(X1,X2),a__U232(X) -> U232(X),a__U241(X1,X2,X3) -> U241(X1,X2,X3),a__U242(X1,X2,X3) -> U242(X1,X2,X3),a__U243(X1,X2,X3) -> U243(X1,X2,X3),a__U244(X1,X2,X3) -> U244(X1,X2,X3),a__U245(X1,X2) -> U245(X1,X2),a__U246(X) -> U246(X),a__U251(X1,X2,X3) -> U251(X1,X2,X3),a__U252(X1,X2,X3) -> U252(X1,X2,X3),a__U253(X1,X2,X3) -> U253(X1,X2,X3),a__U254(X1,X2,X3) -> U254(X1,X2,X3),a__U255(X1,X2) -> U255(X1,X2),a__U256(X) -> U256(X),a__U261(X1,X2) -> U261(X1,X2),a__U262(X) -> U262(X),a__U271(X1,X2) -> U271(X1,X2),a__U272(X) -> U272(X),a__U281(X1,X2) -> U281(X1,X2),a__U282(X1,X2) -> U282(X1,X2),a__natsFrom(X) -> natsFrom(X),a__U291(X1,X2,X3) -> U291(X1,X2,X3),a__U292(X1,X2,X3) -> U292(X1,X2,X3),a__U293(X1,X2,X3) -> U293(X1,X2,X3),a__U294(X1,X2,X3) -> U294(X1,X2,X3),a__head(X) -> head(X),a__afterNth(X1,X2) -> afterNth(X1,X2),a__U301(X1,X2,X3) -> U301(X1,X2,X3),a__U302(X1,X2) -> U302(X1,X2),a__U303(X1,X2) -> U303(X1,X2),a__U304(X1,X2) -> U304(X1,X2),a__U31(X1,X2,X3) -> U31(X1,X2,X3),a__U32(X1,X2,X3) -> U32(X1,X2,X3),a__U311(X1,X2) -> U311(X1,X2),a__U312(X1,X2) -> U312(X1,X2),a__U33(X1,X2,X3) -> U33(X1,X2,X3),a__U321(X1,X2,X3,X4) -> U321(X1,X2,X3,X4),a__U322(X1,X2,X3,X4) -> U322(X1,X2,X3,X4),a__U323(X1,X2,X3,X4) -> U323(X1,X2,X3,X4),a__U324(X1,X2,X3,X4) -> U324(X1,X2,X3,X4),a__U325(X1,X2,X3,X4) -> U325(X1,X2,X3,X4),a__U326(X1,X2,X3,X4) -> U326(X1,X2,X3,X4),a__U327(X1,X2) -> U327(X1,X2),a__U34(X1,X2) -> U34(X1,X2),a__U331(X1,X2,X3) -> U331(X1,X2,X3),a__U332(X1,X2) -> U332(X1,X2),a__U333(X1,X2) -> U333(X1,X2),a__U334(X1,X2) -> U334(X1,X2),a__U341(X1,X2,X3) -> U341(X1,X2,X3),a__U342(X1,X2,X3) -> U342(X1,X2,X3),a__U343(X1,X2,X3) -> U343(X1,X2,X3),a__U344(X1,X2,X3) -> U344(X1,X2,X3),a__fst(X) -> fst(X),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2,X3) -> U42(X1,X2,X3),a__U43(X1,X2,X3) -> U43(X1,X2,X3),a__U44(X1,X2,X3) -> U44(X1,X2,X3),a__U45(X1,X2) -> U45(X1,X2),a__U46(X) -> U46(X),a__U51(X1,X2,X3) -> U51(X1,X2,X3),a__U52(X1,X2,X3) -> U52(X1,X2,X3),a__U53(X1,X2,X3) -> U53(X1,X2,X3),a__U54(X1,X2,X3) -> U54(X1,X2,X3),a__U55(X1,X2) -> U55(X1,X2),a__U56(X) -> U56(X),a__U61(X1,X2) -> U61(X1,X2),a__U62(X1,X2) -> U62(X1,X2),a__isPLNatKind(X) -> isPLNatKind(X),a__U63(X) -> U63(X),a__isPLNat(X) -> isPLNat(X),a__U71(X1,X2) -> U71(X1,X2),a__U72(X1,X2) -> U72(X1,X2),a__U73(X) -> U73(X),a__U81(X1,X2) -> U81(X1,X2),a__U82(X1,X2) -> U82(X1,X2),a__U83(X) -> U83(X),a__U91(X1,X2) -> U91(X1,X2),a__U92(X1,X2) -> U92(X1,X2),a__U93(X) -> U93(X),a__tail(X) -> tail(X),a__take(X1,X2) -> take(X1,X2),a__sel(X1,X2) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_complete_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",3),("U103",3),("U104",3),("U105",2),("U106",1),("U11",3),("U111",2),("U112",1),("U12",3),("U121",2),("U122",1),("U13",3),("U131",1),("U14",3),("U141",1),("U151",1),("U161",1),("U171",2),("U172",1),("U181",2),("U182",2),("U183",1),("U191",2),("U192",2),("U193",1),("U201",3),("U202",3),("U203",3),("U204",3),("U205",2),("U206",1),("U21",3),("U211",1),("U22",3),("U221",1),("U23",3),("U231",2),("U232",1),("U24",2),("U241",3),("U242",3),("U243",3),("U244",3),("U245",2),("U246",1),("U251",3),("U252",3),("U253",3),("U254",3),("U255",2),("U256",1),("U261",2),("U262",1),("U271",2),("U272",1),("U281",2),("U282",2),("U291",3),("U292",3),("U293",3),("U294",3),("U301",3),("U302",2),("U303",2),("U304",2),("U31",3),("U311",2),("U312",2),("U32",3),("U321",4),("U322",4),("U323",4),("U324",4),("U325",4),("U326",4),("U327",2),("U33",3),("U331",3),("U332",2),("U333",2),("U334",2),("U34",2),("U341",3),("U342",3),("U343",3),("U344",3),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",3),("U52",3),("U53",3),("U54",3),("U55",2),("U56",1),("U61",2),("U62",2),("U63",1),("U71",2),("U72",2),("U73",1),("U81",2),("U82",2),("U83",1),("U91",2),("U92",2),("U93",1),("active",1),("afterNth",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isLNatKind",1),("isNatural",1),("isNaturalKind",1),("isPLNat",1),("isPLNatKind",1),("mark",1),("natsFrom",1),("nil",0),("ok",1),("pair",2),("proper",1),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("top",1),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U101(tt,V1,V2)) -> mark(U102(isNaturalKind(V1),V1,V2)),active(U102(tt,V1,V2)) -> mark(U103(isLNatKind(V2),V1,V2)),active(U103(tt,V1,V2)) -> mark(U104(isLNatKind(V2),V1,V2)),active(U104(tt,V1,V2)) -> mark(U105(isNatural(V1),V2)),active(U105(tt,V2)) -> mark(U106(isLNat(V2))),active(U106(tt)) -> mark(tt),active(U11(tt,N,XS)) -> mark(U12(isNaturalKind(N),N,XS)),active(U111(tt,V2)) -> mark(U112(isLNatKind(V2))),active(U112(tt)) -> mark(tt),active(U12(tt,N,XS)) -> mark(U13(isLNat(XS),N,XS)),active(U121(tt,V2)) -> mark(U122(isLNatKind(V2))),active(U122(tt)) -> mark(tt),active(U13(tt,N,XS)) -> mark(U14(isLNatKind(XS),N,XS)),active(U131(tt)) -> mark(tt),active(U14(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U141(tt)) -> mark(tt),active(U151(tt)) -> mark(tt),active(U161(tt)) -> mark(tt),active(U171(tt,V2)) -> mark(U172(isLNatKind(V2))),active(U172(tt)) -> mark(tt),active(U181(tt,V1)) -> mark(U182(isLNatKind(V1),V1)),active(U182(tt,V1)) -> mark(U183(isLNat(V1))),active(U183(tt)) -> mark(tt),active(U191(tt,V1)) -> mark(U192(isNaturalKind(V1),V1)),active(U192(tt,V1)) -> mark(U193(isNatural(V1))),active(U193(tt)) -> mark(tt),active(U201(tt,V1,V2)) -> mark(U202(isNaturalKind(V1),V1,V2)),active(U202(tt,V1,V2)) -> mark(U203(isLNatKind(V2),V1,V2)),active(U203(tt,V1,V2)) -> mark(U204(isLNatKind(V2),V1,V2)),active(U204(tt,V1,V2)) -> mark(U205(isNatural(V1),V2)),active(U205(tt,V2)) -> mark(U206(isLNat(V2))),active(U206(tt)) -> mark(tt),active(U21(tt,X,Y)) -> mark(U22(isLNatKind(X),X,Y)),active(U211(tt)) -> mark(tt),active(U22(tt,X,Y)) -> mark(U23(isLNat(Y),X,Y)),active(U221(tt)) -> mark(tt),active(U23(tt,X,Y)) -> mark(U24(isLNatKind(Y),X)),active(U231(tt,V2)) -> mark(U232(isLNatKind(V2))),active(U232(tt)) -> mark(tt),active(U24(tt,X)) -> mark(X),active(U241(tt,V1,V2)) -> mark(U242(isLNatKind(V1),V1,V2)),active(U242(tt,V1,V2)) -> mark(U243(isLNatKind(V2),V1,V2)),active(U243(tt,V1,V2)) -> mark(U244(isLNatKind(V2),V1,V2)),active(U244(tt,V1,V2)) -> mark(U245(isLNat(V1),V2)),active(U245(tt,V2)) -> mark(U246(isLNat(V2))),active(U246(tt)) -> mark(tt),active(U251(tt,V1,V2)) -> mark(U252(isNaturalKind(V1),V1,V2)),active(U252(tt,V1,V2)) -> mark(U253(isLNatKind(V2),V1,V2)),active(U253(tt,V1,V2)) -> mark(U254(isLNatKind(V2),V1,V2)),active(U254(tt,V1,V2)) -> mark(U255(isNatural(V1),V2)),active(U255(tt,V2)) -> mark(U256(isLNat(V2))),active(U256(tt)) -> mark(tt),active(U261(tt,V2)) -> mark(U262(isLNatKind(V2))),active(U262(tt)) -> mark(tt),active(U271(tt,V2)) -> mark(U272(isLNatKind(V2))),active(U272(tt)) -> mark(tt),active(U281(tt,N)) -> mark(U282(isNaturalKind(N),N)),active(U282(tt,N)) -> mark(cons(N,natsFrom(s(N)))),active(U291(tt,N,XS)) -> mark(U292(isNaturalKind(N),N,XS)),active(U292(tt,N,XS)) -> mark(U293(isLNat(XS),N,XS)),active(U293(tt,N,XS)) -> mark(U294(isLNatKind(XS),N,XS)),active(U294(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U301(tt,X,Y)) -> mark(U302(isLNatKind(X),Y)),active(U302(tt,Y)) -> mark(U303(isLNat(Y),Y)),active(U303(tt,Y)) -> mark(U304(isLNatKind(Y),Y)),active(U304(tt,Y)) -> mark(Y),active(U31(tt,N,XS)) -> mark(U32(isNaturalKind(N),N,XS)),active(U311(tt,XS)) -> mark(U312(isLNatKind(XS),XS)),active(U312(tt,XS)) -> mark(pair(nil,XS)),active(U32(tt,N,XS)) -> mark(U33(isLNat(XS),N,XS)),active(U321(tt,N,X,XS)) -> mark(U322(isNaturalKind(N),N,X,XS)),active(U322(tt,N,X,XS)) -> mark(U323(isNatural(X),N,X,XS)),active(U323(tt,N,X,XS)) -> mark(U324(isNaturalKind(X),N,X,XS)),active(U324(tt,N,X,XS)) -> mark(U325(isLNat(XS),N,X,XS)),active(U325(tt,N,X,XS)) -> mark(U326(isLNatKind(XS),N,X,XS)),active(U326(tt,N,X,XS)) -> mark(U327(splitAt(N,XS),X)),active(U327(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U33(tt,N,XS)) -> mark(U34(isLNatKind(XS),N)),active(U331(tt,N,XS)) -> mark(U332(isNaturalKind(N),XS)),active(U332(tt,XS)) -> mark(U333(isLNat(XS),XS)),active(U333(tt,XS)) -> mark(U334(isLNatKind(XS),XS)),active(U334(tt,XS)) -> mark(XS),active(U34(tt,N)) -> mark(N),active(U341(tt,N,XS)) -> mark(U342(isNaturalKind(N),N,XS)),active(U342(tt,N,XS)) -> mark(U343(isLNat(XS),N,XS)),active(U343(tt,N,XS)) -> mark(U344(isLNatKind(XS),N,XS)),active(U344(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(U41(tt,V1,V2)) -> mark(U42(isNaturalKind(V1),V1,V2)),active(U42(tt,V1,V2)) -> mark(U43(isLNatKind(V2),V1,V2)),active(U43(tt,V1,V2)) -> mark(U44(isLNatKind(V2),V1,V2)),active(U44(tt,V1,V2)) -> mark(U45(isNatural(V1),V2)),active(U45(tt,V2)) -> mark(U46(isLNat(V2))),active(U46(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNaturalKind(V1),V1,V2)),active(U52(tt,V1,V2)) -> mark(U53(isLNatKind(V2),V1,V2)),active(U53(tt,V1,V2)) -> mark(U54(isLNatKind(V2),V1,V2)),active(U54(tt,V1,V2)) -> mark(U55(isNatural(V1),V2)),active(U55(tt,V2)) -> mark(U56(isLNat(V2))),active(U56(tt)) -> mark(tt),active(U61(tt,V1)) -> mark(U62(isPLNatKind(V1),V1)),active(U62(tt,V1)) -> mark(U63(isPLNat(V1))),active(U63(tt)) -> mark(tt),active(U71(tt,V1)) -> mark(U72(isNaturalKind(V1),V1)),active(U72(tt,V1)) -> mark(U73(isNatural(V1))),active(U73(tt)) -> mark(tt),active(U81(tt,V1)) -> mark(U82(isPLNatKind(V1),V1)),active(U82(tt,V1)) -> mark(U83(isPLNat(V1))),active(U83(tt)) -> mark(tt),active(U91(tt,V1)) -> mark(U92(isLNatKind(V1),V1)),active(U92(tt,V1)) -> mark(U93(isLNat(V1))),active(U93(tt)) -> mark(tt),active(afterNth(N,XS)) -> mark(U11(isNatural(N),N,XS)),active(fst(pair(X,Y))) -> mark(U21(isLNat(X),X,Y)),active(head(cons(N,XS))) -> mark(U31(isNatural(N),N,XS)),active(isLNat(nil)) -> mark(tt),active(isLNat(afterNth(V1,V2))) -> mark(U41(isNaturalKind(V1),V1,V2)),active(isLNat(cons(V1,V2))) -> mark(U51(isNaturalKind(V1),V1,V2)),active(isLNat(fst(V1))) -> mark(U61(isPLNatKind(V1),V1)),active(isLNat(natsFrom(V1))) -> mark(U71(isNaturalKind(V1),V1)),active(isLNat(snd(V1))) -> mark(U81(isPLNatKind(V1),V1)),active(isLNat(tail(V1))) -> mark(U91(isLNatKind(V1),V1)),active(isLNat(take(V1,V2))) -> mark(U101(isNaturalKind(V1),V1,V2)),active(isLNatKind(nil)) -> mark(tt),active(isLNatKind(afterNth(V1,V2))) -> mark(U111(isNaturalKind(V1),V2)),active(isLNatKind(cons(V1,V2))) -> mark(U121(isNaturalKind(V1),V2)),active(isLNatKind(fst(V1))) -> mark(U131(isPLNatKind(V1))),active(isLNatKind(natsFrom(V1))) -> mark(U141(isNaturalKind(V1))),active(isLNatKind(snd(V1))) -> mark(U151(isPLNatKind(V1))),active(isLNatKind(tail(V1))) -> mark(U161(isLNatKind(V1))),active(isLNatKind(take(V1,V2))) -> mark(U171(isNaturalKind(V1),V2)),active(isNatural(0)) -> mark(tt),active(isNatural(head(V1))) -> mark(U181(isLNatKind(V1),V1)),active(isNatural(s(V1))) -> mark(U191(isNaturalKind(V1),V1)),active(isNatural(sel(V1,V2))) -> mark(U201(isNaturalKind(V1),V1,V2)),active(isNaturalKind(0)) -> mark(tt),active(isNaturalKind(head(V1))) -> mark(U211(isLNatKind(V1))),active(isNaturalKind(s(V1))) -> mark(U221(isNaturalKind(V1))),active(isNaturalKind(sel(V1,V2))) -> mark(U231(isNaturalKind(V1),V2)),active(isPLNat(pair(V1,V2))) -> mark(U241(isLNatKind(V1),V1,V2)),active(isPLNat(splitAt(V1,V2))) -> mark(U251(isNaturalKind(V1),V1,V2)),active(isPLNatKind(pair(V1,V2))) -> mark(U261(isLNatKind(V1),V2)),active(isPLNatKind(splitAt(V1,V2))) -> mark(U271(isNaturalKind(V1),V2)),active(natsFrom(N)) -> mark(U281(isNatural(N),N)),active(sel(N,XS)) -> mark(U291(isNatural(N),N,XS)),active(snd(pair(X,Y))) -> mark(U301(isLNat(X),X,Y)),active(splitAt(0,XS)) -> mark(U311(isLNat(XS),XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U321(isNatural(N),N,X,XS)),active(tail(cons(N,XS))) -> mark(U331(isNatural(N),N,XS)),active(take(N,XS)) -> mark(U341(isNatural(N),N,XS)),active(U101(X1,X2,X3)) -> U101(active(X1),X2,X3),active(U102(X1,X2,X3)) -> U102(active(X1),X2,X3),active(U103(X1,X2,X3)) -> U103(active(X1),X2,X3),active(U104(X1,X2,X3)) -> U104(active(X1),X2,X3),active(U105(X1,X2)) -> U105(active(X1),X2),active(U106(X)) -> U106(active(X)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(U12(X1,X2,X3)) -> U12(active(X1),X2,X3),active(U111(X1,X2)) -> U111(active(X1),X2),active(U112(X)) -> U112(active(X)),active(U13(X1,X2,X3)) -> U13(active(X1),X2,X3),active(U121(X1,X2)) -> U121(active(X1),X2),active(U122(X)) -> U122(active(X)),active(U14(X1,X2,X3)) -> U14(active(X1),X2,X3),active(U131(X)) -> U131(active(X)),active(snd(X)) -> snd(active(X)),active(splitAt(X1,X2)) -> splitAt(active(X1),X2),active(splitAt(X1,X2)) -> splitAt(X1,active(X2)),active(U141(X)) -> U141(active(X)),active(U151(X)) -> U151(active(X)),active(U161(X)) -> U161(active(X)),active(U171(X1,X2)) -> U171(active(X1),X2),active(U172(X)) -> U172(active(X)),active(U181(X1,X2)) -> U181(active(X1),X2),active(U182(X1,X2)) -> U182(active(X1),X2),active(U183(X)) -> U183(active(X)),active(U191(X1,X2)) -> U191(active(X1),X2),active(U192(X1,X2)) -> U192(active(X1),X2),active(U193(X)) -> U193(active(X)),active(U201(X1,X2,X3)) -> U201(active(X1),X2,X3),active(U202(X1,X2,X3)) -> U202(active(X1),X2,X3),active(U203(X1,X2,X3)) -> U203(active(X1),X2,X3),active(U204(X1,X2,X3)) -> U204(active(X1),X2,X3),active(U205(X1,X2)) -> U205(active(X1),X2),active(U206(X)) -> U206(active(X)),active(U21(X1,X2,X3)) -> U21(active(X1),X2,X3),active(U22(X1,X2,X3)) -> U22(active(X1),X2,X3),active(U211(X)) -> U211(active(X)),active(U23(X1,X2,X3)) -> U23(active(X1),X2,X3),active(U221(X)) -> U221(active(X)),active(U24(X1,X2)) -> U24(active(X1),X2),active(U231(X1,X2)) -> U231(active(X1),X2),active(U232(X)) -> U232(active(X)),active(U241(X1,X2,X3)) -> U241(active(X1),X2,X3),active(U242(X1,X2,X3)) -> U242(active(X1),X2,X3),active(U243(X1,X2,X3)) -> U243(active(X1),X2,X3),active(U244(X1,X2,X3)) -> U244(active(X1),X2,X3),active(U245(X1,X2)) -> U245(active(X1),X2),active(U246(X)) -> U246(active(X)),active(U251(X1,X2,X3)) -> U251(active(X1),X2,X3),active(U252(X1,X2,X3)) -> U252(active(X1),X2,X3),active(U253(X1,X2,X3)) -> U253(active(X1),X2,X3),active(U254(X1,X2,X3)) -> U254(active(X1),X2,X3),active(U255(X1,X2)) -> U255(active(X1),X2),active(U256(X)) -> U256(active(X)),active(U261(X1,X2)) -> U261(active(X1),X2),active(U262(X)) -> U262(active(X)),active(U271(X1,X2)) -> U271(active(X1),X2),active(U272(X)) -> U272(active(X)),active(U281(X1,X2)) -> U281(active(X1),X2),active(U282(X1,X2)) -> U282(active(X1),X2),active(cons(X1,X2)) -> cons(active(X1),X2),active(natsFrom(X)) -> natsFrom(active(X)),active(s(X)) -> s(active(X)),active(U291(X1,X2,X3)) -> U291(active(X1),X2,X3),active(U292(X1,X2,X3)) -> U292(active(X1),X2,X3),active(U293(X1,X2,X3)) -> U293(active(X1),X2,X3),active(U294(X1,X2,X3)) -> U294(active(X1),X2,X3),active(head(X)) -> head(active(X)),active(afterNth(X1,X2)) -> afterNth(active(X1),X2),active(afterNth(X1,X2)) -> afterNth(X1,active(X2)),active(U301(X1,X2,X3)) -> U301(active(X1),X2,X3),active(U302(X1,X2)) -> U302(active(X1),X2),active(U303(X1,X2)) -> U303(active(X1),X2),active(U304(X1,X2)) -> U304(active(X1),X2),active(U31(X1,X2,X3)) -> U31(active(X1),X2,X3),active(U32(X1,X2,X3)) -> U32(active(X1),X2,X3),active(U311(X1,X2)) -> U311(active(X1),X2),active(U312(X1,X2)) -> U312(active(X1),X2),active(pair(X1,X2)) -> pair(active(X1),X2),active(pair(X1,X2)) -> pair(X1,active(X2)),active(U33(X1,X2,X3)) -> U33(active(X1),X2,X3),active(U321(X1,X2,X3,X4)) -> U321(active(X1),X2,X3,X4),active(U322(X1,X2,X3,X4)) -> U322(active(X1),X2,X3,X4),active(U323(X1,X2,X3,X4)) -> U323(active(X1),X2,X3,X4),active(U324(X1,X2,X3,X4)) -> U324(active(X1),X2,X3,X4),active(U325(X1,X2,X3,X4)) -> U325(active(X1),X2,X3,X4),active(U326(X1,X2,X3,X4)) -> U326(active(X1),X2,X3,X4),active(U327(X1,X2)) -> U327(active(X1),X2),active(U34(X1,X2)) -> U34(active(X1),X2),active(U331(X1,X2,X3)) -> U331(active(X1),X2,X3),active(U332(X1,X2)) -> U332(active(X1),X2),active(U333(X1,X2)) -> U333(active(X1),X2),active(U334(X1,X2)) -> U334(active(X1),X2),active(U341(X1,X2,X3)) -> U341(active(X1),X2,X3),active(U342(X1,X2,X3)) -> U342(active(X1),X2,X3),active(U343(X1,X2,X3)) -> U343(active(X1),X2,X3),active(U344(X1,X2,X3)) -> U344(active(X1),X2,X3),active(fst(X)) -> fst(active(X)),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2,X3)) -> U42(active(X1),X2,X3),active(U43(X1,X2,X3)) -> U43(active(X1),X2,X3),active(U44(X1,X2,X3)) -> U44(active(X1),X2,X3),active(U45(X1,X2)) -> U45(active(X1),X2),active(U46(X)) -> U46(active(X)),active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3),active(U52(X1,X2,X3)) -> U52(active(X1),X2,X3),active(U53(X1,X2,X3)) -> U53(active(X1),X2,X3),active(U54(X1,X2,X3)) -> U54(active(X1),X2,X3),active(U55(X1,X2)) -> U55(active(X1),X2),active(U56(X)) -> U56(active(X)),active(U61(X1,X2)) -> U61(active(X1),X2),active(U62(X1,X2)) -> U62(active(X1),X2),active(U63(X)) -> U63(active(X)),active(U71(X1,X2)) -> U71(active(X1),X2),active(U72(X1,X2)) -> U72(active(X1),X2),active(U73(X)) -> U73(active(X)),active(U81(X1,X2)) -> U81(active(X1),X2),active(U82(X1,X2)) -> U82(active(X1),X2),active(U83(X)) -> U83(active(X)),active(U91(X1,X2)) -> U91(active(X1),X2),active(U92(X1,X2)) -> U92(active(X1),X2),active(U93(X)) -> U93(active(X)),active(tail(X)) -> tail(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),U101(mark(X1),X2,X3) -> mark(U101(X1,X2,X3)),U102(mark(X1),X2,X3) -> mark(U102(X1,X2,X3)),U103(mark(X1),X2,X3) -> mark(U103(X1,X2,X3)),U104(mark(X1),X2,X3) -> mark(U104(X1,X2,X3)),U105(mark(X1),X2) -> mark(U105(X1,X2)),U106(mark(X)) -> mark(U106(X)),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),U12(mark(X1),X2,X3) -> mark(U12(X1,X2,X3)),U111(mark(X1),X2) -> mark(U111(X1,X2)),U112(mark(X)) -> mark(U112(X)),U13(mark(X1),X2,X3) -> mark(U13(X1,X2,X3)),U121(mark(X1),X2) -> mark(U121(X1,X2)),U122(mark(X)) -> mark(U122(X)),U14(mark(X1),X2,X3) -> mark(U14(X1,X2,X3)),U131(mark(X)) -> mark(U131(X)),snd(mark(X)) -> mark(snd(X)),splitAt(mark(X1),X2) -> mark(splitAt(X1,X2)),splitAt(X1,mark(X2)) -> mark(splitAt(X1,X2)),U141(mark(X)) -> mark(U141(X)),U151(mark(X)) -> mark(U151(X)),U161(mark(X)) -> mark(U161(X)),U171(mark(X1),X2) -> mark(U171(X1,X2)),U172(mark(X)) -> mark(U172(X)),U181(mark(X1),X2) -> mark(U181(X1,X2)),U182(mark(X1),X2) -> mark(U182(X1,X2)),U183(mark(X)) -> mark(U183(X)),U191(mark(X1),X2) -> mark(U191(X1,X2)),U192(mark(X1),X2) -> mark(U192(X1,X2)),U193(mark(X)) -> mark(U193(X)),U201(mark(X1),X2,X3) -> mark(U201(X1,X2,X3)),U202(mark(X1),X2,X3) -> mark(U202(X1,X2,X3)),U203(mark(X1),X2,X3) -> mark(U203(X1,X2,X3)),U204(mark(X1),X2,X3) -> mark(U204(X1,X2,X3)),U205(mark(X1),X2) -> mark(U205(X1,X2)),U206(mark(X)) -> mark(U206(X)),U21(mark(X1),X2,X3) -> mark(U21(X1,X2,X3)),U22(mark(X1),X2,X3) -> mark(U22(X1,X2,X3)),U211(mark(X)) -> mark(U211(X)),U23(mark(X1),X2,X3) -> mark(U23(X1,X2,X3)),U221(mark(X)) -> mark(U221(X)),U24(mark(X1),X2) -> mark(U24(X1,X2)),U231(mark(X1),X2) -> mark(U231(X1,X2)),U232(mark(X)) -> mark(U232(X)),U241(mark(X1),X2,X3) -> mark(U241(X1,X2,X3)),U242(mark(X1),X2,X3) -> mark(U242(X1,X2,X3)),U243(mark(X1),X2,X3) -> mark(U243(X1,X2,X3)),U244(mark(X1),X2,X3) -> mark(U244(X1,X2,X3)),U245(mark(X1),X2) -> mark(U245(X1,X2)),U246(mark(X)) -> mark(U246(X)),U251(mark(X1),X2,X3) -> mark(U251(X1,X2,X3)),U252(mark(X1),X2,X3) -> mark(U252(X1,X2,X3)),U253(mark(X1),X2,X3) -> mark(U253(X1,X2,X3)),U254(mark(X1),X2,X3) -> mark(U254(X1,X2,X3)),U255(mark(X1),X2) -> mark(U255(X1,X2)),U256(mark(X)) -> mark(U256(X)),U261(mark(X1),X2) -> mark(U261(X1,X2)),U262(mark(X)) -> mark(U262(X)),U271(mark(X1),X2) -> mark(U271(X1,X2)),U272(mark(X)) -> mark(U272(X)),U281(mark(X1),X2) -> mark(U281(X1,X2)),U282(mark(X1),X2) -> mark(U282(X1,X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),natsFrom(mark(X)) -> mark(natsFrom(X)),s(mark(X)) -> mark(s(X)),U291(mark(X1),X2,X3) -> mark(U291(X1,X2,X3)),U292(mark(X1),X2,X3) -> mark(U292(X1,X2,X3)),U293(mark(X1),X2,X3) -> mark(U293(X1,X2,X3)),U294(mark(X1),X2,X3) -> mark(U294(X1,X2,X3)),head(mark(X)) -> mark(head(X)),afterNth(mark(X1),X2) -> mark(afterNth(X1,X2)),afterNth(X1,mark(X2)) -> mark(afterNth(X1,X2)),U301(mark(X1),X2,X3) -> mark(U301(X1,X2,X3)),U302(mark(X1),X2) -> mark(U302(X1,X2)),U303(mark(X1),X2) -> mark(U303(X1,X2)),U304(mark(X1),X2) -> mark(U304(X1,X2)),U31(mark(X1),X2,X3) -> mark(U31(X1,X2,X3)),U32(mark(X1),X2,X3) -> mark(U32(X1,X2,X3)),U311(mark(X1),X2) -> mark(U311(X1,X2)),U312(mark(X1),X2) -> mark(U312(X1,X2)),pair(mark(X1),X2) -> mark(pair(X1,X2)),pair(X1,mark(X2)) -> mark(pair(X1,X2)),U33(mark(X1),X2,X3) -> mark(U33(X1,X2,X3)),U321(mark(X1),X2,X3,X4) -> mark(U321(X1,X2,X3,X4)),U322(mark(X1),X2,X3,X4) -> mark(U322(X1,X2,X3,X4)),U323(mark(X1),X2,X3,X4) -> mark(U323(X1,X2,X3,X4)),U324(mark(X1),X2,X3,X4) -> mark(U324(X1,X2,X3,X4)),U325(mark(X1),X2,X3,X4) -> mark(U325(X1,X2,X3,X4)),U326(mark(X1),X2,X3,X4) -> mark(U326(X1,X2,X3,X4)),U327(mark(X1),X2) -> mark(U327(X1,X2)),U34(mark(X1),X2) -> mark(U34(X1,X2)),U331(mark(X1),X2,X3) -> mark(U331(X1,X2,X3)),U332(mark(X1),X2) -> mark(U332(X1,X2)),U333(mark(X1),X2) -> mark(U333(X1,X2)),U334(mark(X1),X2) -> mark(U334(X1,X2)),U341(mark(X1),X2,X3) -> mark(U341(X1,X2,X3)),U342(mark(X1),X2,X3) -> mark(U342(X1,X2,X3)),U343(mark(X1),X2,X3) -> mark(U343(X1,X2,X3)),U344(mark(X1),X2,X3) -> mark(U344(X1,X2,X3)),fst(mark(X)) -> mark(fst(X)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2,X3) -> mark(U42(X1,X2,X3)),U43(mark(X1),X2,X3) -> mark(U43(X1,X2,X3)),U44(mark(X1),X2,X3) -> mark(U44(X1,X2,X3)),U45(mark(X1),X2) -> mark(U45(X1,X2)),U46(mark(X)) -> mark(U46(X)),U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3)),U52(mark(X1),X2,X3) -> mark(U52(X1,X2,X3)),U53(mark(X1),X2,X3) -> mark(U53(X1,X2,X3)),U54(mark(X1),X2,X3) -> mark(U54(X1,X2,X3)),U55(mark(X1),X2) -> mark(U55(X1,X2)),U56(mark(X)) -> mark(U56(X)),U61(mark(X1),X2) -> mark(U61(X1,X2)),U62(mark(X1),X2) -> mark(U62(X1,X2)),U63(mark(X)) -> mark(U63(X)),U71(mark(X1),X2) -> mark(U71(X1,X2)),U72(mark(X1),X2) -> mark(U72(X1,X2)),U73(mark(X)) -> mark(U73(X)),U81(mark(X1),X2) -> mark(U81(X1,X2)),U82(mark(X1),X2) -> mark(U82(X1,X2)),U83(mark(X)) -> mark(U83(X)),U91(mark(X1),X2) -> mark(U91(X1,X2)),U92(mark(X1),X2) -> mark(U92(X1,X2)),U93(mark(X)) -> mark(U93(X)),tail(mark(X)) -> mark(tail(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),proper(U101(X1,X2,X3)) -> U101(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U102(X1,X2,X3)) -> U102(proper(X1),proper(X2),proper(X3)),proper(isNaturalKind(X)) -> isNaturalKind(proper(X)),proper(U103(X1,X2,X3)) -> U103(proper(X1),proper(X2),proper(X3)),proper(isLNatKind(X)) -> isLNatKind(proper(X)),proper(U104(X1,X2,X3)) -> U104(proper(X1),proper(X2),proper(X3)),proper(U105(X1,X2)) -> U105(proper(X1),proper(X2)),proper(isNatural(X)) -> isNatural(proper(X)),proper(U106(X)) -> U106(proper(X)),proper(isLNat(X)) -> isLNat(proper(X)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(U12(X1,X2,X3)) -> U12(proper(X1),proper(X2),proper(X3)),proper(U111(X1,X2)) -> U111(proper(X1),proper(X2)),proper(U112(X)) -> U112(proper(X)),proper(U13(X1,X2,X3)) -> U13(proper(X1),proper(X2),proper(X3)),proper(U121(X1,X2)) -> U121(proper(X1),proper(X2)),proper(U122(X)) -> U122(proper(X)),proper(U14(X1,X2,X3)) -> U14(proper(X1),proper(X2),proper(X3)),proper(U131(X)) -> U131(proper(X)),proper(snd(X)) -> snd(proper(X)),proper(splitAt(X1,X2)) -> splitAt(proper(X1),proper(X2)),proper(U141(X)) -> U141(proper(X)),proper(U151(X)) -> U151(proper(X)),proper(U161(X)) -> U161(proper(X)),proper(U171(X1,X2)) -> U171(proper(X1),proper(X2)),proper(U172(X)) -> U172(proper(X)),proper(U181(X1,X2)) -> U181(proper(X1),proper(X2)),proper(U182(X1,X2)) -> U182(proper(X1),proper(X2)),proper(U183(X)) -> U183(proper(X)),proper(U191(X1,X2)) -> U191(proper(X1),proper(X2)),proper(U192(X1,X2)) -> U192(proper(X1),proper(X2)),proper(U193(X)) -> U193(proper(X)),proper(U201(X1,X2,X3)) -> U201(proper(X1),proper(X2),proper(X3)),proper(U202(X1,X2,X3)) -> U202(proper(X1),proper(X2),proper(X3)),proper(U203(X1,X2,X3)) -> U203(proper(X1),proper(X2),proper(X3)),proper(U204(X1,X2,X3)) -> U204(proper(X1),proper(X2),proper(X3)),proper(U205(X1,X2)) -> U205(proper(X1),proper(X2)),proper(U206(X)) -> U206(proper(X)),proper(U21(X1,X2,X3)) -> U21(proper(X1),proper(X2),proper(X3)),proper(U22(X1,X2,X3)) -> U22(proper(X1),proper(X2),proper(X3)),proper(U211(X)) -> U211(proper(X)),proper(U23(X1,X2,X3)) -> U23(proper(X1),proper(X2),proper(X3)),proper(U221(X)) -> U221(proper(X)),proper(U24(X1,X2)) -> U24(proper(X1),proper(X2)),proper(U231(X1,X2)) -> U231(proper(X1),proper(X2)),proper(U232(X)) -> U232(proper(X)),proper(U241(X1,X2,X3)) -> U241(proper(X1),proper(X2),proper(X3)),proper(U242(X1,X2,X3)) -> U242(proper(X1),proper(X2),proper(X3)),proper(U243(X1,X2,X3)) -> U243(proper(X1),proper(X2),proper(X3)),proper(U244(X1,X2,X3)) -> U244(proper(X1),proper(X2),proper(X3)),proper(U245(X1,X2)) -> U245(proper(X1),proper(X2)),proper(U246(X)) -> U246(proper(X)),proper(U251(X1,X2,X3)) -> U251(proper(X1),proper(X2),proper(X3)),proper(U252(X1,X2,X3)) -> U252(proper(X1),proper(X2),proper(X3)),proper(U253(X1,X2,X3)) -> U253(proper(X1),proper(X2),proper(X3)),proper(U254(X1,X2,X3)) -> U254(proper(X1),proper(X2),proper(X3)),proper(U255(X1,X2)) -> U255(proper(X1),proper(X2)),proper(U256(X)) -> U256(proper(X)),proper(U261(X1,X2)) -> U261(proper(X1),proper(X2)),proper(U262(X)) -> U262(proper(X)),proper(U271(X1,X2)) -> U271(proper(X1),proper(X2)),proper(U272(X)) -> U272(proper(X)),proper(U281(X1,X2)) -> U281(proper(X1),proper(X2)),proper(U282(X1,X2)) -> U282(proper(X1),proper(X2)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(natsFrom(X)) -> natsFrom(proper(X)),proper(s(X)) -> s(proper(X)),proper(U291(X1,X2,X3)) -> U291(proper(X1),proper(X2),proper(X3)),proper(U292(X1,X2,X3)) -> U292(proper(X1),proper(X2),proper(X3)),proper(U293(X1,X2,X3)) -> U293(proper(X1),proper(X2),proper(X3)),proper(U294(X1,X2,X3)) -> U294(proper(X1),proper(X2),proper(X3)),proper(head(X)) -> head(proper(X)),proper(afterNth(X1,X2)) -> afterNth(proper(X1),proper(X2)),proper(U301(X1,X2,X3)) -> U301(proper(X1),proper(X2),proper(X3)),proper(U302(X1,X2)) -> U302(proper(X1),proper(X2)),proper(U303(X1,X2)) -> U303(proper(X1),proper(X2)),proper(U304(X1,X2)) -> U304(proper(X1),proper(X2)),proper(U31(X1,X2,X3)) -> U31(proper(X1),proper(X2),proper(X3)),proper(U32(X1,X2,X3)) -> U32(proper(X1),proper(X2),proper(X3)),proper(U311(X1,X2)) -> U311(proper(X1),proper(X2)),proper(U312(X1,X2)) -> U312(proper(X1),proper(X2)),proper(pair(X1,X2)) -> pair(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(U33(X1,X2,X3)) -> U33(proper(X1),proper(X2),proper(X3)),proper(U321(X1,X2,X3,X4)) -> U321(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U322(X1,X2,X3,X4)) -> U322(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U323(X1,X2,X3,X4)) -> U323(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U324(X1,X2,X3,X4)) -> U324(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U325(X1,X2,X3,X4)) -> U325(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U326(X1,X2,X3,X4)) -> U326(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U327(X1,X2)) -> U327(proper(X1),proper(X2)),proper(U34(X1,X2)) -> U34(proper(X1),proper(X2)),proper(U331(X1,X2,X3)) -> U331(proper(X1),proper(X2),proper(X3)),proper(U332(X1,X2)) -> U332(proper(X1),proper(X2)),proper(U333(X1,X2)) -> U333(proper(X1),proper(X2)),proper(U334(X1,X2)) -> U334(proper(X1),proper(X2)),proper(U341(X1,X2,X3)) -> U341(proper(X1),proper(X2),proper(X3)),proper(U342(X1,X2,X3)) -> U342(proper(X1),proper(X2),proper(X3)),proper(U343(X1,X2,X3)) -> U343(proper(X1),proper(X2),proper(X3)),proper(U344(X1,X2,X3)) -> U344(proper(X1),proper(X2),proper(X3)),proper(fst(X)) -> fst(proper(X)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2,X3)) -> U42(proper(X1),proper(X2),proper(X3)),proper(U43(X1,X2,X3)) -> U43(proper(X1),proper(X2),proper(X3)),proper(U44(X1,X2,X3)) -> U44(proper(X1),proper(X2),proper(X3)),proper(U45(X1,X2)) -> U45(proper(X1),proper(X2)),proper(U46(X)) -> U46(proper(X)),proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3)),proper(U52(X1,X2,X3)) -> U52(proper(X1),proper(X2),proper(X3)),proper(U53(X1,X2,X3)) -> U53(proper(X1),proper(X2),proper(X3)),proper(U54(X1,X2,X3)) -> U54(proper(X1),proper(X2),proper(X3)),proper(U55(X1,X2)) -> U55(proper(X1),proper(X2)),proper(U56(X)) -> U56(proper(X)),proper(U61(X1,X2)) -> U61(proper(X1),proper(X2)),proper(U62(X1,X2)) -> U62(proper(X1),proper(X2)),proper(isPLNatKind(X)) -> isPLNatKind(proper(X)),proper(U63(X)) -> U63(proper(X)),proper(isPLNat(X)) -> isPLNat(proper(X)),proper(U71(X1,X2)) -> U71(proper(X1),proper(X2)),proper(U72(X1,X2)) -> U72(proper(X1),proper(X2)),proper(U73(X)) -> U73(proper(X)),proper(U81(X1,X2)) -> U81(proper(X1),proper(X2)),proper(U82(X1,X2)) -> U82(proper(X1),proper(X2)),proper(U83(X)) -> U83(proper(X)),proper(U91(X1,X2)) -> U91(proper(X1),proper(X2)),proper(U92(X1,X2)) -> U92(proper(X1),proper(X2)),proper(U93(X)) -> U93(proper(X)),proper(tail(X)) -> tail(proper(X)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(0) -> ok(0),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),U101(ok(X1),ok(X2),ok(X3)) -> ok(U101(X1,X2,X3)),U102(ok(X1),ok(X2),ok(X3)) -> ok(U102(X1,X2,X3)),isNaturalKind(ok(X)) -> ok(isNaturalKind(X)),U103(ok(X1),ok(X2),ok(X3)) -> ok(U103(X1,X2,X3)),isLNatKind(ok(X)) -> ok(isLNatKind(X)),U104(ok(X1),ok(X2),ok(X3)) -> ok(U104(X1,X2,X3)),U105(ok(X1),ok(X2)) -> ok(U105(X1,X2)),isNatural(ok(X)) -> ok(isNatural(X)),U106(ok(X)) -> ok(U106(X)),isLNat(ok(X)) -> ok(isLNat(X)),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),U12(ok(X1),ok(X2),ok(X3)) -> ok(U12(X1,X2,X3)),U111(ok(X1),ok(X2)) -> ok(U111(X1,X2)),U112(ok(X)) -> ok(U112(X)),U13(ok(X1),ok(X2),ok(X3)) -> ok(U13(X1,X2,X3)),U121(ok(X1),ok(X2)) -> ok(U121(X1,X2)),U122(ok(X)) -> ok(U122(X)),U14(ok(X1),ok(X2),ok(X3)) -> ok(U14(X1,X2,X3)),U131(ok(X)) -> ok(U131(X)),snd(ok(X)) -> ok(snd(X)),splitAt(ok(X1),ok(X2)) -> ok(splitAt(X1,X2)),U141(ok(X)) -> ok(U141(X)),U151(ok(X)) -> ok(U151(X)),U161(ok(X)) -> ok(U161(X)),U171(ok(X1),ok(X2)) -> ok(U171(X1,X2)),U172(ok(X)) -> ok(U172(X)),U181(ok(X1),ok(X2)) -> ok(U181(X1,X2)),U182(ok(X1),ok(X2)) -> ok(U182(X1,X2)),U183(ok(X)) -> ok(U183(X)),U191(ok(X1),ok(X2)) -> ok(U191(X1,X2)),U192(ok(X1),ok(X2)) -> ok(U192(X1,X2)),U193(ok(X)) -> ok(U193(X)),U201(ok(X1),ok(X2),ok(X3)) -> ok(U201(X1,X2,X3)),U202(ok(X1),ok(X2),ok(X3)) -> ok(U202(X1,X2,X3)),U203(ok(X1),ok(X2),ok(X3)) -> ok(U203(X1,X2,X3)),U204(ok(X1),ok(X2),ok(X3)) -> ok(U204(X1,X2,X3)),U205(ok(X1),ok(X2)) -> ok(U205(X1,X2)),U206(ok(X)) -> ok(U206(X)),U21(ok(X1),ok(X2),ok(X3)) -> ok(U21(X1,X2,X3)),U22(ok(X1),ok(X2),ok(X3)) -> ok(U22(X1,X2,X3)),U211(ok(X)) -> ok(U211(X)),U23(ok(X1),ok(X2),ok(X3)) -> ok(U23(X1,X2,X3)),U221(ok(X)) -> ok(U221(X)),U24(ok(X1),ok(X2)) -> ok(U24(X1,X2)),U231(ok(X1),ok(X2)) -> ok(U231(X1,X2)),U232(ok(X)) -> ok(U232(X)),U241(ok(X1),ok(X2),ok(X3)) -> ok(U241(X1,X2,X3)),U242(ok(X1),ok(X2),ok(X3)) -> ok(U242(X1,X2,X3)),U243(ok(X1),ok(X2),ok(X3)) -> ok(U243(X1,X2,X3)),U244(ok(X1),ok(X2),ok(X3)) -> ok(U244(X1,X2,X3)),U245(ok(X1),ok(X2)) -> ok(U245(X1,X2)),U246(ok(X)) -> ok(U246(X)),U251(ok(X1),ok(X2),ok(X3)) -> ok(U251(X1,X2,X3)),U252(ok(X1),ok(X2),ok(X3)) -> ok(U252(X1,X2,X3)),U253(ok(X1),ok(X2),ok(X3)) -> ok(U253(X1,X2,X3)),U254(ok(X1),ok(X2),ok(X3)) -> ok(U254(X1,X2,X3)),U255(ok(X1),ok(X2)) -> ok(U255(X1,X2)),U256(ok(X)) -> ok(U256(X)),U261(ok(X1),ok(X2)) -> ok(U261(X1,X2)),U262(ok(X)) -> ok(U262(X)),U271(ok(X1),ok(X2)) -> ok(U271(X1,X2)),U272(ok(X)) -> ok(U272(X)),U281(ok(X1),ok(X2)) -> ok(U281(X1,X2)),U282(ok(X1),ok(X2)) -> ok(U282(X1,X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),natsFrom(ok(X)) -> ok(natsFrom(X)),s(ok(X)) -> ok(s(X)),U291(ok(X1),ok(X2),ok(X3)) -> ok(U291(X1,X2,X3)),U292(ok(X1),ok(X2),ok(X3)) -> ok(U292(X1,X2,X3)),U293(ok(X1),ok(X2),ok(X3)) -> ok(U293(X1,X2,X3)),U294(ok(X1),ok(X2),ok(X3)) -> ok(U294(X1,X2,X3)),head(ok(X)) -> ok(head(X)),afterNth(ok(X1),ok(X2)) -> ok(afterNth(X1,X2)),U301(ok(X1),ok(X2),ok(X3)) -> ok(U301(X1,X2,X3)),U302(ok(X1),ok(X2)) -> ok(U302(X1,X2)),U303(ok(X1),ok(X2)) -> ok(U303(X1,X2)),U304(ok(X1),ok(X2)) -> ok(U304(X1,X2)),U31(ok(X1),ok(X2),ok(X3)) -> ok(U31(X1,X2,X3)),U32(ok(X1),ok(X2),ok(X3)) -> ok(U32(X1,X2,X3)),U311(ok(X1),ok(X2)) -> ok(U311(X1,X2)),U312(ok(X1),ok(X2)) -> ok(U312(X1,X2)),pair(ok(X1),ok(X2)) -> ok(pair(X1,X2)),U33(ok(X1),ok(X2),ok(X3)) -> ok(U33(X1,X2,X3)),U321(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U321(X1,X2,X3,X4)),U322(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U322(X1,X2,X3,X4)),U323(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U323(X1,X2,X3,X4)),U324(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U324(X1,X2,X3,X4)),U325(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U325(X1,X2,X3,X4)),U326(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U326(X1,X2,X3,X4)),U327(ok(X1),ok(X2)) -> ok(U327(X1,X2)),U34(ok(X1),ok(X2)) -> ok(U34(X1,X2)),U331(ok(X1),ok(X2),ok(X3)) -> ok(U331(X1,X2,X3)),U332(ok(X1),ok(X2)) -> ok(U332(X1,X2)),U333(ok(X1),ok(X2)) -> ok(U333(X1,X2)),U334(ok(X1),ok(X2)) -> ok(U334(X1,X2)),U341(ok(X1),ok(X2),ok(X3)) -> ok(U341(X1,X2,X3)),U342(ok(X1),ok(X2),ok(X3)) -> ok(U342(X1,X2,X3)),U343(ok(X1),ok(X2),ok(X3)) -> ok(U343(X1,X2,X3)),U344(ok(X1),ok(X2),ok(X3)) -> ok(U344(X1,X2,X3)),fst(ok(X)) -> ok(fst(X)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2),ok(X3)) -> ok(U42(X1,X2,X3)),U43(ok(X1),ok(X2),ok(X3)) -> ok(U43(X1,X2,X3)),U44(ok(X1),ok(X2),ok(X3)) -> ok(U44(X1,X2,X3)),U45(ok(X1),ok(X2)) -> ok(U45(X1,X2)),U46(ok(X)) -> ok(U46(X)),U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3)),U52(ok(X1),ok(X2),ok(X3)) -> ok(U52(X1,X2,X3)),U53(ok(X1),ok(X2),ok(X3)) -> ok(U53(X1,X2,X3)),U54(ok(X1),ok(X2),ok(X3)) -> ok(U54(X1,X2,X3)),U55(ok(X1),ok(X2)) -> ok(U55(X1,X2)),U56(ok(X)) -> ok(U56(X)),U61(ok(X1),ok(X2)) -> ok(U61(X1,X2)),U62(ok(X1),ok(X2)) -> ok(U62(X1,X2)),isPLNatKind(ok(X)) -> ok(isPLNatKind(X)),U63(ok(X)) -> ok(U63(X)),isPLNat(ok(X)) -> ok(isPLNat(X)),U71(ok(X1),ok(X2)) -> ok(U71(X1,X2)),U72(ok(X1),ok(X2)) -> ok(U72(X1,X2)),U73(ok(X)) -> ok(U73(X)),U81(ok(X1),ok(X2)) -> ok(U81(X1,X2)),U82(ok(X1),ok(X2)) -> ok(U82(X1,X2)),U83(ok(X)) -> ok(U83(X)),U91(ok(X1),ok(X2)) -> ok(U91(X1,X2)),U92(ok(X1),ok(X2)) -> ok(U92(X1,X2)),U93(ok(X)) -> ok(U93(X)),tail(ok(X)) -> ok(tail(X)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_complete_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",2),("U103",1),("U11",3),("U111",2),("U112",1),("U121",2),("U122",1),("U131",3),("U132",2),("U133",1),("U141",3),("U142",2),("U143",1),("U151",3),("U152",2),("U153",1),("U161",2),("U171",3),("U181",2),("U191",2),("U201",4),("U202",2),("U21",2),("U211",2),("U221",3),("U31",2),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("U62",1),("U71",2),("U72",1),("U81",2),("U82",1),("U91",2),("U92",1),("active",1),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isLNatKind",1),("isNatural",1),("isNaturalKind",1),("isPLNat",1),("isPLNatKind",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U101(tt,V1,V2)) -> mark(U102(isNatural(V1),V2)),active(U102(tt,V2)) -> mark(U103(isLNat(V2))),active(U103(tt)) -> mark(tt),active(U11(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U111(tt,V1)) -> mark(U112(isLNat(V1))),active(U112(tt)) -> mark(tt),active(U121(tt,V1)) -> mark(U122(isNatural(V1))),active(U122(tt)) -> mark(tt),active(U131(tt,V1,V2)) -> mark(U132(isNatural(V1),V2)),active(U132(tt,V2)) -> mark(U133(isLNat(V2))),active(U133(tt)) -> mark(tt),active(U141(tt,V1,V2)) -> mark(U142(isLNat(V1),V2)),active(U142(tt,V2)) -> mark(U143(isLNat(V2))),active(U143(tt)) -> mark(tt),active(U151(tt,V1,V2)) -> mark(U152(isNatural(V1),V2)),active(U152(tt,V2)) -> mark(U153(isLNat(V2))),active(U153(tt)) -> mark(tt),active(U161(tt,N)) -> mark(cons(N,natsFrom(s(N)))),active(U171(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U181(tt,Y)) -> mark(Y),active(U191(tt,XS)) -> mark(pair(nil,XS)),active(U201(tt,N,X,XS)) -> mark(U202(splitAt(N,XS),X)),active(U202(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U21(tt,X)) -> mark(X),active(U211(tt,XS)) -> mark(XS),active(U221(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(U31(tt,N)) -> mark(N),active(U41(tt,V1,V2)) -> mark(U42(isNatural(V1),V2)),active(U42(tt,V2)) -> mark(U43(isLNat(V2))),active(U43(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNatural(V1),V2)),active(U52(tt,V2)) -> mark(U53(isLNat(V2))),active(U53(tt)) -> mark(tt),active(U61(tt,V1)) -> mark(U62(isPLNat(V1))),active(U62(tt)) -> mark(tt),active(U71(tt,V1)) -> mark(U72(isNatural(V1))),active(U72(tt)) -> mark(tt),active(U81(tt,V1)) -> mark(U82(isPLNat(V1))),active(U82(tt)) -> mark(tt),active(U91(tt,V1)) -> mark(U92(isLNat(V1))),active(U92(tt)) -> mark(tt),active(afterNth(N,XS)) -> mark(U11(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS)),active(and(tt,X)) -> mark(X),active(fst(pair(X,Y))) -> mark(U21(and(and(isLNat(X),isLNatKind(X)),and(isLNat(Y),isLNatKind(Y))),X)),active(head(cons(N,XS))) -> mark(U31(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N)),active(isLNat(nil)) -> mark(tt),active(isLNat(afterNth(V1,V2))) -> mark(U41(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isLNat(cons(V1,V2))) -> mark(U51(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isLNat(fst(V1))) -> mark(U61(isPLNatKind(V1),V1)),active(isLNat(natsFrom(V1))) -> mark(U71(isNaturalKind(V1),V1)),active(isLNat(snd(V1))) -> mark(U81(isPLNatKind(V1),V1)),active(isLNat(tail(V1))) -> mark(U91(isLNatKind(V1),V1)),active(isLNat(take(V1,V2))) -> mark(U101(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isLNatKind(nil)) -> mark(tt),active(isLNatKind(afterNth(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(isLNatKind(cons(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(isLNatKind(fst(V1))) -> mark(isPLNatKind(V1)),active(isLNatKind(natsFrom(V1))) -> mark(isNaturalKind(V1)),active(isLNatKind(snd(V1))) -> mark(isPLNatKind(V1)),active(isLNatKind(tail(V1))) -> mark(isLNatKind(V1)),active(isLNatKind(take(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(isNatural(0)) -> mark(tt),active(isNatural(head(V1))) -> mark(U111(isLNatKind(V1),V1)),active(isNatural(s(V1))) -> mark(U121(isNaturalKind(V1),V1)),active(isNatural(sel(V1,V2))) -> mark(U131(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isNaturalKind(0)) -> mark(tt),active(isNaturalKind(head(V1))) -> mark(isLNatKind(V1)),active(isNaturalKind(s(V1))) -> mark(isNaturalKind(V1)),active(isNaturalKind(sel(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(isPLNat(pair(V1,V2))) -> mark(U141(and(isLNatKind(V1),isLNatKind(V2)),V1,V2)),active(isPLNat(splitAt(V1,V2))) -> mark(U151(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isPLNatKind(pair(V1,V2))) -> mark(and(isLNatKind(V1),isLNatKind(V2))),active(isPLNatKind(splitAt(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(natsFrom(N)) -> mark(U161(and(isNatural(N),isNaturalKind(N)),N)),active(sel(N,XS)) -> mark(U171(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS)),active(snd(pair(X,Y))) -> mark(U181(and(and(isLNat(X),isLNatKind(X)),and(isLNat(Y),isLNatKind(Y))),Y)),active(splitAt(0,XS)) -> mark(U191(and(isLNat(XS),isLNatKind(XS)),XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U201(and(and(isNatural(N),isNaturalKind(N)),and(and(isNatural(X),isNaturalKind(X)),and(isLNat(XS),isLNatKind(XS)))),N,X,XS)),active(tail(cons(N,XS))) -> mark(U211(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),XS)),active(take(N,XS)) -> mark(U221(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS)),mark(U101(X1,X2,X3)) -> active(U101(mark(X1),X2,X3)),mark(tt) -> active(tt),mark(U102(X1,X2)) -> active(U102(mark(X1),X2)),mark(isNatural(X)) -> active(isNatural(X)),mark(U103(X)) -> active(U103(mark(X))),mark(isLNat(X)) -> active(isLNat(X)),mark(U11(X1,X2,X3)) -> active(U11(mark(X1),X2,X3)),mark(snd(X)) -> active(snd(mark(X))),mark(splitAt(X1,X2)) -> active(splitAt(mark(X1),mark(X2))),mark(U111(X1,X2)) -> active(U111(mark(X1),X2)),mark(U112(X)) -> active(U112(mark(X))),mark(U121(X1,X2)) -> active(U121(mark(X1),X2)),mark(U122(X)) -> active(U122(mark(X))),mark(U131(X1,X2,X3)) -> active(U131(mark(X1),X2,X3)),mark(U132(X1,X2)) -> active(U132(mark(X1),X2)),mark(U133(X)) -> active(U133(mark(X))),mark(U141(X1,X2,X3)) -> active(U141(mark(X1),X2,X3)),mark(U142(X1,X2)) -> active(U142(mark(X1),X2)),mark(U143(X)) -> active(U143(mark(X))),mark(U151(X1,X2,X3)) -> active(U151(mark(X1),X2,X3)),mark(U152(X1,X2)) -> active(U152(mark(X1),X2)),mark(U153(X)) -> active(U153(mark(X))),mark(U161(X1,X2)) -> active(U161(mark(X1),X2)),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(natsFrom(X)) -> active(natsFrom(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(U171(X1,X2,X3)) -> active(U171(mark(X1),X2,X3)),mark(head(X)) -> active(head(mark(X))),mark(afterNth(X1,X2)) -> active(afterNth(mark(X1),mark(X2))),mark(U181(X1,X2)) -> active(U181(mark(X1),X2)),mark(U191(X1,X2)) -> active(U191(mark(X1),X2)),mark(pair(X1,X2)) -> active(pair(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(U201(X1,X2,X3,X4)) -> active(U201(mark(X1),X2,X3,X4)),mark(U202(X1,X2)) -> active(U202(mark(X1),X2)),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U211(X1,X2)) -> active(U211(mark(X1),X2)),mark(U221(X1,X2,X3)) -> active(U221(mark(X1),X2,X3)),mark(fst(X)) -> active(fst(mark(X))),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2)) -> active(U42(mark(X1),X2)),mark(U43(X)) -> active(U43(mark(X))),mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3)),mark(U52(X1,X2)) -> active(U52(mark(X1),X2)),mark(U53(X)) -> active(U53(mark(X))),mark(U61(X1,X2)) -> active(U61(mark(X1),X2)),mark(U62(X)) -> active(U62(mark(X))),mark(isPLNat(X)) -> active(isPLNat(X)),mark(U71(X1,X2)) -> active(U71(mark(X1),X2)),mark(U72(X)) -> active(U72(mark(X))),mark(U81(X1,X2)) -> active(U81(mark(X1),X2)),mark(U82(X)) -> active(U82(mark(X))),mark(U91(X1,X2)) -> active(U91(mark(X1),X2)),mark(U92(X)) -> active(U92(mark(X))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isNaturalKind(X)) -> active(isNaturalKind(X)),mark(isLNatKind(X)) -> active(isLNatKind(X)),mark(isPLNatKind(X)) -> active(isPLNatKind(X)),mark(tail(X)) -> active(tail(mark(X))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(0) -> active(0),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),U101(mark(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,mark(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,mark(X3)) -> U101(X1,X2,X3),U101(active(X1),X2,X3) -> U101(X1,X2,X3),U101(X1,active(X2),X3) -> U101(X1,X2,X3),U101(X1,X2,active(X3)) -> U101(X1,X2,X3),U102(mark(X1),X2) -> U102(X1,X2),U102(X1,mark(X2)) -> U102(X1,X2),U102(active(X1),X2) -> U102(X1,X2),U102(X1,active(X2)) -> U102(X1,X2),isNatural(mark(X)) -> isNatural(X),isNatural(active(X)) -> isNatural(X),U103(mark(X)) -> U103(X),U103(active(X)) -> U103(X),isLNat(mark(X)) -> isLNat(X),isLNat(active(X)) -> isLNat(X),U11(mark(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,mark(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,mark(X3)) -> U11(X1,X2,X3),U11(active(X1),X2,X3) -> U11(X1,X2,X3),U11(X1,active(X2),X3) -> U11(X1,X2,X3),U11(X1,X2,active(X3)) -> U11(X1,X2,X3),snd(mark(X)) -> snd(X),snd(active(X)) -> snd(X),splitAt(mark(X1),X2) -> splitAt(X1,X2),splitAt(X1,mark(X2)) -> splitAt(X1,X2),splitAt(active(X1),X2) -> splitAt(X1,X2),splitAt(X1,active(X2)) -> splitAt(X1,X2),U111(mark(X1),X2) -> U111(X1,X2),U111(X1,mark(X2)) -> U111(X1,X2),U111(active(X1),X2) -> U111(X1,X2),U111(X1,active(X2)) -> U111(X1,X2),U112(mark(X)) -> U112(X),U112(active(X)) -> U112(X),U121(mark(X1),X2) -> U121(X1,X2),U121(X1,mark(X2)) -> U121(X1,X2),U121(active(X1),X2) -> U121(X1,X2),U121(X1,active(X2)) -> U121(X1,X2),U122(mark(X)) -> U122(X),U122(active(X)) -> U122(X),U131(mark(X1),X2,X3) -> U131(X1,X2,X3),U131(X1,mark(X2),X3) -> U131(X1,X2,X3),U131(X1,X2,mark(X3)) -> U131(X1,X2,X3),U131(active(X1),X2,X3) -> U131(X1,X2,X3),U131(X1,active(X2),X3) -> U131(X1,X2,X3),U131(X1,X2,active(X3)) -> U131(X1,X2,X3),U132(mark(X1),X2) -> U132(X1,X2),U132(X1,mark(X2)) -> U132(X1,X2),U132(active(X1),X2) -> U132(X1,X2),U132(X1,active(X2)) -> U132(X1,X2),U133(mark(X)) -> U133(X),U133(active(X)) -> U133(X),U141(mark(X1),X2,X3) -> U141(X1,X2,X3),U141(X1,mark(X2),X3) -> U141(X1,X2,X3),U141(X1,X2,mark(X3)) -> U141(X1,X2,X3),U141(active(X1),X2,X3) -> U141(X1,X2,X3),U141(X1,active(X2),X3) -> U141(X1,X2,X3),U141(X1,X2,active(X3)) -> U141(X1,X2,X3),U142(mark(X1),X2) -> U142(X1,X2),U142(X1,mark(X2)) -> U142(X1,X2),U142(active(X1),X2) -> U142(X1,X2),U142(X1,active(X2)) -> U142(X1,X2),U143(mark(X)) -> U143(X),U143(active(X)) -> U143(X),U151(mark(X1),X2,X3) -> U151(X1,X2,X3),U151(X1,mark(X2),X3) -> U151(X1,X2,X3),U151(X1,X2,mark(X3)) -> U151(X1,X2,X3),U151(active(X1),X2,X3) -> U151(X1,X2,X3),U151(X1,active(X2),X3) -> U151(X1,X2,X3),U151(X1,X2,active(X3)) -> U151(X1,X2,X3),U152(mark(X1),X2) -> U152(X1,X2),U152(X1,mark(X2)) -> U152(X1,X2),U152(active(X1),X2) -> U152(X1,X2),U152(X1,active(X2)) -> U152(X1,X2),U153(mark(X)) -> U153(X),U153(active(X)) -> U153(X),U161(mark(X1),X2) -> U161(X1,X2),U161(X1,mark(X2)) -> U161(X1,X2),U161(active(X1),X2) -> U161(X1,X2),U161(X1,active(X2)) -> U161(X1,X2),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),natsFrom(mark(X)) -> natsFrom(X),natsFrom(active(X)) -> natsFrom(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),U171(mark(X1),X2,X3) -> U171(X1,X2,X3),U171(X1,mark(X2),X3) -> U171(X1,X2,X3),U171(X1,X2,mark(X3)) -> U171(X1,X2,X3),U171(active(X1),X2,X3) -> U171(X1,X2,X3),U171(X1,active(X2),X3) -> U171(X1,X2,X3),U171(X1,X2,active(X3)) -> U171(X1,X2,X3),head(mark(X)) -> head(X),head(active(X)) -> head(X),afterNth(mark(X1),X2) -> afterNth(X1,X2),afterNth(X1,mark(X2)) -> afterNth(X1,X2),afterNth(active(X1),X2) -> afterNth(X1,X2),afterNth(X1,active(X2)) -> afterNth(X1,X2),U181(mark(X1),X2) -> U181(X1,X2),U181(X1,mark(X2)) -> U181(X1,X2),U181(active(X1),X2) -> U181(X1,X2),U181(X1,active(X2)) -> U181(X1,X2),U191(mark(X1),X2) -> U191(X1,X2),U191(X1,mark(X2)) -> U191(X1,X2),U191(active(X1),X2) -> U191(X1,X2),U191(X1,active(X2)) -> U191(X1,X2),pair(mark(X1),X2) -> pair(X1,X2),pair(X1,mark(X2)) -> pair(X1,X2),pair(active(X1),X2) -> pair(X1,X2),pair(X1,active(X2)) -> pair(X1,X2),U201(mark(X1),X2,X3,X4) -> U201(X1,X2,X3,X4),U201(X1,mark(X2),X3,X4) -> U201(X1,X2,X3,X4),U201(X1,X2,mark(X3),X4) -> U201(X1,X2,X3,X4),U201(X1,X2,X3,mark(X4)) -> U201(X1,X2,X3,X4),U201(active(X1),X2,X3,X4) -> U201(X1,X2,X3,X4),U201(X1,active(X2),X3,X4) -> U201(X1,X2,X3,X4),U201(X1,X2,active(X3),X4) -> U201(X1,X2,X3,X4),U201(X1,X2,X3,active(X4)) -> U201(X1,X2,X3,X4),U202(mark(X1),X2) -> U202(X1,X2),U202(X1,mark(X2)) -> U202(X1,X2),U202(active(X1),X2) -> U202(X1,X2),U202(X1,active(X2)) -> U202(X1,X2),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U211(mark(X1),X2) -> U211(X1,X2),U211(X1,mark(X2)) -> U211(X1,X2),U211(active(X1),X2) -> U211(X1,X2),U211(X1,active(X2)) -> U211(X1,X2),U221(mark(X1),X2,X3) -> U221(X1,X2,X3),U221(X1,mark(X2),X3) -> U221(X1,X2,X3),U221(X1,X2,mark(X3)) -> U221(X1,X2,X3),U221(active(X1),X2,X3) -> U221(X1,X2,X3),U221(X1,active(X2),X3) -> U221(X1,X2,X3),U221(X1,X2,active(X3)) -> U221(X1,X2,X3),fst(mark(X)) -> fst(X),fst(active(X)) -> fst(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2) -> U42(X1,X2),U42(X1,mark(X2)) -> U42(X1,X2),U42(active(X1),X2) -> U42(X1,X2),U42(X1,active(X2)) -> U42(X1,X2),U43(mark(X)) -> U43(X),U43(active(X)) -> U43(X),U51(mark(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,mark(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,mark(X3)) -> U51(X1,X2,X3),U51(active(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,active(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,active(X3)) -> U51(X1,X2,X3),U52(mark(X1),X2) -> U52(X1,X2),U52(X1,mark(X2)) -> U52(X1,X2),U52(active(X1),X2) -> U52(X1,X2),U52(X1,active(X2)) -> U52(X1,X2),U53(mark(X)) -> U53(X),U53(active(X)) -> U53(X),U61(mark(X1),X2) -> U61(X1,X2),U61(X1,mark(X2)) -> U61(X1,X2),U61(active(X1),X2) -> U61(X1,X2),U61(X1,active(X2)) -> U61(X1,X2),U62(mark(X)) -> U62(X),U62(active(X)) -> U62(X),isPLNat(mark(X)) -> isPLNat(X),isPLNat(active(X)) -> isPLNat(X),U71(mark(X1),X2) -> U71(X1,X2),U71(X1,mark(X2)) -> U71(X1,X2),U71(active(X1),X2) -> U71(X1,X2),U71(X1,active(X2)) -> U71(X1,X2),U72(mark(X)) -> U72(X),U72(active(X)) -> U72(X),U81(mark(X1),X2) -> U81(X1,X2),U81(X1,mark(X2)) -> U81(X1,X2),U81(active(X1),X2) -> U81(X1,X2),U81(X1,active(X2)) -> U81(X1,X2),U82(mark(X)) -> U82(X),U82(active(X)) -> U82(X),U91(mark(X1),X2) -> U91(X1,X2),U91(X1,mark(X2)) -> U91(X1,X2),U91(active(X1),X2) -> U91(X1,X2),U91(X1,active(X2)) -> U91(X1,X2),U92(mark(X)) -> U92(X),U92(active(X)) -> U92(X),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNaturalKind(mark(X)) -> isNaturalKind(X),isNaturalKind(active(X)) -> isNaturalKind(X),isLNatKind(mark(X)) -> isLNatKind(X),isLNatKind(active(X)) -> isLNatKind(X),isPLNatKind(mark(X)) -> isPLNatKind(X),isPLNatKind(active(X)) -> isPLNatKind(X),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_complete_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",2),("U103",1),("U11",3),("U111",2),("U112",1),("U121",2),("U122",1),("U131",3),("U132",2),("U133",1),("U141",3),("U142",2),("U143",1),("U151",3),("U152",2),("U153",1),("U161",2),("U171",3),("U181",2),("U191",2),("U201",4),("U202",2),("U21",2),("U211",2),("U221",3),("U31",2),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("U62",1),("U71",2),("U72",1),("U81",2),("U82",1),("U91",2),("U92",1),("a__U101",3),("a__U102",2),("a__U103",1),("a__U11",3),("a__U111",2),("a__U112",1),("a__U121",2),("a__U122",1),("a__U131",3),("a__U132",2),("a__U133",1),("a__U141",3),("a__U142",2),("a__U143",1),("a__U151",3),("a__U152",2),("a__U153",1),("a__U161",2),("a__U171",3),("a__U181",2),("a__U191",2),("a__U201",4),("a__U202",2),("a__U21",2),("a__U211",2),("a__U221",3),("a__U31",2),("a__U41",3),("a__U42",2),("a__U43",1),("a__U51",3),("a__U52",2),("a__U53",1),("a__U61",2),("a__U62",1),("a__U71",2),("a__U72",1),("a__U81",2),("a__U82",1),("a__U91",2),("a__U92",1),("a__afterNth",2),("a__and",2),("a__fst",1),("a__head",1),("a__isLNat",1),("a__isLNatKind",1),("a__isNatural",1),("a__isNaturalKind",1),("a__isPLNat",1),("a__isPLNatKind",1),("a__natsFrom",1),("a__sel",2),("a__snd",1),("a__splitAt",2),("a__tail",1),("a__take",2),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isLNatKind",1),("isNatural",1),("isNaturalKind",1),("isPLNat",1),("isPLNatKind",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [a__U101(tt,V1,V2) -> a__U102(a__isNatural(V1),V2),a__U102(tt,V2) -> a__U103(a__isLNat(V2)),a__U103(tt) -> tt,a__U11(tt,N,XS) -> a__snd(a__splitAt(mark(N),mark(XS))),a__U111(tt,V1) -> a__U112(a__isLNat(V1)),a__U112(tt) -> tt,a__U121(tt,V1) -> a__U122(a__isNatural(V1)),a__U122(tt) -> tt,a__U131(tt,V1,V2) -> a__U132(a__isNatural(V1),V2),a__U132(tt,V2) -> a__U133(a__isLNat(V2)),a__U133(tt) -> tt,a__U141(tt,V1,V2) -> a__U142(a__isLNat(V1),V2),a__U142(tt,V2) -> a__U143(a__isLNat(V2)),a__U143(tt) -> tt,a__U151(tt,V1,V2) -> a__U152(a__isNatural(V1),V2),a__U152(tt,V2) -> a__U153(a__isLNat(V2)),a__U153(tt) -> tt,a__U161(tt,N) -> cons(mark(N),natsFrom(s(N))),a__U171(tt,N,XS) -> a__head(a__afterNth(mark(N),mark(XS))),a__U181(tt,Y) -> mark(Y),a__U191(tt,XS) -> pair(nil,mark(XS)),a__U201(tt,N,X,XS) -> a__U202(a__splitAt(mark(N),mark(XS)),X),a__U202(pair(YS,ZS),X) -> pair(cons(mark(X),YS),mark(ZS)),a__U21(tt,X) -> mark(X),a__U211(tt,XS) -> mark(XS),a__U221(tt,N,XS) -> a__fst(a__splitAt(mark(N),mark(XS))),a__U31(tt,N) -> mark(N),a__U41(tt,V1,V2) -> a__U42(a__isNatural(V1),V2),a__U42(tt,V2) -> a__U43(a__isLNat(V2)),a__U43(tt) -> tt,a__U51(tt,V1,V2) -> a__U52(a__isNatural(V1),V2),a__U52(tt,V2) -> a__U53(a__isLNat(V2)),a__U53(tt) -> tt,a__U61(tt,V1) -> a__U62(a__isPLNat(V1)),a__U62(tt) -> tt,a__U71(tt,V1) -> a__U72(a__isNatural(V1)),a__U72(tt) -> tt,a__U81(tt,V1) -> a__U82(a__isPLNat(V1)),a__U82(tt) -> tt,a__U91(tt,V1) -> a__U92(a__isLNat(V1)),a__U92(tt) -> tt,a__afterNth(N,XS) -> a__U11(a__and(a__and(a__isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS),a__and(tt,X) -> mark(X),a__fst(pair(X,Y)) -> a__U21(a__and(a__and(a__isLNat(X),isLNatKind(X)),and(isLNat(Y),isLNatKind(Y))),X),a__head(cons(N,XS)) -> a__U31(a__and(a__and(a__isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N),a__isLNat(nil) -> tt,a__isLNat(afterNth(V1,V2)) -> a__U41(a__and(a__isNaturalKind(V1),isLNatKind(V2)),V1,V2),a__isLNat(cons(V1,V2)) -> a__U51(a__and(a__isNaturalKind(V1),isLNatKind(V2)),V1,V2),a__isLNat(fst(V1)) -> a__U61(a__isPLNatKind(V1),V1),a__isLNat(natsFrom(V1)) -> a__U71(a__isNaturalKind(V1),V1),a__isLNat(snd(V1)) -> a__U81(a__isPLNatKind(V1),V1),a__isLNat(tail(V1)) -> a__U91(a__isLNatKind(V1),V1),a__isLNat(take(V1,V2)) -> a__U101(a__and(a__isNaturalKind(V1),isLNatKind(V2)),V1,V2),a__isLNatKind(nil) -> tt,a__isLNatKind(afterNth(V1,V2)) -> a__and(a__isNaturalKind(V1),isLNatKind(V2)),a__isLNatKind(cons(V1,V2)) -> a__and(a__isNaturalKind(V1),isLNatKind(V2)),a__isLNatKind(fst(V1)) -> a__isPLNatKind(V1),a__isLNatKind(natsFrom(V1)) -> a__isNaturalKind(V1),a__isLNatKind(snd(V1)) -> a__isPLNatKind(V1),a__isLNatKind(tail(V1)) -> a__isLNatKind(V1),a__isLNatKind(take(V1,V2)) -> a__and(a__isNaturalKind(V1),isLNatKind(V2)),a__isNatural(0) -> tt,a__isNatural(head(V1)) -> a__U111(a__isLNatKind(V1),V1),a__isNatural(s(V1)) -> a__U121(a__isNaturalKind(V1),V1),a__isNatural(sel(V1,V2)) -> a__U131(a__and(a__isNaturalKind(V1),isLNatKind(V2)),V1,V2),a__isNaturalKind(0) -> tt,a__isNaturalKind(head(V1)) -> a__isLNatKind(V1),a__isNaturalKind(s(V1)) -> a__isNaturalKind(V1),a__isNaturalKind(sel(V1,V2)) -> a__and(a__isNaturalKind(V1),isLNatKind(V2)),a__isPLNat(pair(V1,V2)) -> a__U141(a__and(a__isLNatKind(V1),isLNatKind(V2)),V1,V2),a__isPLNat(splitAt(V1,V2)) -> a__U151(a__and(a__isNaturalKind(V1),isLNatKind(V2)),V1,V2),a__isPLNatKind(pair(V1,V2)) -> a__and(a__isLNatKind(V1),isLNatKind(V2)),a__isPLNatKind(splitAt(V1,V2)) -> a__and(a__isNaturalKind(V1),isLNatKind(V2)),a__natsFrom(N) -> a__U161(a__and(a__isNatural(N),isNaturalKind(N)),N),a__sel(N,XS) -> a__U171(a__and(a__and(a__isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS),a__snd(pair(X,Y)) -> a__U181(a__and(a__and(a__isLNat(X),isLNatKind(X)),and(isLNat(Y),isLNatKind(Y))),Y),a__splitAt(0,XS) -> a__U191(a__and(a__isLNat(XS),isLNatKind(XS)),XS),a__splitAt(s(N),cons(X,XS)) -> a__U201(a__and(a__and(a__isNatural(N),isNaturalKind(N)),and(and(isNatural(X),isNaturalKind(X)),and(isLNat(XS),isLNatKind(XS)))),N,X,XS),a__tail(cons(N,XS)) -> a__U211(a__and(a__and(a__isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),XS),a__take(N,XS) -> a__U221(a__and(a__and(a__isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS),mark(U101(X1,X2,X3)) -> a__U101(mark(X1),X2,X3),mark(U102(X1,X2)) -> a__U102(mark(X1),X2),mark(isNatural(X)) -> a__isNatural(X),mark(U103(X)) -> a__U103(mark(X)),mark(isLNat(X)) -> a__isLNat(X),mark(U11(X1,X2,X3)) -> a__U11(mark(X1),X2,X3),mark(snd(X)) -> a__snd(mark(X)),mark(splitAt(X1,X2)) -> a__splitAt(mark(X1),mark(X2)),mark(U111(X1,X2)) -> a__U111(mark(X1),X2),mark(U112(X)) -> a__U112(mark(X)),mark(U121(X1,X2)) -> a__U121(mark(X1),X2),mark(U122(X)) -> a__U122(mark(X)),mark(U131(X1,X2,X3)) -> a__U131(mark(X1),X2,X3),mark(U132(X1,X2)) -> a__U132(mark(X1),X2),mark(U133(X)) -> a__U133(mark(X)),mark(U141(X1,X2,X3)) -> a__U141(mark(X1),X2,X3),mark(U142(X1,X2)) -> a__U142(mark(X1),X2),mark(U143(X)) -> a__U143(mark(X)),mark(U151(X1,X2,X3)) -> a__U151(mark(X1),X2,X3),mark(U152(X1,X2)) -> a__U152(mark(X1),X2),mark(U153(X)) -> a__U153(mark(X)),mark(U161(X1,X2)) -> a__U161(mark(X1),X2),mark(natsFrom(X)) -> a__natsFrom(mark(X)),mark(U171(X1,X2,X3)) -> a__U171(mark(X1),X2,X3),mark(head(X)) -> a__head(mark(X)),mark(afterNth(X1,X2)) -> a__afterNth(mark(X1),mark(X2)),mark(U181(X1,X2)) -> a__U181(mark(X1),X2),mark(U191(X1,X2)) -> a__U191(mark(X1),X2),mark(U201(X1,X2,X3,X4)) -> a__U201(mark(X1),X2,X3,X4),mark(U202(X1,X2)) -> a__U202(mark(X1),X2),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U211(X1,X2)) -> a__U211(mark(X1),X2),mark(U221(X1,X2,X3)) -> a__U221(mark(X1),X2,X3),mark(fst(X)) -> a__fst(mark(X)),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2)) -> a__U42(mark(X1),X2),mark(U43(X)) -> a__U43(mark(X)),mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3),mark(U52(X1,X2)) -> a__U52(mark(X1),X2),mark(U53(X)) -> a__U53(mark(X)),mark(U61(X1,X2)) -> a__U61(mark(X1),X2),mark(U62(X)) -> a__U62(mark(X)),mark(isPLNat(X)) -> a__isPLNat(X),mark(U71(X1,X2)) -> a__U71(mark(X1),X2),mark(U72(X)) -> a__U72(mark(X)),mark(U81(X1,X2)) -> a__U81(mark(X1),X2),mark(U82(X)) -> a__U82(mark(X)),mark(U91(X1,X2)) -> a__U91(mark(X1),X2),mark(U92(X)) -> a__U92(mark(X)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNaturalKind(X)) -> a__isNaturalKind(X),mark(isLNatKind(X)) -> a__isLNatKind(X),mark(isPLNatKind(X)) -> a__isPLNatKind(X),mark(tail(X)) -> a__tail(mark(X)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(tt) -> tt,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(pair(X1,X2)) -> pair(mark(X1),mark(X2)),mark(nil) -> nil,mark(0) -> 0,a__U101(X1,X2,X3) -> U101(X1,X2,X3),a__U102(X1,X2) -> U102(X1,X2),a__isNatural(X) -> isNatural(X),a__U103(X) -> U103(X),a__isLNat(X) -> isLNat(X),a__U11(X1,X2,X3) -> U11(X1,X2,X3),a__snd(X) -> snd(X),a__splitAt(X1,X2) -> splitAt(X1,X2),a__U111(X1,X2) -> U111(X1,X2),a__U112(X) -> U112(X),a__U121(X1,X2) -> U121(X1,X2),a__U122(X) -> U122(X),a__U131(X1,X2,X3) -> U131(X1,X2,X3),a__U132(X1,X2) -> U132(X1,X2),a__U133(X) -> U133(X),a__U141(X1,X2,X3) -> U141(X1,X2,X3),a__U142(X1,X2) -> U142(X1,X2),a__U143(X) -> U143(X),a__U151(X1,X2,X3) -> U151(X1,X2,X3),a__U152(X1,X2) -> U152(X1,X2),a__U153(X) -> U153(X),a__U161(X1,X2) -> U161(X1,X2),a__natsFrom(X) -> natsFrom(X),a__U171(X1,X2,X3) -> U171(X1,X2,X3),a__head(X) -> head(X),a__afterNth(X1,X2) -> afterNth(X1,X2),a__U181(X1,X2) -> U181(X1,X2),a__U191(X1,X2) -> U191(X1,X2),a__U201(X1,X2,X3,X4) -> U201(X1,X2,X3,X4),a__U202(X1,X2) -> U202(X1,X2),a__U21(X1,X2) -> U21(X1,X2),a__U211(X1,X2) -> U211(X1,X2),a__U221(X1,X2,X3) -> U221(X1,X2,X3),a__fst(X) -> fst(X),a__U31(X1,X2) -> U31(X1,X2),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2) -> U42(X1,X2),a__U43(X) -> U43(X),a__U51(X1,X2,X3) -> U51(X1,X2,X3),a__U52(X1,X2) -> U52(X1,X2),a__U53(X) -> U53(X),a__U61(X1,X2) -> U61(X1,X2),a__U62(X) -> U62(X),a__isPLNat(X) -> isPLNat(X),a__U71(X1,X2) -> U71(X1,X2),a__U72(X) -> U72(X),a__U81(X1,X2) -> U81(X1,X2),a__U82(X) -> U82(X),a__U91(X1,X2) -> U91(X1,X2),a__U92(X) -> U92(X),a__and(X1,X2) -> and(X1,X2),a__isNaturalKind(X) -> isNaturalKind(X),a__isLNatKind(X) -> isLNatKind(X),a__isPLNatKind(X) -> isPLNatKind(X),a__tail(X) -> tail(X),a__take(X1,X2) -> take(X1,X2),a__sel(X1,X2) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LISTUTILITIES_complete_C.xml" :
TRS {trsSignature = fromList [("0",0),("U101",3),("U102",2),("U103",1),("U11",3),("U111",2),("U112",1),("U121",2),("U122",1),("U131",3),("U132",2),("U133",1),("U141",3),("U142",2),("U143",1),("U151",3),("U152",2),("U153",1),("U161",2),("U171",3),("U181",2),("U191",2),("U201",4),("U202",2),("U21",2),("U211",2),("U221",3),("U31",2),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("U62",1),("U71",2),("U72",1),("U81",2),("U82",1),("U91",2),("U92",1),("active",1),("afterNth",2),("and",2),("cons",2),("fst",1),("head",1),("isLNat",1),("isLNatKind",1),("isNatural",1),("isNaturalKind",1),("isPLNat",1),("isPLNatKind",1),("mark",1),("natsFrom",1),("nil",0),("ok",1),("pair",2),("proper",1),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("top",1),("tt",0)], trsVariables = fromList ["N","V1","V2","X","X1","X2","X3","X4","XS","Y","YS","ZS"], trsRMap = [], trsRules = [active(U101(tt,V1,V2)) -> mark(U102(isNatural(V1),V2)),active(U102(tt,V2)) -> mark(U103(isLNat(V2))),active(U103(tt)) -> mark(tt),active(U11(tt,N,XS)) -> mark(snd(splitAt(N,XS))),active(U111(tt,V1)) -> mark(U112(isLNat(V1))),active(U112(tt)) -> mark(tt),active(U121(tt,V1)) -> mark(U122(isNatural(V1))),active(U122(tt)) -> mark(tt),active(U131(tt,V1,V2)) -> mark(U132(isNatural(V1),V2)),active(U132(tt,V2)) -> mark(U133(isLNat(V2))),active(U133(tt)) -> mark(tt),active(U141(tt,V1,V2)) -> mark(U142(isLNat(V1),V2)),active(U142(tt,V2)) -> mark(U143(isLNat(V2))),active(U143(tt)) -> mark(tt),active(U151(tt,V1,V2)) -> mark(U152(isNatural(V1),V2)),active(U152(tt,V2)) -> mark(U153(isLNat(V2))),active(U153(tt)) -> mark(tt),active(U161(tt,N)) -> mark(cons(N,natsFrom(s(N)))),active(U171(tt,N,XS)) -> mark(head(afterNth(N,XS))),active(U181(tt,Y)) -> mark(Y),active(U191(tt,XS)) -> mark(pair(nil,XS)),active(U201(tt,N,X,XS)) -> mark(U202(splitAt(N,XS),X)),active(U202(pair(YS,ZS),X)) -> mark(pair(cons(X,YS),ZS)),active(U21(tt,X)) -> mark(X),active(U211(tt,XS)) -> mark(XS),active(U221(tt,N,XS)) -> mark(fst(splitAt(N,XS))),active(U31(tt,N)) -> mark(N),active(U41(tt,V1,V2)) -> mark(U42(isNatural(V1),V2)),active(U42(tt,V2)) -> mark(U43(isLNat(V2))),active(U43(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNatural(V1),V2)),active(U52(tt,V2)) -> mark(U53(isLNat(V2))),active(U53(tt)) -> mark(tt),active(U61(tt,V1)) -> mark(U62(isPLNat(V1))),active(U62(tt)) -> mark(tt),active(U71(tt,V1)) -> mark(U72(isNatural(V1))),active(U72(tt)) -> mark(tt),active(U81(tt,V1)) -> mark(U82(isPLNat(V1))),active(U82(tt)) -> mark(tt),active(U91(tt,V1)) -> mark(U92(isLNat(V1))),active(U92(tt)) -> mark(tt),active(afterNth(N,XS)) -> mark(U11(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS)),active(and(tt,X)) -> mark(X),active(fst(pair(X,Y))) -> mark(U21(and(and(isLNat(X),isLNatKind(X)),and(isLNat(Y),isLNatKind(Y))),X)),active(head(cons(N,XS))) -> mark(U31(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N)),active(isLNat(nil)) -> mark(tt),active(isLNat(afterNth(V1,V2))) -> mark(U41(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isLNat(cons(V1,V2))) -> mark(U51(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isLNat(fst(V1))) -> mark(U61(isPLNatKind(V1),V1)),active(isLNat(natsFrom(V1))) -> mark(U71(isNaturalKind(V1),V1)),active(isLNat(snd(V1))) -> mark(U81(isPLNatKind(V1),V1)),active(isLNat(tail(V1))) -> mark(U91(isLNatKind(V1),V1)),active(isLNat(take(V1,V2))) -> mark(U101(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isLNatKind(nil)) -> mark(tt),active(isLNatKind(afterNth(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(isLNatKind(cons(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(isLNatKind(fst(V1))) -> mark(isPLNatKind(V1)),active(isLNatKind(natsFrom(V1))) -> mark(isNaturalKind(V1)),active(isLNatKind(snd(V1))) -> mark(isPLNatKind(V1)),active(isLNatKind(tail(V1))) -> mark(isLNatKind(V1)),active(isLNatKind(take(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(isNatural(0)) -> mark(tt),active(isNatural(head(V1))) -> mark(U111(isLNatKind(V1),V1)),active(isNatural(s(V1))) -> mark(U121(isNaturalKind(V1),V1)),active(isNatural(sel(V1,V2))) -> mark(U131(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isNaturalKind(0)) -> mark(tt),active(isNaturalKind(head(V1))) -> mark(isLNatKind(V1)),active(isNaturalKind(s(V1))) -> mark(isNaturalKind(V1)),active(isNaturalKind(sel(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(isPLNat(pair(V1,V2))) -> mark(U141(and(isLNatKind(V1),isLNatKind(V2)),V1,V2)),active(isPLNat(splitAt(V1,V2))) -> mark(U151(and(isNaturalKind(V1),isLNatKind(V2)),V1,V2)),active(isPLNatKind(pair(V1,V2))) -> mark(and(isLNatKind(V1),isLNatKind(V2))),active(isPLNatKind(splitAt(V1,V2))) -> mark(and(isNaturalKind(V1),isLNatKind(V2))),active(natsFrom(N)) -> mark(U161(and(isNatural(N),isNaturalKind(N)),N)),active(sel(N,XS)) -> mark(U171(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS)),active(snd(pair(X,Y))) -> mark(U181(and(and(isLNat(X),isLNatKind(X)),and(isLNat(Y),isLNatKind(Y))),Y)),active(splitAt(0,XS)) -> mark(U191(and(isLNat(XS),isLNatKind(XS)),XS)),active(splitAt(s(N),cons(X,XS))) -> mark(U201(and(and(isNatural(N),isNaturalKind(N)),and(and(isNatural(X),isNaturalKind(X)),and(isLNat(XS),isLNatKind(XS)))),N,X,XS)),active(tail(cons(N,XS))) -> mark(U211(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),XS)),active(take(N,XS)) -> mark(U221(and(and(isNatural(N),isNaturalKind(N)),and(isLNat(XS),isLNatKind(XS))),N,XS)),active(U101(X1,X2,X3)) -> U101(active(X1),X2,X3),active(U102(X1,X2)) -> U102(active(X1),X2),active(U103(X)) -> U103(active(X)),active(U11(X1,X2,X3)) -> U11(active(X1),X2,X3),active(snd(X)) -> snd(active(X)),active(splitAt(X1,X2)) -> splitAt(active(X1),X2),active(splitAt(X1,X2)) -> splitAt(X1,active(X2)),active(U111(X1,X2)) -> U111(active(X1),X2),active(U112(X)) -> U112(active(X)),active(U121(X1,X2)) -> U121(active(X1),X2),active(U122(X)) -> U122(active(X)),active(U131(X1,X2,X3)) -> U131(active(X1),X2,X3),active(U132(X1,X2)) -> U132(active(X1),X2),active(U133(X)) -> U133(active(X)),active(U141(X1,X2,X3)) -> U141(active(X1),X2,X3),active(U142(X1,X2)) -> U142(active(X1),X2),active(U143(X)) -> U143(active(X)),active(U151(X1,X2,X3)) -> U151(active(X1),X2,X3),active(U152(X1,X2)) -> U152(active(X1),X2),active(U153(X)) -> U153(active(X)),active(U161(X1,X2)) -> U161(active(X1),X2),active(cons(X1,X2)) -> cons(active(X1),X2),active(natsFrom(X)) -> natsFrom(active(X)),active(s(X)) -> s(active(X)),active(U171(X1,X2,X3)) -> U171(active(X1),X2,X3),active(head(X)) -> head(active(X)),active(afterNth(X1,X2)) -> afterNth(active(X1),X2),active(afterNth(X1,X2)) -> afterNth(X1,active(X2)),active(U181(X1,X2)) -> U181(active(X1),X2),active(U191(X1,X2)) -> U191(active(X1),X2),active(pair(X1,X2)) -> pair(active(X1),X2),active(pair(X1,X2)) -> pair(X1,active(X2)),active(U201(X1,X2,X3,X4)) -> U201(active(X1),X2,X3,X4),active(U202(X1,X2)) -> U202(active(X1),X2),active(U21(X1,X2)) -> U21(active(X1),X2),active(U211(X1,X2)) -> U211(active(X1),X2),active(U221(X1,X2,X3)) -> U221(active(X1),X2,X3),active(fst(X)) -> fst(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2)) -> U42(active(X1),X2),active(U43(X)) -> U43(active(X)),active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3),active(U52(X1,X2)) -> U52(active(X1),X2),active(U53(X)) -> U53(active(X)),active(U61(X1,X2)) -> U61(active(X1),X2),active(U62(X)) -> U62(active(X)),active(U71(X1,X2)) -> U71(active(X1),X2),active(U72(X)) -> U72(active(X)),active(U81(X1,X2)) -> U81(active(X1),X2),active(U82(X)) -> U82(active(X)),active(U91(X1,X2)) -> U91(active(X1),X2),active(U92(X)) -> U92(active(X)),active(and(X1,X2)) -> and(active(X1),X2),active(tail(X)) -> tail(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),U101(mark(X1),X2,X3) -> mark(U101(X1,X2,X3)),U102(mark(X1),X2) -> mark(U102(X1,X2)),U103(mark(X)) -> mark(U103(X)),U11(mark(X1),X2,X3) -> mark(U11(X1,X2,X3)),snd(mark(X)) -> mark(snd(X)),splitAt(mark(X1),X2) -> mark(splitAt(X1,X2)),splitAt(X1,mark(X2)) -> mark(splitAt(X1,X2)),U111(mark(X1),X2) -> mark(U111(X1,X2)),U112(mark(X)) -> mark(U112(X)),U121(mark(X1),X2) -> mark(U121(X1,X2)),U122(mark(X)) -> mark(U122(X)),U131(mark(X1),X2,X3) -> mark(U131(X1,X2,X3)),U132(mark(X1),X2) -> mark(U132(X1,X2)),U133(mark(X)) -> mark(U133(X)),U141(mark(X1),X2,X3) -> mark(U141(X1,X2,X3)),U142(mark(X1),X2) -> mark(U142(X1,X2)),U143(mark(X)) -> mark(U143(X)),U151(mark(X1),X2,X3) -> mark(U151(X1,X2,X3)),U152(mark(X1),X2) -> mark(U152(X1,X2)),U153(mark(X)) -> mark(U153(X)),U161(mark(X1),X2) -> mark(U161(X1,X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),natsFrom(mark(X)) -> mark(natsFrom(X)),s(mark(X)) -> mark(s(X)),U171(mark(X1),X2,X3) -> mark(U171(X1,X2,X3)),head(mark(X)) -> mark(head(X)),afterNth(mark(X1),X2) -> mark(afterNth(X1,X2)),afterNth(X1,mark(X2)) -> mark(afterNth(X1,X2)),U181(mark(X1),X2) -> mark(U181(X1,X2)),U191(mark(X1),X2) -> mark(U191(X1,X2)),pair(mark(X1),X2) -> mark(pair(X1,X2)),pair(X1,mark(X2)) -> mark(pair(X1,X2)),U201(mark(X1),X2,X3,X4) -> mark(U201(X1,X2,X3,X4)),U202(mark(X1),X2) -> mark(U202(X1,X2)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U211(mark(X1),X2) -> mark(U211(X1,X2)),U221(mark(X1),X2,X3) -> mark(U221(X1,X2,X3)),fst(mark(X)) -> mark(fst(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2) -> mark(U42(X1,X2)),U43(mark(X)) -> mark(U43(X)),U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3)),U52(mark(X1),X2) -> mark(U52(X1,X2)),U53(mark(X)) -> mark(U53(X)),U61(mark(X1),X2) -> mark(U61(X1,X2)),U62(mark(X)) -> mark(U62(X)),U71(mark(X1),X2) -> mark(U71(X1,X2)),U72(mark(X)) -> mark(U72(X)),U81(mark(X1),X2) -> mark(U81(X1,X2)),U82(mark(X)) -> mark(U82(X)),U91(mark(X1),X2) -> mark(U91(X1,X2)),U92(mark(X)) -> mark(U92(X)),and(mark(X1),X2) -> mark(and(X1,X2)),tail(mark(X)) -> mark(tail(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),proper(U101(X1,X2,X3)) -> U101(proper(X1),proper(X2),proper(X3)),proper(tt) -> ok(tt),proper(U102(X1,X2)) -> U102(proper(X1),proper(X2)),proper(isNatural(X)) -> isNatural(proper(X)),proper(U103(X)) -> U103(proper(X)),proper(isLNat(X)) -> isLNat(proper(X)),proper(U11(X1,X2,X3)) -> U11(proper(X1),proper(X2),proper(X3)),proper(snd(X)) -> snd(proper(X)),proper(splitAt(X1,X2)) -> splitAt(proper(X1),proper(X2)),proper(U111(X1,X2)) -> U111(proper(X1),proper(X2)),proper(U112(X)) -> U112(proper(X)),proper(U121(X1,X2)) -> U121(proper(X1),proper(X2)),proper(U122(X)) -> U122(proper(X)),proper(U131(X1,X2,X3)) -> U131(proper(X1),proper(X2),proper(X3)),proper(U132(X1,X2)) -> U132(proper(X1),proper(X2)),proper(U133(X)) -> U133(proper(X)),proper(U141(X1,X2,X3)) -> U141(proper(X1),proper(X2),proper(X3)),proper(U142(X1,X2)) -> U142(proper(X1),proper(X2)),proper(U143(X)) -> U143(proper(X)),proper(U151(X1,X2,X3)) -> U151(proper(X1),proper(X2),proper(X3)),proper(U152(X1,X2)) -> U152(proper(X1),proper(X2)),proper(U153(X)) -> U153(proper(X)),proper(U161(X1,X2)) -> U161(proper(X1),proper(X2)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(natsFrom(X)) -> natsFrom(proper(X)),proper(s(X)) -> s(proper(X)),proper(U171(X1,X2,X3)) -> U171(proper(X1),proper(X2),proper(X3)),proper(head(X)) -> head(proper(X)),proper(afterNth(X1,X2)) -> afterNth(proper(X1),proper(X2)),proper(U181(X1,X2)) -> U181(proper(X1),proper(X2)),proper(U191(X1,X2)) -> U191(proper(X1),proper(X2)),proper(pair(X1,X2)) -> pair(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(U201(X1,X2,X3,X4)) -> U201(proper(X1),proper(X2),proper(X3),proper(X4)),proper(U202(X1,X2)) -> U202(proper(X1),proper(X2)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U211(X1,X2)) -> U211(proper(X1),proper(X2)),proper(U221(X1,X2,X3)) -> U221(proper(X1),proper(X2),proper(X3)),proper(fst(X)) -> fst(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2)) -> U42(proper(X1),proper(X2)),proper(U43(X)) -> U43(proper(X)),proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3)),proper(U52(X1,X2)) -> U52(proper(X1),proper(X2)),proper(U53(X)) -> U53(proper(X)),proper(U61(X1,X2)) -> U61(proper(X1),proper(X2)),proper(U62(X)) -> U62(proper(X)),proper(isPLNat(X)) -> isPLNat(proper(X)),proper(U71(X1,X2)) -> U71(proper(X1),proper(X2)),proper(U72(X)) -> U72(proper(X)),proper(U81(X1,X2)) -> U81(proper(X1),proper(X2)),proper(U82(X)) -> U82(proper(X)),proper(U91(X1,X2)) -> U91(proper(X1),proper(X2)),proper(U92(X)) -> U92(proper(X)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isNaturalKind(X)) -> isNaturalKind(proper(X)),proper(isLNatKind(X)) -> isLNatKind(proper(X)),proper(isPLNatKind(X)) -> isPLNatKind(proper(X)),proper(tail(X)) -> tail(proper(X)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(0) -> ok(0),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),U101(ok(X1),ok(X2),ok(X3)) -> ok(U101(X1,X2,X3)),U102(ok(X1),ok(X2)) -> ok(U102(X1,X2)),isNatural(ok(X)) -> ok(isNatural(X)),U103(ok(X)) -> ok(U103(X)),isLNat(ok(X)) -> ok(isLNat(X)),U11(ok(X1),ok(X2),ok(X3)) -> ok(U11(X1,X2,X3)),snd(ok(X)) -> ok(snd(X)),splitAt(ok(X1),ok(X2)) -> ok(splitAt(X1,X2)),U111(ok(X1),ok(X2)) -> ok(U111(X1,X2)),U112(ok(X)) -> ok(U112(X)),U121(ok(X1),ok(X2)) -> ok(U121(X1,X2)),U122(ok(X)) -> ok(U122(X)),U131(ok(X1),ok(X2),ok(X3)) -> ok(U131(X1,X2,X3)),U132(ok(X1),ok(X2)) -> ok(U132(X1,X2)),U133(ok(X)) -> ok(U133(X)),U141(ok(X1),ok(X2),ok(X3)) -> ok(U141(X1,X2,X3)),U142(ok(X1),ok(X2)) -> ok(U142(X1,X2)),U143(ok(X)) -> ok(U143(X)),U151(ok(X1),ok(X2),ok(X3)) -> ok(U151(X1,X2,X3)),U152(ok(X1),ok(X2)) -> ok(U152(X1,X2)),U153(ok(X)) -> ok(U153(X)),U161(ok(X1),ok(X2)) -> ok(U161(X1,X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),natsFrom(ok(X)) -> ok(natsFrom(X)),s(ok(X)) -> ok(s(X)),U171(ok(X1),ok(X2),ok(X3)) -> ok(U171(X1,X2,X3)),head(ok(X)) -> ok(head(X)),afterNth(ok(X1),ok(X2)) -> ok(afterNth(X1,X2)),U181(ok(X1),ok(X2)) -> ok(U181(X1,X2)),U191(ok(X1),ok(X2)) -> ok(U191(X1,X2)),pair(ok(X1),ok(X2)) -> ok(pair(X1,X2)),U201(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U201(X1,X2,X3,X4)),U202(ok(X1),ok(X2)) -> ok(U202(X1,X2)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U211(ok(X1),ok(X2)) -> ok(U211(X1,X2)),U221(ok(X1),ok(X2),ok(X3)) -> ok(U221(X1,X2,X3)),fst(ok(X)) -> ok(fst(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2)) -> ok(U42(X1,X2)),U43(ok(X)) -> ok(U43(X)),U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3)),U52(ok(X1),ok(X2)) -> ok(U52(X1,X2)),U53(ok(X)) -> ok(U53(X)),U61(ok(X1),ok(X2)) -> ok(U61(X1,X2)),U62(ok(X)) -> ok(U62(X)),isPLNat(ok(X)) -> ok(isPLNat(X)),U71(ok(X1),ok(X2)) -> ok(U71(X1,X2)),U72(ok(X)) -> ok(U72(X)),U81(ok(X1),ok(X2)) -> ok(U81(X1,X2)),U82(ok(X)) -> ok(U82(X)),U91(ok(X1),ok(X2)) -> ok(U91(X1,X2)),U92(ok(X)) -> ok(U92(X)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNaturalKind(ok(X)) -> ok(isNaturalKind(X)),isLNatKind(ok(X)) -> ok(isLNatKind(X)),isPLNatKind(ok(X)) -> ok(isPLNatKind(X)),tail(ok(X)) -> ok(tail(X)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nosorts_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("active",1),("cons",2),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","X","X1","X2"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,L)) -> mark(U12(tt,L)),active(U12(tt,L)) -> mark(s(length(L))),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U11(tt,L)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U12(X1,X2)) -> active(U12(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(nil) -> active(nil),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X1),X2) -> U12(X1,X2),U12(X1,mark(X2)) -> U12(X1,X2),U12(active(X1),X2) -> U12(X1,X2),U12(X1,active(X2)) -> U12(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nosorts_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("a__U11",2),("a__U12",2),("a__length",1),("a__zeros",0),("cons",2),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","X","X1","X2"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U11(tt,L) -> a__U12(tt,L),a__U12(tt,L) -> s(a__length(mark(L))),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U11(tt,L),mark(zeros) -> a__zeros,mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X1,X2)) -> a__U12(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U11(X1,X2) -> U11(X1,X2),a__U12(X1,X2) -> U12(X1,X2),a__length(X) -> length(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nosorts_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("active",1),("cons",2),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","X","X1","X2"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,L)) -> mark(U12(tt,L)),active(U12(tt,L)) -> mark(s(length(L))),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U11(tt,L)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X1,X2)) -> U12(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X1),X2) -> mark(U12(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U12(X1,X2)) -> U12(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(nil) -> ok(nil),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X1),ok(X2)) -> ok(U12(X1,X2)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nosorts_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("cons",2),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","X","X1","X2"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(and(tt,X)) -> mark(X),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(s(length(L))),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(tt) -> active(tt),mark(length(X)) -> active(length(mark(X))),mark(nil) -> active(nil),mark(s(X)) -> active(s(mark(X))),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),length(mark(X)) -> length(X),length(active(X)) -> length(X),s(mark(X)) -> s(X),s(active(X)) -> s(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nosorts_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__and",2),("a__length",1),("a__zeros",0),("and",2),("cons",2),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","X","X1","X2"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__and(tt,X) -> mark(X),a__length(nil) -> 0,a__length(cons(N,L)) -> s(a__length(mark(L))),mark(zeros) -> a__zeros,mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(nil) -> nil,mark(s(X)) -> s(mark(X)),a__zeros -> zeros,a__and(X1,X2) -> and(X1,X2),a__length(X) -> length(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nosorts_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("cons",2),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","X","X1","X2"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(and(tt,X)) -> mark(X),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(s(length(L))),active(cons(X1,X2)) -> cons(active(X1),X2),active(and(X1,X2)) -> and(active(X1),X2),active(length(X)) -> length(active(X)),active(s(X)) -> s(active(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),and(mark(X1),X2) -> mark(and(X1,X2)),length(mark(X)) -> mark(length(X)),s(mark(X)) -> mark(s(X)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(length(X)) -> length(proper(X)),proper(nil) -> ok(nil),proper(s(X)) -> s(proper(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),length(ok(X)) -> ok(length(X)),s(ok(X)) -> ok(s(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nokinds_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",1),("U21",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",3),("U62",2),("active",1),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt)) -> mark(tt),active(U21(tt)) -> mark(tt),active(U31(tt)) -> mark(tt),active(U41(tt,V2)) -> mark(U42(isNatIList(V2))),active(U42(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isNatList(V2))),active(U52(tt)) -> mark(tt),active(U61(tt,L,N)) -> mark(U62(isNat(N),L)),active(U62(tt,L)) -> mark(s(length(L))),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatList(V1))),active(isNat(s(V1))) -> mark(U21(isNat(V1))),active(isNatIList(V)) -> mark(U31(isNatList(V))),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(isNat(V1),V2)),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U51(isNat(V1),V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U61(isNatList(L),L,N)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U11(X)) -> active(U11(mark(X))),mark(tt) -> active(tt),mark(U21(X)) -> active(U21(mark(X))),mark(U31(X)) -> active(U31(mark(X))),mark(U41(X1,X2)) -> active(U41(mark(X1),X2)),mark(U42(X)) -> active(U42(mark(X))),mark(isNatIList(X)) -> active(isNatIList(X)),mark(U51(X1,X2)) -> active(U51(mark(X1),X2)),mark(U52(X)) -> active(U52(mark(X))),mark(isNatList(X)) -> active(isNatList(X)),mark(U61(X1,X2,X3)) -> active(U61(mark(X1),X2,X3)),mark(U62(X1,X2)) -> active(U62(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(nil) -> active(nil),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U11(mark(X)) -> U11(X),U11(active(X)) -> U11(X),U21(mark(X)) -> U21(X),U21(active(X)) -> U21(X),U31(mark(X)) -> U31(X),U31(active(X)) -> U31(X),U41(mark(X1),X2) -> U41(X1,X2),U41(X1,mark(X2)) -> U41(X1,X2),U41(active(X1),X2) -> U41(X1,X2),U41(X1,active(X2)) -> U41(X1,X2),U42(mark(X)) -> U42(X),U42(active(X)) -> U42(X),isNatIList(mark(X)) -> isNatIList(X),isNatIList(active(X)) -> isNatIList(X),U51(mark(X1),X2) -> U51(X1,X2),U51(X1,mark(X2)) -> U51(X1,X2),U51(active(X1),X2) -> U51(X1,X2),U51(X1,active(X2)) -> U51(X1,X2),U52(mark(X)) -> U52(X),U52(active(X)) -> U52(X),isNatList(mark(X)) -> isNatList(X),isNatList(active(X)) -> isNatList(X),U61(mark(X1),X2,X3) -> U61(X1,X2,X3),U61(X1,mark(X2),X3) -> U61(X1,X2,X3),U61(X1,X2,mark(X3)) -> U61(X1,X2,X3),U61(active(X1),X2,X3) -> U61(X1,X2,X3),U61(X1,active(X2),X3) -> U61(X1,X2,X3),U61(X1,X2,active(X3)) -> U61(X1,X2,X3),U62(mark(X1),X2) -> U62(X1,X2),U62(X1,mark(X2)) -> U62(X1,X2),U62(active(X1),X2) -> U62(X1,X2),U62(X1,active(X2)) -> U62(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nokinds_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",1),("U21",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",3),("U62",2),("a__U11",1),("a__U21",1),("a__U31",1),("a__U41",2),("a__U42",1),("a__U51",2),("a__U52",1),("a__U61",3),("a__U62",2),("a__isNat",1),("a__isNatIList",1),("a__isNatList",1),("a__length",1),("a__zeros",0),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U11(tt) -> tt,a__U21(tt) -> tt,a__U31(tt) -> tt,a__U41(tt,V2) -> a__U42(a__isNatIList(V2)),a__U42(tt) -> tt,a__U51(tt,V2) -> a__U52(a__isNatList(V2)),a__U52(tt) -> tt,a__U61(tt,L,N) -> a__U62(a__isNat(N),L),a__U62(tt,L) -> s(a__length(mark(L))),a__isNat(0) -> tt,a__isNat(length(V1)) -> a__U11(a__isNatList(V1)),a__isNat(s(V1)) -> a__U21(a__isNat(V1)),a__isNatIList(V) -> a__U31(a__isNatList(V)),a__isNatIList(zeros) -> tt,a__isNatIList(cons(V1,V2)) -> a__U41(a__isNat(V1),V2),a__isNatList(nil) -> tt,a__isNatList(cons(V1,V2)) -> a__U51(a__isNat(V1),V2),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U61(a__isNatList(L),L,N),mark(zeros) -> a__zeros,mark(U11(X)) -> a__U11(mark(X)),mark(U21(X)) -> a__U21(mark(X)),mark(U31(X)) -> a__U31(mark(X)),mark(U41(X1,X2)) -> a__U41(mark(X1),X2),mark(U42(X)) -> a__U42(mark(X)),mark(isNatIList(X)) -> a__isNatIList(X),mark(U51(X1,X2)) -> a__U51(mark(X1),X2),mark(U52(X)) -> a__U52(mark(X)),mark(isNatList(X)) -> a__isNatList(X),mark(U61(X1,X2,X3)) -> a__U61(mark(X1),X2,X3),mark(U62(X1,X2)) -> a__U62(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(length(X)) -> a__length(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U11(X) -> U11(X),a__U21(X) -> U21(X),a__U31(X) -> U31(X),a__U41(X1,X2) -> U41(X1,X2),a__U42(X) -> U42(X),a__isNatIList(X) -> isNatIList(X),a__U51(X1,X2) -> U51(X1,X2),a__U52(X) -> U52(X),a__isNatList(X) -> isNatList(X),a__U61(X1,X2,X3) -> U61(X1,X2,X3),a__U62(X1,X2) -> U62(X1,X2),a__isNat(X) -> isNat(X),a__length(X) -> length(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nokinds_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",1),("U21",1),("U31",1),("U41",2),("U42",1),("U51",2),("U52",1),("U61",3),("U62",2),("active",1),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt)) -> mark(tt),active(U21(tt)) -> mark(tt),active(U31(tt)) -> mark(tt),active(U41(tt,V2)) -> mark(U42(isNatIList(V2))),active(U42(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isNatList(V2))),active(U52(tt)) -> mark(tt),active(U61(tt,L,N)) -> mark(U62(isNat(N),L)),active(U62(tt,L)) -> mark(s(length(L))),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatList(V1))),active(isNat(s(V1))) -> mark(U21(isNat(V1))),active(isNatIList(V)) -> mark(U31(isNatList(V))),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(isNat(V1),V2)),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U51(isNat(V1),V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U61(isNatList(L),L,N)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U11(X)) -> U11(active(X)),active(U21(X)) -> U21(active(X)),active(U31(X)) -> U31(active(X)),active(U41(X1,X2)) -> U41(active(X1),X2),active(U42(X)) -> U42(active(X)),active(U51(X1,X2)) -> U51(active(X1),X2),active(U52(X)) -> U52(active(X)),active(U61(X1,X2,X3)) -> U61(active(X1),X2,X3),active(U62(X1,X2)) -> U62(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),U11(mark(X)) -> mark(U11(X)),U21(mark(X)) -> mark(U21(X)),U31(mark(X)) -> mark(U31(X)),U41(mark(X1),X2) -> mark(U41(X1,X2)),U42(mark(X)) -> mark(U42(X)),U51(mark(X1),X2) -> mark(U51(X1,X2)),U52(mark(X)) -> mark(U52(X)),U61(mark(X1),X2,X3) -> mark(U61(X1,X2,X3)),U62(mark(X1),X2) -> mark(U62(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U11(X)) -> U11(proper(X)),proper(tt) -> ok(tt),proper(U21(X)) -> U21(proper(X)),proper(U31(X)) -> U31(proper(X)),proper(U41(X1,X2)) -> U41(proper(X1),proper(X2)),proper(U42(X)) -> U42(proper(X)),proper(isNatIList(X)) -> isNatIList(proper(X)),proper(U51(X1,X2)) -> U51(proper(X1),proper(X2)),proper(U52(X)) -> U52(proper(X)),proper(isNatList(X)) -> isNatList(proper(X)),proper(U61(X1,X2,X3)) -> U61(proper(X1),proper(X2),proper(X3)),proper(U62(X1,X2)) -> U62(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(nil) -> ok(nil),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U11(ok(X)) -> ok(U11(X)),U21(ok(X)) -> ok(U21(X)),U31(ok(X)) -> ok(U31(X)),U41(ok(X1),ok(X2)) -> ok(U41(X1,X2)),U42(ok(X)) -> ok(U42(X)),isNatIList(ok(X)) -> ok(isNatIList(X)),U51(ok(X1),ok(X2)) -> ok(U51(X1,X2)),U52(ok(X)) -> ok(U52(X)),isNatList(ok(X)) -> ok(isNatList(X)),U61(ok(X1),ok(X2),ok(X3)) -> ok(U61(X1,X2,X3)),U62(ok(X1),ok(X2)) -> ok(U62(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nokinds_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,L)) -> mark(s(length(L))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(isNatList(V1)),active(isNat(s(V1))) -> mark(isNat(V1)),active(isNatIList(V)) -> mark(isNatList(V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(and(isNat(V1),isNatList(V2))),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U11(and(isNatList(L),isNat(N)),L)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isNat(X)) -> active(isNat(X)),mark(isNatList(X)) -> active(isNatList(X)),mark(isNatIList(X)) -> active(isNatIList(X)),mark(nil) -> active(nil),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),isNatList(mark(X)) -> isNatList(X),isNatList(active(X)) -> isNatList(X),isNatIList(mark(X)) -> isNatIList(X),isNatIList(active(X)) -> isNatIList(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nokinds_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("a__U11",2),("a__and",2),("a__isNat",1),("a__isNatIList",1),("a__isNatList",1),("a__length",1),("a__zeros",0),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U11(tt,L) -> s(a__length(mark(L))),a__and(tt,X) -> mark(X),a__isNat(0) -> tt,a__isNat(length(V1)) -> a__isNatList(V1),a__isNat(s(V1)) -> a__isNat(V1),a__isNatIList(V) -> a__isNatList(V),a__isNatIList(zeros) -> tt,a__isNatIList(cons(V1,V2)) -> a__and(a__isNat(V1),isNatIList(V2)),a__isNatList(nil) -> tt,a__isNatList(cons(V1,V2)) -> a__and(a__isNat(V1),isNatList(V2)),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U11(a__and(a__isNatList(L),isNat(N)),L),mark(zeros) -> a__zeros,mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNat(X)) -> a__isNat(X),mark(isNatList(X)) -> a__isNatList(X),mark(isNatIList(X)) -> a__isNatIList(X),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U11(X1,X2) -> U11(X1,X2),a__length(X) -> length(X),a__and(X1,X2) -> and(X1,X2),a__isNat(X) -> isNat(X),a__isNatList(X) -> isNatList(X),a__isNatIList(X) -> isNatIList(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_nokinds_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,L)) -> mark(s(length(L))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(isNatList(V1)),active(isNat(s(V1))) -> mark(isNat(V1)),active(isNatIList(V)) -> mark(isNatList(V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(and(isNat(V1),isNatList(V2))),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U11(and(isNatList(L),isNat(N)),L)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U11(X1,X2)) -> U11(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),active(and(X1,X2)) -> and(active(X1),X2),cons(mark(X1),X2) -> mark(cons(X1,X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isNat(X)) -> isNat(proper(X)),proper(isNatList(X)) -> isNatList(proper(X)),proper(isNatIList(X)) -> isNatIList(proper(X)),proper(nil) -> ok(nil),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNat(ok(X)) -> ok(isNat(X)),isNatList(ok(X)) -> ok(isNatList(X)),isNatIList(ok(X)) -> ok(isNatIList(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_complete_noand_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("U13",1),("U21",2),("U22",2),("U23",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",2),("U52",1),("U61",1),("U71",1),("U81",3),("U82",3),("U83",3),("U84",3),("U85",2),("U86",1),("U91",3),("U92",3),("U93",3),("U94",2),("active",1),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,V1)) -> mark(U12(isNatIListKind(V1),V1)),active(U12(tt,V1)) -> mark(U13(isNatList(V1))),active(U13(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNatKind(V1),V1)),active(U22(tt,V1)) -> mark(U23(isNat(V1))),active(U23(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isNatIListKind(V),V)),active(U32(tt,V)) -> mark(U33(isNatList(V))),active(U33(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isNatKind(V1),V1,V2)),active(U42(tt,V1,V2)) -> mark(U43(isNatIListKind(V2),V1,V2)),active(U43(tt,V1,V2)) -> mark(U44(isNatIListKind(V2),V1,V2)),active(U44(tt,V1,V2)) -> mark(U45(isNat(V1),V2)),active(U45(tt,V2)) -> mark(U46(isNatIList(V2))),active(U46(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isNatIListKind(V2))),active(U52(tt)) -> mark(tt),active(U61(tt)) -> mark(tt),active(U71(tt)) -> mark(tt),active(U81(tt,V1,V2)) -> mark(U82(isNatKind(V1),V1,V2)),active(U82(tt,V1,V2)) -> mark(U83(isNatIListKind(V2),V1,V2)),active(U83(tt,V1,V2)) -> mark(U84(isNatIListKind(V2),V1,V2)),active(U84(tt,V1,V2)) -> mark(U85(isNat(V1),V2)),active(U85(tt,V2)) -> mark(U86(isNatList(V2))),active(U86(tt)) -> mark(tt),active(U91(tt,L,N)) -> mark(U92(isNatIListKind(L),L,N)),active(U92(tt,L,N)) -> mark(U93(isNat(N),L,N)),active(U93(tt,L,N)) -> mark(U94(isNatKind(N),L)),active(U94(tt,L)) -> mark(s(length(L))),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(isNatKind(V1),V1,V2)),active(isNatIListKind(nil)) -> mark(tt),active(isNatIListKind(zeros)) -> mark(tt),active(isNatIListKind(cons(V1,V2))) -> mark(U51(isNatKind(V1),V2)),active(isNatKind(0)) -> mark(tt),active(isNatKind(length(V1))) -> mark(U61(isNatIListKind(V1))),active(isNatKind(s(V1))) -> mark(U71(isNatKind(V1))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U81(isNatKind(V1),V1,V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U91(isNatList(L),L,N)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U12(X1,X2)) -> active(U12(mark(X1),X2)),mark(isNatIListKind(X)) -> active(isNatIListKind(X)),mark(U13(X)) -> active(U13(mark(X))),mark(isNatList(X)) -> active(isNatList(X)),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X1,X2)) -> active(U22(mark(X1),X2)),mark(isNatKind(X)) -> active(isNatKind(X)),mark(U23(X)) -> active(U23(mark(X))),mark(isNat(X)) -> active(isNat(X)),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U32(X1,X2)) -> active(U32(mark(X1),X2)),mark(U33(X)) -> active(U33(mark(X))),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2,X3)) -> active(U42(mark(X1),X2,X3)),mark(U43(X1,X2,X3)) -> active(U43(mark(X1),X2,X3)),mark(U44(X1,X2,X3)) -> active(U44(mark(X1),X2,X3)),mark(U45(X1,X2)) -> active(U45(mark(X1),X2)),mark(U46(X)) -> active(U46(mark(X))),mark(isNatIList(X)) -> active(isNatIList(X)),mark(U51(X1,X2)) -> active(U51(mark(X1),X2)),mark(U52(X)) -> active(U52(mark(X))),mark(U61(X)) -> active(U61(mark(X))),mark(U71(X)) -> active(U71(mark(X))),mark(U81(X1,X2,X3)) -> active(U81(mark(X1),X2,X3)),mark(U82(X1,X2,X3)) -> active(U82(mark(X1),X2,X3)),mark(U83(X1,X2,X3)) -> active(U83(mark(X1),X2,X3)),mark(U84(X1,X2,X3)) -> active(U84(mark(X1),X2,X3)),mark(U85(X1,X2)) -> active(U85(mark(X1),X2)),mark(U86(X)) -> active(U86(mark(X))),mark(U91(X1,X2,X3)) -> active(U91(mark(X1),X2,X3)),mark(U92(X1,X2,X3)) -> active(U92(mark(X1),X2,X3)),mark(U93(X1,X2,X3)) -> active(U93(mark(X1),X2,X3)),mark(U94(X1,X2)) -> active(U94(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(nil) -> active(nil),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X1),X2) -> U12(X1,X2),U12(X1,mark(X2)) -> U12(X1,X2),U12(active(X1),X2) -> U12(X1,X2),U12(X1,active(X2)) -> U12(X1,X2),isNatIListKind(mark(X)) -> isNatIListKind(X),isNatIListKind(active(X)) -> isNatIListKind(X),U13(mark(X)) -> U13(X),U13(active(X)) -> U13(X),isNatList(mark(X)) -> isNatList(X),isNatList(active(X)) -> isNatList(X),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X1),X2) -> U22(X1,X2),U22(X1,mark(X2)) -> U22(X1,X2),U22(active(X1),X2) -> U22(X1,X2),U22(X1,active(X2)) -> U22(X1,X2),isNatKind(mark(X)) -> isNatKind(X),isNatKind(active(X)) -> isNatKind(X),U23(mark(X)) -> U23(X),U23(active(X)) -> U23(X),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U32(mark(X1),X2) -> U32(X1,X2),U32(X1,mark(X2)) -> U32(X1,X2),U32(active(X1),X2) -> U32(X1,X2),U32(X1,active(X2)) -> U32(X1,X2),U33(mark(X)) -> U33(X),U33(active(X)) -> U33(X),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,mark(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,mark(X3)) -> U42(X1,X2,X3),U42(active(X1),X2,X3) -> U42(X1,X2,X3),U42(X1,active(X2),X3) -> U42(X1,X2,X3),U42(X1,X2,active(X3)) -> U42(X1,X2,X3),U43(mark(X1),X2,X3) -> U43(X1,X2,X3),U43(X1,mark(X2),X3) -> U43(X1,X2,X3),U43(X1,X2,mark(X3)) -> U43(X1,X2,X3),U43(active(X1),X2,X3) -> U43(X1,X2,X3),U43(X1,active(X2),X3) -> U43(X1,X2,X3),U43(X1,X2,active(X3)) -> U43(X1,X2,X3),U44(mark(X1),X2,X3) -> U44(X1,X2,X3),U44(X1,mark(X2),X3) -> U44(X1,X2,X3),U44(X1,X2,mark(X3)) -> U44(X1,X2,X3),U44(active(X1),X2,X3) -> U44(X1,X2,X3),U44(X1,active(X2),X3) -> U44(X1,X2,X3),U44(X1,X2,active(X3)) -> U44(X1,X2,X3),U45(mark(X1),X2) -> U45(X1,X2),U45(X1,mark(X2)) -> U45(X1,X2),U45(active(X1),X2) -> U45(X1,X2),U45(X1,active(X2)) -> U45(X1,X2),U46(mark(X)) -> U46(X),U46(active(X)) -> U46(X),isNatIList(mark(X)) -> isNatIList(X),isNatIList(active(X)) -> isNatIList(X),U51(mark(X1),X2) -> U51(X1,X2),U51(X1,mark(X2)) -> U51(X1,X2),U51(active(X1),X2) -> U51(X1,X2),U51(X1,active(X2)) -> U51(X1,X2),U52(mark(X)) -> U52(X),U52(active(X)) -> U52(X),U61(mark(X)) -> U61(X),U61(active(X)) -> U61(X),U71(mark(X)) -> U71(X),U71(active(X)) -> U71(X),U81(mark(X1),X2,X3) -> U81(X1,X2,X3),U81(X1,mark(X2),X3) -> U81(X1,X2,X3),U81(X1,X2,mark(X3)) -> U81(X1,X2,X3),U81(active(X1),X2,X3) -> U81(X1,X2,X3),U81(X1,active(X2),X3) -> U81(X1,X2,X3),U81(X1,X2,active(X3)) -> U81(X1,X2,X3),U82(mark(X1),X2,X3) -> U82(X1,X2,X3),U82(X1,mark(X2),X3) -> U82(X1,X2,X3),U82(X1,X2,mark(X3)) -> U82(X1,X2,X3),U82(active(X1),X2,X3) -> U82(X1,X2,X3),U82(X1,active(X2),X3) -> U82(X1,X2,X3),U82(X1,X2,active(X3)) -> U82(X1,X2,X3),U83(mark(X1),X2,X3) -> U83(X1,X2,X3),U83(X1,mark(X2),X3) -> U83(X1,X2,X3),U83(X1,X2,mark(X3)) -> U83(X1,X2,X3),U83(active(X1),X2,X3) -> U83(X1,X2,X3),U83(X1,active(X2),X3) -> U83(X1,X2,X3),U83(X1,X2,active(X3)) -> U83(X1,X2,X3),U84(mark(X1),X2,X3) -> U84(X1,X2,X3),U84(X1,mark(X2),X3) -> U84(X1,X2,X3),U84(X1,X2,mark(X3)) -> U84(X1,X2,X3),U84(active(X1),X2,X3) -> U84(X1,X2,X3),U84(X1,active(X2),X3) -> U84(X1,X2,X3),U84(X1,X2,active(X3)) -> U84(X1,X2,X3),U85(mark(X1),X2) -> U85(X1,X2),U85(X1,mark(X2)) -> U85(X1,X2),U85(active(X1),X2) -> U85(X1,X2),U85(X1,active(X2)) -> U85(X1,X2),U86(mark(X)) -> U86(X),U86(active(X)) -> U86(X),U91(mark(X1),X2,X3) -> U91(X1,X2,X3),U91(X1,mark(X2),X3) -> U91(X1,X2,X3),U91(X1,X2,mark(X3)) -> U91(X1,X2,X3),U91(active(X1),X2,X3) -> U91(X1,X2,X3),U91(X1,active(X2),X3) -> U91(X1,X2,X3),U91(X1,X2,active(X3)) -> U91(X1,X2,X3),U92(mark(X1),X2,X3) -> U92(X1,X2,X3),U92(X1,mark(X2),X3) -> U92(X1,X2,X3),U92(X1,X2,mark(X3)) -> U92(X1,X2,X3),U92(active(X1),X2,X3) -> U92(X1,X2,X3),U92(X1,active(X2),X3) -> U92(X1,X2,X3),U92(X1,X2,active(X3)) -> U92(X1,X2,X3),U93(mark(X1),X2,X3) -> U93(X1,X2,X3),U93(X1,mark(X2),X3) -> U93(X1,X2,X3),U93(X1,X2,mark(X3)) -> U93(X1,X2,X3),U93(active(X1),X2,X3) -> U93(X1,X2,X3),U93(X1,active(X2),X3) -> U93(X1,X2,X3),U93(X1,X2,active(X3)) -> U93(X1,X2,X3),U94(mark(X1),X2) -> U94(X1,X2),U94(X1,mark(X2)) -> U94(X1,X2),U94(active(X1),X2) -> U94(X1,X2),U94(X1,active(X2)) -> U94(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_complete_noand_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("U13",1),("U21",2),("U22",2),("U23",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",2),("U52",1),("U61",1),("U71",1),("U81",3),("U82",3),("U83",3),("U84",3),("U85",2),("U86",1),("U91",3),("U92",3),("U93",3),("U94",2),("a__U11",2),("a__U12",2),("a__U13",1),("a__U21",2),("a__U22",2),("a__U23",1),("a__U31",2),("a__U32",2),("a__U33",1),("a__U41",3),("a__U42",3),("a__U43",3),("a__U44",3),("a__U45",2),("a__U46",1),("a__U51",2),("a__U52",1),("a__U61",1),("a__U71",1),("a__U81",3),("a__U82",3),("a__U83",3),("a__U84",3),("a__U85",2),("a__U86",1),("a__U91",3),("a__U92",3),("a__U93",3),("a__U94",2),("a__isNat",1),("a__isNatIList",1),("a__isNatIListKind",1),("a__isNatKind",1),("a__isNatList",1),("a__length",1),("a__zeros",0),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U11(tt,V1) -> a__U12(a__isNatIListKind(V1),V1),a__U12(tt,V1) -> a__U13(a__isNatList(V1)),a__U13(tt) -> tt,a__U21(tt,V1) -> a__U22(a__isNatKind(V1),V1),a__U22(tt,V1) -> a__U23(a__isNat(V1)),a__U23(tt) -> tt,a__U31(tt,V) -> a__U32(a__isNatIListKind(V),V),a__U32(tt,V) -> a__U33(a__isNatList(V)),a__U33(tt) -> tt,a__U41(tt,V1,V2) -> a__U42(a__isNatKind(V1),V1,V2),a__U42(tt,V1,V2) -> a__U43(a__isNatIListKind(V2),V1,V2),a__U43(tt,V1,V2) -> a__U44(a__isNatIListKind(V2),V1,V2),a__U44(tt,V1,V2) -> a__U45(a__isNat(V1),V2),a__U45(tt,V2) -> a__U46(a__isNatIList(V2)),a__U46(tt) -> tt,a__U51(tt,V2) -> a__U52(a__isNatIListKind(V2)),a__U52(tt) -> tt,a__U61(tt) -> tt,a__U71(tt) -> tt,a__U81(tt,V1,V2) -> a__U82(a__isNatKind(V1),V1,V2),a__U82(tt,V1,V2) -> a__U83(a__isNatIListKind(V2),V1,V2),a__U83(tt,V1,V2) -> a__U84(a__isNatIListKind(V2),V1,V2),a__U84(tt,V1,V2) -> a__U85(a__isNat(V1),V2),a__U85(tt,V2) -> a__U86(a__isNatList(V2)),a__U86(tt) -> tt,a__U91(tt,L,N) -> a__U92(a__isNatIListKind(L),L,N),a__U92(tt,L,N) -> a__U93(a__isNat(N),L,N),a__U93(tt,L,N) -> a__U94(a__isNatKind(N),L),a__U94(tt,L) -> s(a__length(mark(L))),a__isNat(0) -> tt,a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1),V1),a__isNat(s(V1)) -> a__U21(a__isNatKind(V1),V1),a__isNatIList(V) -> a__U31(a__isNatIListKind(V),V),a__isNatIList(zeros) -> tt,a__isNatIList(cons(V1,V2)) -> a__U41(a__isNatKind(V1),V1,V2),a__isNatIListKind(nil) -> tt,a__isNatIListKind(zeros) -> tt,a__isNatIListKind(cons(V1,V2)) -> a__U51(a__isNatKind(V1),V2),a__isNatKind(0) -> tt,a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1)),a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1)),a__isNatList(nil) -> tt,a__isNatList(cons(V1,V2)) -> a__U81(a__isNatKind(V1),V1,V2),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U91(a__isNatList(L),L,N),mark(zeros) -> a__zeros,mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X1,X2)) -> a__U12(mark(X1),X2),mark(isNatIListKind(X)) -> a__isNatIListKind(X),mark(U13(X)) -> a__U13(mark(X)),mark(isNatList(X)) -> a__isNatList(X),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X1,X2)) -> a__U22(mark(X1),X2),mark(isNatKind(X)) -> a__isNatKind(X),mark(U23(X)) -> a__U23(mark(X)),mark(isNat(X)) -> a__isNat(X),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U32(X1,X2)) -> a__U32(mark(X1),X2),mark(U33(X)) -> a__U33(mark(X)),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2,X3)) -> a__U42(mark(X1),X2,X3),mark(U43(X1,X2,X3)) -> a__U43(mark(X1),X2,X3),mark(U44(X1,X2,X3)) -> a__U44(mark(X1),X2,X3),mark(U45(X1,X2)) -> a__U45(mark(X1),X2),mark(U46(X)) -> a__U46(mark(X)),mark(isNatIList(X)) -> a__isNatIList(X),mark(U51(X1,X2)) -> a__U51(mark(X1),X2),mark(U52(X)) -> a__U52(mark(X)),mark(U61(X)) -> a__U61(mark(X)),mark(U71(X)) -> a__U71(mark(X)),mark(U81(X1,X2,X3)) -> a__U81(mark(X1),X2,X3),mark(U82(X1,X2,X3)) -> a__U82(mark(X1),X2,X3),mark(U83(X1,X2,X3)) -> a__U83(mark(X1),X2,X3),mark(U84(X1,X2,X3)) -> a__U84(mark(X1),X2,X3),mark(U85(X1,X2)) -> a__U85(mark(X1),X2),mark(U86(X)) -> a__U86(mark(X)),mark(U91(X1,X2,X3)) -> a__U91(mark(X1),X2,X3),mark(U92(X1,X2,X3)) -> a__U92(mark(X1),X2,X3),mark(U93(X1,X2,X3)) -> a__U93(mark(X1),X2,X3),mark(U94(X1,X2)) -> a__U94(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U11(X1,X2) -> U11(X1,X2),a__U12(X1,X2) -> U12(X1,X2),a__isNatIListKind(X) -> isNatIListKind(X),a__U13(X) -> U13(X),a__isNatList(X) -> isNatList(X),a__U21(X1,X2) -> U21(X1,X2),a__U22(X1,X2) -> U22(X1,X2),a__isNatKind(X) -> isNatKind(X),a__U23(X) -> U23(X),a__isNat(X) -> isNat(X),a__U31(X1,X2) -> U31(X1,X2),a__U32(X1,X2) -> U32(X1,X2),a__U33(X) -> U33(X),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2,X3) -> U42(X1,X2,X3),a__U43(X1,X2,X3) -> U43(X1,X2,X3),a__U44(X1,X2,X3) -> U44(X1,X2,X3),a__U45(X1,X2) -> U45(X1,X2),a__U46(X) -> U46(X),a__isNatIList(X) -> isNatIList(X),a__U51(X1,X2) -> U51(X1,X2),a__U52(X) -> U52(X),a__U61(X) -> U61(X),a__U71(X) -> U71(X),a__U81(X1,X2,X3) -> U81(X1,X2,X3),a__U82(X1,X2,X3) -> U82(X1,X2,X3),a__U83(X1,X2,X3) -> U83(X1,X2,X3),a__U84(X1,X2,X3) -> U84(X1,X2,X3),a__U85(X1,X2) -> U85(X1,X2),a__U86(X) -> U86(X),a__U91(X1,X2,X3) -> U91(X1,X2,X3),a__U92(X1,X2,X3) -> U92(X1,X2,X3),a__U93(X1,X2,X3) -> U93(X1,X2,X3),a__U94(X1,X2) -> U94(X1,X2),a__length(X) -> length(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_complete_noand_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",2),("U13",1),("U21",2),("U22",2),("U23",1),("U31",2),("U32",2),("U33",1),("U41",3),("U42",3),("U43",3),("U44",3),("U45",2),("U46",1),("U51",2),("U52",1),("U61",1),("U71",1),("U81",3),("U82",3),("U83",3),("U84",3),("U85",2),("U86",1),("U91",3),("U92",3),("U93",3),("U94",2),("active",1),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,V1)) -> mark(U12(isNatIListKind(V1),V1)),active(U12(tt,V1)) -> mark(U13(isNatList(V1))),active(U13(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNatKind(V1),V1)),active(U22(tt,V1)) -> mark(U23(isNat(V1))),active(U23(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isNatIListKind(V),V)),active(U32(tt,V)) -> mark(U33(isNatList(V))),active(U33(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isNatKind(V1),V1,V2)),active(U42(tt,V1,V2)) -> mark(U43(isNatIListKind(V2),V1,V2)),active(U43(tt,V1,V2)) -> mark(U44(isNatIListKind(V2),V1,V2)),active(U44(tt,V1,V2)) -> mark(U45(isNat(V1),V2)),active(U45(tt,V2)) -> mark(U46(isNatIList(V2))),active(U46(tt)) -> mark(tt),active(U51(tt,V2)) -> mark(U52(isNatIListKind(V2))),active(U52(tt)) -> mark(tt),active(U61(tt)) -> mark(tt),active(U71(tt)) -> mark(tt),active(U81(tt,V1,V2)) -> mark(U82(isNatKind(V1),V1,V2)),active(U82(tt,V1,V2)) -> mark(U83(isNatIListKind(V2),V1,V2)),active(U83(tt,V1,V2)) -> mark(U84(isNatIListKind(V2),V1,V2)),active(U84(tt,V1,V2)) -> mark(U85(isNat(V1),V2)),active(U85(tt,V2)) -> mark(U86(isNatList(V2))),active(U86(tt)) -> mark(tt),active(U91(tt,L,N)) -> mark(U92(isNatIListKind(L),L,N)),active(U92(tt,L,N)) -> mark(U93(isNat(N),L,N)),active(U93(tt,L,N)) -> mark(U94(isNatKind(N),L)),active(U94(tt,L)) -> mark(s(length(L))),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(isNatKind(V1),V1,V2)),active(isNatIListKind(nil)) -> mark(tt),active(isNatIListKind(zeros)) -> mark(tt),active(isNatIListKind(cons(V1,V2))) -> mark(U51(isNatKind(V1),V2)),active(isNatKind(0)) -> mark(tt),active(isNatKind(length(V1))) -> mark(U61(isNatIListKind(V1))),active(isNatKind(s(V1))) -> mark(U71(isNatKind(V1))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U81(isNatKind(V1),V1,V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U91(isNatList(L),L,N)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X1,X2)) -> U12(active(X1),X2),active(U13(X)) -> U13(active(X)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X1,X2)) -> U22(active(X1),X2),active(U23(X)) -> U23(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U32(X1,X2)) -> U32(active(X1),X2),active(U33(X)) -> U33(active(X)),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2,X3)) -> U42(active(X1),X2,X3),active(U43(X1,X2,X3)) -> U43(active(X1),X2,X3),active(U44(X1,X2,X3)) -> U44(active(X1),X2,X3),active(U45(X1,X2)) -> U45(active(X1),X2),active(U46(X)) -> U46(active(X)),active(U51(X1,X2)) -> U51(active(X1),X2),active(U52(X)) -> U52(active(X)),active(U61(X)) -> U61(active(X)),active(U71(X)) -> U71(active(X)),active(U81(X1,X2,X3)) -> U81(active(X1),X2,X3),active(U82(X1,X2,X3)) -> U82(active(X1),X2,X3),active(U83(X1,X2,X3)) -> U83(active(X1),X2,X3),active(U84(X1,X2,X3)) -> U84(active(X1),X2,X3),active(U85(X1,X2)) -> U85(active(X1),X2),active(U86(X)) -> U86(active(X)),active(U91(X1,X2,X3)) -> U91(active(X1),X2,X3),active(U92(X1,X2,X3)) -> U92(active(X1),X2,X3),active(U93(X1,X2,X3)) -> U93(active(X1),X2,X3),active(U94(X1,X2)) -> U94(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X1),X2) -> mark(U12(X1,X2)),U13(mark(X)) -> mark(U13(X)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X1),X2) -> mark(U22(X1,X2)),U23(mark(X)) -> mark(U23(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U32(mark(X1),X2) -> mark(U32(X1,X2)),U33(mark(X)) -> mark(U33(X)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2,X3) -> mark(U42(X1,X2,X3)),U43(mark(X1),X2,X3) -> mark(U43(X1,X2,X3)),U44(mark(X1),X2,X3) -> mark(U44(X1,X2,X3)),U45(mark(X1),X2) -> mark(U45(X1,X2)),U46(mark(X)) -> mark(U46(X)),U51(mark(X1),X2) -> mark(U51(X1,X2)),U52(mark(X)) -> mark(U52(X)),U61(mark(X)) -> mark(U61(X)),U71(mark(X)) -> mark(U71(X)),U81(mark(X1),X2,X3) -> mark(U81(X1,X2,X3)),U82(mark(X1),X2,X3) -> mark(U82(X1,X2,X3)),U83(mark(X1),X2,X3) -> mark(U83(X1,X2,X3)),U84(mark(X1),X2,X3) -> mark(U84(X1,X2,X3)),U85(mark(X1),X2) -> mark(U85(X1,X2)),U86(mark(X)) -> mark(U86(X)),U91(mark(X1),X2,X3) -> mark(U91(X1,X2,X3)),U92(mark(X1),X2,X3) -> mark(U92(X1,X2,X3)),U93(mark(X1),X2,X3) -> mark(U93(X1,X2,X3)),U94(mark(X1),X2) -> mark(U94(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U12(X1,X2)) -> U12(proper(X1),proper(X2)),proper(isNatIListKind(X)) -> isNatIListKind(proper(X)),proper(U13(X)) -> U13(proper(X)),proper(isNatList(X)) -> isNatList(proper(X)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X1,X2)) -> U22(proper(X1),proper(X2)),proper(isNatKind(X)) -> isNatKind(proper(X)),proper(U23(X)) -> U23(proper(X)),proper(isNat(X)) -> isNat(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U32(X1,X2)) -> U32(proper(X1),proper(X2)),proper(U33(X)) -> U33(proper(X)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2,X3)) -> U42(proper(X1),proper(X2),proper(X3)),proper(U43(X1,X2,X3)) -> U43(proper(X1),proper(X2),proper(X3)),proper(U44(X1,X2,X3)) -> U44(proper(X1),proper(X2),proper(X3)),proper(U45(X1,X2)) -> U45(proper(X1),proper(X2)),proper(U46(X)) -> U46(proper(X)),proper(isNatIList(X)) -> isNatIList(proper(X)),proper(U51(X1,X2)) -> U51(proper(X1),proper(X2)),proper(U52(X)) -> U52(proper(X)),proper(U61(X)) -> U61(proper(X)),proper(U71(X)) -> U71(proper(X)),proper(U81(X1,X2,X3)) -> U81(proper(X1),proper(X2),proper(X3)),proper(U82(X1,X2,X3)) -> U82(proper(X1),proper(X2),proper(X3)),proper(U83(X1,X2,X3)) -> U83(proper(X1),proper(X2),proper(X3)),proper(U84(X1,X2,X3)) -> U84(proper(X1),proper(X2),proper(X3)),proper(U85(X1,X2)) -> U85(proper(X1),proper(X2)),proper(U86(X)) -> U86(proper(X)),proper(U91(X1,X2,X3)) -> U91(proper(X1),proper(X2),proper(X3)),proper(U92(X1,X2,X3)) -> U92(proper(X1),proper(X2),proper(X3)),proper(U93(X1,X2,X3)) -> U93(proper(X1),proper(X2),proper(X3)),proper(U94(X1,X2)) -> U94(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(nil) -> ok(nil),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X1),ok(X2)) -> ok(U12(X1,X2)),isNatIListKind(ok(X)) -> ok(isNatIListKind(X)),U13(ok(X)) -> ok(U13(X)),isNatList(ok(X)) -> ok(isNatList(X)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X1),ok(X2)) -> ok(U22(X1,X2)),isNatKind(ok(X)) -> ok(isNatKind(X)),U23(ok(X)) -> ok(U23(X)),isNat(ok(X)) -> ok(isNat(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U32(ok(X1),ok(X2)) -> ok(U32(X1,X2)),U33(ok(X)) -> ok(U33(X)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2),ok(X3)) -> ok(U42(X1,X2,X3)),U43(ok(X1),ok(X2),ok(X3)) -> ok(U43(X1,X2,X3)),U44(ok(X1),ok(X2),ok(X3)) -> ok(U44(X1,X2,X3)),U45(ok(X1),ok(X2)) -> ok(U45(X1,X2)),U46(ok(X)) -> ok(U46(X)),isNatIList(ok(X)) -> ok(isNatIList(X)),U51(ok(X1),ok(X2)) -> ok(U51(X1,X2)),U52(ok(X)) -> ok(U52(X)),U61(ok(X)) -> ok(U61(X)),U71(ok(X)) -> ok(U71(X)),U81(ok(X1),ok(X2),ok(X3)) -> ok(U81(X1,X2,X3)),U82(ok(X1),ok(X2),ok(X3)) -> ok(U82(X1,X2,X3)),U83(ok(X1),ok(X2),ok(X3)) -> ok(U83(X1,X2,X3)),U84(ok(X1),ok(X2),ok(X3)) -> ok(U84(X1,X2,X3)),U85(ok(X1),ok(X2)) -> ok(U85(X1,X2)),U86(ok(X)) -> ok(U86(X)),U91(ok(X1),ok(X2),ok(X3)) -> ok(U91(X1,X2,X3)),U92(ok(X1),ok(X2),ok(X3)) -> ok(U92(X1,X2,X3)),U93(ok(X1),ok(X2),ok(X3)) -> ok(U93(X1,X2,X3)),U94(ok(X1),ok(X2)) -> ok(U94(X1,X2)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_complete_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",2),("U22",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,V1)) -> mark(U12(isNatList(V1))),active(U12(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNat(V1))),active(U22(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isNatList(V))),active(U32(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isNat(V1),V2)),active(U42(tt,V2)) -> mark(U43(isNatIList(V2))),active(U43(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNat(V1),V2)),active(U52(tt,V2)) -> mark(U53(isNatList(V2))),active(U53(tt)) -> mark(tt),active(U61(tt,L)) -> mark(s(length(L))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(isNatIListKind(nil)) -> mark(tt),active(isNatIListKind(zeros)) -> mark(tt),active(isNatIListKind(cons(V1,V2))) -> mark(and(isNatKind(V1),isNatIListKind(V2))),active(isNatKind(0)) -> mark(tt),active(isNatKind(length(V1))) -> mark(isNatIListKind(V1)),active(isNatKind(s(V1))) -> mark(isNatKind(V1)),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U61(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L)),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(U11(X1,X2)) -> active(U11(mark(X1),X2)),mark(tt) -> active(tt),mark(U12(X)) -> active(U12(mark(X))),mark(isNatList(X)) -> active(isNatList(X)),mark(U21(X1,X2)) -> active(U21(mark(X1),X2)),mark(U22(X)) -> active(U22(mark(X))),mark(isNat(X)) -> active(isNat(X)),mark(U31(X1,X2)) -> active(U31(mark(X1),X2)),mark(U32(X)) -> active(U32(mark(X))),mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3)),mark(U42(X1,X2)) -> active(U42(mark(X1),X2)),mark(U43(X)) -> active(U43(mark(X))),mark(isNatIList(X)) -> active(isNatIList(X)),mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3)),mark(U52(X1,X2)) -> active(U52(mark(X1),X2)),mark(U53(X)) -> active(U53(mark(X))),mark(U61(X1,X2)) -> active(U61(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(isNatIListKind(X)) -> active(isNatIListKind(X)),mark(isNatKind(X)) -> active(isNatKind(X)),mark(nil) -> active(nil),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),U11(mark(X1),X2) -> U11(X1,X2),U11(X1,mark(X2)) -> U11(X1,X2),U11(active(X1),X2) -> U11(X1,X2),U11(X1,active(X2)) -> U11(X1,X2),U12(mark(X)) -> U12(X),U12(active(X)) -> U12(X),isNatList(mark(X)) -> isNatList(X),isNatList(active(X)) -> isNatList(X),U21(mark(X1),X2) -> U21(X1,X2),U21(X1,mark(X2)) -> U21(X1,X2),U21(active(X1),X2) -> U21(X1,X2),U21(X1,active(X2)) -> U21(X1,X2),U22(mark(X)) -> U22(X),U22(active(X)) -> U22(X),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),U31(mark(X1),X2) -> U31(X1,X2),U31(X1,mark(X2)) -> U31(X1,X2),U31(active(X1),X2) -> U31(X1,X2),U31(X1,active(X2)) -> U31(X1,X2),U32(mark(X)) -> U32(X),U32(active(X)) -> U32(X),U41(mark(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,mark(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,mark(X3)) -> U41(X1,X2,X3),U41(active(X1),X2,X3) -> U41(X1,X2,X3),U41(X1,active(X2),X3) -> U41(X1,X2,X3),U41(X1,X2,active(X3)) -> U41(X1,X2,X3),U42(mark(X1),X2) -> U42(X1,X2),U42(X1,mark(X2)) -> U42(X1,X2),U42(active(X1),X2) -> U42(X1,X2),U42(X1,active(X2)) -> U42(X1,X2),U43(mark(X)) -> U43(X),U43(active(X)) -> U43(X),isNatIList(mark(X)) -> isNatIList(X),isNatIList(active(X)) -> isNatIList(X),U51(mark(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,mark(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,mark(X3)) -> U51(X1,X2,X3),U51(active(X1),X2,X3) -> U51(X1,X2,X3),U51(X1,active(X2),X3) -> U51(X1,X2,X3),U51(X1,X2,active(X3)) -> U51(X1,X2,X3),U52(mark(X1),X2) -> U52(X1,X2),U52(X1,mark(X2)) -> U52(X1,X2),U52(active(X1),X2) -> U52(X1,X2),U52(X1,active(X2)) -> U52(X1,X2),U53(mark(X)) -> U53(X),U53(active(X)) -> U53(X),U61(mark(X1),X2) -> U61(X1,X2),U61(X1,mark(X2)) -> U61(X1,X2),U61(active(X1),X2) -> U61(X1,X2),U61(X1,active(X2)) -> U61(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNatIListKind(mark(X)) -> isNatIListKind(X),isNatIListKind(active(X)) -> isNatIListKind(X),isNatKind(mark(X)) -> isNatKind(X),isNatKind(active(X)) -> isNatKind(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_complete_GM.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",2),("U22",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("a__U11",2),("a__U12",1),("a__U21",2),("a__U22",1),("a__U31",2),("a__U32",1),("a__U41",3),("a__U42",2),("a__U43",1),("a__U51",3),("a__U52",2),("a__U53",1),("a__U61",2),("a__and",2),("a__isNat",1),("a__isNatIList",1),("a__isNatIListKind",1),("a__isNatKind",1),("a__isNatList",1),("a__length",1),("a__zeros",0),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__U11(tt,V1) -> a__U12(a__isNatList(V1)),a__U12(tt) -> tt,a__U21(tt,V1) -> a__U22(a__isNat(V1)),a__U22(tt) -> tt,a__U31(tt,V) -> a__U32(a__isNatList(V)),a__U32(tt) -> tt,a__U41(tt,V1,V2) -> a__U42(a__isNat(V1),V2),a__U42(tt,V2) -> a__U43(a__isNatIList(V2)),a__U43(tt) -> tt,a__U51(tt,V1,V2) -> a__U52(a__isNat(V1),V2),a__U52(tt,V2) -> a__U53(a__isNatList(V2)),a__U53(tt) -> tt,a__U61(tt,L) -> s(a__length(mark(L))),a__and(tt,X) -> mark(X),a__isNat(0) -> tt,a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1),V1),a__isNat(s(V1)) -> a__U21(a__isNatKind(V1),V1),a__isNatIList(V) -> a__U31(a__isNatIListKind(V),V),a__isNatIList(zeros) -> tt,a__isNatIList(cons(V1,V2)) -> a__U41(a__and(a__isNatKind(V1),isNatIListKind(V2)),V1,V2),a__isNatIListKind(nil) -> tt,a__isNatIListKind(zeros) -> tt,a__isNatIListKind(cons(V1,V2)) -> a__and(a__isNatKind(V1),isNatIListKind(V2)),a__isNatKind(0) -> tt,a__isNatKind(length(V1)) -> a__isNatIListKind(V1),a__isNatKind(s(V1)) -> a__isNatKind(V1),a__isNatList(nil) -> tt,a__isNatList(cons(V1,V2)) -> a__U51(a__and(a__isNatKind(V1),isNatIListKind(V2)),V1,V2),a__length(nil) -> 0,a__length(cons(N,L)) -> a__U61(a__and(a__and(a__isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L),mark(zeros) -> a__zeros,mark(U11(X1,X2)) -> a__U11(mark(X1),X2),mark(U12(X)) -> a__U12(mark(X)),mark(isNatList(X)) -> a__isNatList(X),mark(U21(X1,X2)) -> a__U21(mark(X1),X2),mark(U22(X)) -> a__U22(mark(X)),mark(isNat(X)) -> a__isNat(X),mark(U31(X1,X2)) -> a__U31(mark(X1),X2),mark(U32(X)) -> a__U32(mark(X)),mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3),mark(U42(X1,X2)) -> a__U42(mark(X1),X2),mark(U43(X)) -> a__U43(mark(X)),mark(isNatIList(X)) -> a__isNatIList(X),mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3),mark(U52(X1,X2)) -> a__U52(mark(X1),X2),mark(U53(X)) -> a__U53(mark(X)),mark(U61(X1,X2)) -> a__U61(mark(X1),X2),mark(length(X)) -> a__length(mark(X)),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(isNatIListKind(X)) -> a__isNatIListKind(X),mark(isNatKind(X)) -> a__isNatKind(X),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(tt) -> tt,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,a__zeros -> zeros,a__U11(X1,X2) -> U11(X1,X2),a__U12(X) -> U12(X),a__isNatList(X) -> isNatList(X),a__U21(X1,X2) -> U21(X1,X2),a__U22(X) -> U22(X),a__isNat(X) -> isNat(X),a__U31(X1,X2) -> U31(X1,X2),a__U32(X) -> U32(X),a__U41(X1,X2,X3) -> U41(X1,X2,X3),a__U42(X1,X2) -> U42(X1,X2),a__U43(X) -> U43(X),a__isNatIList(X) -> isNatIList(X),a__U51(X1,X2,X3) -> U51(X1,X2,X3),a__U52(X1,X2) -> U52(X1,X2),a__U53(X) -> U53(X),a__U61(X1,X2) -> U61(X1,X2),a__length(X) -> length(X),a__and(X1,X2) -> and(X1,X2),a__isNatIListKind(X) -> isNatIListKind(X),a__isNatKind(X) -> isNatKind(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\LengthOfFiniteLists_complete_C.xml" :
TRS {trsSignature = fromList [("0",0),("U11",2),("U12",1),("U21",2),("U22",1),("U31",2),("U32",1),("U41",3),("U42",2),("U43",1),("U51",3),("U52",2),("U53",1),("U61",2),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatIListKind",1),("isNatKind",1),("isNatList",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1),("tt",0),("zeros",0)], trsVariables = fromList ["L","N","V","V1","V2","X","X1","X2","X3"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(U11(tt,V1)) -> mark(U12(isNatList(V1))),active(U12(tt)) -> mark(tt),active(U21(tt,V1)) -> mark(U22(isNat(V1))),active(U22(tt)) -> mark(tt),active(U31(tt,V)) -> mark(U32(isNatList(V))),active(U32(tt)) -> mark(tt),active(U41(tt,V1,V2)) -> mark(U42(isNat(V1),V2)),active(U42(tt,V2)) -> mark(U43(isNatIList(V2))),active(U43(tt)) -> mark(tt),active(U51(tt,V1,V2)) -> mark(U52(isNat(V1),V2)),active(U52(tt,V2)) -> mark(U53(isNatList(V2))),active(U53(tt)) -> mark(tt),active(U61(tt,L)) -> mark(s(length(L))),active(and(tt,X)) -> mark(X),active(isNat(0)) -> mark(tt),active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1)),active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1)),active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(V1,V2))) -> mark(U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(isNatIListKind(nil)) -> mark(tt),active(isNatIListKind(zeros)) -> mark(tt),active(isNatIListKind(cons(V1,V2))) -> mark(and(isNatKind(V1),isNatIListKind(V2))),active(isNatKind(0)) -> mark(tt),active(isNatKind(length(V1))) -> mark(isNatIListKind(V1)),active(isNatKind(s(V1))) -> mark(isNatKind(V1)),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(V1,V2))) -> mark(U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)),active(length(nil)) -> mark(0),active(length(cons(N,L))) -> mark(U61(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L)),active(cons(X1,X2)) -> cons(active(X1),X2),active(U11(X1,X2)) -> U11(active(X1),X2),active(U12(X)) -> U12(active(X)),active(U21(X1,X2)) -> U21(active(X1),X2),active(U22(X)) -> U22(active(X)),active(U31(X1,X2)) -> U31(active(X1),X2),active(U32(X)) -> U32(active(X)),active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3),active(U42(X1,X2)) -> U42(active(X1),X2),active(U43(X)) -> U43(active(X)),active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3),active(U52(X1,X2)) -> U52(active(X1),X2),active(U53(X)) -> U53(active(X)),active(U61(X1,X2)) -> U61(active(X1),X2),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),active(and(X1,X2)) -> and(active(X1),X2),cons(mark(X1),X2) -> mark(cons(X1,X2)),U11(mark(X1),X2) -> mark(U11(X1,X2)),U12(mark(X)) -> mark(U12(X)),U21(mark(X1),X2) -> mark(U21(X1,X2)),U22(mark(X)) -> mark(U22(X)),U31(mark(X1),X2) -> mark(U31(X1,X2)),U32(mark(X)) -> mark(U32(X)),U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3)),U42(mark(X1),X2) -> mark(U42(X1,X2)),U43(mark(X)) -> mark(U43(X)),U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3)),U52(mark(X1),X2) -> mark(U52(X1,X2)),U53(mark(X)) -> mark(U53(X)),U61(mark(X1),X2) -> mark(U61(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),and(mark(X1),X2) -> mark(and(X1,X2)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(U11(X1,X2)) -> U11(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(U12(X)) -> U12(proper(X)),proper(isNatList(X)) -> isNatList(proper(X)),proper(U21(X1,X2)) -> U21(proper(X1),proper(X2)),proper(U22(X)) -> U22(proper(X)),proper(isNat(X)) -> isNat(proper(X)),proper(U31(X1,X2)) -> U31(proper(X1),proper(X2)),proper(U32(X)) -> U32(proper(X)),proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3)),proper(U42(X1,X2)) -> U42(proper(X1),proper(X2)),proper(U43(X)) -> U43(proper(X)),proper(isNatIList(X)) -> isNatIList(proper(X)),proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3)),proper(U52(X1,X2)) -> U52(proper(X1),proper(X2)),proper(U53(X)) -> U53(proper(X)),proper(U61(X1,X2)) -> U61(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(isNatIListKind(X)) -> isNatIListKind(proper(X)),proper(isNatKind(X)) -> isNatKind(proper(X)),proper(nil) -> ok(nil),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),U11(ok(X1),ok(X2)) -> ok(U11(X1,X2)),U12(ok(X)) -> ok(U12(X)),isNatList(ok(X)) -> ok(isNatList(X)),U21(ok(X1),ok(X2)) -> ok(U21(X1,X2)),U22(ok(X)) -> ok(U22(X)),isNat(ok(X)) -> ok(isNat(X)),U31(ok(X1),ok(X2)) -> ok(U31(X1,X2)),U32(ok(X)) -> ok(U32(X)),U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3)),U42(ok(X1),ok(X2)) -> ok(U42(X1,X2)),U43(ok(X)) -> ok(U43(X)),isNatIList(ok(X)) -> ok(isNatIList(X)),U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3)),U52(ok(X1),ok(X2)) -> ok(U52(X1,X2)),U53(ok(X)) -> ok(U53(X)),U61(ok(X1),ok(X2)) -> ok(U61(X1,X2)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNatIListKind(ok(X)) -> ok(isNatIListKind(X)),isNatKind(ok(X)) -> ok(isNatKind(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExSec4_2_DLMMU04_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("afterNth",2),("cons",2),("fst",1),("head",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("u",4)], trsVariables = fromList ["N","X","X1","X2","X3","X4","XS","YS","ZS"], trsRMap = [], trsRules = [active(natsFrom(N)) -> mark(cons(N,natsFrom(s(N)))),active(fst(pair(XS,YS))) -> mark(XS),active(snd(pair(XS,YS))) -> mark(YS),active(splitAt(0,XS)) -> mark(pair(nil,XS)),active(splitAt(s(N),cons(X,XS))) -> mark(u(splitAt(N,XS),N,X,XS)),active(u(pair(YS,ZS),N,X,XS)) -> mark(pair(cons(X,YS),ZS)),active(head(cons(N,XS))) -> mark(N),active(tail(cons(N,XS))) -> mark(XS),active(sel(N,XS)) -> mark(head(afterNth(N,XS))),active(take(N,XS)) -> mark(fst(splitAt(N,XS))),active(afterNth(N,XS)) -> mark(snd(splitAt(N,XS))),mark(natsFrom(X)) -> active(natsFrom(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(fst(X)) -> active(fst(mark(X))),mark(pair(X1,X2)) -> active(pair(mark(X1),mark(X2))),mark(snd(X)) -> active(snd(mark(X))),mark(splitAt(X1,X2)) -> active(splitAt(mark(X1),mark(X2))),mark(0) -> active(0),mark(nil) -> active(nil),mark(u(X1,X2,X3,X4)) -> active(u(mark(X1),X2,X3,X4)),mark(head(X)) -> active(head(mark(X))),mark(tail(X)) -> active(tail(mark(X))),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),mark(afterNth(X1,X2)) -> active(afterNth(mark(X1),mark(X2))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),natsFrom(mark(X)) -> natsFrom(X),natsFrom(active(X)) -> natsFrom(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),fst(mark(X)) -> fst(X),fst(active(X)) -> fst(X),pair(mark(X1),X2) -> pair(X1,X2),pair(X1,mark(X2)) -> pair(X1,X2),pair(active(X1),X2) -> pair(X1,X2),pair(X1,active(X2)) -> pair(X1,X2),snd(mark(X)) -> snd(X),snd(active(X)) -> snd(X),splitAt(mark(X1),X2) -> splitAt(X1,X2),splitAt(X1,mark(X2)) -> splitAt(X1,X2),splitAt(active(X1),X2) -> splitAt(X1,X2),splitAt(X1,active(X2)) -> splitAt(X1,X2),u(mark(X1),X2,X3,X4) -> u(X1,X2,X3,X4),u(X1,mark(X2),X3,X4) -> u(X1,X2,X3,X4),u(X1,X2,mark(X3),X4) -> u(X1,X2,X3,X4),u(X1,X2,X3,mark(X4)) -> u(X1,X2,X3,X4),u(active(X1),X2,X3,X4) -> u(X1,X2,X3,X4),u(X1,active(X2),X3,X4) -> u(X1,X2,X3,X4),u(X1,X2,active(X3),X4) -> u(X1,X2,X3,X4),u(X1,X2,X3,active(X4)) -> u(X1,X2,X3,X4),head(mark(X)) -> head(X),head(active(X)) -> head(X),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2),afterNth(mark(X1),X2) -> afterNth(X1,X2),afterNth(X1,mark(X2)) -> afterNth(X1,X2),afterNth(active(X1),X2) -> afterNth(X1,X2),afterNth(X1,active(X2)) -> afterNth(X1,X2),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExSec4_2_DLMMU04_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__afterNth",2),("a__fst",1),("a__head",1),("a__natsFrom",1),("a__sel",2),("a__snd",1),("a__splitAt",2),("a__tail",1),("a__take",2),("a__u",4),("afterNth",2),("cons",2),("fst",1),("head",1),("mark",1),("natsFrom",1),("nil",0),("pair",2),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("u",4)], trsVariables = fromList ["N","X","X1","X2","X3","X4","XS","YS","ZS"], trsRMap = [], trsRules = [a__natsFrom(N) -> cons(mark(N),natsFrom(s(N))),a__fst(pair(XS,YS)) -> mark(XS),a__snd(pair(XS,YS)) -> mark(YS),a__splitAt(0,XS) -> pair(nil,mark(XS)),a__splitAt(s(N),cons(X,XS)) -> a__u(a__splitAt(mark(N),mark(XS)),N,X,XS),a__u(pair(YS,ZS),N,X,XS) -> pair(cons(mark(X),YS),mark(ZS)),a__head(cons(N,XS)) -> mark(N),a__tail(cons(N,XS)) -> mark(XS),a__sel(N,XS) -> a__head(a__afterNth(mark(N),mark(XS))),a__take(N,XS) -> a__fst(a__splitAt(mark(N),mark(XS))),a__afterNth(N,XS) -> a__snd(a__splitAt(mark(N),mark(XS))),mark(natsFrom(X)) -> a__natsFrom(mark(X)),mark(fst(X)) -> a__fst(mark(X)),mark(snd(X)) -> a__snd(mark(X)),mark(splitAt(X1,X2)) -> a__splitAt(mark(X1),mark(X2)),mark(u(X1,X2,X3,X4)) -> a__u(mark(X1),X2,X3,X4),mark(head(X)) -> a__head(mark(X)),mark(tail(X)) -> a__tail(mark(X)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(afterNth(X1,X2)) -> a__afterNth(mark(X1),mark(X2)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(pair(X1,X2)) -> pair(mark(X1),mark(X2)),mark(0) -> 0,mark(nil) -> nil,a__natsFrom(X) -> natsFrom(X),a__fst(X) -> fst(X),a__snd(X) -> snd(X),a__splitAt(X1,X2) -> splitAt(X1,X2),a__u(X1,X2,X3,X4) -> u(X1,X2,X3,X4),a__head(X) -> head(X),a__tail(X) -> tail(X),a__sel(X1,X2) -> sel(X1,X2),a__afterNth(X1,X2) -> afterNth(X1,X2),a__take(X1,X2) -> take(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExSec4_2_DLMMU04_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("afterNth",2),("cons",2),("fst",1),("head",1),("mark",1),("natsFrom",1),("nil",0),("ok",1),("pair",2),("proper",1),("s",1),("sel",2),("snd",1),("splitAt",2),("tail",1),("take",2),("top",1),("u",4)], trsVariables = fromList ["N","X","X1","X2","X3","X4","XS","YS","ZS"], trsRMap = [], trsRules = [active(natsFrom(N)) -> mark(cons(N,natsFrom(s(N)))),active(fst(pair(XS,YS))) -> mark(XS),active(snd(pair(XS,YS))) -> mark(YS),active(splitAt(0,XS)) -> mark(pair(nil,XS)),active(splitAt(s(N),cons(X,XS))) -> mark(u(splitAt(N,XS),N,X,XS)),active(u(pair(YS,ZS),N,X,XS)) -> mark(pair(cons(X,YS),ZS)),active(head(cons(N,XS))) -> mark(N),active(tail(cons(N,XS))) -> mark(XS),active(sel(N,XS)) -> mark(head(afterNth(N,XS))),active(take(N,XS)) -> mark(fst(splitAt(N,XS))),active(afterNth(N,XS)) -> mark(snd(splitAt(N,XS))),active(natsFrom(X)) -> natsFrom(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(fst(X)) -> fst(active(X)),active(pair(X1,X2)) -> pair(active(X1),X2),active(pair(X1,X2)) -> pair(X1,active(X2)),active(snd(X)) -> snd(active(X)),active(splitAt(X1,X2)) -> splitAt(active(X1),X2),active(splitAt(X1,X2)) -> splitAt(X1,active(X2)),active(u(X1,X2,X3,X4)) -> u(active(X1),X2,X3,X4),active(head(X)) -> head(active(X)),active(tail(X)) -> tail(active(X)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),active(afterNth(X1,X2)) -> afterNth(active(X1),X2),active(afterNth(X1,X2)) -> afterNth(X1,active(X2)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),natsFrom(mark(X)) -> mark(natsFrom(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),fst(mark(X)) -> mark(fst(X)),pair(mark(X1),X2) -> mark(pair(X1,X2)),pair(X1,mark(X2)) -> mark(pair(X1,X2)),snd(mark(X)) -> mark(snd(X)),splitAt(mark(X1),X2) -> mark(splitAt(X1,X2)),splitAt(X1,mark(X2)) -> mark(splitAt(X1,X2)),u(mark(X1),X2,X3,X4) -> mark(u(X1,X2,X3,X4)),head(mark(X)) -> mark(head(X)),tail(mark(X)) -> mark(tail(X)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),afterNth(mark(X1),X2) -> mark(afterNth(X1,X2)),afterNth(X1,mark(X2)) -> mark(afterNth(X1,X2)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),proper(natsFrom(X)) -> natsFrom(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(fst(X)) -> fst(proper(X)),proper(pair(X1,X2)) -> pair(proper(X1),proper(X2)),proper(snd(X)) -> snd(proper(X)),proper(splitAt(X1,X2)) -> splitAt(proper(X1),proper(X2)),proper(0) -> ok(0),proper(nil) -> ok(nil),proper(u(X1,X2,X3,X4)) -> u(proper(X1),proper(X2),proper(X3),proper(X4)),proper(head(X)) -> head(proper(X)),proper(tail(X)) -> tail(proper(X)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),proper(afterNth(X1,X2)) -> afterNth(proper(X1),proper(X2)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),natsFrom(ok(X)) -> ok(natsFrom(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),fst(ok(X)) -> ok(fst(X)),pair(ok(X1),ok(X2)) -> ok(pair(X1,X2)),snd(ok(X)) -> ok(snd(X)),splitAt(ok(X1),ok(X2)) -> ok(splitAt(X1,X2)),u(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(u(X1,X2,X3,X4)),head(ok(X)) -> ok(head(X)),tail(ok(X)) -> ok(tail(X)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),afterNth(ok(X1),ok(X2)) -> ok(afterNth(X1,X2)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExSec11_1_Luc02a_L.xml" :
TRS {trsSignature = fromList [("0",0),("add",2),("cons",1),("dbl",1),("first",2),("half",1),("nil",0),("recip",1),("s",1),("sqr",1),("terms",1)], trsVariables = fromList ["N","X","Y"], trsRMap = [], trsRules = [terms(N) -> cons(recip(sqr(N))),sqr(0) -> 0,sqr(s(X)) -> s(add(sqr(X),dbl(X))),dbl(0) -> 0,dbl(s(X)) -> s(s(dbl(X))),add(0,X) -> X,add(s(X),Y) -> s(add(X,Y)),first(0,X) -> nil,first(s(X),cons(Y)) -> cons(Y),half(0) -> 0,half(s(0)) -> 0,half(s(s(X))) -> s(half(X)),half(dbl(X)) -> X], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExSec11_1_Luc02a_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("dbl",1),("first",2),("half",1),("mark",1),("nil",0),("recip",1),("s",1),("sqr",1),("terms",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N)))),active(sqr(0)) -> mark(0),active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X)))),active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(half(0)) -> mark(0),active(half(s(0))) -> mark(0),active(half(s(s(X)))) -> mark(s(half(X))),active(half(dbl(X))) -> mark(X),mark(terms(X)) -> active(terms(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(recip(X)) -> active(recip(mark(X))),mark(sqr(X)) -> active(sqr(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(0) -> active(0),mark(add(X1,X2)) -> active(add(mark(X1),mark(X2))),mark(dbl(X)) -> active(dbl(mark(X))),mark(first(X1,X2)) -> active(first(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(half(X)) -> active(half(mark(X))),terms(mark(X)) -> terms(X),terms(active(X)) -> terms(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),recip(mark(X)) -> recip(X),recip(active(X)) -> recip(X),sqr(mark(X)) -> sqr(X),sqr(active(X)) -> sqr(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),add(mark(X1),X2) -> add(X1,X2),add(X1,mark(X2)) -> add(X1,X2),add(active(X1),X2) -> add(X1,X2),add(X1,active(X2)) -> add(X1,X2),dbl(mark(X)) -> dbl(X),dbl(active(X)) -> dbl(X),first(mark(X1),X2) -> first(X1,X2),first(X1,mark(X2)) -> first(X1,X2),first(active(X1),X2) -> first(X1,X2),first(X1,active(X2)) -> first(X1,X2),half(mark(X)) -> half(X),half(active(X)) -> half(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExSec11_1_Luc02a_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__add",2),("a__dbl",1),("a__first",2),("a__half",1),("a__sqr",1),("a__terms",1),("add",2),("cons",2),("dbl",1),("first",2),("half",1),("mark",1),("nil",0),("recip",1),("s",1),("sqr",1),("terms",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__terms(N) -> cons(recip(a__sqr(mark(N))),terms(s(N))),a__sqr(0) -> 0,a__sqr(s(X)) -> s(a__add(a__sqr(mark(X)),a__dbl(mark(X)))),a__dbl(0) -> 0,a__dbl(s(X)) -> s(s(a__dbl(mark(X)))),a__add(0,X) -> mark(X),a__add(s(X),Y) -> s(a__add(mark(X),mark(Y))),a__first(0,X) -> nil,a__first(s(X),cons(Y,Z)) -> cons(mark(Y),first(X,Z)),a__half(0) -> 0,a__half(s(0)) -> 0,a__half(s(s(X))) -> s(a__half(mark(X))),a__half(dbl(X)) -> mark(X),mark(terms(X)) -> a__terms(mark(X)),mark(sqr(X)) -> a__sqr(mark(X)),mark(add(X1,X2)) -> a__add(mark(X1),mark(X2)),mark(dbl(X)) -> a__dbl(mark(X)),mark(first(X1,X2)) -> a__first(mark(X1),mark(X2)),mark(half(X)) -> a__half(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(recip(X)) -> recip(mark(X)),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(nil) -> nil,a__terms(X) -> terms(X),a__sqr(X) -> sqr(X),a__add(X1,X2) -> add(X1,X2),a__dbl(X) -> dbl(X),a__first(X1,X2) -> first(X1,X2),a__half(X) -> half(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExSec11_1_Luc02a_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("dbl",1),("first",2),("half",1),("mark",1),("nil",0),("ok",1),("proper",1),("recip",1),("s",1),("sqr",1),("terms",1),("top",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N)))),active(sqr(0)) -> mark(0),active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X)))),active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(half(0)) -> mark(0),active(half(s(0))) -> mark(0),active(half(s(s(X)))) -> mark(s(half(X))),active(half(dbl(X))) -> mark(X),active(terms(X)) -> terms(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(recip(X)) -> recip(active(X)),active(sqr(X)) -> sqr(active(X)),active(s(X)) -> s(active(X)),active(add(X1,X2)) -> add(active(X1),X2),active(add(X1,X2)) -> add(X1,active(X2)),active(dbl(X)) -> dbl(active(X)),active(first(X1,X2)) -> first(active(X1),X2),active(first(X1,X2)) -> first(X1,active(X2)),active(half(X)) -> half(active(X)),terms(mark(X)) -> mark(terms(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),recip(mark(X)) -> mark(recip(X)),sqr(mark(X)) -> mark(sqr(X)),s(mark(X)) -> mark(s(X)),add(mark(X1),X2) -> mark(add(X1,X2)),add(X1,mark(X2)) -> mark(add(X1,X2)),dbl(mark(X)) -> mark(dbl(X)),first(mark(X1),X2) -> mark(first(X1,X2)),first(X1,mark(X2)) -> mark(first(X1,X2)),half(mark(X)) -> mark(half(X)),proper(terms(X)) -> terms(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(recip(X)) -> recip(proper(X)),proper(sqr(X)) -> sqr(proper(X)),proper(s(X)) -> s(proper(X)),proper(0) -> ok(0),proper(add(X1,X2)) -> add(proper(X1),proper(X2)),proper(dbl(X)) -> dbl(proper(X)),proper(first(X1,X2)) -> first(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(half(X)) -> half(proper(X)),terms(ok(X)) -> ok(terms(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),recip(ok(X)) -> ok(recip(X)),sqr(ok(X)) -> ok(sqr(X)),s(ok(X)) -> ok(s(X)),add(ok(X1),ok(X2)) -> ok(add(X1,X2)),dbl(ok(X)) -> ok(dbl(X)),first(ok(X1),ok(X2)) -> ok(first(X1,X2)),half(ok(X)) -> ok(half(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExProp7_Luc06_L.xml" :
TRS {trsSignature = fromList [("0",0),("cons",1),("f",1),("p",1),("s",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [f(0) -> cons(0),f(s(0)) -> f(p(s(0))),p(s(X)) -> X], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExProp7_Luc06_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("f",1),("mark",1),("p",1),("s",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [active(f(0)) -> mark(cons(0,f(s(0)))),active(f(s(0))) -> mark(f(p(s(0)))),active(p(s(X))) -> mark(X),mark(f(X)) -> active(f(mark(X))),mark(0) -> active(0),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(p(X)) -> active(p(mark(X))),f(mark(X)) -> f(X),f(active(X)) -> f(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),p(mark(X)) -> p(X),p(active(X)) -> p(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExProp7_Luc06_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__f",1),("a__p",1),("cons",2),("f",1),("mark",1),("p",1),("s",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [a__f(0) -> cons(0,f(s(0))),a__f(s(0)) -> a__f(a__p(s(0))),a__p(s(X)) -> mark(X),mark(f(X)) -> a__f(mark(X)),mark(p(X)) -> a__p(mark(X)),mark(0) -> 0,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),a__f(X) -> f(X),a__p(X) -> p(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExProp7_Luc06_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("f",1),("mark",1),("ok",1),("p",1),("proper",1),("s",1),("top",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [active(f(0)) -> mark(cons(0,f(s(0)))),active(f(s(0))) -> mark(f(p(s(0)))),active(p(s(X))) -> mark(X),active(f(X)) -> f(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(p(X)) -> p(active(X)),f(mark(X)) -> mark(f(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),p(mark(X)) -> mark(p(X)),proper(f(X)) -> f(proper(X)),proper(0) -> ok(0),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(p(X)) -> p(proper(X)),f(ok(X)) -> ok(f(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),p(ok(X)) -> ok(p(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_Zan97_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("fact",1),("false",0),("if",3),("mark",1),("p",1),("prod",2),("s",1),("true",0),("zero",1)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(fact(X)) -> mark(if(zero(X),s(0),prod(X,fact(p(X))))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(prod(0,X)) -> mark(0),active(prod(s(X),Y)) -> mark(add(Y,prod(X,Y))),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(zero(0)) -> mark(true),active(zero(s(X))) -> mark(false),active(p(s(X))) -> mark(X),mark(fact(X)) -> active(fact(mark(X))),mark(if(X1,X2,X3)) -> active(if(mark(X1),X2,X3)),mark(zero(X)) -> active(zero(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(0) -> active(0),mark(prod(X1,X2)) -> active(prod(mark(X1),mark(X2))),mark(p(X)) -> active(p(mark(X))),mark(add(X1,X2)) -> active(add(mark(X1),mark(X2))),mark(true) -> active(true),mark(false) -> active(false),fact(mark(X)) -> fact(X),fact(active(X)) -> fact(X),if(mark(X1),X2,X3) -> if(X1,X2,X3),if(X1,mark(X2),X3) -> if(X1,X2,X3),if(X1,X2,mark(X3)) -> if(X1,X2,X3),if(active(X1),X2,X3) -> if(X1,X2,X3),if(X1,active(X2),X3) -> if(X1,X2,X3),if(X1,X2,active(X3)) -> if(X1,X2,X3),zero(mark(X)) -> zero(X),zero(active(X)) -> zero(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),prod(mark(X1),X2) -> prod(X1,X2),prod(X1,mark(X2)) -> prod(X1,X2),prod(active(X1),X2) -> prod(X1,X2),prod(X1,active(X2)) -> prod(X1,X2),p(mark(X)) -> p(X),p(active(X)) -> p(X),add(mark(X1),X2) -> add(X1,X2),add(X1,mark(X2)) -> add(X1,X2),add(active(X1),X2) -> add(X1,X2),add(X1,active(X2)) -> add(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_Zan97_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__add",2),("a__fact",1),("a__if",3),("a__p",1),("a__prod",2),("a__zero",1),("add",2),("fact",1),("false",0),("if",3),("mark",1),("p",1),("prod",2),("s",1),("true",0),("zero",1)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [a__fact(X) -> a__if(a__zero(mark(X)),s(0),prod(X,fact(p(X)))),a__add(0,X) -> mark(X),a__add(s(X),Y) -> s(a__add(mark(X),mark(Y))),a__prod(0,X) -> 0,a__prod(s(X),Y) -> a__add(mark(Y),a__prod(mark(X),mark(Y))),a__if(true,X,Y) -> mark(X),a__if(false,X,Y) -> mark(Y),a__zero(0) -> true,a__zero(s(X)) -> false,a__p(s(X)) -> mark(X),mark(fact(X)) -> a__fact(mark(X)),mark(if(X1,X2,X3)) -> a__if(mark(X1),X2,X3),mark(zero(X)) -> a__zero(mark(X)),mark(prod(X1,X2)) -> a__prod(mark(X1),mark(X2)),mark(p(X)) -> a__p(mark(X)),mark(add(X1,X2)) -> a__add(mark(X1),mark(X2)),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(true) -> true,mark(false) -> false,a__fact(X) -> fact(X),a__if(X1,X2,X3) -> if(X1,X2,X3),a__zero(X) -> zero(X),a__prod(X1,X2) -> prod(X1,X2),a__p(X) -> p(X),a__add(X1,X2) -> add(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_Zan97_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("fact",1),("false",0),("if",3),("mark",1),("ok",1),("p",1),("prod",2),("proper",1),("s",1),("top",1),("true",0),("zero",1)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(fact(X)) -> mark(if(zero(X),s(0),prod(X,fact(p(X))))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(prod(0,X)) -> mark(0),active(prod(s(X),Y)) -> mark(add(Y,prod(X,Y))),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(zero(0)) -> mark(true),active(zero(s(X))) -> mark(false),active(p(s(X))) -> mark(X),active(fact(X)) -> fact(active(X)),active(if(X1,X2,X3)) -> if(active(X1),X2,X3),active(zero(X)) -> zero(active(X)),active(s(X)) -> s(active(X)),active(prod(X1,X2)) -> prod(active(X1),X2),active(prod(X1,X2)) -> prod(X1,active(X2)),active(p(X)) -> p(active(X)),active(add(X1,X2)) -> add(active(X1),X2),active(add(X1,X2)) -> add(X1,active(X2)),fact(mark(X)) -> mark(fact(X)),if(mark(X1),X2,X3) -> mark(if(X1,X2,X3)),zero(mark(X)) -> mark(zero(X)),s(mark(X)) -> mark(s(X)),prod(mark(X1),X2) -> mark(prod(X1,X2)),prod(X1,mark(X2)) -> mark(prod(X1,X2)),p(mark(X)) -> mark(p(X)),add(mark(X1),X2) -> mark(add(X1,X2)),add(X1,mark(X2)) -> mark(add(X1,X2)),proper(fact(X)) -> fact(proper(X)),proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3)),proper(zero(X)) -> zero(proper(X)),proper(s(X)) -> s(proper(X)),proper(0) -> ok(0),proper(prod(X1,X2)) -> prod(proper(X1),proper(X2)),proper(p(X)) -> p(proper(X)),proper(add(X1,X2)) -> add(proper(X1),proper(X2)),proper(true) -> ok(true),proper(false) -> ok(false),fact(ok(X)) -> ok(fact(X)),if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3)),zero(ok(X)) -> ok(zero(X)),s(ok(X)) -> ok(s(X)),prod(ok(X1),ok(X2)) -> ok(prod(X1,X2)),p(ok(X)) -> ok(p(X)),add(ok(X1),ok(X2)) -> ok(add(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_GM99_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("divides",2),("false",0),("filter",2),("from",1),("head",1),("if",3),("mark",1),("primes",0),("s",1),("sieve",1),("tail",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [active(primes) -> mark(sieve(from(s(s(0))))),active(from(X)) -> mark(cons(X,from(s(X)))),active(head(cons(X,Y))) -> mark(X),active(tail(cons(X,Y))) -> mark(Y),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(filter(s(s(X)),cons(Y,Z))) -> mark(if(divides(s(s(X)),Y),filter(s(s(X)),Z),cons(Y,filter(X,sieve(Y))))),active(sieve(cons(X,Y))) -> mark(cons(X,filter(X,sieve(Y)))),mark(primes) -> active(primes),mark(sieve(X)) -> active(sieve(mark(X))),mark(from(X)) -> active(from(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(0) -> active(0),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(head(X)) -> active(head(mark(X))),mark(tail(X)) -> active(tail(mark(X))),mark(if(X1,X2,X3)) -> active(if(mark(X1),X2,X3)),mark(true) -> active(true),mark(false) -> active(false),mark(filter(X1,X2)) -> active(filter(mark(X1),mark(X2))),mark(divides(X1,X2)) -> active(divides(mark(X1),mark(X2))),sieve(mark(X)) -> sieve(X),sieve(active(X)) -> sieve(X),from(mark(X)) -> from(X),from(active(X)) -> from(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),head(mark(X)) -> head(X),head(active(X)) -> head(X),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X),if(mark(X1),X2,X3) -> if(X1,X2,X3),if(X1,mark(X2),X3) -> if(X1,X2,X3),if(X1,X2,mark(X3)) -> if(X1,X2,X3),if(active(X1),X2,X3) -> if(X1,X2,X3),if(X1,active(X2),X3) -> if(X1,X2,X3),if(X1,X2,active(X3)) -> if(X1,X2,X3),filter(mark(X1),X2) -> filter(X1,X2),filter(X1,mark(X2)) -> filter(X1,X2),filter(active(X1),X2) -> filter(X1,X2),filter(X1,active(X2)) -> filter(X1,X2),divides(mark(X1),X2) -> divides(X1,X2),divides(X1,mark(X2)) -> divides(X1,X2),divides(active(X1),X2) -> divides(X1,X2),divides(X1,active(X2)) -> divides(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_GM99_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__filter",2),("a__from",1),("a__head",1),("a__if",3),("a__primes",0),("a__sieve",1),("a__tail",1),("cons",2),("divides",2),("false",0),("filter",2),("from",1),("head",1),("if",3),("mark",1),("primes",0),("s",1),("sieve",1),("tail",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [a__primes -> a__sieve(a__from(s(s(0)))),a__from(X) -> cons(mark(X),from(s(X))),a__head(cons(X,Y)) -> mark(X),a__tail(cons(X,Y)) -> mark(Y),a__if(true,X,Y) -> mark(X),a__if(false,X,Y) -> mark(Y),a__filter(s(s(X)),cons(Y,Z)) -> a__if(divides(s(s(mark(X))),mark(Y)),filter(s(s(X)),Z),cons(Y,filter(X,sieve(Y)))),a__sieve(cons(X,Y)) -> cons(mark(X),filter(X,sieve(Y))),mark(primes) -> a__primes,mark(sieve(X)) -> a__sieve(mark(X)),mark(from(X)) -> a__from(mark(X)),mark(head(X)) -> a__head(mark(X)),mark(tail(X)) -> a__tail(mark(X)),mark(if(X1,X2,X3)) -> a__if(mark(X1),X2,X3),mark(filter(X1,X2)) -> a__filter(mark(X1),mark(X2)),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(true) -> true,mark(false) -> false,mark(divides(X1,X2)) -> divides(mark(X1),mark(X2)),a__primes -> primes,a__sieve(X) -> sieve(X),a__from(X) -> from(X),a__head(X) -> head(X),a__tail(X) -> tail(X),a__if(X1,X2,X3) -> if(X1,X2,X3),a__filter(X1,X2) -> filter(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_GM99_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("divides",2),("false",0),("filter",2),("from",1),("head",1),("if",3),("mark",1),("ok",1),("primes",0),("proper",1),("s",1),("sieve",1),("tail",1),("top",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [active(primes) -> mark(sieve(from(s(s(0))))),active(from(X)) -> mark(cons(X,from(s(X)))),active(head(cons(X,Y))) -> mark(X),active(tail(cons(X,Y))) -> mark(Y),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(filter(s(s(X)),cons(Y,Z))) -> mark(if(divides(s(s(X)),Y),filter(s(s(X)),Z),cons(Y,filter(X,sieve(Y))))),active(sieve(cons(X,Y))) -> mark(cons(X,filter(X,sieve(Y)))),active(sieve(X)) -> sieve(active(X)),active(from(X)) -> from(active(X)),active(s(X)) -> s(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(head(X)) -> head(active(X)),active(tail(X)) -> tail(active(X)),active(if(X1,X2,X3)) -> if(active(X1),X2,X3),active(filter(X1,X2)) -> filter(active(X1),X2),active(filter(X1,X2)) -> filter(X1,active(X2)),active(divides(X1,X2)) -> divides(active(X1),X2),active(divides(X1,X2)) -> divides(X1,active(X2)),sieve(mark(X)) -> mark(sieve(X)),from(mark(X)) -> mark(from(X)),s(mark(X)) -> mark(s(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),head(mark(X)) -> mark(head(X)),tail(mark(X)) -> mark(tail(X)),if(mark(X1),X2,X3) -> mark(if(X1,X2,X3)),filter(mark(X1),X2) -> mark(filter(X1,X2)),filter(X1,mark(X2)) -> mark(filter(X1,X2)),divides(mark(X1),X2) -> mark(divides(X1,X2)),divides(X1,mark(X2)) -> mark(divides(X1,X2)),proper(primes) -> ok(primes),proper(sieve(X)) -> sieve(proper(X)),proper(from(X)) -> from(proper(X)),proper(s(X)) -> s(proper(X)),proper(0) -> ok(0),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(head(X)) -> head(proper(X)),proper(tail(X)) -> tail(proper(X)),proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3)),proper(true) -> ok(true),proper(false) -> ok(false),proper(filter(X1,X2)) -> filter(proper(X1),proper(X2)),proper(divides(X1,X2)) -> divides(proper(X1),proper(X2)),sieve(ok(X)) -> ok(sieve(X)),from(ok(X)) -> ok(from(X)),s(ok(X)) -> ok(s(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),head(ok(X)) -> ok(head(X)),tail(ok(X)) -> ok(tail(X)),if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3)),filter(ok(X1),ok(X2)) -> ok(filter(X1,X2)),divides(ok(X1),ok(X2)) -> ok(divides(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_GM04_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("adx",1),("cons",2),("hd",1),("incr",1),("mark",1),("nats",0),("s",1),("tl",1),("zeros",0)], trsVariables = fromList ["X","X1","X2","Y"], trsRMap = [], trsRules = [active(nats) -> mark(adx(zeros)),active(zeros) -> mark(cons(0,zeros)),active(incr(cons(X,Y))) -> mark(cons(s(X),incr(Y))),active(adx(cons(X,Y))) -> mark(incr(cons(X,adx(Y)))),active(hd(cons(X,Y))) -> mark(X),active(tl(cons(X,Y))) -> mark(Y),mark(nats) -> active(nats),mark(adx(X)) -> active(adx(mark(X))),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(X1,X2)),mark(0) -> active(0),mark(incr(X)) -> active(incr(mark(X))),mark(s(X)) -> active(s(X)),mark(hd(X)) -> active(hd(mark(X))),mark(tl(X)) -> active(tl(mark(X))),adx(mark(X)) -> adx(X),adx(active(X)) -> adx(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),incr(mark(X)) -> incr(X),incr(active(X)) -> incr(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),hd(mark(X)) -> hd(X),hd(active(X)) -> hd(X),tl(mark(X)) -> tl(X),tl(active(X)) -> tl(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_GM04_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__adx",1),("a__hd",1),("a__incr",1),("a__nats",0),("a__tl",1),("a__zeros",0),("adx",1),("cons",2),("hd",1),("incr",1),("mark",1),("nats",0),("s",1),("tl",1),("zeros",0)], trsVariables = fromList ["X","X1","X2","Y"], trsRMap = [], trsRules = [a__nats -> a__adx(a__zeros),a__zeros -> cons(0,zeros),a__incr(cons(X,Y)) -> cons(s(X),incr(Y)),a__adx(cons(X,Y)) -> a__incr(cons(X,adx(Y))),a__hd(cons(X,Y)) -> mark(X),a__tl(cons(X,Y)) -> mark(Y),mark(nats) -> a__nats,mark(adx(X)) -> a__adx(mark(X)),mark(zeros) -> a__zeros,mark(incr(X)) -> a__incr(mark(X)),mark(hd(X)) -> a__hd(mark(X)),mark(tl(X)) -> a__tl(mark(X)),mark(cons(X1,X2)) -> cons(X1,X2),mark(0) -> 0,mark(s(X)) -> s(X),a__nats -> nats,a__adx(X) -> adx(X),a__zeros -> zeros,a__incr(X) -> incr(X),a__hd(X) -> hd(X),a__tl(X) -> tl(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_GM04_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("adx",1),("cons",2),("hd",1),("incr",1),("mark",1),("nats",0),("ok",1),("proper",1),("s",1),("tl",1),("top",1),("zeros",0)], trsVariables = fromList ["X","X1","X2","Y"], trsRMap = [], trsRules = [active(nats) -> mark(adx(zeros)),active(zeros) -> mark(cons(0,zeros)),active(incr(cons(X,Y))) -> mark(cons(s(X),incr(Y))),active(adx(cons(X,Y))) -> mark(incr(cons(X,adx(Y)))),active(hd(cons(X,Y))) -> mark(X),active(tl(cons(X,Y))) -> mark(Y),active(adx(X)) -> adx(active(X)),active(incr(X)) -> incr(active(X)),active(hd(X)) -> hd(active(X)),active(tl(X)) -> tl(active(X)),adx(mark(X)) -> mark(adx(X)),incr(mark(X)) -> mark(incr(X)),hd(mark(X)) -> mark(hd(X)),tl(mark(X)) -> mark(tl(X)),proper(nats) -> ok(nats),proper(adx(X)) -> adx(proper(X)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(incr(X)) -> incr(proper(X)),proper(s(X)) -> s(proper(X)),proper(hd(X)) -> hd(proper(X)),proper(tl(X)) -> tl(proper(X)),adx(ok(X)) -> ok(adx(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),incr(ok(X)) -> ok(incr(X)),s(ok(X)) -> ok(s(X)),hd(ok(X)) -> ok(hd(X)),tl(ok(X)) -> ok(tl(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_GM01_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("adx",1),("cons",2),("head",1),("incr",1),("mark",1),("nats",0),("nil",0),("s",1),("tail",1),("zeros",0)], trsVariables = fromList ["L","X","X1","X2"], trsRMap = [], trsRules = [active(incr(nil)) -> mark(nil),active(incr(cons(X,L))) -> mark(cons(s(X),incr(L))),active(adx(nil)) -> mark(nil),active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L)))),active(nats) -> mark(adx(zeros)),active(zeros) -> mark(cons(0,zeros)),active(head(cons(X,L))) -> mark(X),active(tail(cons(X,L))) -> mark(L),mark(incr(X)) -> active(incr(mark(X))),mark(nil) -> active(nil),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(adx(X)) -> active(adx(mark(X))),mark(nats) -> active(nats),mark(zeros) -> active(zeros),mark(0) -> active(0),mark(head(X)) -> active(head(mark(X))),mark(tail(X)) -> active(tail(mark(X))),incr(mark(X)) -> incr(X),incr(active(X)) -> incr(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),adx(mark(X)) -> adx(X),adx(active(X)) -> adx(X),head(mark(X)) -> head(X),head(active(X)) -> head(X),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_GM01_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__adx",1),("a__head",1),("a__incr",1),("a__nats",0),("a__tail",1),("a__zeros",0),("adx",1),("cons",2),("head",1),("incr",1),("mark",1),("nats",0),("nil",0),("s",1),("tail",1),("zeros",0)], trsVariables = fromList ["L","X","X1","X2"], trsRMap = [], trsRules = [a__incr(nil) -> nil,a__incr(cons(X,L)) -> cons(s(mark(X)),incr(L)),a__adx(nil) -> nil,a__adx(cons(X,L)) -> a__incr(cons(mark(X),adx(L))),a__nats -> a__adx(a__zeros),a__zeros -> cons(0,zeros),a__head(cons(X,L)) -> mark(X),a__tail(cons(X,L)) -> mark(L),mark(incr(X)) -> a__incr(mark(X)),mark(adx(X)) -> a__adx(mark(X)),mark(nats) -> a__nats,mark(zeros) -> a__zeros,mark(head(X)) -> a__head(mark(X)),mark(tail(X)) -> a__tail(mark(X)),mark(nil) -> nil,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__incr(X) -> incr(X),a__adx(X) -> adx(X),a__nats -> nats,a__zeros -> zeros,a__head(X) -> head(X),a__tail(X) -> tail(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExIntrod_GM01_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("adx",1),("cons",2),("head",1),("incr",1),("mark",1),("nats",0),("nil",0),("ok",1),("proper",1),("s",1),("tail",1),("top",1),("zeros",0)], trsVariables = fromList ["L","X","X1","X2"], trsRMap = [], trsRules = [active(incr(nil)) -> mark(nil),active(incr(cons(X,L))) -> mark(cons(s(X),incr(L))),active(adx(nil)) -> mark(nil),active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L)))),active(nats) -> mark(adx(zeros)),active(zeros) -> mark(cons(0,zeros)),active(head(cons(X,L))) -> mark(X),active(tail(cons(X,L))) -> mark(L),active(incr(X)) -> incr(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(adx(X)) -> adx(active(X)),active(head(X)) -> head(active(X)),active(tail(X)) -> tail(active(X)),incr(mark(X)) -> mark(incr(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),adx(mark(X)) -> mark(adx(X)),head(mark(X)) -> mark(head(X)),tail(mark(X)) -> mark(tail(X)),proper(incr(X)) -> incr(proper(X)),proper(nil) -> ok(nil),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(adx(X)) -> adx(proper(X)),proper(nats) -> ok(nats),proper(zeros) -> ok(zeros),proper(0) -> ok(0),proper(head(X)) -> head(proper(X)),proper(tail(X)) -> tail(proper(X)),incr(ok(X)) -> ok(incr(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),adx(ok(X)) -> ok(adx(X)),head(ok(X)) -> ok(head(X)),tail(ok(X)) -> ok(tail(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExConc_Zan97_L.xml" :
TRS {trsSignature = fromList [("f",1),("g",0)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [f(X) -> g], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExConc_Zan97_iGM.xml" :
TRS {trsSignature = fromList [("active",1),("f",1),("g",1),("h",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(X)) -> mark(g(h(f(X)))),mark(f(X)) -> active(f(mark(X))),mark(g(X)) -> active(g(X)),mark(h(X)) -> active(h(mark(X))),f(mark(X)) -> f(X),f(active(X)) -> f(X),g(mark(X)) -> g(X),g(active(X)) -> g(X),h(mark(X)) -> h(X),h(active(X)) -> h(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExConc_Zan97_GM.xml" :
TRS {trsSignature = fromList [("a__f",1),("f",1),("g",1),("h",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [a__f(X) -> g(h(f(X))),mark(f(X)) -> a__f(mark(X)),mark(g(X)) -> g(X),mark(h(X)) -> h(mark(X)),a__f(X) -> f(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExConc_Zan97_C.xml" :
TRS {trsSignature = fromList [("active",1),("f",1),("g",1),("h",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(X)) -> mark(g(h(f(X)))),active(f(X)) -> f(active(X)),active(h(X)) -> h(active(X)),f(mark(X)) -> mark(f(X)),h(mark(X)) -> mark(h(X)),proper(f(X)) -> f(proper(X)),proper(g(X)) -> g(proper(X)),proper(h(X)) -> h(proper(X)),f(ok(X)) -> ok(f(X)),g(ok(X)) -> ok(g(X)),h(ok(X)) -> ok(h(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExAppendixB_AEL03_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("2ndsneg",2),("2ndspos",2),("active",1),("cons",2),("cons2",2),("from",1),("mark",1),("negrecip",1),("pi",1),("plus",2),("posrecip",1),("rcons",2),("rnil",0),("s",1),("square",1),("times",2)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(2ndspos(0,Z)) -> mark(rnil),active(2ndspos(s(N),cons(X,Z))) -> mark(2ndspos(s(N),cons2(X,Z))),active(2ndspos(s(N),cons2(X,cons(Y,Z)))) -> mark(rcons(posrecip(Y),2ndsneg(N,Z))),active(2ndsneg(0,Z)) -> mark(rnil),active(2ndsneg(s(N),cons(X,Z))) -> mark(2ndsneg(s(N),cons2(X,Z))),active(2ndsneg(s(N),cons2(X,cons(Y,Z)))) -> mark(rcons(negrecip(Y),2ndspos(N,Z))),active(pi(X)) -> mark(2ndspos(X,from(0))),active(plus(0,Y)) -> mark(Y),active(plus(s(X),Y)) -> mark(s(plus(X,Y))),active(times(0,Y)) -> mark(0),active(times(s(X),Y)) -> mark(plus(Y,times(X,Y))),active(square(X)) -> mark(times(X,X)),mark(from(X)) -> active(from(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(2ndspos(X1,X2)) -> active(2ndspos(mark(X1),mark(X2))),mark(0) -> active(0),mark(rnil) -> active(rnil),mark(cons2(X1,X2)) -> active(cons2(X1,mark(X2))),mark(rcons(X1,X2)) -> active(rcons(mark(X1),mark(X2))),mark(posrecip(X)) -> active(posrecip(mark(X))),mark(2ndsneg(X1,X2)) -> active(2ndsneg(mark(X1),mark(X2))),mark(negrecip(X)) -> active(negrecip(mark(X))),mark(pi(X)) -> active(pi(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(times(X1,X2)) -> active(times(mark(X1),mark(X2))),mark(square(X)) -> active(square(mark(X))),from(mark(X)) -> from(X),from(active(X)) -> from(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),2ndspos(mark(X1),X2) -> 2ndspos(X1,X2),2ndspos(X1,mark(X2)) -> 2ndspos(X1,X2),2ndspos(active(X1),X2) -> 2ndspos(X1,X2),2ndspos(X1,active(X2)) -> 2ndspos(X1,X2),cons2(mark(X1),X2) -> cons2(X1,X2),cons2(X1,mark(X2)) -> cons2(X1,X2),cons2(active(X1),X2) -> cons2(X1,X2),cons2(X1,active(X2)) -> cons2(X1,X2),rcons(mark(X1),X2) -> rcons(X1,X2),rcons(X1,mark(X2)) -> rcons(X1,X2),rcons(active(X1),X2) -> rcons(X1,X2),rcons(X1,active(X2)) -> rcons(X1,X2),posrecip(mark(X)) -> posrecip(X),posrecip(active(X)) -> posrecip(X),2ndsneg(mark(X1),X2) -> 2ndsneg(X1,X2),2ndsneg(X1,mark(X2)) -> 2ndsneg(X1,X2),2ndsneg(active(X1),X2) -> 2ndsneg(X1,X2),2ndsneg(X1,active(X2)) -> 2ndsneg(X1,X2),negrecip(mark(X)) -> negrecip(X),negrecip(active(X)) -> negrecip(X),pi(mark(X)) -> pi(X),pi(active(X)) -> pi(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),times(mark(X1),X2) -> times(X1,X2),times(X1,mark(X2)) -> times(X1,X2),times(active(X1),X2) -> times(X1,X2),times(X1,active(X2)) -> times(X1,X2),square(mark(X)) -> square(X),square(active(X)) -> square(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExAppendixB_AEL03_GM.xml" :
TRS {trsSignature = fromList [("0",0),("2ndsneg",2),("2ndspos",2),("a__2ndsneg",2),("a__2ndspos",2),("a__from",1),("a__pi",1),("a__plus",2),("a__square",1),("a__times",2),("cons",2),("cons2",2),("from",1),("mark",1),("negrecip",1),("nil",0),("pi",1),("plus",2),("posrecip",1),("rcons",2),("rnil",0),("s",1),("square",1),("times",2)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__from(X) -> cons(mark(X),from(s(X))),a__2ndspos(0,Z) -> rnil,a__2ndspos(s(N),cons(X,Z)) -> a__2ndspos(s(mark(N)),cons2(X,mark(Z))),a__2ndspos(s(N),cons2(X,cons(Y,Z))) -> rcons(posrecip(mark(Y)),a__2ndsneg(mark(N),mark(Z))),a__2ndsneg(0,Z) -> rnil,a__2ndsneg(s(N),cons(X,Z)) -> a__2ndsneg(s(mark(N)),cons2(X,mark(Z))),a__2ndsneg(s(N),cons2(X,cons(Y,Z))) -> rcons(negrecip(mark(Y)),a__2ndspos(mark(N),mark(Z))),a__pi(X) -> a__2ndspos(mark(X),a__from(0)),a__plus(0,Y) -> mark(Y),a__plus(s(X),Y) -> s(a__plus(mark(X),mark(Y))),a__times(0,Y) -> 0,a__times(s(X),Y) -> a__plus(mark(Y),a__times(mark(X),mark(Y))),a__square(X) -> a__times(mark(X),mark(X)),mark(from(X)) -> a__from(mark(X)),mark(2ndspos(X1,X2)) -> a__2ndspos(mark(X1),mark(X2)),mark(2ndsneg(X1,X2)) -> a__2ndsneg(mark(X1),mark(X2)),mark(pi(X)) -> a__pi(mark(X)),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(times(X1,X2)) -> a__times(mark(X1),mark(X2)),mark(square(X)) -> a__square(mark(X)),mark(0) -> 0,mark(s(X)) -> s(mark(X)),mark(posrecip(X)) -> posrecip(mark(X)),mark(negrecip(X)) -> negrecip(mark(X)),mark(nil) -> nil,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(cons2(X1,X2)) -> cons2(X1,mark(X2)),mark(rnil) -> rnil,mark(rcons(X1,X2)) -> rcons(mark(X1),mark(X2)),a__from(X) -> from(X),a__2ndspos(X1,X2) -> 2ndspos(X1,X2),a__2ndsneg(X1,X2) -> 2ndsneg(X1,X2),a__pi(X) -> pi(X),a__plus(X1,X2) -> plus(X1,X2),a__times(X1,X2) -> times(X1,X2),a__square(X) -> square(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\ExAppendixB_AEL03_C.xml" :
TRS {trsSignature = fromList [("0",0),("2ndsneg",2),("2ndspos",2),("active",1),("cons",2),("cons2",2),("from",1),("mark",1),("negrecip",1),("nil",0),("ok",1),("pi",1),("plus",2),("posrecip",1),("proper",1),("rcons",2),("rnil",0),("s",1),("square",1),("times",2),("top",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(2ndspos(0,Z)) -> mark(rnil),active(2ndspos(s(N),cons(X,Z))) -> mark(2ndspos(s(N),cons2(X,Z))),active(2ndspos(s(N),cons2(X,cons(Y,Z)))) -> mark(rcons(posrecip(Y),2ndsneg(N,Z))),active(2ndsneg(0,Z)) -> mark(rnil),active(2ndsneg(s(N),cons(X,Z))) -> mark(2ndsneg(s(N),cons2(X,Z))),active(2ndsneg(s(N),cons2(X,cons(Y,Z)))) -> mark(rcons(negrecip(Y),2ndspos(N,Z))),active(pi(X)) -> mark(2ndspos(X,from(0))),active(plus(0,Y)) -> mark(Y),active(plus(s(X),Y)) -> mark(s(plus(X,Y))),active(times(0,Y)) -> mark(0),active(times(s(X),Y)) -> mark(plus(Y,times(X,Y))),active(square(X)) -> mark(times(X,X)),active(s(X)) -> s(active(X)),active(posrecip(X)) -> posrecip(active(X)),active(negrecip(X)) -> negrecip(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(cons2(X1,X2)) -> cons2(X1,active(X2)),active(rcons(X1,X2)) -> rcons(active(X1),X2),active(rcons(X1,X2)) -> rcons(X1,active(X2)),active(from(X)) -> from(active(X)),active(2ndspos(X1,X2)) -> 2ndspos(active(X1),X2),active(2ndspos(X1,X2)) -> 2ndspos(X1,active(X2)),active(2ndsneg(X1,X2)) -> 2ndsneg(active(X1),X2),active(2ndsneg(X1,X2)) -> 2ndsneg(X1,active(X2)),active(pi(X)) -> pi(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(times(X1,X2)) -> times(active(X1),X2),active(times(X1,X2)) -> times(X1,active(X2)),active(square(X)) -> square(active(X)),s(mark(X)) -> mark(s(X)),posrecip(mark(X)) -> mark(posrecip(X)),negrecip(mark(X)) -> mark(negrecip(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),cons2(X1,mark(X2)) -> mark(cons2(X1,X2)),rcons(mark(X1),X2) -> mark(rcons(X1,X2)),rcons(X1,mark(X2)) -> mark(rcons(X1,X2)),from(mark(X)) -> mark(from(X)),2ndspos(mark(X1),X2) -> mark(2ndspos(X1,X2)),2ndspos(X1,mark(X2)) -> mark(2ndspos(X1,X2)),2ndsneg(mark(X1),X2) -> mark(2ndsneg(X1,X2)),2ndsneg(X1,mark(X2)) -> mark(2ndsneg(X1,X2)),pi(mark(X)) -> mark(pi(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),times(mark(X1),X2) -> mark(times(X1,X2)),times(X1,mark(X2)) -> mark(times(X1,X2)),square(mark(X)) -> mark(square(X)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(posrecip(X)) -> posrecip(proper(X)),proper(negrecip(X)) -> negrecip(proper(X)),proper(nil) -> ok(nil),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(cons2(X1,X2)) -> cons2(proper(X1),proper(X2)),proper(rnil) -> ok(rnil),proper(rcons(X1,X2)) -> rcons(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),proper(2ndspos(X1,X2)) -> 2ndspos(proper(X1),proper(X2)),proper(2ndsneg(X1,X2)) -> 2ndsneg(proper(X1),proper(X2)),proper(pi(X)) -> pi(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(times(X1,X2)) -> times(proper(X1),proper(X2)),proper(square(X)) -> square(proper(X)),s(ok(X)) -> ok(s(X)),posrecip(ok(X)) -> ok(posrecip(X)),negrecip(ok(X)) -> ok(negrecip(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),cons2(ok(X1),ok(X2)) -> ok(cons2(X1,X2)),rcons(ok(X1),ok(X2)) -> ok(rcons(X1,X2)),from(ok(X)) -> ok(from(X)),2ndspos(ok(X1),ok(X2)) -> ok(2ndspos(X1,X2)),2ndsneg(ok(X1),ok(X2)) -> ok(2ndsneg(X1,X2)),pi(ok(X)) -> ok(pi(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),times(ok(X1),ok(X2)) -> ok(times(X1,X2)),square(ok(X)) -> ok(square(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_Luc06_iGM.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("f",3),("mark",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [active(f(a,X,X)) -> mark(f(X,b,b)),active(b) -> mark(a),mark(f(X1,X2,X3)) -> active(f(X1,mark(X2),X3)),mark(a) -> active(a),mark(b) -> active(b),f(mark(X1),X2,X3) -> f(X1,X2,X3),f(X1,mark(X2),X3) -> f(X1,X2,X3),f(X1,X2,mark(X3)) -> f(X1,X2,X3),f(active(X1),X2,X3) -> f(X1,X2,X3),f(X1,active(X2),X3) -> f(X1,X2,X3),f(X1,X2,active(X3)) -> f(X1,X2,X3)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_Luc06_GM.xml" :
TRS {trsSignature = fromList [("a",0),("a__b",0),("a__f",3),("b",0),("f",3),("mark",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [a__f(a,X,X) -> a__f(X,a__b,b),a__b -> a,mark(f(X1,X2,X3)) -> a__f(X1,mark(X2),X3),mark(b) -> a__b,mark(a) -> a,a__f(X1,X2,X3) -> f(X1,X2,X3),a__b -> b], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_Luc06_C.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("f",3),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [active(f(a,X,X)) -> mark(f(X,b,b)),active(b) -> mark(a),active(f(X1,X2,X3)) -> f(X1,active(X2),X3),f(X1,mark(X2),X3) -> mark(f(X1,X2,X3)),proper(f(X1,X2,X3)) -> f(proper(X1),proper(X2),proper(X3)),proper(a) -> ok(a),proper(b) -> ok(b),f(ok(X1),ok(X2),ok(X3)) -> ok(f(X1,X2,X3)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_Luc04_iGM.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("c",0),("f",3),("mark",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [active(f(a,b,X)) -> mark(f(X,X,X)),active(c) -> mark(a),active(c) -> mark(b),mark(f(X1,X2,X3)) -> active(f(mark(X1),X2,mark(X3))),mark(a) -> active(a),mark(b) -> active(b),mark(c) -> active(c),f(mark(X1),X2,X3) -> f(X1,X2,X3),f(X1,mark(X2),X3) -> f(X1,X2,X3),f(X1,X2,mark(X3)) -> f(X1,X2,X3),f(active(X1),X2,X3) -> f(X1,X2,X3),f(X1,active(X2),X3) -> f(X1,X2,X3),f(X1,X2,active(X3)) -> f(X1,X2,X3)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_Luc04_GM.xml" :
TRS {trsSignature = fromList [("a",0),("a__c",0),("a__f",3),("b",0),("c",0),("f",3),("mark",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [a__f(a,b,X) -> a__f(mark(X),X,mark(X)),a__c -> a,a__c -> b,mark(f(X1,X2,X3)) -> a__f(mark(X1),X2,mark(X3)),mark(c) -> a__c,mark(a) -> a,mark(b) -> b,a__f(X1,X2,X3) -> f(X1,X2,X3),a__c -> c], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_Luc04_C.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("c",0),("f",3),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [active(f(a,b,X)) -> mark(f(X,X,X)),active(c) -> mark(a),active(c) -> mark(b),active(f(X1,X2,X3)) -> f(active(X1),X2,X3),active(f(X1,X2,X3)) -> f(X1,X2,active(X3)),f(mark(X1),X2,X3) -> mark(f(X1,X2,X3)),f(X1,X2,mark(X3)) -> mark(f(X1,X2,X3)),proper(f(X1,X2,X3)) -> f(proper(X1),proper(X2),proper(X3)),proper(a) -> ok(a),proper(b) -> ok(b),proper(c) -> ok(c),f(ok(X1),ok(X2),ok(X3)) -> ok(f(X1,X2,X3)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_BLR02_L.xml" :
TRS {trsSignature = fromList [("0",0),("cons",1),("filter",3),("nats",1),("s",1),("sieve",1),("zprimes",0)], trsVariables = fromList ["M","N","X"], trsRMap = [], trsRules = [filter(cons(X),0,M) -> cons(0),filter(cons(X),s(N),M) -> cons(X),sieve(cons(0)) -> cons(0),sieve(cons(s(N))) -> cons(s(N)),nats(N) -> cons(N),zprimes -> sieve(nats(s(s(0))))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_BLR02_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("filter",3),("mark",1),("nats",1),("s",1),("sieve",1),("zprimes",0)], trsVariables = fromList ["M","N","X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(filter(cons(X,Y),0,M)) -> mark(cons(0,filter(Y,M,M))),active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M))),active(sieve(cons(0,Y))) -> mark(cons(0,sieve(Y))),active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N)))),active(nats(N)) -> mark(cons(N,nats(s(N)))),active(zprimes) -> mark(sieve(nats(s(s(0))))),mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(s(X)) -> active(s(mark(X))),mark(sieve(X)) -> active(sieve(mark(X))),mark(nats(X)) -> active(nats(mark(X))),mark(zprimes) -> active(zprimes),filter(mark(X1),X2,X3) -> filter(X1,X2,X3),filter(X1,mark(X2),X3) -> filter(X1,X2,X3),filter(X1,X2,mark(X3)) -> filter(X1,X2,X3),filter(active(X1),X2,X3) -> filter(X1,X2,X3),filter(X1,active(X2),X3) -> filter(X1,X2,X3),filter(X1,X2,active(X3)) -> filter(X1,X2,X3),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),sieve(mark(X)) -> sieve(X),sieve(active(X)) -> sieve(X),nats(mark(X)) -> nats(X),nats(active(X)) -> nats(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_BLR02_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__filter",3),("a__nats",1),("a__sieve",1),("a__zprimes",0),("cons",2),("filter",3),("mark",1),("nats",1),("s",1),("sieve",1),("zprimes",0)], trsVariables = fromList ["M","N","X","X1","X2","X3","Y"], trsRMap = [], trsRules = [a__filter(cons(X,Y),0,M) -> cons(0,filter(Y,M,M)),a__filter(cons(X,Y),s(N),M) -> cons(mark(X),filter(Y,N,M)),a__sieve(cons(0,Y)) -> cons(0,sieve(Y)),a__sieve(cons(s(N),Y)) -> cons(s(mark(N)),sieve(filter(Y,N,N))),a__nats(N) -> cons(mark(N),nats(s(N))),a__zprimes -> a__sieve(a__nats(s(s(0)))),mark(filter(X1,X2,X3)) -> a__filter(mark(X1),mark(X2),mark(X3)),mark(sieve(X)) -> a__sieve(mark(X)),mark(nats(X)) -> a__nats(mark(X)),mark(zprimes) -> a__zprimes,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(s(X)) -> s(mark(X)),a__filter(X1,X2,X3) -> filter(X1,X2,X3),a__sieve(X) -> sieve(X),a__nats(X) -> nats(X),a__zprimes -> zprimes], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex9_BLR02_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("filter",3),("mark",1),("nats",1),("ok",1),("proper",1),("s",1),("sieve",1),("top",1),("zprimes",0)], trsVariables = fromList ["M","N","X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(filter(cons(X,Y),0,M)) -> mark(cons(0,filter(Y,M,M))),active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M))),active(sieve(cons(0,Y))) -> mark(cons(0,sieve(Y))),active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N)))),active(nats(N)) -> mark(cons(N,nats(s(N)))),active(zprimes) -> mark(sieve(nats(s(s(0))))),active(filter(X1,X2,X3)) -> filter(active(X1),X2,X3),active(filter(X1,X2,X3)) -> filter(X1,active(X2),X3),active(filter(X1,X2,X3)) -> filter(X1,X2,active(X3)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(sieve(X)) -> sieve(active(X)),active(nats(X)) -> nats(active(X)),filter(mark(X1),X2,X3) -> mark(filter(X1,X2,X3)),filter(X1,mark(X2),X3) -> mark(filter(X1,X2,X3)),filter(X1,X2,mark(X3)) -> mark(filter(X1,X2,X3)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),sieve(mark(X)) -> mark(sieve(X)),nats(mark(X)) -> mark(nats(X)),proper(filter(X1,X2,X3)) -> filter(proper(X1),proper(X2),proper(X3)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(sieve(X)) -> sieve(proper(X)),proper(nats(X)) -> nats(proper(X)),proper(zprimes) -> ok(zprimes),filter(ok(X1),ok(X2),ok(X3)) -> ok(filter(X1,X2,X3)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),sieve(ok(X)) -> ok(sieve(X)),nats(ok(X)) -> ok(nats(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex8_BLR02_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("fib",1),("fib1",2),("mark",1),("s",1),("sel",2)], trsVariables = fromList ["N","X","X1","X2","XS","Y"], trsRMap = [], trsRules = [active(fib(N)) -> mark(sel(N,fib1(s(0),s(0)))),active(fib1(X,Y)) -> mark(cons(X,fib1(Y,add(X,Y)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(sel(0,cons(X,XS))) -> mark(X),active(sel(s(N),cons(X,XS))) -> mark(sel(N,XS)),mark(fib(X)) -> active(fib(mark(X))),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),mark(fib1(X1,X2)) -> active(fib1(mark(X1),mark(X2))),mark(s(X)) -> active(s(mark(X))),mark(0) -> active(0),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(add(X1,X2)) -> active(add(mark(X1),mark(X2))),fib(mark(X)) -> fib(X),fib(active(X)) -> fib(X),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2),fib1(mark(X1),X2) -> fib1(X1,X2),fib1(X1,mark(X2)) -> fib1(X1,X2),fib1(active(X1),X2) -> fib1(X1,X2),fib1(X1,active(X2)) -> fib1(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),add(mark(X1),X2) -> add(X1,X2),add(X1,mark(X2)) -> add(X1,X2),add(active(X1),X2) -> add(X1,X2),add(X1,active(X2)) -> add(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex8_BLR02_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__add",2),("a__fib",1),("a__fib1",2),("a__sel",2),("add",2),("cons",2),("fib",1),("fib1",2),("mark",1),("s",1),("sel",2)], trsVariables = fromList ["N","X","X1","X2","XS","Y"], trsRMap = [], trsRules = [a__fib(N) -> a__sel(mark(N),a__fib1(s(0),s(0))),a__fib1(X,Y) -> cons(mark(X),fib1(Y,add(X,Y))),a__add(0,X) -> mark(X),a__add(s(X),Y) -> s(a__add(mark(X),mark(Y))),a__sel(0,cons(X,XS)) -> mark(X),a__sel(s(N),cons(X,XS)) -> a__sel(mark(N),mark(XS)),mark(fib(X)) -> a__fib(mark(X)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(fib1(X1,X2)) -> a__fib1(mark(X1),mark(X2)),mark(add(X1,X2)) -> a__add(mark(X1),mark(X2)),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(cons(X1,X2)) -> cons(mark(X1),X2),a__fib(X) -> fib(X),a__sel(X1,X2) -> sel(X1,X2),a__fib1(X1,X2) -> fib1(X1,X2),a__add(X1,X2) -> add(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex8_BLR02_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("fib",1),("fib1",2),("mark",1),("ok",1),("proper",1),("s",1),("sel",2),("top",1)], trsVariables = fromList ["N","X","X1","X2","XS","Y"], trsRMap = [], trsRules = [active(fib(N)) -> mark(sel(N,fib1(s(0),s(0)))),active(fib1(X,Y)) -> mark(cons(X,fib1(Y,add(X,Y)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(sel(0,cons(X,XS))) -> mark(X),active(sel(s(N),cons(X,XS))) -> mark(sel(N,XS)),active(fib(X)) -> fib(active(X)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),active(fib1(X1,X2)) -> fib1(active(X1),X2),active(fib1(X1,X2)) -> fib1(X1,active(X2)),active(s(X)) -> s(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(add(X1,X2)) -> add(active(X1),X2),active(add(X1,X2)) -> add(X1,active(X2)),fib(mark(X)) -> mark(fib(X)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),fib1(mark(X1),X2) -> mark(fib1(X1,X2)),fib1(X1,mark(X2)) -> mark(fib1(X1,X2)),s(mark(X)) -> mark(s(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),add(mark(X1),X2) -> mark(add(X1,X2)),add(X1,mark(X2)) -> mark(add(X1,X2)),proper(fib(X)) -> fib(proper(X)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),proper(fib1(X1,X2)) -> fib1(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(0) -> ok(0),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(add(X1,X2)) -> add(proper(X1),proper(X2)),fib(ok(X)) -> ok(fib(X)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),fib1(ok(X1),ok(X2)) -> ok(fib1(X1,X2)),s(ok(X)) -> ok(s(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),add(ok(X1),ok(X2)) -> ok(add(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex7_BLR02_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("2nd",1),("active",1),("cons",2),("from",1),("head",1),("mark",1),("nil",0),("s",1),("sel",2),("take",2)], trsVariables = fromList ["N","X","X1","X2","XS"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(head(cons(X,XS))) -> mark(X),active(2nd(cons(X,XS))) -> mark(head(XS)),active(take(0,XS)) -> mark(nil),active(take(s(N),cons(X,XS))) -> mark(cons(X,take(N,XS))),active(sel(0,cons(X,XS))) -> mark(X),active(sel(s(N),cons(X,XS))) -> mark(sel(N,XS)),mark(from(X)) -> active(from(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(head(X)) -> active(head(mark(X))),mark(2nd(X)) -> active(2nd(mark(X))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(0) -> active(0),mark(nil) -> active(nil),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),from(mark(X)) -> from(X),from(active(X)) -> from(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),head(mark(X)) -> head(X),head(active(X)) -> head(X),2nd(mark(X)) -> 2nd(X),2nd(active(X)) -> 2nd(X),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex7_BLR02_GM.xml" :
TRS {trsSignature = fromList [("0",0),("2nd",1),("a__2nd",1),("a__from",1),("a__head",1),("a__sel",2),("a__take",2),("cons",2),("from",1),("head",1),("mark",1),("nil",0),("s",1),("sel",2),("take",2)], trsVariables = fromList ["N","X","X1","X2","XS"], trsRMap = [], trsRules = [a__from(X) -> cons(mark(X),from(s(X))),a__head(cons(X,XS)) -> mark(X),a__2nd(cons(X,XS)) -> a__head(mark(XS)),a__take(0,XS) -> nil,a__take(s(N),cons(X,XS)) -> cons(mark(X),take(N,XS)),a__sel(0,cons(X,XS)) -> mark(X),a__sel(s(N),cons(X,XS)) -> a__sel(mark(N),mark(XS)),mark(from(X)) -> a__from(mark(X)),mark(head(X)) -> a__head(mark(X)),mark(2nd(X)) -> a__2nd(mark(X)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(nil) -> nil,a__from(X) -> from(X),a__head(X) -> head(X),a__2nd(X) -> 2nd(X),a__take(X1,X2) -> take(X1,X2),a__sel(X1,X2) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex7_BLR02_C.xml" :
TRS {trsSignature = fromList [("0",0),("2nd",1),("active",1),("cons",2),("from",1),("head",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("sel",2),("take",2),("top",1)], trsVariables = fromList ["N","X","X1","X2","XS"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(head(cons(X,XS))) -> mark(X),active(2nd(cons(X,XS))) -> mark(head(XS)),active(take(0,XS)) -> mark(nil),active(take(s(N),cons(X,XS))) -> mark(cons(X,take(N,XS))),active(sel(0,cons(X,XS))) -> mark(X),active(sel(s(N),cons(X,XS))) -> mark(sel(N,XS)),active(from(X)) -> from(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(head(X)) -> head(active(X)),active(2nd(X)) -> 2nd(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),from(mark(X)) -> mark(from(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),head(mark(X)) -> mark(head(X)),2nd(mark(X)) -> mark(2nd(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),proper(from(X)) -> from(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(head(X)) -> head(proper(X)),proper(2nd(X)) -> 2nd(proper(X)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(0) -> ok(0),proper(nil) -> ok(nil),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),from(ok(X)) -> ok(from(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),head(ok(X)) -> ok(head(X)),2nd(ok(X)) -> ok(2nd(X)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_Luc98_L.xml" :
TRS {trsSignature = fromList [("0",0),("cons",1),("first",2),("from",1),("nil",0),("s",1)], trsVariables = fromList ["X","Y"], trsRMap = [], trsRules = [first(0,X) -> nil,first(s(X),cons(Y)) -> cons(Y),from(X) -> cons(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_Luc98_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("first",2),("from",1),("mark",1),("nil",0),("s",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),mark(first(X1,X2)) -> active(first(mark(X1),mark(X2))),mark(0) -> active(0),mark(nil) -> active(nil),mark(s(X)) -> active(s(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(from(X)) -> active(from(mark(X))),first(mark(X1),X2) -> first(X1,X2),first(X1,mark(X2)) -> first(X1,X2),first(active(X1),X2) -> first(X1,X2),first(X1,active(X2)) -> first(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),from(mark(X)) -> from(X),from(active(X)) -> from(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_Luc98_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__first",2),("a__from",1),("cons",2),("first",2),("from",1),("mark",1),("nil",0),("s",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__first(0,X) -> nil,a__first(s(X),cons(Y,Z)) -> cons(mark(Y),first(X,Z)),a__from(X) -> cons(mark(X),from(s(X))),mark(first(X1,X2)) -> a__first(mark(X1),mark(X2)),mark(from(X)) -> a__from(mark(X)),mark(0) -> 0,mark(nil) -> nil,mark(s(X)) -> s(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),a__first(X1,X2) -> first(X1,X2),a__from(X) -> from(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_Luc98_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("first",2),("from",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),active(first(X1,X2)) -> first(active(X1),X2),active(first(X1,X2)) -> first(X1,active(X2)),active(s(X)) -> s(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(from(X)) -> from(active(X)),first(mark(X1),X2) -> mark(first(X1,X2)),first(X1,mark(X2)) -> mark(first(X1,X2)),s(mark(X)) -> mark(s(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),from(mark(X)) -> mark(from(X)),proper(first(X1,X2)) -> first(proper(X1),proper(X2)),proper(0) -> ok(0),proper(nil) -> ok(nil),proper(s(X)) -> s(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),first(ok(X1),ok(X2)) -> ok(first(X1,X2)),s(ok(X)) -> ok(s(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),from(ok(X)) -> ok(from(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_GM04_iGM.xml" :
TRS {trsSignature = fromList [("active",1),("c",0),("f",1),("g",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(c) -> mark(f(g(c))),active(f(g(X))) -> mark(g(X)),mark(c) -> active(c),mark(f(X)) -> active(f(X)),mark(g(X)) -> active(g(X)),f(mark(X)) -> f(X),f(active(X)) -> f(X),g(mark(X)) -> g(X),g(active(X)) -> g(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_GM04_GM.xml" :
TRS {trsSignature = fromList [("a__c",0),("a__f",1),("c",0),("f",1),("g",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [a__c -> a__f(g(c)),a__f(g(X)) -> g(X),mark(c) -> a__c,mark(f(X)) -> a__f(X),mark(g(X)) -> g(X),a__c -> c,a__f(X) -> f(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_GM04_C.xml" :
TRS {trsSignature = fromList [("active",1),("c",0),("f",1),("g",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(c) -> mark(f(g(c))),active(f(g(X))) -> mark(g(X)),proper(c) -> ok(c),proper(f(X)) -> f(proper(X)),proper(g(X)) -> g(proper(X)),f(ok(X)) -> ok(f(X)),g(ok(X)) -> ok(g(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_9_Luc02c_iGM.xml" :
TRS {trsSignature = fromList [("2nd",1),("active",1),("cons",2),("cons1",2),("from",1),("mark",1),("s",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(2nd(cons1(X,cons(Y,Z)))) -> mark(Y),active(2nd(cons(X,X1))) -> mark(2nd(cons1(X,X1))),active(from(X)) -> mark(cons(X,from(s(X)))),mark(2nd(X)) -> active(2nd(mark(X))),mark(cons1(X1,X2)) -> active(cons1(mark(X1),mark(X2))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(from(X)) -> active(from(mark(X))),mark(s(X)) -> active(s(mark(X))),2nd(mark(X)) -> 2nd(X),2nd(active(X)) -> 2nd(X),cons1(mark(X1),X2) -> cons1(X1,X2),cons1(X1,mark(X2)) -> cons1(X1,X2),cons1(active(X1),X2) -> cons1(X1,X2),cons1(X1,active(X2)) -> cons1(X1,X2),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),from(mark(X)) -> from(X),from(active(X)) -> from(X),s(mark(X)) -> s(X),s(active(X)) -> s(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_9_Luc02c_GM.xml" :
TRS {trsSignature = fromList [("2nd",1),("a__2nd",1),("a__from",1),("cons",2),("cons1",2),("from",1),("mark",1),("s",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__2nd(cons1(X,cons(Y,Z))) -> mark(Y),a__2nd(cons(X,X1)) -> a__2nd(cons1(mark(X),mark(X1))),a__from(X) -> cons(mark(X),from(s(X))),mark(2nd(X)) -> a__2nd(mark(X)),mark(from(X)) -> a__from(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(cons1(X1,X2)) -> cons1(mark(X1),mark(X2)),a__2nd(X) -> 2nd(X),a__from(X) -> from(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_9_Luc02c_C.xml" :
TRS {trsSignature = fromList [("2nd",1),("active",1),("cons",2),("cons1",2),("from",1),("mark",1),("ok",1),("proper",1),("s",1),("top",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(2nd(cons1(X,cons(Y,Z)))) -> mark(Y),active(2nd(cons(X,X1))) -> mark(2nd(cons1(X,X1))),active(from(X)) -> mark(cons(X,from(s(X)))),active(2nd(X)) -> 2nd(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(from(X)) -> from(active(X)),active(s(X)) -> s(active(X)),active(cons1(X1,X2)) -> cons1(active(X1),X2),active(cons1(X1,X2)) -> cons1(X1,active(X2)),2nd(mark(X)) -> mark(2nd(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),from(mark(X)) -> mark(from(X)),s(mark(X)) -> mark(s(X)),cons1(mark(X1),X2) -> mark(cons1(X1,X2)),cons1(X1,mark(X2)) -> mark(cons1(X1,X2)),proper(2nd(X)) -> 2nd(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),proper(s(X)) -> s(proper(X)),proper(cons1(X1,X2)) -> cons1(proper(X1),proper(X2)),2nd(ok(X)) -> ok(2nd(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),from(ok(X)) -> ok(from(X)),s(ok(X)) -> ok(s(X)),cons1(ok(X1),ok(X2)) -> ok(cons1(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_15_AEL02_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("01",0),("active",1),("cons",2),("cons1",2),("fcons",2),("first",2),("first1",2),("from",1),("mark",1),("nil",0),("nil1",0),("quote",1),("quote1",1),("s",1),("s1",1),("sel",2),("sel1",2),("unquote",1),("unquote1",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),active(sel(0,cons(X,Z))) -> mark(X),active(first(0,Z)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),active(sel1(s(X),cons(Y,Z))) -> mark(sel1(X,Z)),active(sel1(0,cons(X,Z))) -> mark(quote(X)),active(first1(0,Z)) -> mark(nil1),active(first1(s(X),cons(Y,Z))) -> mark(cons1(quote(Y),first1(X,Z))),active(quote(0)) -> mark(01),active(quote1(cons(X,Z))) -> mark(cons1(quote(X),quote1(Z))),active(quote1(nil)) -> mark(nil1),active(quote(s(X))) -> mark(s1(quote(X))),active(quote(sel(X,Z))) -> mark(sel1(X,Z)),active(quote1(first(X,Z))) -> mark(first1(X,Z)),active(unquote(01)) -> mark(0),active(unquote(s1(X))) -> mark(s(unquote(X))),active(unquote1(nil1)) -> mark(nil),active(unquote1(cons1(X,Z))) -> mark(fcons(unquote(X),unquote1(Z))),active(fcons(X,Z)) -> mark(cons(X,Z)),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),mark(s(X)) -> active(s(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(first(X1,X2)) -> active(first(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(from(X)) -> active(from(mark(X))),mark(sel1(X1,X2)) -> active(sel1(mark(X1),mark(X2))),mark(quote(X)) -> active(quote(X)),mark(first1(X1,X2)) -> active(first1(mark(X1),mark(X2))),mark(nil1) -> active(nil1),mark(cons1(X1,X2)) -> active(cons1(mark(X1),mark(X2))),mark(01) -> active(01),mark(quote1(X)) -> active(quote1(X)),mark(s1(X)) -> active(s1(mark(X))),mark(unquote(X)) -> active(unquote(mark(X))),mark(unquote1(X)) -> active(unquote1(mark(X))),mark(fcons(X1,X2)) -> active(fcons(mark(X1),mark(X2))),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),first(mark(X1),X2) -> first(X1,X2),first(X1,mark(X2)) -> first(X1,X2),first(active(X1),X2) -> first(X1,X2),first(X1,active(X2)) -> first(X1,X2),from(mark(X)) -> from(X),from(active(X)) -> from(X),sel1(mark(X1),X2) -> sel1(X1,X2),sel1(X1,mark(X2)) -> sel1(X1,X2),sel1(active(X1),X2) -> sel1(X1,X2),sel1(X1,active(X2)) -> sel1(X1,X2),quote(mark(X)) -> quote(X),quote(active(X)) -> quote(X),first1(mark(X1),X2) -> first1(X1,X2),first1(X1,mark(X2)) -> first1(X1,X2),first1(active(X1),X2) -> first1(X1,X2),first1(X1,active(X2)) -> first1(X1,X2),cons1(mark(X1),X2) -> cons1(X1,X2),cons1(X1,mark(X2)) -> cons1(X1,X2),cons1(active(X1),X2) -> cons1(X1,X2),cons1(X1,active(X2)) -> cons1(X1,X2),quote1(mark(X)) -> quote1(X),quote1(active(X)) -> quote1(X),s1(mark(X)) -> s1(X),s1(active(X)) -> s1(X),unquote(mark(X)) -> unquote(X),unquote(active(X)) -> unquote(X),unquote1(mark(X)) -> unquote1(X),unquote1(active(X)) -> unquote1(X),fcons(mark(X1),X2) -> fcons(X1,X2),fcons(X1,mark(X2)) -> fcons(X1,X2),fcons(active(X1),X2) -> fcons(X1,X2),fcons(X1,active(X2)) -> fcons(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_15_AEL02_GM.xml" :
TRS {trsSignature = fromList [("0",0),("01",0),("a__fcons",2),("a__first",2),("a__first1",2),("a__from",1),("a__quote",1),("a__quote1",1),("a__sel",2),("a__sel1",2),("a__unquote",1),("a__unquote1",1),("cons",2),("cons1",2),("fcons",2),("first",2),("first1",2),("from",1),("mark",1),("nil",0),("nil1",0),("quote",1),("quote1",1),("s",1),("s1",1),("sel",2),("sel1",2),("unquote",1),("unquote1",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__sel(s(X),cons(Y,Z)) -> a__sel(mark(X),mark(Z)),a__sel(0,cons(X,Z)) -> mark(X),a__first(0,Z) -> nil,a__first(s(X),cons(Y,Z)) -> cons(mark(Y),first(X,Z)),a__from(X) -> cons(mark(X),from(s(X))),a__sel1(s(X),cons(Y,Z)) -> a__sel1(mark(X),mark(Z)),a__sel1(0,cons(X,Z)) -> a__quote(X),a__first1(0,Z) -> nil1,a__first1(s(X),cons(Y,Z)) -> cons1(a__quote(Y),a__first1(mark(X),mark(Z))),a__quote(0) -> 01,a__quote1(cons(X,Z)) -> cons1(a__quote(X),a__quote1(Z)),a__quote1(nil) -> nil1,a__quote(s(X)) -> s1(a__quote(X)),a__quote(sel(X,Z)) -> a__sel1(mark(X),mark(Z)),a__quote1(first(X,Z)) -> a__first1(mark(X),mark(Z)),a__unquote(01) -> 0,a__unquote(s1(X)) -> s(a__unquote(mark(X))),a__unquote1(nil1) -> nil,a__unquote1(cons1(X,Z)) -> a__fcons(a__unquote(mark(X)),a__unquote1(mark(Z))),a__fcons(X,Z) -> cons(mark(X),Z),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(first(X1,X2)) -> a__first(mark(X1),mark(X2)),mark(from(X)) -> a__from(mark(X)),mark(sel1(X1,X2)) -> a__sel1(mark(X1),mark(X2)),mark(quote(X)) -> a__quote(X),mark(first1(X1,X2)) -> a__first1(mark(X1),mark(X2)),mark(quote1(X)) -> a__quote1(X),mark(unquote(X)) -> a__unquote(mark(X)),mark(unquote1(X)) -> a__unquote1(mark(X)),mark(fcons(X1,X2)) -> a__fcons(mark(X1),mark(X2)),mark(s(X)) -> s(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(nil) -> nil,mark(nil1) -> nil1,mark(cons1(X1,X2)) -> cons1(mark(X1),mark(X2)),mark(01) -> 01,mark(s1(X)) -> s1(mark(X)),a__sel(X1,X2) -> sel(X1,X2),a__first(X1,X2) -> first(X1,X2),a__from(X) -> from(X),a__sel1(X1,X2) -> sel1(X1,X2),a__quote(X) -> quote(X),a__first1(X1,X2) -> first1(X1,X2),a__quote1(X) -> quote1(X),a__unquote(X) -> unquote(X),a__unquote1(X) -> unquote1(X),a__fcons(X1,X2) -> fcons(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex6_15_AEL02_C.xml" :
TRS {trsSignature = fromList [("0",0),("01",0),("active",1),("cons",2),("cons1",2),("fcons",2),("first",2),("first1",2),("from",1),("mark",1),("nil",0),("nil1",0),("ok",1),("proper",1),("quote",1),("quote1",1),("s",1),("s1",1),("sel",2),("sel1",2),("top",1),("unquote",1),("unquote1",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),active(sel(0,cons(X,Z))) -> mark(X),active(first(0,Z)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),active(sel1(s(X),cons(Y,Z))) -> mark(sel1(X,Z)),active(sel1(0,cons(X,Z))) -> mark(quote(X)),active(first1(0,Z)) -> mark(nil1),active(first1(s(X),cons(Y,Z))) -> mark(cons1(quote(Y),first1(X,Z))),active(quote(0)) -> mark(01),active(quote1(cons(X,Z))) -> mark(cons1(quote(X),quote1(Z))),active(quote1(nil)) -> mark(nil1),active(quote(s(X))) -> mark(s1(quote(X))),active(quote(sel(X,Z))) -> mark(sel1(X,Z)),active(quote1(first(X,Z))) -> mark(first1(X,Z)),active(unquote(01)) -> mark(0),active(unquote(s1(X))) -> mark(s(unquote(X))),active(unquote1(nil1)) -> mark(nil),active(unquote1(cons1(X,Z))) -> mark(fcons(unquote(X),unquote1(Z))),active(fcons(X,Z)) -> mark(cons(X,Z)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),active(s(X)) -> s(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(first(X1,X2)) -> first(active(X1),X2),active(first(X1,X2)) -> first(X1,active(X2)),active(from(X)) -> from(active(X)),active(sel1(X1,X2)) -> sel1(active(X1),X2),active(sel1(X1,X2)) -> sel1(X1,active(X2)),active(first1(X1,X2)) -> first1(active(X1),X2),active(first1(X1,X2)) -> first1(X1,active(X2)),active(cons1(X1,X2)) -> cons1(active(X1),X2),active(cons1(X1,X2)) -> cons1(X1,active(X2)),active(s1(X)) -> s1(active(X)),active(unquote(X)) -> unquote(active(X)),active(unquote1(X)) -> unquote1(active(X)),active(fcons(X1,X2)) -> fcons(active(X1),X2),active(fcons(X1,X2)) -> fcons(X1,active(X2)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),s(mark(X)) -> mark(s(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),first(mark(X1),X2) -> mark(first(X1,X2)),first(X1,mark(X2)) -> mark(first(X1,X2)),from(mark(X)) -> mark(from(X)),sel1(mark(X1),X2) -> mark(sel1(X1,X2)),sel1(X1,mark(X2)) -> mark(sel1(X1,X2)),first1(mark(X1),X2) -> mark(first1(X1,X2)),first1(X1,mark(X2)) -> mark(first1(X1,X2)),cons1(mark(X1),X2) -> mark(cons1(X1,X2)),cons1(X1,mark(X2)) -> mark(cons1(X1,X2)),s1(mark(X)) -> mark(s1(X)),unquote(mark(X)) -> mark(unquote(X)),unquote1(mark(X)) -> mark(unquote1(X)),fcons(mark(X1),X2) -> mark(fcons(X1,X2)),fcons(X1,mark(X2)) -> mark(fcons(X1,X2)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(first(X1,X2)) -> first(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(from(X)) -> from(proper(X)),proper(sel1(X1,X2)) -> sel1(proper(X1),proper(X2)),proper(quote(X)) -> quote(proper(X)),proper(first1(X1,X2)) -> first1(proper(X1),proper(X2)),proper(nil1) -> ok(nil1),proper(cons1(X1,X2)) -> cons1(proper(X1),proper(X2)),proper(01) -> ok(01),proper(quote1(X)) -> quote1(proper(X)),proper(s1(X)) -> s1(proper(X)),proper(unquote(X)) -> unquote(proper(X)),proper(unquote1(X)) -> unquote1(proper(X)),proper(fcons(X1,X2)) -> fcons(proper(X1),proper(X2)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),s(ok(X)) -> ok(s(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),first(ok(X1),ok(X2)) -> ok(first(X1,X2)),from(ok(X)) -> ok(from(X)),sel1(ok(X1),ok(X2)) -> ok(sel1(X1,X2)),quote(ok(X)) -> ok(quote(X)),first1(ok(X1),ok(X2)) -> ok(first1(X1,X2)),cons1(ok(X1),ok(X2)) -> ok(cons1(X1,X2)),quote1(ok(X)) -> ok(quote1(X)),s1(ok(X)) -> ok(s1(X)),unquote(ok(X)) -> ok(unquote(X)),unquote1(ok(X)) -> ok(unquote1(X)),fcons(ok(X1),ok(X2)) -> ok(fcons(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex5_Zan97_iGM.xml" :
TRS {trsSignature = fromList [("active",1),("c",0),("f",1),("false",0),("if",3),("mark",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(f(X)) -> mark(if(X,c,f(true))),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),mark(f(X)) -> active(f(mark(X))),mark(if(X1,X2,X3)) -> active(if(mark(X1),mark(X2),X3)),mark(c) -> active(c),mark(true) -> active(true),mark(false) -> active(false),f(mark(X)) -> f(X),f(active(X)) -> f(X),if(mark(X1),X2,X3) -> if(X1,X2,X3),if(X1,mark(X2),X3) -> if(X1,X2,X3),if(X1,X2,mark(X3)) -> if(X1,X2,X3),if(active(X1),X2,X3) -> if(X1,X2,X3),if(X1,active(X2),X3) -> if(X1,X2,X3),if(X1,X2,active(X3)) -> if(X1,X2,X3)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex5_Zan97_GM.xml" :
TRS {trsSignature = fromList [("a__f",1),("a__if",3),("c",0),("f",1),("false",0),("if",3),("mark",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [a__f(X) -> a__if(mark(X),c,f(true)),a__if(true,X,Y) -> mark(X),a__if(false,X,Y) -> mark(Y),mark(f(X)) -> a__f(mark(X)),mark(if(X1,X2,X3)) -> a__if(mark(X1),mark(X2),X3),mark(c) -> c,mark(true) -> true,mark(false) -> false,a__f(X) -> f(X),a__if(X1,X2,X3) -> if(X1,X2,X3)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex5_Zan97_C.xml" :
TRS {trsSignature = fromList [("active",1),("c",0),("f",1),("false",0),("if",3),("mark",1),("ok",1),("proper",1),("top",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(f(X)) -> mark(if(X,c,f(true))),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(f(X)) -> f(active(X)),active(if(X1,X2,X3)) -> if(active(X1),X2,X3),active(if(X1,X2,X3)) -> if(X1,active(X2),X3),f(mark(X)) -> mark(f(X)),if(mark(X1),X2,X3) -> mark(if(X1,X2,X3)),if(X1,mark(X2),X3) -> mark(if(X1,X2,X3)),proper(f(X)) -> f(proper(X)),proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3)),proper(c) -> ok(c),proper(true) -> ok(true),proper(false) -> ok(false),f(ok(X)) -> ok(f(X)),if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex5_DLMMU04_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("incr",1),("mark",1),("nil",0),("oddNs",0),("pair",2),("pairNs",0),("repItems",1),("s",1),("tail",1),("take",2),("zip",2)], trsVariables = fromList ["N","X","X1","X2","XS","Y","YS"], trsRMap = [], trsRules = [active(pairNs) -> mark(cons(0,incr(oddNs))),active(oddNs) -> mark(incr(pairNs)),active(incr(cons(X,XS))) -> mark(cons(s(X),incr(XS))),active(take(0,XS)) -> mark(nil),active(take(s(N),cons(X,XS))) -> mark(cons(X,take(N,XS))),active(zip(nil,XS)) -> mark(nil),active(zip(X,nil)) -> mark(nil),active(zip(cons(X,XS),cons(Y,YS))) -> mark(cons(pair(X,Y),zip(XS,YS))),active(tail(cons(X,XS))) -> mark(XS),active(repItems(nil)) -> mark(nil),active(repItems(cons(X,XS))) -> mark(cons(X,cons(X,repItems(XS)))),mark(pairNs) -> active(pairNs),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(incr(X)) -> active(incr(mark(X))),mark(oddNs) -> active(oddNs),mark(s(X)) -> active(s(mark(X))),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(zip(X1,X2)) -> active(zip(mark(X1),mark(X2))),mark(pair(X1,X2)) -> active(pair(mark(X1),mark(X2))),mark(tail(X)) -> active(tail(mark(X))),mark(repItems(X)) -> active(repItems(mark(X))),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),incr(mark(X)) -> incr(X),incr(active(X)) -> incr(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),zip(mark(X1),X2) -> zip(X1,X2),zip(X1,mark(X2)) -> zip(X1,X2),zip(active(X1),X2) -> zip(X1,X2),zip(X1,active(X2)) -> zip(X1,X2),pair(mark(X1),X2) -> pair(X1,X2),pair(X1,mark(X2)) -> pair(X1,X2),pair(active(X1),X2) -> pair(X1,X2),pair(X1,active(X2)) -> pair(X1,X2),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X),repItems(mark(X)) -> repItems(X),repItems(active(X)) -> repItems(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex5_DLMMU04_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__incr",1),("a__oddNs",0),("a__pairNs",0),("a__repItems",1),("a__tail",1),("a__take",2),("a__zip",2),("cons",2),("incr",1),("mark",1),("nil",0),("oddNs",0),("pair",2),("pairNs",0),("repItems",1),("s",1),("tail",1),("take",2),("zip",2)], trsVariables = fromList ["N","X","X1","X2","XS","Y","YS"], trsRMap = [], trsRules = [a__pairNs -> cons(0,incr(oddNs)),a__oddNs -> a__incr(a__pairNs),a__incr(cons(X,XS)) -> cons(s(mark(X)),incr(XS)),a__take(0,XS) -> nil,a__take(s(N),cons(X,XS)) -> cons(mark(X),take(N,XS)),a__zip(nil,XS) -> nil,a__zip(X,nil) -> nil,a__zip(cons(X,XS),cons(Y,YS)) -> cons(pair(mark(X),mark(Y)),zip(XS,YS)),a__tail(cons(X,XS)) -> mark(XS),a__repItems(nil) -> nil,a__repItems(cons(X,XS)) -> cons(mark(X),cons(X,repItems(XS))),mark(pairNs) -> a__pairNs,mark(incr(X)) -> a__incr(mark(X)),mark(oddNs) -> a__oddNs,mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(zip(X1,X2)) -> a__zip(mark(X1),mark(X2)),mark(tail(X)) -> a__tail(mark(X)),mark(repItems(X)) -> a__repItems(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(s(X)) -> s(mark(X)),mark(nil) -> nil,mark(pair(X1,X2)) -> pair(mark(X1),mark(X2)),a__pairNs -> pairNs,a__incr(X) -> incr(X),a__oddNs -> oddNs,a__take(X1,X2) -> take(X1,X2),a__zip(X1,X2) -> zip(X1,X2),a__tail(X) -> tail(X),a__repItems(X) -> repItems(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex5_DLMMU04_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("incr",1),("mark",1),("nil",0),("oddNs",0),("ok",1),("pair",2),("pairNs",0),("proper",1),("repItems",1),("s",1),("tail",1),("take",2),("top",1),("zip",2)], trsVariables = fromList ["N","X","X1","X2","XS","Y","YS"], trsRMap = [], trsRules = [active(pairNs) -> mark(cons(0,incr(oddNs))),active(oddNs) -> mark(incr(pairNs)),active(incr(cons(X,XS))) -> mark(cons(s(X),incr(XS))),active(take(0,XS)) -> mark(nil),active(take(s(N),cons(X,XS))) -> mark(cons(X,take(N,XS))),active(zip(nil,XS)) -> mark(nil),active(zip(X,nil)) -> mark(nil),active(zip(cons(X,XS),cons(Y,YS))) -> mark(cons(pair(X,Y),zip(XS,YS))),active(tail(cons(X,XS))) -> mark(XS),active(repItems(nil)) -> mark(nil),active(repItems(cons(X,XS))) -> mark(cons(X,cons(X,repItems(XS)))),active(cons(X1,X2)) -> cons(active(X1),X2),active(incr(X)) -> incr(active(X)),active(s(X)) -> s(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(zip(X1,X2)) -> zip(active(X1),X2),active(zip(X1,X2)) -> zip(X1,active(X2)),active(pair(X1,X2)) -> pair(active(X1),X2),active(pair(X1,X2)) -> pair(X1,active(X2)),active(tail(X)) -> tail(active(X)),active(repItems(X)) -> repItems(active(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),incr(mark(X)) -> mark(incr(X)),s(mark(X)) -> mark(s(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),zip(mark(X1),X2) -> mark(zip(X1,X2)),zip(X1,mark(X2)) -> mark(zip(X1,X2)),pair(mark(X1),X2) -> mark(pair(X1,X2)),pair(X1,mark(X2)) -> mark(pair(X1,X2)),tail(mark(X)) -> mark(tail(X)),repItems(mark(X)) -> mark(repItems(X)),proper(pairNs) -> ok(pairNs),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(incr(X)) -> incr(proper(X)),proper(oddNs) -> ok(oddNs),proper(s(X)) -> s(proper(X)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(zip(X1,X2)) -> zip(proper(X1),proper(X2)),proper(pair(X1,X2)) -> pair(proper(X1),proper(X2)),proper(tail(X)) -> tail(proper(X)),proper(repItems(X)) -> repItems(proper(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),incr(ok(X)) -> ok(incr(X)),s(ok(X)) -> ok(s(X)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),zip(ok(X1),ok(X2)) -> ok(zip(X1,X2)),pair(ok(X1),ok(X2)) -> ok(pair(X1,X2)),tail(ok(X)) -> ok(tail(X)),repItems(ok(X)) -> ok(repItems(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex5_7_Luc97_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("01",0),("active",1),("cons",2),("dbl",1),("dbl1",1),("dbls",1),("from",1),("indx",2),("mark",1),("nil",0),("quote",1),("s",1),("s1",1),("sel",2),("sel1",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(dbls(nil)) -> mark(nil),active(dbls(cons(X,Y))) -> mark(cons(dbl(X),dbls(Y))),active(sel(0,cons(X,Y))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),active(indx(nil,X)) -> mark(nil),active(indx(cons(X,Y),Z)) -> mark(cons(sel(X,Z),indx(Y,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),active(dbl1(0)) -> mark(01),active(dbl1(s(X))) -> mark(s1(s1(dbl1(X)))),active(sel1(0,cons(X,Y))) -> mark(X),active(sel1(s(X),cons(Y,Z))) -> mark(sel1(X,Z)),active(quote(0)) -> mark(01),active(quote(s(X))) -> mark(s1(quote(X))),active(quote(dbl(X))) -> mark(dbl1(X)),active(quote(sel(X,Y))) -> mark(sel1(X,Y)),mark(dbl(X)) -> active(dbl(mark(X))),mark(0) -> active(0),mark(s(X)) -> active(s(X)),mark(dbls(X)) -> active(dbls(mark(X))),mark(nil) -> active(nil),mark(cons(X1,X2)) -> active(cons(X1,X2)),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),mark(indx(X1,X2)) -> active(indx(mark(X1),X2)),mark(from(X)) -> active(from(X)),mark(dbl1(X)) -> active(dbl1(mark(X))),mark(01) -> active(01),mark(s1(X)) -> active(s1(mark(X))),mark(sel1(X1,X2)) -> active(sel1(mark(X1),mark(X2))),mark(quote(X)) -> active(quote(mark(X))),dbl(mark(X)) -> dbl(X),dbl(active(X)) -> dbl(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),dbls(mark(X)) -> dbls(X),dbls(active(X)) -> dbls(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2),indx(mark(X1),X2) -> indx(X1,X2),indx(X1,mark(X2)) -> indx(X1,X2),indx(active(X1),X2) -> indx(X1,X2),indx(X1,active(X2)) -> indx(X1,X2),from(mark(X)) -> from(X),from(active(X)) -> from(X),dbl1(mark(X)) -> dbl1(X),dbl1(active(X)) -> dbl1(X),s1(mark(X)) -> s1(X),s1(active(X)) -> s1(X),sel1(mark(X1),X2) -> sel1(X1,X2),sel1(X1,mark(X2)) -> sel1(X1,X2),sel1(active(X1),X2) -> sel1(X1,X2),sel1(X1,active(X2)) -> sel1(X1,X2),quote(mark(X)) -> quote(X),quote(active(X)) -> quote(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex5_7_Luc97_GM.xml" :
TRS {trsSignature = fromList [("0",0),("01",0),("a__dbl",1),("a__dbl1",1),("a__dbls",1),("a__from",1),("a__indx",2),("a__quote",1),("a__sel",2),("a__sel1",2),("cons",2),("dbl",1),("dbl1",1),("dbls",1),("from",1),("indx",2),("mark",1),("nil",0),("quote",1),("s",1),("s1",1),("sel",2),("sel1",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__dbl(0) -> 0,a__dbl(s(X)) -> s(s(dbl(X))),a__dbls(nil) -> nil,a__dbls(cons(X,Y)) -> cons(dbl(X),dbls(Y)),a__sel(0,cons(X,Y)) -> mark(X),a__sel(s(X),cons(Y,Z)) -> a__sel(mark(X),mark(Z)),a__indx(nil,X) -> nil,a__indx(cons(X,Y),Z) -> cons(sel(X,Z),indx(Y,Z)),a__from(X) -> cons(X,from(s(X))),a__dbl1(0) -> 01,a__dbl1(s(X)) -> s1(s1(a__dbl1(mark(X)))),a__sel1(0,cons(X,Y)) -> mark(X),a__sel1(s(X),cons(Y,Z)) -> a__sel1(mark(X),mark(Z)),a__quote(0) -> 01,a__quote(s(X)) -> s1(a__quote(mark(X))),a__quote(dbl(X)) -> a__dbl1(mark(X)),a__quote(sel(X,Y)) -> a__sel1(mark(X),mark(Y)),mark(dbl(X)) -> a__dbl(mark(X)),mark(dbls(X)) -> a__dbls(mark(X)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(indx(X1,X2)) -> a__indx(mark(X1),X2),mark(from(X)) -> a__from(X),mark(dbl1(X)) -> a__dbl1(mark(X)),mark(sel1(X1,X2)) -> a__sel1(mark(X1),mark(X2)),mark(quote(X)) -> a__quote(mark(X)),mark(0) -> 0,mark(s(X)) -> s(X),mark(nil) -> nil,mark(cons(X1,X2)) -> cons(X1,X2),mark(01) -> 01,mark(s1(X)) -> s1(mark(X)),a__dbl(X) -> dbl(X),a__dbls(X) -> dbls(X),a__sel(X1,X2) -> sel(X1,X2),a__indx(X1,X2) -> indx(X1,X2),a__from(X) -> from(X),a__dbl1(X) -> dbl1(X),a__sel1(X1,X2) -> sel1(X1,X2),a__quote(X) -> quote(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex5_7_Luc97_C.xml" :
TRS {trsSignature = fromList [("0",0),("01",0),("active",1),("cons",2),("dbl",1),("dbl1",1),("dbls",1),("from",1),("indx",2),("mark",1),("nil",0),("ok",1),("proper",1),("quote",1),("s",1),("s1",1),("sel",2),("sel1",2),("top",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(dbls(nil)) -> mark(nil),active(dbls(cons(X,Y))) -> mark(cons(dbl(X),dbls(Y))),active(sel(0,cons(X,Y))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),active(indx(nil,X)) -> mark(nil),active(indx(cons(X,Y),Z)) -> mark(cons(sel(X,Z),indx(Y,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),active(dbl1(0)) -> mark(01),active(dbl1(s(X))) -> mark(s1(s1(dbl1(X)))),active(sel1(0,cons(X,Y))) -> mark(X),active(sel1(s(X),cons(Y,Z))) -> mark(sel1(X,Z)),active(quote(0)) -> mark(01),active(quote(s(X))) -> mark(s1(quote(X))),active(quote(dbl(X))) -> mark(dbl1(X)),active(quote(sel(X,Y))) -> mark(sel1(X,Y)),active(dbl(X)) -> dbl(active(X)),active(dbls(X)) -> dbls(active(X)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),active(indx(X1,X2)) -> indx(active(X1),X2),active(dbl1(X)) -> dbl1(active(X)),active(s1(X)) -> s1(active(X)),active(sel1(X1,X2)) -> sel1(active(X1),X2),active(sel1(X1,X2)) -> sel1(X1,active(X2)),active(quote(X)) -> quote(active(X)),dbl(mark(X)) -> mark(dbl(X)),dbls(mark(X)) -> mark(dbls(X)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),indx(mark(X1),X2) -> mark(indx(X1,X2)),dbl1(mark(X)) -> mark(dbl1(X)),s1(mark(X)) -> mark(s1(X)),sel1(mark(X1),X2) -> mark(sel1(X1,X2)),sel1(X1,mark(X2)) -> mark(sel1(X1,X2)),quote(mark(X)) -> mark(quote(X)),proper(dbl(X)) -> dbl(proper(X)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(dbls(X)) -> dbls(proper(X)),proper(nil) -> ok(nil),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),proper(indx(X1,X2)) -> indx(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),proper(dbl1(X)) -> dbl1(proper(X)),proper(01) -> ok(01),proper(s1(X)) -> s1(proper(X)),proper(sel1(X1,X2)) -> sel1(proper(X1),proper(X2)),proper(quote(X)) -> quote(proper(X)),dbl(ok(X)) -> ok(dbl(X)),s(ok(X)) -> ok(s(X)),dbls(ok(X)) -> ok(dbls(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),indx(ok(X1),ok(X2)) -> ok(indx(X1,X2)),from(ok(X)) -> ok(from(X)),dbl1(ok(X)) -> ok(dbl1(X)),s1(ok(X)) -> ok(s1(X)),sel1(ok(X1),ok(X2)) -> ok(sel1(X1,X2)),quote(ok(X)) -> ok(quote(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_Zan97_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("f",1),("g",1),("mark",1),("s",1),("sel",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(f(X)) -> mark(cons(X,f(g(X)))),active(g(0)) -> mark(s(0)),active(g(s(X))) -> mark(s(s(g(X)))),active(sel(0,cons(X,Y))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),mark(f(X)) -> active(f(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(g(X)) -> active(g(mark(X))),mark(0) -> active(0),mark(s(X)) -> active(s(mark(X))),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),f(mark(X)) -> f(X),f(active(X)) -> f(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),g(mark(X)) -> g(X),g(active(X)) -> g(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_Zan97_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__f",1),("a__g",1),("a__sel",2),("cons",2),("f",1),("g",1),("mark",1),("s",1),("sel",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__f(X) -> cons(mark(X),f(g(X))),a__g(0) -> s(0),a__g(s(X)) -> s(s(a__g(mark(X)))),a__sel(0,cons(X,Y)) -> mark(X),a__sel(s(X),cons(Y,Z)) -> a__sel(mark(X),mark(Z)),mark(f(X)) -> a__f(mark(X)),mark(g(X)) -> a__g(mark(X)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(s(X)) -> s(mark(X)),a__f(X) -> f(X),a__g(X) -> g(X),a__sel(X1,X2) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_Zan97_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("f",1),("g",1),("mark",1),("ok",1),("proper",1),("s",1),("sel",2),("top",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(f(X)) -> mark(cons(X,f(g(X)))),active(g(0)) -> mark(s(0)),active(g(s(X))) -> mark(s(s(g(X)))),active(sel(0,cons(X,Y))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),active(f(X)) -> f(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(g(X)) -> g(active(X)),active(s(X)) -> s(active(X)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),f(mark(X)) -> mark(f(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),g(mark(X)) -> mark(g(X)),s(mark(X)) -> mark(s(X)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),proper(f(X)) -> f(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(g(X)) -> g(proper(X)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),f(ok(X)) -> ok(f(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),g(ok(X)) -> ok(g(X)),s(ok(X)) -> ok(s(X)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_DLMMU04_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("uLength",2),("uTake1",1),("uTake2",4),("zeros",0)], trsVariables = fromList ["IL","L","M","N","T","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(and(tt,T)) -> mark(T),active(isNatIList(IL)) -> mark(isNatList(IL)),active(isNat(0)) -> mark(tt),active(isNat(s(N))) -> mark(isNat(N)),active(isNat(length(L))) -> mark(isNatList(L)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(N,IL))) -> mark(and(isNat(N),isNatIList(IL))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(N,L))) -> mark(and(isNat(N),isNatList(L))),active(isNatList(take(N,IL))) -> mark(and(isNat(N),isNatIList(IL))),active(zeros) -> mark(cons(0,zeros)),active(take(0,IL)) -> mark(uTake1(isNatIList(IL))),active(uTake1(tt)) -> mark(nil),active(take(s(M),cons(N,IL))) -> mark(uTake2(and(isNat(M),and(isNat(N),isNatIList(IL))),M,N,IL)),active(uTake2(tt,M,N,IL)) -> mark(cons(N,take(M,IL))),active(length(cons(N,L))) -> mark(uLength(and(isNat(N),isNatList(L)),L)),active(uLength(tt,L)) -> mark(s(length(L))),mark(and(X1,X2)) -> active(and(mark(X1),mark(X2))),mark(tt) -> active(tt),mark(isNatIList(X)) -> active(isNatIList(X)),mark(isNatList(X)) -> active(isNatList(X)),mark(isNat(X)) -> active(isNat(X)),mark(0) -> active(0),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(mark(X))),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(nil) -> active(nil),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(uTake1(X)) -> active(uTake1(mark(X))),mark(uTake2(X1,X2,X3,X4)) -> active(uTake2(mark(X1),X2,X3,X4)),mark(uLength(X1,X2)) -> active(uLength(mark(X1),X2)),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),isNatIList(mark(X)) -> isNatIList(X),isNatIList(active(X)) -> isNatIList(X),isNatList(mark(X)) -> isNatList(X),isNatList(active(X)) -> isNatList(X),isNat(mark(X)) -> isNat(X),isNat(active(X)) -> isNat(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),uTake1(mark(X)) -> uTake1(X),uTake1(active(X)) -> uTake1(X),uTake2(mark(X1),X2,X3,X4) -> uTake2(X1,X2,X3,X4),uTake2(X1,mark(X2),X3,X4) -> uTake2(X1,X2,X3,X4),uTake2(X1,X2,mark(X3),X4) -> uTake2(X1,X2,X3,X4),uTake2(X1,X2,X3,mark(X4)) -> uTake2(X1,X2,X3,X4),uTake2(active(X1),X2,X3,X4) -> uTake2(X1,X2,X3,X4),uTake2(X1,active(X2),X3,X4) -> uTake2(X1,X2,X3,X4),uTake2(X1,X2,active(X3),X4) -> uTake2(X1,X2,X3,X4),uTake2(X1,X2,X3,active(X4)) -> uTake2(X1,X2,X3,X4),uLength(mark(X1),X2) -> uLength(X1,X2),uLength(X1,mark(X2)) -> uLength(X1,X2),uLength(active(X1),X2) -> uLength(X1,X2),uLength(X1,active(X2)) -> uLength(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_DLMMU04_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__and",2),("a__isNat",1),("a__isNatIList",1),("a__isNatList",1),("a__length",1),("a__take",2),("a__uLength",2),("a__uTake1",1),("a__uTake2",4),("a__zeros",0),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("tt",0),("uLength",2),("uTake1",1),("uTake2",4),("zeros",0)], trsVariables = fromList ["IL","L","M","N","T","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [a__and(tt,T) -> mark(T),a__isNatIList(IL) -> a__isNatList(IL),a__isNat(0) -> tt,a__isNat(s(N)) -> a__isNat(N),a__isNat(length(L)) -> a__isNatList(L),a__isNatIList(zeros) -> tt,a__isNatIList(cons(N,IL)) -> a__and(a__isNat(N),a__isNatIList(IL)),a__isNatList(nil) -> tt,a__isNatList(cons(N,L)) -> a__and(a__isNat(N),a__isNatList(L)),a__isNatList(take(N,IL)) -> a__and(a__isNat(N),a__isNatIList(IL)),a__zeros -> cons(0,zeros),a__take(0,IL) -> a__uTake1(a__isNatIList(IL)),a__uTake1(tt) -> nil,a__take(s(M),cons(N,IL)) -> a__uTake2(a__and(a__isNat(M),a__and(a__isNat(N),a__isNatIList(IL))),M,N,IL),a__uTake2(tt,M,N,IL) -> cons(mark(N),take(M,IL)),a__length(cons(N,L)) -> a__uLength(a__and(a__isNat(N),a__isNatList(L)),L),a__uLength(tt,L) -> s(a__length(mark(L))),mark(and(X1,X2)) -> a__and(mark(X1),mark(X2)),mark(isNatIList(X)) -> a__isNatIList(X),mark(isNatList(X)) -> a__isNatList(X),mark(isNat(X)) -> a__isNat(X),mark(length(X)) -> a__length(mark(X)),mark(zeros) -> a__zeros,mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(uTake1(X)) -> a__uTake1(mark(X)),mark(uTake2(X1,X2,X3,X4)) -> a__uTake2(mark(X1),X2,X3,X4),mark(uLength(X1,X2)) -> a__uLength(mark(X1),X2),mark(tt) -> tt,mark(0) -> 0,mark(s(X)) -> s(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(nil) -> nil,a__and(X1,X2) -> and(X1,X2),a__isNatIList(X) -> isNatIList(X),a__isNatList(X) -> isNatList(X),a__isNat(X) -> isNat(X),a__length(X) -> length(X),a__zeros -> zeros,a__take(X1,X2) -> take(X1,X2),a__uTake1(X) -> uTake1(X),a__uTake2(X1,X2,X3,X4) -> uTake2(X1,X2,X3,X4),a__uLength(X1,X2) -> uLength(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_DLMMU04_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("and",2),("cons",2),("isNat",1),("isNatIList",1),("isNatList",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("take",2),("top",1),("tt",0),("uLength",2),("uTake1",1),("uTake2",4),("zeros",0)], trsVariables = fromList ["IL","L","M","N","T","X","X1","X2","X3","X4"], trsRMap = [], trsRules = [active(and(tt,T)) -> mark(T),active(isNatIList(IL)) -> mark(isNatList(IL)),active(isNat(0)) -> mark(tt),active(isNat(s(N))) -> mark(isNat(N)),active(isNat(length(L))) -> mark(isNatList(L)),active(isNatIList(zeros)) -> mark(tt),active(isNatIList(cons(N,IL))) -> mark(and(isNat(N),isNatIList(IL))),active(isNatList(nil)) -> mark(tt),active(isNatList(cons(N,L))) -> mark(and(isNat(N),isNatList(L))),active(isNatList(take(N,IL))) -> mark(and(isNat(N),isNatIList(IL))),active(zeros) -> mark(cons(0,zeros)),active(take(0,IL)) -> mark(uTake1(isNatIList(IL))),active(uTake1(tt)) -> mark(nil),active(take(s(M),cons(N,IL))) -> mark(uTake2(and(isNat(M),and(isNat(N),isNatIList(IL))),M,N,IL)),active(uTake2(tt,M,N,IL)) -> mark(cons(N,take(M,IL))),active(length(cons(N,L))) -> mark(uLength(and(isNat(N),isNatList(L)),L)),active(uLength(tt,L)) -> mark(s(length(L))),active(and(X1,X2)) -> and(active(X1),X2),active(and(X1,X2)) -> and(X1,active(X2)),active(s(X)) -> s(active(X)),active(length(X)) -> length(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(uTake1(X)) -> uTake1(active(X)),active(uTake2(X1,X2,X3,X4)) -> uTake2(active(X1),X2,X3,X4),active(uLength(X1,X2)) -> uLength(active(X1),X2),and(mark(X1),X2) -> mark(and(X1,X2)),and(X1,mark(X2)) -> mark(and(X1,X2)),s(mark(X)) -> mark(s(X)),length(mark(X)) -> mark(length(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),uTake1(mark(X)) -> mark(uTake1(X)),uTake2(mark(X1),X2,X3,X4) -> mark(uTake2(X1,X2,X3,X4)),uLength(mark(X1),X2) -> mark(uLength(X1,X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(tt) -> ok(tt),proper(isNatIList(X)) -> isNatIList(proper(X)),proper(isNatList(X)) -> isNatList(proper(X)),proper(isNat(X)) -> isNat(proper(X)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(uTake1(X)) -> uTake1(proper(X)),proper(uTake2(X1,X2,X3,X4)) -> uTake2(proper(X1),proper(X2),proper(X3),proper(X4)),proper(uLength(X1,X2)) -> uLength(proper(X1),proper(X2)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),isNatIList(ok(X)) -> ok(isNatIList(X)),isNatList(ok(X)) -> ok(isNatList(X)),isNat(ok(X)) -> ok(isNat(X)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),uTake1(ok(X)) -> ok(uTake1(X)),uTake2(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(uTake2(X1,X2,X3,X4)),uLength(ok(X1),ok(X2)) -> ok(uLength(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_77_Bor03_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("mark",1),("tail",1),("zeros",0)], trsVariables = fromList ["X","X1","X2","XS"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(tail(cons(X,XS))) -> mark(XS),mark(zeros) -> active(zeros),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(tail(X)) -> active(tail(mark(X))),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_77_Bor03_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__tail",1),("a__zeros",0),("cons",2),("mark",1),("tail",1),("zeros",0)], trsVariables = fromList ["X","X1","X2","XS"], trsRMap = [], trsRules = [a__zeros -> cons(0,zeros),a__tail(cons(X,XS)) -> mark(XS),mark(zeros) -> a__zeros,mark(tail(X)) -> a__tail(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,a__zeros -> zeros,a__tail(X) -> tail(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_77_Bor03_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("mark",1),("ok",1),("proper",1),("tail",1),("top",1),("zeros",0)], trsVariables = fromList ["X","X1","X2","XS"], trsRMap = [], trsRules = [active(zeros) -> mark(cons(0,zeros)),active(tail(cons(X,XS))) -> mark(XS),active(cons(X1,X2)) -> cons(active(X1),X2),active(tail(X)) -> tail(active(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),tail(mark(X)) -> mark(tail(X)),proper(zeros) -> ok(zeros),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(tail(X)) -> tail(proper(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),tail(ok(X)) -> ok(tail(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_56_Bor03_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("after",2),("cons",2),("from",1),("mark",1),("s",1)], trsVariables = fromList ["N","X","X1","X2","XS"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(after(0,XS)) -> mark(XS),active(after(s(N),cons(X,XS))) -> mark(after(N,XS)),mark(from(X)) -> active(from(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(after(X1,X2)) -> active(after(mark(X1),mark(X2))),mark(0) -> active(0),from(mark(X)) -> from(X),from(active(X)) -> from(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),after(mark(X1),X2) -> after(X1,X2),after(X1,mark(X2)) -> after(X1,X2),after(active(X1),X2) -> after(X1,X2),after(X1,active(X2)) -> after(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_56_Bor03_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__after",2),("a__from",1),("after",2),("cons",2),("from",1),("mark",1),("s",1)], trsVariables = fromList ["N","X","X1","X2","XS"], trsRMap = [], trsRules = [a__from(X) -> cons(mark(X),from(s(X))),a__after(0,XS) -> mark(XS),a__after(s(N),cons(X,XS)) -> a__after(mark(N),mark(XS)),mark(from(X)) -> a__from(mark(X)),mark(after(X1,X2)) -> a__after(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__from(X) -> from(X),a__after(X1,X2) -> after(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_56_Bor03_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("after",2),("cons",2),("from",1),("mark",1),("ok",1),("proper",1),("s",1),("top",1)], trsVariables = fromList ["N","X","X1","X2","XS"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(after(0,XS)) -> mark(XS),active(after(s(N),cons(X,XS))) -> mark(after(N,XS)),active(from(X)) -> from(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(after(X1,X2)) -> after(active(X1),X2),active(after(X1,X2)) -> after(X1,active(X2)),from(mark(X)) -> mark(from(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),after(mark(X1),X2) -> mark(after(X1,X2)),after(X1,mark(X2)) -> mark(after(X1,X2)),proper(from(X)) -> from(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(after(X1,X2)) -> after(proper(X1),proper(X2)),proper(0) -> ok(0),from(ok(X)) -> ok(from(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),after(ok(X1),ok(X2)) -> ok(after(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_37_Bor03_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("from",1),("mark",1),("minus",2),("nil",0),("quot",2),("s",1),("sel",2),("zWquot",2)], trsVariables = fromList ["N","X","X1","X2","XS","Y","YS"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(sel(0,cons(X,XS))) -> mark(X),active(sel(s(N),cons(X,XS))) -> mark(sel(N,XS)),active(minus(X,0)) -> mark(0),active(minus(s(X),s(Y))) -> mark(minus(X,Y)),active(quot(0,s(Y))) -> mark(0),active(quot(s(X),s(Y))) -> mark(s(quot(minus(X,Y),s(Y)))),active(zWquot(XS,nil)) -> mark(nil),active(zWquot(nil,XS)) -> mark(nil),active(zWquot(cons(X,XS),cons(Y,YS))) -> mark(cons(quot(X,Y),zWquot(XS,YS))),mark(from(X)) -> active(from(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),mark(0) -> active(0),mark(minus(X1,X2)) -> active(minus(mark(X1),mark(X2))),mark(quot(X1,X2)) -> active(quot(mark(X1),mark(X2))),mark(zWquot(X1,X2)) -> active(zWquot(mark(X1),mark(X2))),mark(nil) -> active(nil),from(mark(X)) -> from(X),from(active(X)) -> from(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2),minus(mark(X1),X2) -> minus(X1,X2),minus(X1,mark(X2)) -> minus(X1,X2),minus(active(X1),X2) -> minus(X1,X2),minus(X1,active(X2)) -> minus(X1,X2),quot(mark(X1),X2) -> quot(X1,X2),quot(X1,mark(X2)) -> quot(X1,X2),quot(active(X1),X2) -> quot(X1,X2),quot(X1,active(X2)) -> quot(X1,X2),zWquot(mark(X1),X2) -> zWquot(X1,X2),zWquot(X1,mark(X2)) -> zWquot(X1,X2),zWquot(active(X1),X2) -> zWquot(X1,X2),zWquot(X1,active(X2)) -> zWquot(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_37_Bor03_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__from",1),("a__minus",2),("a__quot",2),("a__sel",2),("a__zWquot",2),("cons",2),("from",1),("mark",1),("minus",2),("nil",0),("quot",2),("s",1),("sel",2),("zWquot",2)], trsVariables = fromList ["N","X","X1","X2","XS","Y","YS"], trsRMap = [], trsRules = [a__from(X) -> cons(mark(X),from(s(X))),a__sel(0,cons(X,XS)) -> mark(X),a__sel(s(N),cons(X,XS)) -> a__sel(mark(N),mark(XS)),a__minus(X,0) -> 0,a__minus(s(X),s(Y)) -> a__minus(mark(X),mark(Y)),a__quot(0,s(Y)) -> 0,a__quot(s(X),s(Y)) -> s(a__quot(a__minus(mark(X),mark(Y)),s(mark(Y)))),a__zWquot(XS,nil) -> nil,a__zWquot(nil,XS) -> nil,a__zWquot(cons(X,XS),cons(Y,YS)) -> cons(a__quot(mark(X),mark(Y)),zWquot(XS,YS)),mark(from(X)) -> a__from(mark(X)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(minus(X1,X2)) -> a__minus(mark(X1),mark(X2)),mark(quot(X1,X2)) -> a__quot(mark(X1),mark(X2)),mark(zWquot(X1,X2)) -> a__zWquot(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(nil) -> nil,a__from(X) -> from(X),a__sel(X1,X2) -> sel(X1,X2),a__minus(X1,X2) -> minus(X1,X2),a__quot(X1,X2) -> quot(X1,X2),a__zWquot(X1,X2) -> zWquot(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_37_Bor03_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("from",1),("mark",1),("minus",2),("nil",0),("ok",1),("proper",1),("quot",2),("s",1),("sel",2),("top",1),("zWquot",2)], trsVariables = fromList ["N","X","X1","X2","XS","Y","YS"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(sel(0,cons(X,XS))) -> mark(X),active(sel(s(N),cons(X,XS))) -> mark(sel(N,XS)),active(minus(X,0)) -> mark(0),active(minus(s(X),s(Y))) -> mark(minus(X,Y)),active(quot(0,s(Y))) -> mark(0),active(quot(s(X),s(Y))) -> mark(s(quot(minus(X,Y),s(Y)))),active(zWquot(XS,nil)) -> mark(nil),active(zWquot(nil,XS)) -> mark(nil),active(zWquot(cons(X,XS),cons(Y,YS))) -> mark(cons(quot(X,Y),zWquot(XS,YS))),active(from(X)) -> from(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),active(minus(X1,X2)) -> minus(active(X1),X2),active(minus(X1,X2)) -> minus(X1,active(X2)),active(quot(X1,X2)) -> quot(active(X1),X2),active(quot(X1,X2)) -> quot(X1,active(X2)),active(zWquot(X1,X2)) -> zWquot(active(X1),X2),active(zWquot(X1,X2)) -> zWquot(X1,active(X2)),from(mark(X)) -> mark(from(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),minus(mark(X1),X2) -> mark(minus(X1,X2)),minus(X1,mark(X2)) -> mark(minus(X1,X2)),quot(mark(X1),X2) -> mark(quot(X1,X2)),quot(X1,mark(X2)) -> mark(quot(X1,X2)),zWquot(mark(X1),X2) -> mark(zWquot(X1,X2)),zWquot(X1,mark(X2)) -> mark(zWquot(X1,X2)),proper(from(X)) -> from(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),proper(0) -> ok(0),proper(minus(X1,X2)) -> minus(proper(X1),proper(X2)),proper(quot(X1,X2)) -> quot(proper(X1),proper(X2)),proper(zWquot(X1,X2)) -> zWquot(proper(X1),proper(X2)),proper(nil) -> ok(nil),from(ok(X)) -> ok(from(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),minus(ok(X1),ok(X2)) -> ok(minus(X1,X2)),quot(ok(X1),ok(X2)) -> ok(quot(X1,X2)),zWquot(ok(X1),ok(X2)) -> ok(zWquot(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_15_Bor03_L.xml" :
TRS {trsSignature = fromList [("0",0),("cons",1),("f",1),("p",1),("s",1)], trsVariables = fromList [], trsRMap = [], trsRules = [f(0) -> cons(0),f(s(0)) -> f(p(s(0))),p(s(0)) -> 0], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_15_Bor03_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("f",1),("mark",1),("p",1),("s",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [active(f(0)) -> mark(cons(0,f(s(0)))),active(f(s(0))) -> mark(f(p(s(0)))),active(p(s(0))) -> mark(0),mark(f(X)) -> active(f(mark(X))),mark(0) -> active(0),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(p(X)) -> active(p(mark(X))),f(mark(X)) -> f(X),f(active(X)) -> f(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),p(mark(X)) -> p(X),p(active(X)) -> p(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_15_Bor03_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__f",1),("a__p",1),("cons",2),("f",1),("mark",1),("p",1),("s",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [a__f(0) -> cons(0,f(s(0))),a__f(s(0)) -> a__f(a__p(s(0))),a__p(s(0)) -> 0,mark(f(X)) -> a__f(mark(X)),mark(p(X)) -> a__p(mark(X)),mark(0) -> 0,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),a__f(X) -> f(X),a__p(X) -> p(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_7_15_Bor03_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("f",1),("mark",1),("ok",1),("p",1),("proper",1),("s",1),("top",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [active(f(0)) -> mark(cons(0,f(s(0)))),active(f(s(0))) -> mark(f(p(s(0)))),active(p(s(0))) -> mark(0),active(f(X)) -> f(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(p(X)) -> p(active(X)),f(mark(X)) -> mark(f(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),p(mark(X)) -> mark(p(X)),proper(f(X)) -> f(proper(X)),proper(0) -> ok(0),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(p(X)) -> p(proper(X)),f(ok(X)) -> ok(f(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),p(ok(X)) -> ok(p(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_4_Luc96b_L.xml" :
TRS {trsSignature = fromList [("f",1),("g",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [f(g(X)) -> f(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_4_Luc96b_iGM.xml" :
TRS {trsSignature = fromList [("active",1),("f",2),("g",1),("mark",1)], trsVariables = fromList ["X","X1","X2","Y"], trsRMap = [], trsRules = [active(f(g(X),Y)) -> mark(f(X,f(g(X),Y))),mark(f(X1,X2)) -> active(f(mark(X1),X2)),mark(g(X)) -> active(g(mark(X))),f(mark(X1),X2) -> f(X1,X2),f(X1,mark(X2)) -> f(X1,X2),f(active(X1),X2) -> f(X1,X2),f(X1,active(X2)) -> f(X1,X2),g(mark(X)) -> g(X),g(active(X)) -> g(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_4_Luc96b_GM.xml" :
TRS {trsSignature = fromList [("a__f",2),("f",2),("g",1),("mark",1)], trsVariables = fromList ["X","X1","X2","Y"], trsRMap = [], trsRules = [a__f(g(X),Y) -> a__f(mark(X),f(g(X),Y)),mark(f(X1,X2)) -> a__f(mark(X1),X2),mark(g(X)) -> g(mark(X)),a__f(X1,X2) -> f(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex4_4_Luc96b_C.xml" :
TRS {trsSignature = fromList [("active",1),("f",2),("g",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X","X1","X2","Y"], trsRMap = [], trsRules = [active(f(g(X),Y)) -> mark(f(X,f(g(X),Y))),active(f(X1,X2)) -> f(active(X1),X2),active(g(X)) -> g(active(X)),f(mark(X1),X2) -> mark(f(X1,X2)),g(mark(X)) -> mark(g(X)),proper(f(X1,X2)) -> f(proper(X1),proper(X2)),proper(g(X)) -> g(proper(X)),f(ok(X1),ok(X2)) -> ok(f(X1,X2)),g(ok(X)) -> ok(g(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex49_GM04_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("div",2),("false",0),("geq",2),("if",3),("mark",1),("minus",2),("s",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(minus(0,Y)) -> mark(0),active(minus(s(X),s(Y))) -> mark(minus(X,Y)),active(geq(X,0)) -> mark(true),active(geq(0,s(Y))) -> mark(false),active(geq(s(X),s(Y))) -> mark(geq(X,Y)),active(div(0,s(Y))) -> mark(0),active(div(s(X),s(Y))) -> mark(if(geq(X,Y),s(div(minus(X,Y),s(Y))),0)),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),mark(minus(X1,X2)) -> active(minus(X1,X2)),mark(0) -> active(0),mark(s(X)) -> active(s(mark(X))),mark(geq(X1,X2)) -> active(geq(X1,X2)),mark(true) -> active(true),mark(false) -> active(false),mark(div(X1,X2)) -> active(div(mark(X1),X2)),mark(if(X1,X2,X3)) -> active(if(mark(X1),X2,X3)),minus(mark(X1),X2) -> minus(X1,X2),minus(X1,mark(X2)) -> minus(X1,X2),minus(active(X1),X2) -> minus(X1,X2),minus(X1,active(X2)) -> minus(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),geq(mark(X1),X2) -> geq(X1,X2),geq(X1,mark(X2)) -> geq(X1,X2),geq(active(X1),X2) -> geq(X1,X2),geq(X1,active(X2)) -> geq(X1,X2),div(mark(X1),X2) -> div(X1,X2),div(X1,mark(X2)) -> div(X1,X2),div(active(X1),X2) -> div(X1,X2),div(X1,active(X2)) -> div(X1,X2),if(mark(X1),X2,X3) -> if(X1,X2,X3),if(X1,mark(X2),X3) -> if(X1,X2,X3),if(X1,X2,mark(X3)) -> if(X1,X2,X3),if(active(X1),X2,X3) -> if(X1,X2,X3),if(X1,active(X2),X3) -> if(X1,X2,X3),if(X1,X2,active(X3)) -> if(X1,X2,X3)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex49_GM04_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__div",2),("a__geq",2),("a__if",3),("a__minus",2),("div",2),("false",0),("geq",2),("if",3),("mark",1),("minus",2),("s",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [a__minus(0,Y) -> 0,a__minus(s(X),s(Y)) -> a__minus(X,Y),a__geq(X,0) -> true,a__geq(0,s(Y)) -> false,a__geq(s(X),s(Y)) -> a__geq(X,Y),a__div(0,s(Y)) -> 0,a__div(s(X),s(Y)) -> a__if(a__geq(X,Y),s(div(minus(X,Y),s(Y))),0),a__if(true,X,Y) -> mark(X),a__if(false,X,Y) -> mark(Y),mark(minus(X1,X2)) -> a__minus(X1,X2),mark(geq(X1,X2)) -> a__geq(X1,X2),mark(div(X1,X2)) -> a__div(mark(X1),X2),mark(if(X1,X2,X3)) -> a__if(mark(X1),X2,X3),mark(0) -> 0,mark(s(X)) -> s(mark(X)),mark(true) -> true,mark(false) -> false,a__minus(X1,X2) -> minus(X1,X2),a__geq(X1,X2) -> geq(X1,X2),a__div(X1,X2) -> div(X1,X2),a__if(X1,X2,X3) -> if(X1,X2,X3)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex49_GM04_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("div",2),("false",0),("geq",2),("if",3),("mark",1),("minus",2),("ok",1),("proper",1),("s",1),("top",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(minus(0,Y)) -> mark(0),active(minus(s(X),s(Y))) -> mark(minus(X,Y)),active(geq(X,0)) -> mark(true),active(geq(0,s(Y))) -> mark(false),active(geq(s(X),s(Y))) -> mark(geq(X,Y)),active(div(0,s(Y))) -> mark(0),active(div(s(X),s(Y))) -> mark(if(geq(X,Y),s(div(minus(X,Y),s(Y))),0)),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(s(X)) -> s(active(X)),active(div(X1,X2)) -> div(active(X1),X2),active(if(X1,X2,X3)) -> if(active(X1),X2,X3),s(mark(X)) -> mark(s(X)),div(mark(X1),X2) -> mark(div(X1,X2)),if(mark(X1),X2,X3) -> mark(if(X1,X2,X3)),proper(minus(X1,X2)) -> minus(proper(X1),proper(X2)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(geq(X1,X2)) -> geq(proper(X1),proper(X2)),proper(true) -> ok(true),proper(false) -> ok(false),proper(div(X1,X2)) -> div(proper(X1),proper(X2)),proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3)),minus(ok(X1),ok(X2)) -> ok(minus(X1,X2)),s(ok(X)) -> ok(s(X)),geq(ok(X1),ok(X2)) -> ok(geq(X1,X2)),div(ok(X1),ok(X2)) -> ok(div(X1,X2)),if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_3_25_Bor03_L.xml" :
TRS {trsSignature = fromList [("app",2),("cons",1),("from",1),("nil",0),("prefix",1),("zWadr",2)], trsVariables = fromList ["L","X","XS","Y","YS"], trsRMap = [], trsRules = [app(nil,YS) -> YS,app(cons(X),YS) -> cons(X),from(X) -> cons(X),zWadr(nil,YS) -> nil,zWadr(XS,nil) -> nil,zWadr(cons(X),cons(Y)) -> cons(app(Y,cons(X))),prefix(L) -> cons(nil)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_3_25_Bor03_iGM.xml" :
TRS {trsSignature = fromList [("active",1),("app",2),("cons",2),("from",1),("mark",1),("nil",0),("prefix",1),("s",1),("zWadr",2)], trsVariables = fromList ["L","X","X1","X2","XS","Y","YS"], trsRMap = [], trsRules = [active(app(nil,YS)) -> mark(YS),active(app(cons(X,XS),YS)) -> mark(cons(X,app(XS,YS))),active(from(X)) -> mark(cons(X,from(s(X)))),active(zWadr(nil,YS)) -> mark(nil),active(zWadr(XS,nil)) -> mark(nil),active(zWadr(cons(X,XS),cons(Y,YS))) -> mark(cons(app(Y,cons(X,nil)),zWadr(XS,YS))),active(prefix(L)) -> mark(cons(nil,zWadr(L,prefix(L)))),mark(app(X1,X2)) -> active(app(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(from(X)) -> active(from(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(zWadr(X1,X2)) -> active(zWadr(mark(X1),mark(X2))),mark(prefix(X)) -> active(prefix(mark(X))),app(mark(X1),X2) -> app(X1,X2),app(X1,mark(X2)) -> app(X1,X2),app(active(X1),X2) -> app(X1,X2),app(X1,active(X2)) -> app(X1,X2),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),from(mark(X)) -> from(X),from(active(X)) -> from(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),zWadr(mark(X1),X2) -> zWadr(X1,X2),zWadr(X1,mark(X2)) -> zWadr(X1,X2),zWadr(active(X1),X2) -> zWadr(X1,X2),zWadr(X1,active(X2)) -> zWadr(X1,X2),prefix(mark(X)) -> prefix(X),prefix(active(X)) -> prefix(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_3_25_Bor03_GM.xml" :
TRS {trsSignature = fromList [("a__app",2),("a__from",1),("a__prefix",1),("a__zWadr",2),("app",2),("cons",2),("from",1),("mark",1),("nil",0),("prefix",1),("s",1),("zWadr",2)], trsVariables = fromList ["L","X","X1","X2","XS","Y","YS"], trsRMap = [], trsRules = [a__app(nil,YS) -> mark(YS),a__app(cons(X,XS),YS) -> cons(mark(X),app(XS,YS)),a__from(X) -> cons(mark(X),from(s(X))),a__zWadr(nil,YS) -> nil,a__zWadr(XS,nil) -> nil,a__zWadr(cons(X,XS),cons(Y,YS)) -> cons(a__app(mark(Y),cons(mark(X),nil)),zWadr(XS,YS)),a__prefix(L) -> cons(nil,zWadr(L,prefix(L))),mark(app(X1,X2)) -> a__app(mark(X1),mark(X2)),mark(from(X)) -> a__from(mark(X)),mark(zWadr(X1,X2)) -> a__zWadr(mark(X1),mark(X2)),mark(prefix(X)) -> a__prefix(mark(X)),mark(nil) -> nil,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),a__app(X1,X2) -> app(X1,X2),a__from(X) -> from(X),a__zWadr(X1,X2) -> zWadr(X1,X2),a__prefix(X) -> prefix(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_3_25_Bor03_C.xml" :
TRS {trsSignature = fromList [("active",1),("app",2),("cons",2),("from",1),("mark",1),("nil",0),("ok",1),("prefix",1),("proper",1),("s",1),("top",1),("zWadr",2)], trsVariables = fromList ["L","X","X1","X2","XS","Y","YS"], trsRMap = [], trsRules = [active(app(nil,YS)) -> mark(YS),active(app(cons(X,XS),YS)) -> mark(cons(X,app(XS,YS))),active(from(X)) -> mark(cons(X,from(s(X)))),active(zWadr(nil,YS)) -> mark(nil),active(zWadr(XS,nil)) -> mark(nil),active(zWadr(cons(X,XS),cons(Y,YS))) -> mark(cons(app(Y,cons(X,nil)),zWadr(XS,YS))),active(prefix(L)) -> mark(cons(nil,zWadr(L,prefix(L)))),active(app(X1,X2)) -> app(active(X1),X2),active(app(X1,X2)) -> app(X1,active(X2)),active(cons(X1,X2)) -> cons(active(X1),X2),active(from(X)) -> from(active(X)),active(s(X)) -> s(active(X)),active(zWadr(X1,X2)) -> zWadr(active(X1),X2),active(zWadr(X1,X2)) -> zWadr(X1,active(X2)),active(prefix(X)) -> prefix(active(X)),app(mark(X1),X2) -> mark(app(X1,X2)),app(X1,mark(X2)) -> mark(app(X1,X2)),cons(mark(X1),X2) -> mark(cons(X1,X2)),from(mark(X)) -> mark(from(X)),s(mark(X)) -> mark(s(X)),zWadr(mark(X1),X2) -> mark(zWadr(X1,X2)),zWadr(X1,mark(X2)) -> mark(zWadr(X1,X2)),prefix(mark(X)) -> mark(prefix(X)),proper(app(X1,X2)) -> app(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),proper(s(X)) -> s(proper(X)),proper(zWadr(X1,X2)) -> zWadr(proper(X1),proper(X2)),proper(prefix(X)) -> prefix(proper(X)),app(ok(X1),ok(X2)) -> ok(app(X1,X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),from(ok(X)) -> ok(from(X)),s(ok(X)) -> ok(s(X)),zWadr(ok(X1),ok(X2)) -> ok(zWadr(X1,X2)),prefix(ok(X)) -> ok(prefix(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_2_Luc97_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("dbl",1),("dbls",1),("from",1),("indx",2),("mark",1),("nil",0),("s",1),("sel",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(dbls(nil)) -> mark(nil),active(dbls(cons(X,Y))) -> mark(cons(dbl(X),dbls(Y))),active(sel(0,cons(X,Y))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),active(indx(nil,X)) -> mark(nil),active(indx(cons(X,Y),Z)) -> mark(cons(sel(X,Z),indx(Y,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),mark(dbl(X)) -> active(dbl(mark(X))),mark(0) -> active(0),mark(s(X)) -> active(s(X)),mark(dbls(X)) -> active(dbls(mark(X))),mark(nil) -> active(nil),mark(cons(X1,X2)) -> active(cons(X1,X2)),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),mark(indx(X1,X2)) -> active(indx(mark(X1),X2)),mark(from(X)) -> active(from(X)),dbl(mark(X)) -> dbl(X),dbl(active(X)) -> dbl(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),dbls(mark(X)) -> dbls(X),dbls(active(X)) -> dbls(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2),indx(mark(X1),X2) -> indx(X1,X2),indx(X1,mark(X2)) -> indx(X1,X2),indx(active(X1),X2) -> indx(X1,X2),indx(X1,active(X2)) -> indx(X1,X2),from(mark(X)) -> from(X),from(active(X)) -> from(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_2_Luc97_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__dbl",1),("a__dbls",1),("a__from",1),("a__indx",2),("a__sel",2),("cons",2),("dbl",1),("dbls",1),("from",1),("indx",2),("mark",1),("nil",0),("s",1),("sel",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__dbl(0) -> 0,a__dbl(s(X)) -> s(s(dbl(X))),a__dbls(nil) -> nil,a__dbls(cons(X,Y)) -> cons(dbl(X),dbls(Y)),a__sel(0,cons(X,Y)) -> mark(X),a__sel(s(X),cons(Y,Z)) -> a__sel(mark(X),mark(Z)),a__indx(nil,X) -> nil,a__indx(cons(X,Y),Z) -> cons(sel(X,Z),indx(Y,Z)),a__from(X) -> cons(X,from(s(X))),mark(dbl(X)) -> a__dbl(mark(X)),mark(dbls(X)) -> a__dbls(mark(X)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(indx(X1,X2)) -> a__indx(mark(X1),X2),mark(from(X)) -> a__from(X),mark(0) -> 0,mark(s(X)) -> s(X),mark(nil) -> nil,mark(cons(X1,X2)) -> cons(X1,X2),a__dbl(X) -> dbl(X),a__dbls(X) -> dbls(X),a__sel(X1,X2) -> sel(X1,X2),a__indx(X1,X2) -> indx(X1,X2),a__from(X) -> from(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_2_Luc97_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("dbl",1),("dbls",1),("from",1),("indx",2),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("sel",2),("top",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(dbls(nil)) -> mark(nil),active(dbls(cons(X,Y))) -> mark(cons(dbl(X),dbls(Y))),active(sel(0,cons(X,Y))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),active(indx(nil,X)) -> mark(nil),active(indx(cons(X,Y),Z)) -> mark(cons(sel(X,Z),indx(Y,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),active(dbl(X)) -> dbl(active(X)),active(dbls(X)) -> dbls(active(X)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),active(indx(X1,X2)) -> indx(active(X1),X2),dbl(mark(X)) -> mark(dbl(X)),dbls(mark(X)) -> mark(dbls(X)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),indx(mark(X1),X2) -> mark(indx(X1,X2)),proper(dbl(X)) -> dbl(proper(X)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(dbls(X)) -> dbls(proper(X)),proper(nil) -> ok(nil),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),proper(indx(X1,X2)) -> indx(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),dbl(ok(X)) -> ok(dbl(X)),s(ok(X)) -> ok(s(X)),dbls(ok(X)) -> ok(dbls(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),indx(ok(X1),ok(X2)) -> ok(indx(X1,X2)),from(ok(X)) -> ok(from(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_12_Luc96a_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("from",1),("mark",1),("s",1),("sel",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(sel(0,cons(X,Y))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),mark(from(X)) -> active(from(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),mark(0) -> active(0),from(mark(X)) -> from(X),from(active(X)) -> from(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_12_Luc96a_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__from",1),("a__sel",2),("cons",2),("from",1),("mark",1),("s",1),("sel",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__from(X) -> cons(mark(X),from(s(X))),a__sel(0,cons(X,Y)) -> mark(X),a__sel(s(X),cons(Y,Z)) -> a__sel(mark(X),mark(Z)),mark(from(X)) -> a__from(mark(X)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(0) -> 0,a__from(X) -> from(X),a__sel(X1,X2) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex3_12_Luc96a_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("from",1),("mark",1),("ok",1),("proper",1),("s",1),("sel",2),("top",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(sel(0,cons(X,Y))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),active(from(X)) -> from(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),from(mark(X)) -> mark(from(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),proper(from(X)) -> from(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),proper(0) -> ok(0),from(ok(X)) -> ok(from(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex2_Luc03b_L.xml" :
TRS {trsSignature = fromList [("0",0),("add",2),("cons",1),("from",1),("fst",2),("len",1),("nil",0),("s",0)], trsVariables = fromList ["X","Y","Z"], trsRMap = [], trsRules = [fst(0,Z) -> nil,fst(s,cons(Y)) -> cons(Y),from(X) -> cons(X),add(0,X) -> X,add(s,Y) -> s,len(nil) -> 0,len(cons(X)) -> s], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex2_Luc03b_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("from",1),("fst",2),("len",1),("mark",1),("nil",0),("s",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(fst(0,Z)) -> mark(nil),active(fst(s(X),cons(Y,Z))) -> mark(cons(Y,fst(X,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(len(nil)) -> mark(0),active(len(cons(X,Z))) -> mark(s(len(Z))),mark(fst(X1,X2)) -> active(fst(mark(X1),mark(X2))),mark(0) -> active(0),mark(nil) -> active(nil),mark(s(X)) -> active(s(X)),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(from(X)) -> active(from(mark(X))),mark(add(X1,X2)) -> active(add(mark(X1),mark(X2))),mark(len(X)) -> active(len(mark(X))),fst(mark(X1),X2) -> fst(X1,X2),fst(X1,mark(X2)) -> fst(X1,X2),fst(active(X1),X2) -> fst(X1,X2),fst(X1,active(X2)) -> fst(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),from(mark(X)) -> from(X),from(active(X)) -> from(X),add(mark(X1),X2) -> add(X1,X2),add(X1,mark(X2)) -> add(X1,X2),add(active(X1),X2) -> add(X1,X2),add(X1,active(X2)) -> add(X1,X2),len(mark(X)) -> len(X),len(active(X)) -> len(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex2_Luc03b_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__add",2),("a__from",1),("a__fst",2),("a__len",1),("add",2),("cons",2),("from",1),("fst",2),("len",1),("mark",1),("nil",0),("s",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__fst(0,Z) -> nil,a__fst(s(X),cons(Y,Z)) -> cons(mark(Y),fst(X,Z)),a__from(X) -> cons(mark(X),from(s(X))),a__add(0,X) -> mark(X),a__add(s(X),Y) -> s(add(X,Y)),a__len(nil) -> 0,a__len(cons(X,Z)) -> s(len(Z)),mark(fst(X1,X2)) -> a__fst(mark(X1),mark(X2)),mark(from(X)) -> a__from(mark(X)),mark(add(X1,X2)) -> a__add(mark(X1),mark(X2)),mark(len(X)) -> a__len(mark(X)),mark(0) -> 0,mark(s(X)) -> s(X),mark(nil) -> nil,mark(cons(X1,X2)) -> cons(mark(X1),X2),a__fst(X1,X2) -> fst(X1,X2),a__from(X) -> from(X),a__add(X1,X2) -> add(X1,X2),a__len(X) -> len(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex2_Luc03b_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("from",1),("fst",2),("len",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(fst(0,Z)) -> mark(nil),active(fst(s(X),cons(Y,Z))) -> mark(cons(Y,fst(X,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(len(nil)) -> mark(0),active(len(cons(X,Z))) -> mark(s(len(Z))),active(cons(X1,X2)) -> cons(active(X1),X2),active(fst(X1,X2)) -> fst(active(X1),X2),active(fst(X1,X2)) -> fst(X1,active(X2)),active(from(X)) -> from(active(X)),active(add(X1,X2)) -> add(active(X1),X2),active(add(X1,X2)) -> add(X1,active(X2)),active(len(X)) -> len(active(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),fst(mark(X1),X2) -> mark(fst(X1,X2)),fst(X1,mark(X2)) -> mark(fst(X1,X2)),from(mark(X)) -> mark(from(X)),add(mark(X1),X2) -> mark(add(X1,X2)),add(X1,mark(X2)) -> mark(add(X1,X2)),len(mark(X)) -> mark(len(X)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(nil) -> ok(nil),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(fst(X1,X2)) -> fst(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),proper(add(X1,X2)) -> add(proper(X1),proper(X2)),proper(len(X)) -> len(proper(X)),s(ok(X)) -> ok(s(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),fst(ok(X1),ok(X2)) -> ok(fst(X1,X2)),from(ok(X)) -> ok(from(X)),add(ok(X1),ok(X2)) -> ok(add(X1,X2)),len(ok(X)) -> ok(len(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex2_Luc02a_L.xml" :
TRS {trsSignature = fromList [("0",0),("add",2),("cons",1),("dbl",1),("first",2),("nil",0),("recip",1),("s",1),("sqr",1),("terms",1)], trsVariables = fromList ["N","X","Y"], trsRMap = [], trsRules = [terms(N) -> cons(recip(sqr(N))),sqr(0) -> 0,sqr(s(X)) -> s(add(sqr(X),dbl(X))),dbl(0) -> 0,dbl(s(X)) -> s(s(dbl(X))),add(0,X) -> X,add(s(X),Y) -> s(add(X,Y)),first(0,X) -> nil,first(s(X),cons(Y)) -> cons(Y)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex2_Luc02a_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("dbl",1),("first",2),("mark",1),("nil",0),("recip",1),("s",1),("sqr",1),("terms",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N)))),active(sqr(0)) -> mark(0),active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X)))),active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),mark(terms(X)) -> active(terms(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(recip(X)) -> active(recip(mark(X))),mark(sqr(X)) -> active(sqr(mark(X))),mark(s(X)) -> active(s(mark(X))),mark(0) -> active(0),mark(add(X1,X2)) -> active(add(mark(X1),mark(X2))),mark(dbl(X)) -> active(dbl(mark(X))),mark(first(X1,X2)) -> active(first(mark(X1),mark(X2))),mark(nil) -> active(nil),terms(mark(X)) -> terms(X),terms(active(X)) -> terms(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),recip(mark(X)) -> recip(X),recip(active(X)) -> recip(X),sqr(mark(X)) -> sqr(X),sqr(active(X)) -> sqr(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),add(mark(X1),X2) -> add(X1,X2),add(X1,mark(X2)) -> add(X1,X2),add(active(X1),X2) -> add(X1,X2),add(X1,active(X2)) -> add(X1,X2),dbl(mark(X)) -> dbl(X),dbl(active(X)) -> dbl(X),first(mark(X1),X2) -> first(X1,X2),first(X1,mark(X2)) -> first(X1,X2),first(active(X1),X2) -> first(X1,X2),first(X1,active(X2)) -> first(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex2_Luc02a_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__add",2),("a__dbl",1),("a__first",2),("a__sqr",1),("a__terms",1),("add",2),("cons",2),("dbl",1),("first",2),("mark",1),("nil",0),("recip",1),("s",1),("sqr",1),("terms",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__terms(N) -> cons(recip(a__sqr(mark(N))),terms(s(N))),a__sqr(0) -> 0,a__sqr(s(X)) -> s(a__add(a__sqr(mark(X)),a__dbl(mark(X)))),a__dbl(0) -> 0,a__dbl(s(X)) -> s(s(a__dbl(mark(X)))),a__add(0,X) -> mark(X),a__add(s(X),Y) -> s(a__add(mark(X),mark(Y))),a__first(0,X) -> nil,a__first(s(X),cons(Y,Z)) -> cons(mark(Y),first(X,Z)),mark(terms(X)) -> a__terms(mark(X)),mark(sqr(X)) -> a__sqr(mark(X)),mark(add(X1,X2)) -> a__add(mark(X1),mark(X2)),mark(dbl(X)) -> a__dbl(mark(X)),mark(first(X1,X2)) -> a__first(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(recip(X)) -> recip(mark(X)),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(nil) -> nil,a__terms(X) -> terms(X),a__sqr(X) -> sqr(X),a__add(X1,X2) -> add(X1,X2),a__dbl(X) -> dbl(X),a__first(X1,X2) -> first(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex2_Luc02a_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("dbl",1),("first",2),("mark",1),("nil",0),("ok",1),("proper",1),("recip",1),("s",1),("sqr",1),("terms",1),("top",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N)))),active(sqr(0)) -> mark(0),active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X)))),active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(terms(X)) -> terms(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(recip(X)) -> recip(active(X)),active(sqr(X)) -> sqr(active(X)),active(s(X)) -> s(active(X)),active(add(X1,X2)) -> add(active(X1),X2),active(add(X1,X2)) -> add(X1,active(X2)),active(dbl(X)) -> dbl(active(X)),active(first(X1,X2)) -> first(active(X1),X2),active(first(X1,X2)) -> first(X1,active(X2)),terms(mark(X)) -> mark(terms(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),recip(mark(X)) -> mark(recip(X)),sqr(mark(X)) -> mark(sqr(X)),s(mark(X)) -> mark(s(X)),add(mark(X1),X2) -> mark(add(X1,X2)),add(X1,mark(X2)) -> mark(add(X1,X2)),dbl(mark(X)) -> mark(dbl(X)),first(mark(X1),X2) -> mark(first(X1,X2)),first(X1,mark(X2)) -> mark(first(X1,X2)),proper(terms(X)) -> terms(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(recip(X)) -> recip(proper(X)),proper(sqr(X)) -> sqr(proper(X)),proper(s(X)) -> s(proper(X)),proper(0) -> ok(0),proper(add(X1,X2)) -> add(proper(X1),proper(X2)),proper(dbl(X)) -> dbl(proper(X)),proper(first(X1,X2)) -> first(proper(X1),proper(X2)),proper(nil) -> ok(nil),terms(ok(X)) -> ok(terms(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),recip(ok(X)) -> ok(recip(X)),sqr(ok(X)) -> ok(sqr(X)),s(ok(X)) -> ok(s(X)),add(ok(X1),ok(X2)) -> ok(add(X1,X2)),dbl(ok(X)) -> ok(dbl(X)),first(ok(X1),ok(X2)) -> ok(first(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex26_Luc03b_L.xml" :
TRS {trsSignature = fromList [("0",0),("add",2),("cons",1),("dbl",1),("first",2),("nil",0),("recip",1),("s",0),("sqr",1),("terms",1)], trsVariables = fromList ["N","X","Y"], trsRMap = [], trsRules = [terms(N) -> cons(recip(sqr(N))),sqr(0) -> 0,sqr(s) -> s,dbl(0) -> 0,dbl(s) -> s,add(0,X) -> X,add(s,Y) -> s,first(0,X) -> nil,first(s,cons(Y)) -> cons(Y)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex26_Luc03b_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("dbl",1),("first",2),("mark",1),("nil",0),("recip",1),("s",1),("sqr",1),("terms",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N)))),active(sqr(0)) -> mark(0),active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X)))),active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),mark(terms(X)) -> active(terms(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(recip(X)) -> active(recip(mark(X))),mark(sqr(X)) -> active(sqr(mark(X))),mark(s(X)) -> active(s(X)),mark(0) -> active(0),mark(add(X1,X2)) -> active(add(mark(X1),mark(X2))),mark(dbl(X)) -> active(dbl(mark(X))),mark(first(X1,X2)) -> active(first(mark(X1),mark(X2))),mark(nil) -> active(nil),terms(mark(X)) -> terms(X),terms(active(X)) -> terms(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),recip(mark(X)) -> recip(X),recip(active(X)) -> recip(X),sqr(mark(X)) -> sqr(X),sqr(active(X)) -> sqr(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),add(mark(X1),X2) -> add(X1,X2),add(X1,mark(X2)) -> add(X1,X2),add(active(X1),X2) -> add(X1,X2),add(X1,active(X2)) -> add(X1,X2),dbl(mark(X)) -> dbl(X),dbl(active(X)) -> dbl(X),first(mark(X1),X2) -> first(X1,X2),first(X1,mark(X2)) -> first(X1,X2),first(active(X1),X2) -> first(X1,X2),first(X1,active(X2)) -> first(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex26_Luc03b_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__add",2),("a__dbl",1),("a__first",2),("a__sqr",1),("a__terms",1),("add",2),("cons",2),("dbl",1),("first",2),("mark",1),("nil",0),("recip",1),("s",1),("sqr",1),("terms",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__terms(N) -> cons(recip(a__sqr(mark(N))),terms(s(N))),a__sqr(0) -> 0,a__sqr(s(X)) -> s(add(sqr(X),dbl(X))),a__dbl(0) -> 0,a__dbl(s(X)) -> s(s(dbl(X))),a__add(0,X) -> mark(X),a__add(s(X),Y) -> s(add(X,Y)),a__first(0,X) -> nil,a__first(s(X),cons(Y,Z)) -> cons(mark(Y),first(X,Z)),mark(terms(X)) -> a__terms(mark(X)),mark(sqr(X)) -> a__sqr(mark(X)),mark(add(X1,X2)) -> a__add(mark(X1),mark(X2)),mark(dbl(X)) -> a__dbl(mark(X)),mark(first(X1,X2)) -> a__first(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(recip(X)) -> recip(mark(X)),mark(s(X)) -> s(X),mark(0) -> 0,mark(nil) -> nil,a__terms(X) -> terms(X),a__sqr(X) -> sqr(X),a__add(X1,X2) -> add(X1,X2),a__dbl(X) -> dbl(X),a__first(X1,X2) -> first(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex26_Luc03b_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("cons",2),("dbl",1),("first",2),("mark",1),("nil",0),("ok",1),("proper",1),("recip",1),("s",1),("sqr",1),("terms",1),("top",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N)))),active(sqr(0)) -> mark(0),active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X)))),active(dbl(0)) -> mark(0),active(dbl(s(X))) -> mark(s(s(dbl(X)))),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(terms(X)) -> terms(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(recip(X)) -> recip(active(X)),active(sqr(X)) -> sqr(active(X)),active(add(X1,X2)) -> add(active(X1),X2),active(add(X1,X2)) -> add(X1,active(X2)),active(dbl(X)) -> dbl(active(X)),active(first(X1,X2)) -> first(active(X1),X2),active(first(X1,X2)) -> first(X1,active(X2)),terms(mark(X)) -> mark(terms(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),recip(mark(X)) -> mark(recip(X)),sqr(mark(X)) -> mark(sqr(X)),add(mark(X1),X2) -> mark(add(X1,X2)),add(X1,mark(X2)) -> mark(add(X1,X2)),dbl(mark(X)) -> mark(dbl(X)),first(mark(X1),X2) -> mark(first(X1,X2)),first(X1,mark(X2)) -> mark(first(X1,X2)),proper(terms(X)) -> terms(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(recip(X)) -> recip(proper(X)),proper(sqr(X)) -> sqr(proper(X)),proper(s(X)) -> s(proper(X)),proper(0) -> ok(0),proper(add(X1,X2)) -> add(proper(X1),proper(X2)),proper(dbl(X)) -> dbl(proper(X)),proper(first(X1,X2)) -> first(proper(X1),proper(X2)),proper(nil) -> ok(nil),terms(ok(X)) -> ok(terms(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),recip(ok(X)) -> ok(recip(X)),sqr(ok(X)) -> ok(sqr(X)),s(ok(X)) -> ok(s(X)),add(ok(X1),ok(X2)) -> ok(add(X1,X2)),dbl(ok(X)) -> ok(dbl(X)),first(ok(X1),ok(X2)) -> ok(first(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex25_Luc06_L.xml" :
TRS {trsSignature = fromList [("c",0),("d",0),("f",1),("h",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [f(f(X)) -> c,c -> d,h(X) -> c], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex25_Luc06_iGM.xml" :
TRS {trsSignature = fromList [("active",1),("c",1),("d",1),("f",1),("g",1),("h",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(f(X))) -> mark(c(f(g(f(X))))),active(c(X)) -> mark(d(X)),active(h(X)) -> mark(c(d(X))),mark(f(X)) -> active(f(mark(X))),mark(c(X)) -> active(c(X)),mark(g(X)) -> active(g(X)),mark(d(X)) -> active(d(X)),mark(h(X)) -> active(h(mark(X))),f(mark(X)) -> f(X),f(active(X)) -> f(X),c(mark(X)) -> c(X),c(active(X)) -> c(X),g(mark(X)) -> g(X),g(active(X)) -> g(X),d(mark(X)) -> d(X),d(active(X)) -> d(X),h(mark(X)) -> h(X),h(active(X)) -> h(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex25_Luc06_GM.xml" :
TRS {trsSignature = fromList [("a__c",1),("a__f",1),("a__h",1),("c",1),("d",1),("f",1),("g",1),("h",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [a__f(f(X)) -> a__c(f(g(f(X)))),a__c(X) -> d(X),a__h(X) -> a__c(d(X)),mark(f(X)) -> a__f(mark(X)),mark(c(X)) -> a__c(X),mark(h(X)) -> a__h(mark(X)),mark(g(X)) -> g(X),mark(d(X)) -> d(X),a__f(X) -> f(X),a__c(X) -> c(X),a__h(X) -> h(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex25_Luc06_C.xml" :
TRS {trsSignature = fromList [("active",1),("c",1),("d",1),("f",1),("g",1),("h",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(f(X))) -> mark(c(f(g(f(X))))),active(c(X)) -> mark(d(X)),active(h(X)) -> mark(c(d(X))),active(f(X)) -> f(active(X)),active(h(X)) -> h(active(X)),f(mark(X)) -> mark(f(X)),h(mark(X)) -> mark(h(X)),proper(f(X)) -> f(proper(X)),proper(c(X)) -> c(proper(X)),proper(g(X)) -> g(proper(X)),proper(d(X)) -> d(proper(X)),proper(h(X)) -> h(proper(X)),f(ok(X)) -> ok(f(X)),c(ok(X)) -> ok(c(X)),g(ok(X)) -> ok(g(X)),d(ok(X)) -> ok(d(X)),h(ok(X)) -> ok(h(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex24_Luc06_iGM.xml" :
TRS {trsSignature = fromList [("active",1),("b",0),("c",0),("f",3),("mark",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [active(f(b,X,c)) -> mark(f(X,c,X)),active(c) -> mark(b),mark(f(X1,X2,X3)) -> active(f(X1,mark(X2),X3)),mark(b) -> active(b),mark(c) -> active(c),f(mark(X1),X2,X3) -> f(X1,X2,X3),f(X1,mark(X2),X3) -> f(X1,X2,X3),f(X1,X2,mark(X3)) -> f(X1,X2,X3),f(active(X1),X2,X3) -> f(X1,X2,X3),f(X1,active(X2),X3) -> f(X1,X2,X3),f(X1,X2,active(X3)) -> f(X1,X2,X3)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex24_Luc06_GM.xml" :
TRS {trsSignature = fromList [("a__c",0),("a__f",3),("b",0),("c",0),("f",3),("mark",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [a__f(b,X,c) -> a__f(X,a__c,X),a__c -> b,mark(f(X1,X2,X3)) -> a__f(X1,mark(X2),X3),mark(c) -> a__c,mark(b) -> b,a__f(X1,X2,X3) -> f(X1,X2,X3),a__c -> c], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex24_Luc06_C.xml" :
TRS {trsSignature = fromList [("active",1),("b",0),("c",0),("f",3),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [active(f(b,X,c)) -> mark(f(X,c,X)),active(c) -> mark(b),active(f(X1,X2,X3)) -> f(X1,active(X2),X3),f(X1,mark(X2),X3) -> mark(f(X1,X2,X3)),proper(f(X1,X2,X3)) -> f(proper(X1),proper(X2),proper(X3)),proper(b) -> ok(b),proper(c) -> ok(c),f(ok(X1),ok(X2),ok(X3)) -> ok(f(X1,X2,X3)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex24_GM04_iGM.xml" :
TRS {trsSignature = fromList [("active",1),("b",0),("c",0),("f",3),("g",1),("mark",1)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(f(X,g(X),Y)) -> mark(f(Y,Y,Y)),active(g(b)) -> mark(c),active(b) -> mark(c),mark(f(X1,X2,X3)) -> active(f(X1,X2,X3)),mark(g(X)) -> active(g(mark(X))),mark(b) -> active(b),mark(c) -> active(c),f(mark(X1),X2,X3) -> f(X1,X2,X3),f(X1,mark(X2),X3) -> f(X1,X2,X3),f(X1,X2,mark(X3)) -> f(X1,X2,X3),f(active(X1),X2,X3) -> f(X1,X2,X3),f(X1,active(X2),X3) -> f(X1,X2,X3),f(X1,X2,active(X3)) -> f(X1,X2,X3),g(mark(X)) -> g(X),g(active(X)) -> g(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex24_GM04_GM.xml" :
TRS {trsSignature = fromList [("a__b",0),("a__f",3),("a__g",1),("b",0),("c",0),("f",3),("g",1),("mark",1)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [a__f(X,g(X),Y) -> a__f(Y,Y,Y),a__g(b) -> c,a__b -> c,mark(f(X1,X2,X3)) -> a__f(X1,X2,X3),mark(g(X)) -> a__g(mark(X)),mark(b) -> a__b,mark(c) -> c,a__f(X1,X2,X3) -> f(X1,X2,X3),a__g(X) -> g(X),a__b -> b], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex24_GM04_C.xml" :
TRS {trsSignature = fromList [("active",1),("b",0),("c",0),("f",3),("g",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(f(X,g(X),Y)) -> mark(f(Y,Y,Y)),active(g(b)) -> mark(c),active(b) -> mark(c),active(g(X)) -> g(active(X)),g(mark(X)) -> mark(g(X)),proper(f(X1,X2,X3)) -> f(proper(X1),proper(X2),proper(X3)),proper(g(X)) -> g(proper(X)),proper(b) -> ok(b),proper(c) -> ok(c),f(ok(X1),ok(X2),ok(X3)) -> ok(f(X1,X2,X3)),g(ok(X)) -> ok(g(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex23_Luc06_L.xml" :
TRS {trsSignature = fromList [("a",0),("c",0),("f",1)], trsVariables = fromList [], trsRMap = [], trsRules = [f(f(a)) -> c], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex23_Luc06_iGM.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("c",1),("f",1),("g",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(f(a))) -> mark(c(f(g(f(a))))),mark(f(X)) -> active(f(mark(X))),mark(a) -> active(a),mark(c(X)) -> active(c(X)),mark(g(X)) -> active(g(mark(X))),f(mark(X)) -> f(X),f(active(X)) -> f(X),c(mark(X)) -> c(X),c(active(X)) -> c(X),g(mark(X)) -> g(X),g(active(X)) -> g(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex23_Luc06_GM.xml" :
TRS {trsSignature = fromList [("a",0),("a__f",1),("c",1),("f",1),("g",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [a__f(f(a)) -> c(f(g(f(a)))),mark(f(X)) -> a__f(mark(X)),mark(a) -> a,mark(c(X)) -> c(X),mark(g(X)) -> g(mark(X)),a__f(X) -> f(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex23_Luc06_C.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("c",1),("f",1),("g",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(f(a))) -> mark(c(f(g(f(a))))),active(f(X)) -> f(active(X)),active(g(X)) -> g(active(X)),f(mark(X)) -> mark(f(X)),g(mark(X)) -> mark(g(X)),proper(f(X)) -> f(proper(X)),proper(a) -> ok(a),proper(c(X)) -> c(proper(X)),proper(g(X)) -> g(proper(X)),f(ok(X)) -> ok(f(X)),c(ok(X)) -> ok(c(X)),g(ok(X)) -> ok(g(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_Zan97_iGM.xml" :
TRS {trsSignature = fromList [("active",1),("c",0),("d",0),("g",1),("h",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(g(X)) -> mark(h(X)),active(c) -> mark(d),active(h(d)) -> mark(g(c)),mark(g(X)) -> active(g(X)),mark(h(X)) -> active(h(X)),mark(c) -> active(c),mark(d) -> active(d),g(mark(X)) -> g(X),g(active(X)) -> g(X),h(mark(X)) -> h(X),h(active(X)) -> h(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_Zan97_GM.xml" :
TRS {trsSignature = fromList [("a__c",0),("a__g",1),("a__h",1),("c",0),("d",0),("g",1),("h",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [a__g(X) -> a__h(X),a__c -> d,a__h(d) -> a__g(c),mark(g(X)) -> a__g(X),mark(h(X)) -> a__h(X),mark(c) -> a__c,mark(d) -> d,a__g(X) -> g(X),a__h(X) -> h(X),a__c -> c], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_Zan97_C.xml" :
TRS {trsSignature = fromList [("active",1),("c",0),("d",0),("g",1),("h",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(g(X)) -> mark(h(X)),active(c) -> mark(d),active(h(d)) -> mark(g(c)),proper(g(X)) -> g(proper(X)),proper(h(X)) -> h(proper(X)),proper(c) -> ok(c),proper(d) -> ok(d),g(ok(X)) -> ok(g(X)),h(ok(X)) -> ok(h(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_Luc04b_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("head",1),("incr",1),("mark",1),("nats",0),("odds",0),("pairs",0),("s",1),("tail",1)], trsVariables = fromList ["X","X1","X2","XS"], trsRMap = [], trsRules = [active(nats) -> mark(cons(0,incr(nats))),active(pairs) -> mark(cons(0,incr(odds))),active(odds) -> mark(incr(pairs)),active(incr(cons(X,XS))) -> mark(cons(s(X),incr(XS))),active(head(cons(X,XS))) -> mark(X),active(tail(cons(X,XS))) -> mark(XS),mark(nats) -> active(nats),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(0) -> active(0),mark(incr(X)) -> active(incr(mark(X))),mark(pairs) -> active(pairs),mark(odds) -> active(odds),mark(s(X)) -> active(s(mark(X))),mark(head(X)) -> active(head(mark(X))),mark(tail(X)) -> active(tail(mark(X))),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),incr(mark(X)) -> incr(X),incr(active(X)) -> incr(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),head(mark(X)) -> head(X),head(active(X)) -> head(X),tail(mark(X)) -> tail(X),tail(active(X)) -> tail(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_Luc04b_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__head",1),("a__incr",1),("a__nats",0),("a__odds",0),("a__pairs",0),("a__tail",1),("cons",2),("head",1),("incr",1),("mark",1),("nats",0),("odds",0),("pairs",0),("s",1),("tail",1)], trsVariables = fromList ["X","X1","X2","XS"], trsRMap = [], trsRules = [a__nats -> cons(0,incr(nats)),a__pairs -> cons(0,incr(odds)),a__odds -> a__incr(a__pairs),a__incr(cons(X,XS)) -> cons(s(mark(X)),incr(XS)),a__head(cons(X,XS)) -> mark(X),a__tail(cons(X,XS)) -> mark(XS),mark(nats) -> a__nats,mark(incr(X)) -> a__incr(mark(X)),mark(pairs) -> a__pairs,mark(odds) -> a__odds,mark(head(X)) -> a__head(mark(X)),mark(tail(X)) -> a__tail(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(0) -> 0,mark(s(X)) -> s(mark(X)),a__nats -> nats,a__incr(X) -> incr(X),a__pairs -> pairs,a__odds -> odds,a__head(X) -> head(X),a__tail(X) -> tail(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_Luc04b_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("head",1),("incr",1),("mark",1),("nats",0),("odds",0),("ok",1),("pairs",0),("proper",1),("s",1),("tail",1),("top",1)], trsVariables = fromList ["X","X1","X2","XS"], trsRMap = [], trsRules = [active(nats) -> mark(cons(0,incr(nats))),active(pairs) -> mark(cons(0,incr(odds))),active(odds) -> mark(incr(pairs)),active(incr(cons(X,XS))) -> mark(cons(s(X),incr(XS))),active(head(cons(X,XS))) -> mark(X),active(tail(cons(X,XS))) -> mark(XS),active(cons(X1,X2)) -> cons(active(X1),X2),active(incr(X)) -> incr(active(X)),active(s(X)) -> s(active(X)),active(head(X)) -> head(active(X)),active(tail(X)) -> tail(active(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),incr(mark(X)) -> mark(incr(X)),s(mark(X)) -> mark(s(X)),head(mark(X)) -> mark(head(X)),tail(mark(X)) -> mark(tail(X)),proper(nats) -> ok(nats),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(0) -> ok(0),proper(incr(X)) -> incr(proper(X)),proper(pairs) -> ok(pairs),proper(odds) -> ok(odds),proper(s(X)) -> s(proper(X)),proper(head(X)) -> head(proper(X)),proper(tail(X)) -> tail(proper(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),incr(ok(X)) -> ok(incr(X)),s(ok(X)) -> ok(s(X)),head(ok(X)) -> ok(head(X)),tail(ok(X)) -> ok(tail(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_Luc02b_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("first",2),("from",1),("mark",1),("nil",0),("s",1),("sel",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(first(0,Z)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(sel(0,cons(X,Z))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),mark(from(X)) -> active(from(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(first(X1,X2)) -> active(first(mark(X1),mark(X2))),mark(0) -> active(0),mark(nil) -> active(nil),mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2))),from(mark(X)) -> from(X),from(active(X)) -> from(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),first(mark(X1),X2) -> first(X1,X2),first(X1,mark(X2)) -> first(X1,X2),first(active(X1),X2) -> first(X1,X2),first(X1,active(X2)) -> first(X1,X2),sel(mark(X1),X2) -> sel(X1,X2),sel(X1,mark(X2)) -> sel(X1,X2),sel(active(X1),X2) -> sel(X1,X2),sel(X1,active(X2)) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_Luc02b_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__first",2),("a__from",1),("a__sel",2),("cons",2),("first",2),("from",1),("mark",1),("nil",0),("s",1),("sel",2)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__from(X) -> cons(mark(X),from(s(X))),a__first(0,Z) -> nil,a__first(s(X),cons(Y,Z)) -> cons(mark(Y),first(X,Z)),a__sel(0,cons(X,Z)) -> mark(X),a__sel(s(X),cons(Y,Z)) -> a__sel(mark(X),mark(Z)),mark(from(X)) -> a__from(mark(X)),mark(first(X1,X2)) -> a__first(mark(X1),mark(X2)),mark(sel(X1,X2)) -> a__sel(mark(X1),mark(X2)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(0) -> 0,mark(nil) -> nil,a__from(X) -> from(X),a__first(X1,X2) -> first(X1,X2),a__sel(X1,X2) -> sel(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_Luc02b_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("first",2),("from",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("sel",2),("top",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(first(0,Z)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(sel(0,cons(X,Z))) -> mark(X),active(sel(s(X),cons(Y,Z))) -> mark(sel(X,Z)),active(from(X)) -> from(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),active(first(X1,X2)) -> first(active(X1),X2),active(first(X1,X2)) -> first(X1,active(X2)),active(sel(X1,X2)) -> sel(active(X1),X2),active(sel(X1,X2)) -> sel(X1,active(X2)),from(mark(X)) -> mark(from(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),first(mark(X1),X2) -> mark(first(X1,X2)),first(X1,mark(X2)) -> mark(first(X1,X2)),sel(mark(X1),X2) -> mark(sel(X1,X2)),sel(X1,mark(X2)) -> mark(sel(X1,X2)),proper(from(X)) -> from(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(first(X1,X2)) -> first(proper(X1),proper(X2)),proper(0) -> ok(0),proper(nil) -> ok(nil),proper(sel(X1,X2)) -> sel(proper(X1),proper(X2)),from(ok(X)) -> ok(from(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),first(ok(X1),ok(X2)) -> ok(first(X1,X2)),sel(ok(X1),ok(X2)) -> ok(sel(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_GM99_iGM.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("c",0),("f",3),("mark",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [active(f(a,b,X)) -> mark(f(X,X,X)),active(c) -> mark(a),active(c) -> mark(b),mark(f(X1,X2,X3)) -> active(f(X1,X2,mark(X3))),mark(a) -> active(a),mark(b) -> active(b),mark(c) -> active(c),f(mark(X1),X2,X3) -> f(X1,X2,X3),f(X1,mark(X2),X3) -> f(X1,X2,X3),f(X1,X2,mark(X3)) -> f(X1,X2,X3),f(active(X1),X2,X3) -> f(X1,X2,X3),f(X1,active(X2),X3) -> f(X1,X2,X3),f(X1,X2,active(X3)) -> f(X1,X2,X3)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_GM99_GM.xml" :
TRS {trsSignature = fromList [("a",0),("a__c",0),("a__f",3),("b",0),("c",0),("f",3),("mark",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [a__f(a,b,X) -> a__f(X,X,mark(X)),a__c -> a,a__c -> b,mark(f(X1,X2,X3)) -> a__f(X1,X2,mark(X3)),mark(c) -> a__c,mark(a) -> a,mark(b) -> b,a__f(X1,X2,X3) -> f(X1,X2,X3),a__c -> c], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_GM99_C.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("c",0),("f",3),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X","X1","X2","X3"], trsRMap = [], trsRules = [active(f(a,b,X)) -> mark(f(X,X,X)),active(c) -> mark(a),active(c) -> mark(b),active(f(X1,X2,X3)) -> f(X1,X2,active(X3)),f(X1,X2,mark(X3)) -> mark(f(X1,X2,X3)),proper(f(X1,X2,X3)) -> f(proper(X1),proper(X2),proper(X3)),proper(a) -> ok(a),proper(b) -> ok(b),proper(c) -> ok(c),f(ok(X1),ok(X2),ok(X3)) -> ok(f(X1,X2,X3)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_GM03_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("diff",2),("false",0),("if",3),("leq",2),("mark",1),("p",1),("s",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(p(0)) -> mark(0),active(p(s(X))) -> mark(X),active(leq(0,Y)) -> mark(true),active(leq(s(X),0)) -> mark(false),active(leq(s(X),s(Y))) -> mark(leq(X,Y)),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(diff(X,Y)) -> mark(if(leq(X,Y),0,s(diff(p(X),Y)))),mark(p(X)) -> active(p(mark(X))),mark(0) -> active(0),mark(s(X)) -> active(s(mark(X))),mark(leq(X1,X2)) -> active(leq(mark(X1),mark(X2))),mark(true) -> active(true),mark(false) -> active(false),mark(if(X1,X2,X3)) -> active(if(mark(X1),X2,X3)),mark(diff(X1,X2)) -> active(diff(mark(X1),mark(X2))),p(mark(X)) -> p(X),p(active(X)) -> p(X),s(mark(X)) -> s(X),s(active(X)) -> s(X),leq(mark(X1),X2) -> leq(X1,X2),leq(X1,mark(X2)) -> leq(X1,X2),leq(active(X1),X2) -> leq(X1,X2),leq(X1,active(X2)) -> leq(X1,X2),if(mark(X1),X2,X3) -> if(X1,X2,X3),if(X1,mark(X2),X3) -> if(X1,X2,X3),if(X1,X2,mark(X3)) -> if(X1,X2,X3),if(active(X1),X2,X3) -> if(X1,X2,X3),if(X1,active(X2),X3) -> if(X1,X2,X3),if(X1,X2,active(X3)) -> if(X1,X2,X3),diff(mark(X1),X2) -> diff(X1,X2),diff(X1,mark(X2)) -> diff(X1,X2),diff(active(X1),X2) -> diff(X1,X2),diff(X1,active(X2)) -> diff(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_GM03_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__diff",2),("a__if",3),("a__leq",2),("a__p",1),("diff",2),("false",0),("if",3),("leq",2),("mark",1),("p",1),("s",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [a__p(0) -> 0,a__p(s(X)) -> mark(X),a__leq(0,Y) -> true,a__leq(s(X),0) -> false,a__leq(s(X),s(Y)) -> a__leq(mark(X),mark(Y)),a__if(true,X,Y) -> mark(X),a__if(false,X,Y) -> mark(Y),a__diff(X,Y) -> a__if(a__leq(mark(X),mark(Y)),0,s(diff(p(X),Y))),mark(p(X)) -> a__p(mark(X)),mark(leq(X1,X2)) -> a__leq(mark(X1),mark(X2)),mark(if(X1,X2,X3)) -> a__if(mark(X1),X2,X3),mark(diff(X1,X2)) -> a__diff(mark(X1),mark(X2)),mark(0) -> 0,mark(s(X)) -> s(mark(X)),mark(true) -> true,mark(false) -> false,a__p(X) -> p(X),a__leq(X1,X2) -> leq(X1,X2),a__if(X1,X2,X3) -> if(X1,X2,X3),a__diff(X1,X2) -> diff(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_GM03_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("diff",2),("false",0),("if",3),("leq",2),("mark",1),("ok",1),("p",1),("proper",1),("s",1),("top",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y"], trsRMap = [], trsRules = [active(p(0)) -> mark(0),active(p(s(X))) -> mark(X),active(leq(0,Y)) -> mark(true),active(leq(s(X),0)) -> mark(false),active(leq(s(X),s(Y))) -> mark(leq(X,Y)),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(diff(X,Y)) -> mark(if(leq(X,Y),0,s(diff(p(X),Y)))),active(p(X)) -> p(active(X)),active(s(X)) -> s(active(X)),active(leq(X1,X2)) -> leq(active(X1),X2),active(leq(X1,X2)) -> leq(X1,active(X2)),active(if(X1,X2,X3)) -> if(active(X1),X2,X3),active(diff(X1,X2)) -> diff(active(X1),X2),active(diff(X1,X2)) -> diff(X1,active(X2)),p(mark(X)) -> mark(p(X)),s(mark(X)) -> mark(s(X)),leq(mark(X1),X2) -> mark(leq(X1,X2)),leq(X1,mark(X2)) -> mark(leq(X1,X2)),if(mark(X1),X2,X3) -> mark(if(X1,X2,X3)),diff(mark(X1),X2) -> mark(diff(X1,X2)),diff(X1,mark(X2)) -> mark(diff(X1,X2)),proper(p(X)) -> p(proper(X)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(leq(X1,X2)) -> leq(proper(X1),proper(X2)),proper(true) -> ok(true),proper(false) -> ok(false),proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3)),proper(diff(X1,X2)) -> diff(proper(X1),proper(X2)),p(ok(X)) -> ok(p(X)),s(ok(X)) -> ok(s(X)),leq(ok(X1),ok(X2)) -> ok(leq(X1,X2)),if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3)),diff(ok(X1),ok(X2)) -> ok(diff(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_GL02a_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("eq",2),("false",0),("inf",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("true",0)], trsVariables = fromList ["L","X","X1","X2","Y"], trsRMap = [], trsRules = [active(eq(0,0)) -> mark(true),active(eq(s(X),s(Y))) -> mark(eq(X,Y)),active(eq(X,Y)) -> mark(false),active(inf(X)) -> mark(cons(X,inf(s(X)))),active(take(0,X)) -> mark(nil),active(take(s(X),cons(Y,L))) -> mark(cons(Y,take(X,L))),active(length(nil)) -> mark(0),active(length(cons(X,L))) -> mark(s(length(L))),mark(eq(X1,X2)) -> active(eq(X1,X2)),mark(0) -> active(0),mark(true) -> active(true),mark(s(X)) -> active(s(X)),mark(false) -> active(false),mark(inf(X)) -> active(inf(mark(X))),mark(cons(X1,X2)) -> active(cons(X1,X2)),mark(take(X1,X2)) -> active(take(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(length(X)) -> active(length(mark(X))),eq(mark(X1),X2) -> eq(X1,X2),eq(X1,mark(X2)) -> eq(X1,X2),eq(active(X1),X2) -> eq(X1,X2),eq(X1,active(X2)) -> eq(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),inf(mark(X)) -> inf(X),inf(active(X)) -> inf(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),take(mark(X1),X2) -> take(X1,X2),take(X1,mark(X2)) -> take(X1,X2),take(active(X1),X2) -> take(X1,X2),take(X1,active(X2)) -> take(X1,X2),length(mark(X)) -> length(X),length(active(X)) -> length(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_GL02a_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__eq",2),("a__inf",1),("a__length",1),("a__take",2),("cons",2),("eq",2),("false",0),("inf",1),("length",1),("mark",1),("nil",0),("s",1),("take",2),("true",0)], trsVariables = fromList ["L","X","X1","X2","Y"], trsRMap = [], trsRules = [a__eq(0,0) -> true,a__eq(s(X),s(Y)) -> a__eq(X,Y),a__eq(X,Y) -> false,a__inf(X) -> cons(X,inf(s(X))),a__take(0,X) -> nil,a__take(s(X),cons(Y,L)) -> cons(Y,take(X,L)),a__length(nil) -> 0,a__length(cons(X,L)) -> s(length(L)),mark(eq(X1,X2)) -> a__eq(X1,X2),mark(inf(X)) -> a__inf(mark(X)),mark(take(X1,X2)) -> a__take(mark(X1),mark(X2)),mark(length(X)) -> a__length(mark(X)),mark(0) -> 0,mark(true) -> true,mark(s(X)) -> s(X),mark(false) -> false,mark(cons(X1,X2)) -> cons(X1,X2),mark(nil) -> nil,a__eq(X1,X2) -> eq(X1,X2),a__inf(X) -> inf(X),a__take(X1,X2) -> take(X1,X2),a__length(X) -> length(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_GL02a_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("eq",2),("false",0),("inf",1),("length",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("take",2),("top",1),("true",0)], trsVariables = fromList ["L","X","X1","X2","Y"], trsRMap = [], trsRules = [active(eq(0,0)) -> mark(true),active(eq(s(X),s(Y))) -> mark(eq(X,Y)),active(eq(X,Y)) -> mark(false),active(inf(X)) -> mark(cons(X,inf(s(X)))),active(take(0,X)) -> mark(nil),active(take(s(X),cons(Y,L))) -> mark(cons(Y,take(X,L))),active(length(nil)) -> mark(0),active(length(cons(X,L))) -> mark(s(length(L))),active(inf(X)) -> inf(active(X)),active(take(X1,X2)) -> take(active(X1),X2),active(take(X1,X2)) -> take(X1,active(X2)),active(length(X)) -> length(active(X)),inf(mark(X)) -> mark(inf(X)),take(mark(X1),X2) -> mark(take(X1,X2)),take(X1,mark(X2)) -> mark(take(X1,X2)),length(mark(X)) -> mark(length(X)),proper(eq(X1,X2)) -> eq(proper(X1),proper(X2)),proper(0) -> ok(0),proper(true) -> ok(true),proper(s(X)) -> s(proper(X)),proper(false) -> ok(false),proper(inf(X)) -> inf(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(take(X1,X2)) -> take(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(length(X)) -> length(proper(X)),eq(ok(X1),ok(X2)) -> ok(eq(X1,X2)),s(ok(X)) -> ok(s(X)),inf(ok(X)) -> ok(inf(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),take(ok(X1),ok(X2)) -> ok(take(X1,X2)),length(ok(X)) -> ok(length(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_2_Luc02c_iGM.xml" :
TRS {trsSignature = fromList [("2nd",1),("active",1),("cons",2),("from",1),("mark",1),("s",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(2nd(cons(X,cons(Y,Z)))) -> mark(Y),active(from(X)) -> mark(cons(X,from(s(X)))),mark(2nd(X)) -> active(2nd(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(from(X)) -> active(from(mark(X))),mark(s(X)) -> active(s(mark(X))),2nd(mark(X)) -> 2nd(X),2nd(active(X)) -> 2nd(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),from(mark(X)) -> from(X),from(active(X)) -> from(X),s(mark(X)) -> s(X),s(active(X)) -> s(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_2_Luc02c_GM.xml" :
TRS {trsSignature = fromList [("2nd",1),("a__2nd",1),("a__from",1),("cons",2),("from",1),("mark",1),("s",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__2nd(cons(X,cons(Y,Z))) -> mark(Y),a__from(X) -> cons(mark(X),from(s(X))),mark(2nd(X)) -> a__2nd(mark(X)),mark(from(X)) -> a__from(mark(X)),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),a__2nd(X) -> 2nd(X),a__from(X) -> from(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_2_Luc02c_C.xml" :
TRS {trsSignature = fromList [("2nd",1),("active",1),("cons",2),("from",1),("mark",1),("ok",1),("proper",1),("s",1),("top",1)], trsVariables = fromList ["X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(2nd(cons(X,cons(Y,Z)))) -> mark(Y),active(from(X)) -> mark(cons(X,from(s(X)))),active(2nd(X)) -> 2nd(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(from(X)) -> from(active(X)),active(s(X)) -> s(active(X)),2nd(mark(X)) -> mark(2nd(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),from(mark(X)) -> mark(from(X)),s(mark(X)) -> mark(s(X)),proper(2nd(X)) -> 2nd(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),proper(s(X)) -> s(proper(X)),2nd(ok(X)) -> ok(2nd(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),from(ok(X)) -> ok(from(X)),s(ok(X)) -> ok(s(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_2_AEL03_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("2ndsneg",2),("2ndspos",2),("active",1),("cons",2),("from",1),("mark",1),("negrecip",1),("pi",1),("plus",2),("posrecip",1),("rcons",2),("rnil",0),("s",1),("square",1),("times",2)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(2ndspos(0,Z)) -> mark(rnil),active(2ndspos(s(N),cons(X,cons(Y,Z)))) -> mark(rcons(posrecip(Y),2ndsneg(N,Z))),active(2ndsneg(0,Z)) -> mark(rnil),active(2ndsneg(s(N),cons(X,cons(Y,Z)))) -> mark(rcons(negrecip(Y),2ndspos(N,Z))),active(pi(X)) -> mark(2ndspos(X,from(0))),active(plus(0,Y)) -> mark(Y),active(plus(s(X),Y)) -> mark(s(plus(X,Y))),active(times(0,Y)) -> mark(0),active(times(s(X),Y)) -> mark(plus(Y,times(X,Y))),active(square(X)) -> mark(times(X,X)),mark(from(X)) -> active(from(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(2ndspos(X1,X2)) -> active(2ndspos(mark(X1),mark(X2))),mark(0) -> active(0),mark(rnil) -> active(rnil),mark(rcons(X1,X2)) -> active(rcons(mark(X1),mark(X2))),mark(posrecip(X)) -> active(posrecip(mark(X))),mark(2ndsneg(X1,X2)) -> active(2ndsneg(mark(X1),mark(X2))),mark(negrecip(X)) -> active(negrecip(mark(X))),mark(pi(X)) -> active(pi(mark(X))),mark(plus(X1,X2)) -> active(plus(mark(X1),mark(X2))),mark(times(X1,X2)) -> active(times(mark(X1),mark(X2))),mark(square(X)) -> active(square(mark(X))),from(mark(X)) -> from(X),from(active(X)) -> from(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),2ndspos(mark(X1),X2) -> 2ndspos(X1,X2),2ndspos(X1,mark(X2)) -> 2ndspos(X1,X2),2ndspos(active(X1),X2) -> 2ndspos(X1,X2),2ndspos(X1,active(X2)) -> 2ndspos(X1,X2),rcons(mark(X1),X2) -> rcons(X1,X2),rcons(X1,mark(X2)) -> rcons(X1,X2),rcons(active(X1),X2) -> rcons(X1,X2),rcons(X1,active(X2)) -> rcons(X1,X2),posrecip(mark(X)) -> posrecip(X),posrecip(active(X)) -> posrecip(X),2ndsneg(mark(X1),X2) -> 2ndsneg(X1,X2),2ndsneg(X1,mark(X2)) -> 2ndsneg(X1,X2),2ndsneg(active(X1),X2) -> 2ndsneg(X1,X2),2ndsneg(X1,active(X2)) -> 2ndsneg(X1,X2),negrecip(mark(X)) -> negrecip(X),negrecip(active(X)) -> negrecip(X),pi(mark(X)) -> pi(X),pi(active(X)) -> pi(X),plus(mark(X1),X2) -> plus(X1,X2),plus(X1,mark(X2)) -> plus(X1,X2),plus(active(X1),X2) -> plus(X1,X2),plus(X1,active(X2)) -> plus(X1,X2),times(mark(X1),X2) -> times(X1,X2),times(X1,mark(X2)) -> times(X1,X2),times(active(X1),X2) -> times(X1,X2),times(X1,active(X2)) -> times(X1,X2),square(mark(X)) -> square(X),square(active(X)) -> square(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_2_AEL03_GM.xml" :
TRS {trsSignature = fromList [("0",0),("2ndsneg",2),("2ndspos",2),("a__2ndsneg",2),("a__2ndspos",2),("a__from",1),("a__pi",1),("a__plus",2),("a__square",1),("a__times",2),("cons",2),("from",1),("mark",1),("negrecip",1),("nil",0),("pi",1),("plus",2),("posrecip",1),("rcons",2),("rnil",0),("s",1),("square",1),("times",2)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [a__from(X) -> cons(mark(X),from(s(X))),a__2ndspos(0,Z) -> rnil,a__2ndspos(s(N),cons(X,cons(Y,Z))) -> rcons(posrecip(mark(Y)),a__2ndsneg(mark(N),mark(Z))),a__2ndsneg(0,Z) -> rnil,a__2ndsneg(s(N),cons(X,cons(Y,Z))) -> rcons(negrecip(mark(Y)),a__2ndspos(mark(N),mark(Z))),a__pi(X) -> a__2ndspos(mark(X),a__from(0)),a__plus(0,Y) -> mark(Y),a__plus(s(X),Y) -> s(a__plus(mark(X),mark(Y))),a__times(0,Y) -> 0,a__times(s(X),Y) -> a__plus(mark(Y),a__times(mark(X),mark(Y))),a__square(X) -> a__times(mark(X),mark(X)),mark(from(X)) -> a__from(mark(X)),mark(2ndspos(X1,X2)) -> a__2ndspos(mark(X1),mark(X2)),mark(2ndsneg(X1,X2)) -> a__2ndsneg(mark(X1),mark(X2)),mark(pi(X)) -> a__pi(mark(X)),mark(plus(X1,X2)) -> a__plus(mark(X1),mark(X2)),mark(times(X1,X2)) -> a__times(mark(X1),mark(X2)),mark(square(X)) -> a__square(mark(X)),mark(0) -> 0,mark(s(X)) -> s(mark(X)),mark(posrecip(X)) -> posrecip(mark(X)),mark(negrecip(X)) -> negrecip(mark(X)),mark(nil) -> nil,mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(rnil) -> rnil,mark(rcons(X1,X2)) -> rcons(mark(X1),mark(X2)),a__from(X) -> from(X),a__2ndspos(X1,X2) -> 2ndspos(X1,X2),a__2ndsneg(X1,X2) -> 2ndsneg(X1,X2),a__pi(X) -> pi(X),a__plus(X1,X2) -> plus(X1,X2),a__times(X1,X2) -> times(X1,X2),a__square(X) -> square(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex1_2_AEL03_C.xml" :
TRS {trsSignature = fromList [("0",0),("2ndsneg",2),("2ndspos",2),("active",1),("cons",2),("from",1),("mark",1),("negrecip",1),("nil",0),("ok",1),("pi",1),("plus",2),("posrecip",1),("proper",1),("rcons",2),("rnil",0),("s",1),("square",1),("times",2),("top",1)], trsVariables = fromList ["N","X","X1","X2","Y","Z"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(2ndspos(0,Z)) -> mark(rnil),active(2ndspos(s(N),cons(X,cons(Y,Z)))) -> mark(rcons(posrecip(Y),2ndsneg(N,Z))),active(2ndsneg(0,Z)) -> mark(rnil),active(2ndsneg(s(N),cons(X,cons(Y,Z)))) -> mark(rcons(negrecip(Y),2ndspos(N,Z))),active(pi(X)) -> mark(2ndspos(X,from(0))),active(plus(0,Y)) -> mark(Y),active(plus(s(X),Y)) -> mark(s(plus(X,Y))),active(times(0,Y)) -> mark(0),active(times(s(X),Y)) -> mark(plus(Y,times(X,Y))),active(square(X)) -> mark(times(X,X)),active(s(X)) -> s(active(X)),active(posrecip(X)) -> posrecip(active(X)),active(negrecip(X)) -> negrecip(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(rcons(X1,X2)) -> rcons(active(X1),X2),active(rcons(X1,X2)) -> rcons(X1,active(X2)),active(from(X)) -> from(active(X)),active(2ndspos(X1,X2)) -> 2ndspos(active(X1),X2),active(2ndspos(X1,X2)) -> 2ndspos(X1,active(X2)),active(2ndsneg(X1,X2)) -> 2ndsneg(active(X1),X2),active(2ndsneg(X1,X2)) -> 2ndsneg(X1,active(X2)),active(pi(X)) -> pi(active(X)),active(plus(X1,X2)) -> plus(active(X1),X2),active(plus(X1,X2)) -> plus(X1,active(X2)),active(times(X1,X2)) -> times(active(X1),X2),active(times(X1,X2)) -> times(X1,active(X2)),active(square(X)) -> square(active(X)),s(mark(X)) -> mark(s(X)),posrecip(mark(X)) -> mark(posrecip(X)),negrecip(mark(X)) -> mark(negrecip(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),rcons(mark(X1),X2) -> mark(rcons(X1,X2)),rcons(X1,mark(X2)) -> mark(rcons(X1,X2)),from(mark(X)) -> mark(from(X)),2ndspos(mark(X1),X2) -> mark(2ndspos(X1,X2)),2ndspos(X1,mark(X2)) -> mark(2ndspos(X1,X2)),2ndsneg(mark(X1),X2) -> mark(2ndsneg(X1,X2)),2ndsneg(X1,mark(X2)) -> mark(2ndsneg(X1,X2)),pi(mark(X)) -> mark(pi(X)),plus(mark(X1),X2) -> mark(plus(X1,X2)),plus(X1,mark(X2)) -> mark(plus(X1,X2)),times(mark(X1),X2) -> mark(times(X1,X2)),times(X1,mark(X2)) -> mark(times(X1,X2)),square(mark(X)) -> mark(square(X)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(posrecip(X)) -> posrecip(proper(X)),proper(negrecip(X)) -> negrecip(proper(X)),proper(nil) -> ok(nil),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(rnil) -> ok(rnil),proper(rcons(X1,X2)) -> rcons(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),proper(2ndspos(X1,X2)) -> 2ndspos(proper(X1),proper(X2)),proper(2ndsneg(X1,X2)) -> 2ndsneg(proper(X1),proper(X2)),proper(pi(X)) -> pi(proper(X)),proper(plus(X1,X2)) -> plus(proper(X1),proper(X2)),proper(times(X1,X2)) -> times(proper(X1),proper(X2)),proper(square(X)) -> square(proper(X)),s(ok(X)) -> ok(s(X)),posrecip(ok(X)) -> ok(posrecip(X)),negrecip(ok(X)) -> ok(negrecip(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),rcons(ok(X1),ok(X2)) -> ok(rcons(X1,X2)),from(ok(X)) -> ok(from(X)),2ndspos(ok(X1),ok(X2)) -> ok(2ndspos(X1,X2)),2ndsneg(ok(X1),ok(X2)) -> ok(2ndsneg(X1,X2)),pi(ok(X)) -> ok(pi(X)),plus(ok(X1),ok(X2)) -> ok(plus(X1,X2)),times(ok(X1),ok(X2)) -> ok(times(X1,X2)),square(ok(X)) -> ok(square(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex18_Luc06_L.xml" :
TRS {trsSignature = fromList [("a",0),("f",1),("g",0)], trsVariables = fromList [], trsRMap = [], trsRules = [f(f(a)) -> f(g)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex18_Luc06_iGM.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("f",1),("g",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(f(a))) -> mark(f(g(f(a)))),mark(f(X)) -> active(f(mark(X))),mark(a) -> active(a),mark(g(X)) -> active(g(X)),f(mark(X)) -> f(X),f(active(X)) -> f(X),g(mark(X)) -> g(X),g(active(X)) -> g(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex18_Luc06_GM.xml" :
TRS {trsSignature = fromList [("a",0),("a__f",1),("f",1),("g",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [a__f(f(a)) -> a__f(g(f(a))),mark(f(X)) -> a__f(mark(X)),mark(a) -> a,mark(g(X)) -> g(X),a__f(X) -> f(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex18_Luc06_C.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("f",1),("g",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(f(a))) -> mark(f(g(f(a)))),active(f(X)) -> f(active(X)),f(mark(X)) -> mark(f(X)),proper(f(X)) -> f(proper(X)),proper(a) -> ok(a),proper(g(X)) -> g(proper(X)),f(ok(X)) -> ok(f(X)),g(ok(X)) -> ok(g(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex16_Luc06_iGM.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("f",2),("mark",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [active(f(X,X)) -> mark(f(a,b)),active(b) -> mark(a),mark(f(X1,X2)) -> active(f(mark(X1),X2)),mark(a) -> active(a),mark(b) -> active(b),f(mark(X1),X2) -> f(X1,X2),f(X1,mark(X2)) -> f(X1,X2),f(active(X1),X2) -> f(X1,X2),f(X1,active(X2)) -> f(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex16_Luc06_GM.xml" :
TRS {trsSignature = fromList [("a",0),("a__b",0),("a__f",2),("b",0),("f",2),("mark",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [a__f(X,X) -> a__f(a,b),a__b -> a,mark(f(X1,X2)) -> a__f(mark(X1),X2),mark(b) -> a__b,mark(a) -> a,a__f(X1,X2) -> f(X1,X2),a__b -> b], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex16_Luc06_C.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("f",2),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [active(f(X,X)) -> mark(f(a,b)),active(b) -> mark(a),active(f(X1,X2)) -> f(active(X1),X2),f(mark(X1),X2) -> mark(f(X1,X2)),proper(f(X1,X2)) -> f(proper(X1),proper(X2)),proper(a) -> ok(a),proper(b) -> ok(b),f(ok(X1),ok(X2)) -> ok(f(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex15_Luc98_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("and",2),("cons",2),("false",0),("first",2),("from",1),("if",3),("mark",1),("nil",0),("s",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [active(and(true,X)) -> mark(X),active(and(false,Y)) -> mark(false),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),mark(and(X1,X2)) -> active(and(mark(X1),X2)),mark(true) -> active(true),mark(false) -> active(false),mark(if(X1,X2,X3)) -> active(if(mark(X1),X2,X3)),mark(add(X1,X2)) -> active(add(mark(X1),X2)),mark(0) -> active(0),mark(s(X)) -> active(s(X)),mark(first(X1,X2)) -> active(first(mark(X1),mark(X2))),mark(nil) -> active(nil),mark(cons(X1,X2)) -> active(cons(X1,X2)),mark(from(X)) -> active(from(X)),and(mark(X1),X2) -> and(X1,X2),and(X1,mark(X2)) -> and(X1,X2),and(active(X1),X2) -> and(X1,X2),and(X1,active(X2)) -> and(X1,X2),if(mark(X1),X2,X3) -> if(X1,X2,X3),if(X1,mark(X2),X3) -> if(X1,X2,X3),if(X1,X2,mark(X3)) -> if(X1,X2,X3),if(active(X1),X2,X3) -> if(X1,X2,X3),if(X1,active(X2),X3) -> if(X1,X2,X3),if(X1,X2,active(X3)) -> if(X1,X2,X3),add(mark(X1),X2) -> add(X1,X2),add(X1,mark(X2)) -> add(X1,X2),add(active(X1),X2) -> add(X1,X2),add(X1,active(X2)) -> add(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),first(mark(X1),X2) -> first(X1,X2),first(X1,mark(X2)) -> first(X1,X2),first(active(X1),X2) -> first(X1,X2),first(X1,active(X2)) -> first(X1,X2),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),from(mark(X)) -> from(X),from(active(X)) -> from(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex15_Luc98_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__add",2),("a__and",2),("a__first",2),("a__from",1),("a__if",3),("add",2),("and",2),("cons",2),("false",0),("first",2),("from",1),("if",3),("mark",1),("nil",0),("s",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [a__and(true,X) -> mark(X),a__and(false,Y) -> false,a__if(true,X,Y) -> mark(X),a__if(false,X,Y) -> mark(Y),a__add(0,X) -> mark(X),a__add(s(X),Y) -> s(add(X,Y)),a__first(0,X) -> nil,a__first(s(X),cons(Y,Z)) -> cons(Y,first(X,Z)),a__from(X) -> cons(X,from(s(X))),mark(and(X1,X2)) -> a__and(mark(X1),X2),mark(if(X1,X2,X3)) -> a__if(mark(X1),X2,X3),mark(add(X1,X2)) -> a__add(mark(X1),X2),mark(first(X1,X2)) -> a__first(mark(X1),mark(X2)),mark(from(X)) -> a__from(X),mark(true) -> true,mark(false) -> false,mark(0) -> 0,mark(s(X)) -> s(X),mark(nil) -> nil,mark(cons(X1,X2)) -> cons(X1,X2),a__and(X1,X2) -> and(X1,X2),a__if(X1,X2,X3) -> if(X1,X2,X3),a__add(X1,X2) -> add(X1,X2),a__first(X1,X2) -> first(X1,X2),a__from(X) -> from(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex15_Luc98_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("add",2),("and",2),("cons",2),("false",0),("first",2),("from",1),("if",3),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1),("true",0)], trsVariables = fromList ["X","X1","X2","X3","Y","Z"], trsRMap = [], trsRules = [active(and(true,X)) -> mark(X),active(and(false,Y)) -> mark(false),active(if(true,X,Y)) -> mark(X),active(if(false,X,Y)) -> mark(Y),active(add(0,X)) -> mark(X),active(add(s(X),Y)) -> mark(s(add(X,Y))),active(first(0,X)) -> mark(nil),active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z))),active(from(X)) -> mark(cons(X,from(s(X)))),active(and(X1,X2)) -> and(active(X1),X2),active(if(X1,X2,X3)) -> if(active(X1),X2,X3),active(add(X1,X2)) -> add(active(X1),X2),active(first(X1,X2)) -> first(active(X1),X2),active(first(X1,X2)) -> first(X1,active(X2)),and(mark(X1),X2) -> mark(and(X1,X2)),if(mark(X1),X2,X3) -> mark(if(X1,X2,X3)),add(mark(X1),X2) -> mark(add(X1,X2)),first(mark(X1),X2) -> mark(first(X1,X2)),first(X1,mark(X2)) -> mark(first(X1,X2)),proper(and(X1,X2)) -> and(proper(X1),proper(X2)),proper(true) -> ok(true),proper(false) -> ok(false),proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3)),proper(add(X1,X2)) -> add(proper(X1),proper(X2)),proper(0) -> ok(0),proper(s(X)) -> s(proper(X)),proper(first(X1,X2)) -> first(proper(X1),proper(X2)),proper(nil) -> ok(nil),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(from(X)) -> from(proper(X)),and(ok(X1),ok(X2)) -> ok(and(X1,X2)),if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3)),add(ok(X1),ok(X2)) -> ok(add(X1,X2)),s(ok(X)) -> ok(s(X)),first(ok(X1),ok(X2)) -> ok(first(X1,X2)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),from(ok(X)) -> ok(from(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex15_Luc06_iGM.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("f",1),("g",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(f(a))) -> mark(f(g(f(a)))),mark(f(X)) -> active(f(X)),mark(a) -> active(a),mark(g(X)) -> active(g(mark(X))),f(mark(X)) -> f(X),f(active(X)) -> f(X),g(mark(X)) -> g(X),g(active(X)) -> g(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex15_Luc06_GM.xml" :
TRS {trsSignature = fromList [("a",0),("a__f",1),("f",1),("g",1),("mark",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [a__f(f(a)) -> a__f(g(f(a))),mark(f(X)) -> a__f(X),mark(a) -> a,mark(g(X)) -> g(mark(X)),a__f(X) -> f(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex15_Luc06_C.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("f",1),("g",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X"], trsRMap = [], trsRules = [active(f(f(a))) -> mark(f(g(f(a)))),active(g(X)) -> g(active(X)),g(mark(X)) -> mark(g(X)),proper(f(X)) -> f(proper(X)),proper(a) -> ok(a),proper(g(X)) -> g(proper(X)),f(ok(X)) -> ok(f(X)),g(ok(X)) -> ok(g(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex14_Luc06_iGM.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("f",2),("g",2),("h",1),("mark",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [active(h(X)) -> mark(g(X,X)),active(g(a,X)) -> mark(f(b,X)),active(f(X,X)) -> mark(h(a)),active(a) -> mark(b),mark(h(X)) -> active(h(mark(X))),mark(g(X1,X2)) -> active(g(mark(X1),X2)),mark(a) -> active(a),mark(f(X1,X2)) -> active(f(mark(X1),X2)),mark(b) -> active(b),h(mark(X)) -> h(X),h(active(X)) -> h(X),g(mark(X1),X2) -> g(X1,X2),g(X1,mark(X2)) -> g(X1,X2),g(active(X1),X2) -> g(X1,X2),g(X1,active(X2)) -> g(X1,X2),f(mark(X1),X2) -> f(X1,X2),f(X1,mark(X2)) -> f(X1,X2),f(active(X1),X2) -> f(X1,X2),f(X1,active(X2)) -> f(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex14_Luc06_GM.xml" :
TRS {trsSignature = fromList [("a",0),("a__a",0),("a__f",2),("a__g",2),("a__h",1),("b",0),("f",2),("g",2),("h",1),("mark",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [a__h(X) -> a__g(mark(X),X),a__g(a,X) -> a__f(b,X),a__f(X,X) -> a__h(a__a),a__a -> b,mark(h(X)) -> a__h(mark(X)),mark(g(X1,X2)) -> a__g(mark(X1),X2),mark(a) -> a__a,mark(f(X1,X2)) -> a__f(mark(X1),X2),mark(b) -> b,a__h(X) -> h(X),a__g(X1,X2) -> g(X1,X2),a__a -> a,a__f(X1,X2) -> f(X1,X2)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex14_Luc06_C.xml" :
TRS {trsSignature = fromList [("a",0),("active",1),("b",0),("f",2),("g",2),("h",1),("mark",1),("ok",1),("proper",1),("top",1)], trsVariables = fromList ["X","X1","X2"], trsRMap = [], trsRules = [active(h(X)) -> mark(g(X,X)),active(g(a,X)) -> mark(f(b,X)),active(f(X,X)) -> mark(h(a)),active(a) -> mark(b),active(h(X)) -> h(active(X)),active(g(X1,X2)) -> g(active(X1),X2),active(f(X1,X2)) -> f(active(X1),X2),h(mark(X)) -> mark(h(X)),g(mark(X1),X2) -> mark(g(X1,X2)),f(mark(X1),X2) -> mark(f(X1,X2)),proper(h(X)) -> h(proper(X)),proper(g(X1,X2)) -> g(proper(X1),proper(X2)),proper(a) -> ok(a),proper(f(X1,X2)) -> f(proper(X1),proper(X2)),proper(b) -> ok(b),h(ok(X)) -> ok(h(X)),g(ok(X1),ok(X2)) -> ok(g(X1,X2)),f(ok(X1),ok(X2)) -> ok(f(X1,X2)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex14_AEGL02_iGM.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("from",1),("length",1),("length1",1),("mark",1),("nil",0),("s",1)], trsVariables = fromList ["X","X1","X2","Y"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(length(nil)) -> mark(0),active(length(cons(X,Y))) -> mark(s(length1(Y))),active(length1(X)) -> mark(length(X)),mark(from(X)) -> active(from(mark(X))),mark(cons(X1,X2)) -> active(cons(mark(X1),X2)),mark(s(X)) -> active(s(mark(X))),mark(length(X)) -> active(length(X)),mark(nil) -> active(nil),mark(0) -> active(0),mark(length1(X)) -> active(length1(X)),from(mark(X)) -> from(X),from(active(X)) -> from(X),cons(mark(X1),X2) -> cons(X1,X2),cons(X1,mark(X2)) -> cons(X1,X2),cons(active(X1),X2) -> cons(X1,X2),cons(X1,active(X2)) -> cons(X1,X2),s(mark(X)) -> s(X),s(active(X)) -> s(X),length(mark(X)) -> length(X),length(active(X)) -> length(X),length1(mark(X)) -> length1(X),length1(active(X)) -> length1(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex14_AEGL02_GM.xml" :
TRS {trsSignature = fromList [("0",0),("a__from",1),("a__length",1),("a__length1",1),("cons",2),("from",1),("length",1),("length1",1),("mark",1),("nil",0),("s",1)], trsVariables = fromList ["X","X1","X2","Y"], trsRMap = [], trsRules = [a__from(X) -> cons(mark(X),from(s(X))),a__length(nil) -> 0,a__length(cons(X,Y)) -> s(a__length1(Y)),a__length1(X) -> a__length(X),mark(from(X)) -> a__from(mark(X)),mark(length(X)) -> a__length(X),mark(length1(X)) -> a__length1(X),mark(cons(X1,X2)) -> cons(mark(X1),X2),mark(s(X)) -> s(mark(X)),mark(nil) -> nil,mark(0) -> 0,a__from(X) -> from(X),a__length(X) -> length(X),a__length1(X) -> length1(X)], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\TRS_Innermost\\Transformed_CSR_innermost_04\\Ex14_AEGL02_C.xml" :
TRS {trsSignature = fromList [("0",0),("active",1),("cons",2),("from",1),("length",1),("length1",1),("mark",1),("nil",0),("ok",1),("proper",1),("s",1),("top",1)], trsVariables = fromList ["X","X1","X2","Y"], trsRMap = [], trsRules = [active(from(X)) -> mark(cons(X,from(s(X)))),active(length(nil)) -> mark(0),active(length(cons(X,Y))) -> mark(s(length1(Y))),active(length1(X)) -> mark(length(X)),active(from(X)) -> from(active(X)),active(cons(X1,X2)) -> cons(active(X1),X2),active(s(X)) -> s(active(X)),from(mark(X)) -> mark(from(X)),cons(mark(X1),X2) -> mark(cons(X1,X2)),s(mark(X)) -> mark(s(X)),proper(from(X)) -> from(proper(X)),proper(cons(X1,X2)) -> cons(proper(X1),proper(X2)),proper(s(X)) -> s(proper(X)),proper(length(X)) -> length(proper(X)),proper(nil) -> ok(nil),proper(0) -> ok(0),proper(length1(X)) -> length1(proper(X)),from(ok(X)) -> ok(from(X)),cons(ok(X1),ok(X2)) -> ok(cons(X1,X2)),s(ok(X)) -> ok(s(X)),length(ok(X)) -> ok(length(X)),length1(ok(X)) -> ok(length1(X)),top(mark(X)) -> top(proper(X)),top(ok(X)) -> top(active(X))], trsType = TRSStandard, trsStrategy = Just INNERMOST, signatureBlock = True}
