
++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\perfect2.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("if",0),("le",0),("map",0),("minus",0),("nil",0),("perfectp",0),("s",0),("true",0)], trsVariables = fromList ["fun","u","x","xs","y","z"], trsRMap = [], trsRules = [app(app(minus,0),y) -> 0,app(app(minus,app(s,x)),0) -> app(s,x),app(app(minus,app(s,x)),app(s,y)) -> app(app(minus,x),y),app(app(le,0),y) -> true,app(app(le,app(s,x)),0) -> false,app(app(le,app(s,x)),app(s,y)) -> app(app(le,x),y),app(app(app(if,true),x),y) -> x,app(app(app(if,false),x),y) -> y,app(perfectp,0) -> false,app(perfectp,app(s,x)) -> app(app(app(app(f,x),app(s,0)),app(s,x)),app(s,x)),app(app(app(app(f,0),y),0),u) -> true,app(app(app(app(f,0),y),app(s,z)),u) -> false,app(app(app(app(f,app(s,x)),0),z),u) -> app(app(app(app(f,x),u),app(app(minus,z),app(s,x))),u),app(app(app(app(f,app(s,x)),app(s,y)),z),u) -> app(app(app(if,app(app(le,x),y)),app(app(app(app(f,app(s,x)),app(app(minus,y),x)),z),u)),app(app(app(app(f,x),u),z),u)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\perfect.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("if",0),("le",0),("map",0),("minus",0),("nil",0),("perfectp",0),("s",0),("true",0)], trsVariables = fromList ["fun","u","x","xs","y","z"], trsRMap = [], trsRules = [app(perfectp,0) -> false,app(perfectp,app(s,x)) -> app(app(app(app(f,x),app(s,0)),app(s,x)),app(s,x)),app(app(app(app(f,0),y),0),u) -> true,app(app(app(app(f,0),y),app(s,z)),u) -> false,app(app(app(app(f,app(s,x)),0),z),u) -> app(app(app(app(f,x),u),app(app(minus,z),app(s,x))),u),app(app(app(app(f,app(s,x)),app(s,y)),z),u) -> app(app(app(if,app(app(le,x),y)),app(app(app(app(f,app(s,x)),app(app(minus,y),x)),z),u)),app(app(app(app(f,x),u),z),u)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\motivation.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("g",0),("h",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["fun","x","xs"], trsRMap = [], trsRules = [app(g,app(h,app(g,x))) -> app(g,x),app(g,app(g,x)) -> app(g,app(h,app(g,x))),app(h,app(h,x)) -> app(h,app(app(f,app(h,x)),x)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\minsort.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("del",0),("eq",0),("false",0),("filter",0),("filter2",0),("if",0),("le",0),("map",0),("min",0),("minsort",0),("nil",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(le,0),y) -> true,app(app(le,app(s,x)),0) -> false,app(app(le,app(s,x)),app(s,y)) -> app(app(le,x),y),app(app(eq,0),0) -> true,app(app(eq,0),app(s,y)) -> false,app(app(eq,app(s,x)),0) -> false,app(app(eq,app(s,x)),app(s,y)) -> app(app(eq,x),y),app(app(app(if,true),x),y) -> x,app(app(app(if,false),x),y) -> y,app(minsort,nil) -> nil,app(minsort,app(app(cons,x),y)) -> app(app(cons,app(app(min,x),y)),app(minsort,app(app(del,app(app(min,x),y)),app(app(cons,x),y)))),app(app(min,x),nil) -> x,app(app(min,x),app(app(cons,y),z)) -> app(app(app(if,app(app(le,x),y)),app(app(min,x),z)),app(app(min,y),z)),app(app(del,x),nil) -> nil,app(app(del,x),app(app(cons,y),z)) -> app(app(app(if,app(app(eq,x),y)),z),app(app(cons,y),app(app(del,x),z))),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\hydra.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("copy",0),("f",0),("false",0),("filter",0),("filter2",0),("map",0),("n",0),("nil",0),("s",0),("true",0)], trsVariables = fromList ["fun","x","xs","y","z"], trsRMap = [], trsRules = [app(f,app(app(cons,nil),y)) -> y,app(f,app(app(cons,app(f,app(app(cons,nil),y))),z)) -> app(app(app(copy,n),y),z),app(app(app(copy,0),y),z) -> app(f,z),app(app(app(copy,app(s,x)),y),z) -> app(app(app(copy,x),y),app(app(cons,app(f,y)),z)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\33.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("c",0),("cons",0),("d",0),("e",0),("false",0),("filter",0),("filter2",0),("g",0),("h",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(h,z),app(e,x)) -> app(app(h,app(c,z)),app(app(d,z),x)),app(app(d,z),app(app(g,0),0)) -> app(e,0),app(app(d,z),app(app(g,x),y)) -> app(app(g,app(e,x)),app(app(d,z),y)),app(app(d,app(c,z)),app(app(g,app(app(g,x),y)),0)) -> app(app(g,app(app(d,app(c,z)),app(app(g,x),y))),app(app(d,z),app(app(g,x),y))),app(app(g,app(e,x)),app(e,y)) -> app(e,app(app(g,x),y)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\31.xml" :
TRS {trsSignature = fromList [("+",0),(":",0),("a",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("g",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(:,app(app(:,x),y)),z) -> app(app(:,x),app(app(:,y),z)),app(app(:,app(app(+,x),y)),z) -> app(app(+,app(app(:,x),z)),app(app(:,y),z)),app(app(:,z),app(app(+,x),app(f,y))) -> app(app(:,app(app(g,z),y)),app(app(+,x),a)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\30.xml" :
TRS {trsSignature = fromList [(":",0),("C",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","u","x","xs","y","z"], trsRMap = [], trsRules = [app(app(:,app(app(:,app(app(:,app(app(:,C),x)),y)),z)),u) -> app(app(:,app(app(:,x),z)),app(app(:,app(app(:,app(app(:,x),y)),z)),u)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\29.xml" :
TRS {trsSignature = fromList [("0",0),("ack",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("succ",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(ack,0),y) -> app(succ,y),app(app(ack,app(succ,x)),y) -> app(app(ack,x),app(succ,0)),app(app(ack,app(succ,x)),app(succ,y)) -> app(app(ack,x),app(app(ack,app(succ,x)),y)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\21.xml" :
TRS {trsSignature = fromList [("*",0),("+",0),("0",0),("app",2),("cons",0),("fact",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("p",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(p,app(s,x)) -> x,app(fact,0) -> app(s,0),app(fact,app(s,x)) -> app(app(*,app(s,x)),app(fact,app(p,app(s,x)))),app(app(*,0),y) -> 0,app(app(*,app(s,x)),y) -> app(app(+,app(app(*,x),y)),y),app(app(+,x),0) -> x,app(app(+,x),app(s,y)) -> app(s,app(app(+,x),y)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\18.xml" :
TRS {trsSignature = fromList [("*",0),("+",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(*,x),app(app(+,y),z)) -> app(app(+,app(app(*,x),y)),app(app(*,x),z)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\17.xml" :
TRS {trsSignature = fromList [(".",0),("1",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("i",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(.,1),x) -> x,app(app(.,x),1) -> x,app(app(.,app(i,x)),x) -> 1,app(app(.,x),app(i,x)) -> 1,app(app(.,app(i,y)),app(app(.,y),z)) -> z,app(app(.,y),app(app(.,app(i,y)),z)) -> z,app(app(.,app(app(.,x),y)),z) -> app(app(.,x),app(app(.,y),z)),app(i,1) -> 1,app(i,app(i,x)) -> x,app(i,app(app(.,x),y)) -> app(app(.,app(i,y)),app(i,x)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\13.xml" :
TRS {trsSignature = fromList [("*",0),("+",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(*,x),app(app(+,y),z)) -> app(app(+,app(app(*,x),y)),app(app(*,x),z)),app(app(*,app(app(+,y),z)),x) -> app(app(+,app(app(*,x),y)),app(app(*,x),z)),app(app(*,app(app(*,x),y)),z) -> app(app(*,x),app(app(*,y),z)),app(app(+,app(app(+,x),y)),z) -> app(app(+,x),app(app(+,y),z)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\12.xml" :
TRS {trsSignature = fromList [("and",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("not",0),("or",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(not,app(not,x)) -> x,app(not,app(app(or,x),y)) -> app(app(and,app(not,x)),app(not,y)),app(not,app(app(and,x),y)) -> app(app(or,app(not,x)),app(not,y)),app(app(and,x),app(app(or,y),z)) -> app(app(or,app(app(and,x),y)),app(app(and,x),z)),app(app(and,app(app(or,y),z)),x) -> app(app(or,app(app(and,x),y)),app(app(and,x),z)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\11.xml" :
TRS {trsSignature = fromList [("*",0),("+",0),("-",0),("0",0),("1",0),("2",0),("D",0),("app",2),("cons",0),("constant",0),("div",0),("false",0),("filter",0),("filter2",0),("ln",0),("map",0),("minus",0),("nil",0),("pow",0),("t",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(D,t) -> 1,app(D,constant) -> 0,app(D,app(app(+,x),y)) -> app(app(+,app(D,x)),app(D,y)),app(D,app(app(*,x),y)) -> app(app(+,app(app(*,y),app(D,x))),app(app(*,x),app(D,y))),app(D,app(app(-,x),y)) -> app(app(-,app(D,x)),app(D,y)),app(D,app(minus,x)) -> app(minus,app(D,x)),app(D,app(app(div,x),y)) -> app(app(-,app(app(div,app(D,x)),y)),app(app(div,app(app(*,x),app(D,y))),app(app(pow,y),2))),app(D,app(ln,x)) -> app(app(div,app(D,x)),x),app(D,app(app(pow,x),y)) -> app(app(+,app(app(*,app(app(*,y),app(app(pow,x),app(app(-,y),1)))),app(D,x))),app(app(*,app(app(*,app(app(pow,x),y)),app(ln,x))),app(D,y))),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\08.xml" :
TRS {trsSignature = fromList [("*",0),("+",0),("-",0),("0",0),("1",0),("D",0),("app",2),("cons",0),("constant",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("t",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(D,t) -> 1,app(D,constant) -> 0,app(D,app(app(+,x),y)) -> app(app(+,app(D,x)),app(D,y)),app(D,app(app(*,x),y)) -> app(app(+,app(app(*,y),app(D,x))),app(app(*,x),app(D,y))),app(D,app(app(-,x),y)) -> app(app(-,app(D,x)),app(D,y)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\06.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("g",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["fun","x","xs"], trsRMap = [], trsRules = [app(f,app(g,x)) -> app(g,app(g,app(f,x))),app(f,app(g,x)) -> app(g,app(g,app(g,x))),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\02.xml" :
TRS {trsSignature = fromList [(".",0),("1",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("i",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(.,1),x) -> x,app(app(.,x),1) -> x,app(app(.,app(i,x)),x) -> 1,app(app(.,x),app(i,x)) -> 1,app(app(.,app(i,y)),app(app(.,y),z)) -> z,app(app(.,y),app(app(.,app(i,y)),z)) -> z,app(i,1) -> 1,app(i,app(i,x)) -> x,app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\01.xml" :
TRS {trsSignature = fromList [(".",0),("/",0),("\\",0),("app",2),("cons",0),("e",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(\,x),x) -> e,app(app(\,e),x) -> x,app(app(\,x),app(app(.,x),y)) -> y,app(app(\,app(app(/,x),y)),x) -> y,app(app(/,x),x) -> e,app(app(/,x),e) -> x,app(app(/,app(app(.,y),x)),x) -> y,app(app(/,x),app(app(\,y),x)) -> y,app(app(.,e),x) -> x,app(app(.,x),e) -> x,app(app(.,x),app(app(\,x),y)) -> y,app(app(.,app(app(/,y),x)),x) -> y,app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.8.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("log",0),("map",0),("minus",0),("nil",0),("quot",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(minus,x),0) -> x,app(app(minus,app(s,x)),app(s,y)) -> app(app(minus,x),y),app(app(quot,0),app(s,y)) -> 0,app(app(quot,app(s,x)),app(s,y)) -> app(s,app(app(quot,app(app(minus,x),y)),app(s,y))),app(log,app(s,0)) -> 0,app(log,app(s,app(s,x))) -> app(s,app(log,app(s,app(app(quot,x),app(s,app(s,0)))))),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.6.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("gcd",0),("if_gcd",0),("le",0),("map",0),("minus",0),("nil",0),("pred",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(le,0),y) -> true,app(app(le,app(s,x)),0) -> false,app(app(le,app(s,x)),app(s,y)) -> app(app(le,x),y),app(pred,app(s,x)) -> x,app(app(minus,x),0) -> x,app(app(minus,x),app(s,y)) -> app(pred,app(app(minus,x),y)),app(app(gcd,0),y) -> y,app(app(gcd,app(s,x)),0) -> app(s,x),app(app(gcd,app(s,x)),app(s,y)) -> app(app(app(if_gcd,app(app(le,y),x)),app(s,x)),app(s,y)),app(app(app(if_gcd,true),app(s,x)),app(s,y)) -> app(app(gcd,app(app(minus,x),y)),app(s,y)),app(app(app(if_gcd,false),app(s,x)),app(s,y)) -> app(app(gcd,app(app(minus,y),x)),app(s,x)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.57.xml" :
TRS {trsSignature = fromList [("0",0),("app",0),("app'",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("minus",0),("nil",0),("plus",0),("quot",0),("s",0),("sum",0),("true",0)], trsVariables = fromList ["f","k","l","x","xs","y","z"], trsRMap = [], trsRules = [app'(app'(minus,x),0) -> x,app'(app'(minus,app'(s,x)),app'(s,y)) -> app'(app'(minus,x),y),app'(app'(minus,app'(app'(minus,x),y)),z) -> app'(app'(minus,x),app'(app'(plus,y),z)),app'(app'(quot,0),app'(s,y)) -> 0,app'(app'(quot,app'(s,x)),app'(s,y)) -> app'(s,app'(app'(quot,app'(app'(minus,x),y)),app'(s,y))),app'(app'(plus,0),y) -> y,app'(app'(plus,app'(s,x)),y) -> app'(s,app'(app'(plus,x),y)),app'(app'(app,nil),k) -> k,app'(app'(app,l),nil) -> l,app'(app'(app,app'(app'(cons,x),l)),k) -> app'(app'(cons,x),app'(app'(app,l),k)),app'(sum,app'(app'(cons,x),nil)) -> app'(app'(cons,x),nil),app'(sum,app'(app'(cons,x),app'(app'(cons,y),l))) -> app'(sum,app'(app'(cons,app'(app'(plus,x),y)),l)),app'(sum,app'(app'(app,l),app'(app'(cons,x),app'(app'(cons,y),k)))) -> app'(sum,app'(app'(app,l),app'(sum,app'(app'(cons,x),app'(app'(cons,y),k))))),app'(app'(map,f),nil) -> nil,app'(app'(map,f),app'(app'(cons,x),xs)) -> app'(app'(cons,app'(f,x)),app'(app'(map,f),xs)),app'(app'(filter,f),nil) -> nil,app'(app'(filter,f),app'(app'(cons,x),xs)) -> app'(app'(app'(app'(filter2,app'(f,x)),f),x),xs),app'(app'(app'(app'(filter2,true),f),x),xs) -> app'(app'(cons,x),app'(app'(filter,f),xs)),app'(app'(app'(app'(filter2,false),f),x),xs) -> app'(app'(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.55.xml" :
TRS {trsSignature = fromList [("0",0),("add",0),("app",0),("app'",2),("false",0),("filter",0),("filter2",0),("high",0),("if_high",0),("if_low",0),("le",0),("low",0),("map",0),("minus",0),("nil",0),("quicksort",0),("quot",0),("s",0),("true",0)], trsVariables = fromList ["f","m","n","x","xs","y"], trsRMap = [], trsRules = [app'(app'(minus,x),0) -> x,app'(app'(minus,app'(s,x)),app'(s,y)) -> app'(app'(minus,x),y),app'(app'(quot,0),app'(s,y)) -> 0,app'(app'(quot,app'(s,x)),app'(s,y)) -> app'(s,app'(app'(quot,app'(app'(minus,x),y)),app'(s,y))),app'(app'(le,0),y) -> true,app'(app'(le,app'(s,x)),0) -> false,app'(app'(le,app'(s,x)),app'(s,y)) -> app'(app'(le,x),y),app'(app'(app,nil),y) -> y,app'(app'(app,app'(app'(add,n),x)),y) -> app'(app'(add,n),app'(app'(app,x),y)),app'(app'(low,n),nil) -> nil,app'(app'(low,n),app'(app'(add,m),x)) -> app'(app'(app'(if_low,app'(app'(le,m),n)),n),app'(app'(add,m),x)),app'(app'(app'(if_low,true),n),app'(app'(add,m),x)) -> app'(app'(add,m),app'(app'(low,n),x)),app'(app'(app'(if_low,false),n),app'(app'(add,m),x)) -> app'(app'(low,n),x),app'(app'(high,n),nil) -> nil,app'(app'(high,n),app'(app'(add,m),x)) -> app'(app'(app'(if_high,app'(app'(le,m),n)),n),app'(app'(add,m),x)),app'(app'(app'(if_high,true),n),app'(app'(add,m),x)) -> app'(app'(high,n),x),app'(app'(app'(if_high,false),n),app'(app'(add,m),x)) -> app'(app'(add,m),app'(app'(high,n),x)),app'(quicksort,nil) -> nil,app'(quicksort,app'(app'(add,n),x)) -> app'(app'(app,app'(quicksort,app'(app'(low,n),x))),app'(app'(add,n),app'(quicksort,app'(app'(high,n),x)))),app'(app'(map,f),nil) -> nil,app'(app'(map,f),app'(app'(add,x),xs)) -> app'(app'(add,app'(f,x)),app'(app'(map,f),xs)),app'(app'(filter,f),nil) -> nil,app'(app'(filter,f),app'(app'(add,x),xs)) -> app'(app'(app'(app'(filter2,app'(f,x)),f),x),xs),app'(app'(app'(app'(filter2,true),f),x),xs) -> app'(app'(add,x),app'(app'(filter,f),xs)),app'(app'(app'(app'(filter2,false),f),x),xs) -> app'(app'(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.52.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("s",0),("true",0)], trsVariables = fromList ["fun","x","xs","y","z"], trsRMap = [], trsRules = [app(app(app(f,0),1),x) -> app(app(app(f,app(s,x)),x),x),app(app(app(f,x),y),app(s,z)) -> app(s,app(app(app(f,0),1),z)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.48.xml" :
TRS {trsSignature = fromList [("0",0),("1",0),("app",2),("c",0),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("g",0),("if",0),("map",0),("nil",0),("s",0),("true",0)], trsVariables = fromList ["fun","x","xs","y"], trsRMap = [], trsRules = [app(f,0) -> true,app(f,1) -> false,app(f,app(s,x)) -> app(f,x),app(app(app(if,true),app(s,x)),app(s,y)) -> app(s,x),app(app(app(if,false),app(s,x)),app(s,y)) -> app(s,y),app(app(g,x),app(c,y)) -> app(c,app(app(g,x),y)),app(app(g,x),app(c,y)) -> app(app(g,x),app(app(app(if,app(f,x)),app(c,app(app(g,app(s,x)),y))),app(c,y))),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.45.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("g",0),("h",0),("map",0),("nil",0),("s",0),("true",0)], trsVariables = fromList ["fun","x","xs","y"], trsRMap = [], trsRules = [app(f,app(s,x)) -> app(f,x),app(g,app(app(cons,0),y)) -> app(g,y),app(g,app(app(cons,app(s,x)),y)) -> app(s,x),app(h,app(app(cons,x),y)) -> app(h,app(g,app(app(cons,x),y))),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.40.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("minus",0),("nil",0),("plus",0),("quot",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(minus,x),0) -> x,app(app(minus,app(s,x)),app(s,y)) -> app(app(minus,x),y),app(app(quot,0),app(s,y)) -> 0,app(app(quot,app(s,x)),app(s,y)) -> app(s,app(app(quot,app(app(minus,x),y)),app(s,y))),app(app(plus,0),y) -> y,app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y)),app(app(plus,app(app(minus,x),app(s,0))),app(app(minus,y),app(s,app(s,z)))) -> app(app(plus,app(app(minus,y),app(s,app(s,z)))),app(app(minus,x),app(s,0))),app(app(plus,app(app(plus,x),app(s,0))),app(app(plus,y),app(s,app(s,z)))) -> app(app(plus,app(app(plus,y),app(s,app(s,z)))),app(app(plus,x),app(s,0))),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.38.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("rev",0),("rev1",0),("rev2",0),("s",0),("true",0)], trsVariables = fromList ["f","l","x","xs","y"], trsRMap = [], trsRules = [app(rev,nil) -> nil,app(rev,app(app(cons,x),l)) -> app(app(cons,app(app(rev1,x),l)),app(app(rev2,x),l)),app(app(rev1,0),nil) -> 0,app(app(rev1,app(s,x)),nil) -> app(s,x),app(app(rev1,x),app(app(cons,y),l)) -> app(app(rev1,y),l),app(app(rev2,x),nil) -> nil,app(app(rev2,x),app(app(cons,y),l)) -> app(rev,app(app(cons,x),app(app(rev2,y),l))),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.36.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("g",0),("map",0),("minus",0),("nil",0),("s",0),("true",0)], trsVariables = fromList ["fun","x","xs","y"], trsRMap = [], trsRules = [app(app(minus,x),0) -> x,app(app(minus,app(s,x)),app(s,y)) -> app(app(minus,x),y),app(f,0) -> app(s,0),app(f,app(s,x)) -> app(app(minus,app(s,x)),app(g,app(f,x))),app(g,0) -> 0,app(g,app(s,x)) -> app(app(minus,app(s,x)),app(f,app(g,x))),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.32.xml" :
TRS {trsSignature = fromList [("a",0),("app",2),("b",0),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("g",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["fun","x","xs"], trsRMap = [], trsRules = [app(f,a) -> app(f,b),app(g,b) -> app(g,a),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.27.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("g",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["fun","x","xs"], trsRMap = [], trsRules = [app(f,app(f,x)) -> app(g,app(f,x)),app(g,app(g,x)) -> app(f,x),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.25.xml" :
TRS {trsSignature = fromList [("app",2),("cons",0),("f",0),("false",0),("filter",0),("filter2",0),("g",0),("h",0),("map",0),("nil",0),("true",0)], trsVariables = fromList ["fun","x","xs"], trsRMap = [], trsRules = [app(f,app(g,x)) -> app(g,app(f,app(f,x))),app(f,app(h,x)) -> app(h,app(g,x)),app(app(map,fun),nil) -> nil,app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs)),app(app(filter,fun),nil) -> nil,app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs),app(app(app(app(filter2,true),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs)),app(app(app(app(filter2,false),fun),x),xs) -> app(app(filter,fun),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.22.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("plus",0),("s",0),("times",0),("true",0)], trsVariables = fromList ["f","x","xs","y","z"], trsRMap = [], trsRules = [app(app(times,x),app(app(plus,y),app(s,z))) -> app(app(plus,app(app(times,x),app(app(plus,y),app(app(times,app(s,z)),0)))),app(app(times,x),app(s,z))),app(app(times,x),0) -> 0,app(app(times,x),app(s,y)) -> app(app(plus,app(app(times,x),y)),x),app(app(plus,x),0) -> x,app(app(plus,x),app(s,y)) -> app(s,app(app(plus,x),y)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.2.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("minus",0),("nil",0),("pred",0),("quot",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(pred,app(s,x)) -> x,app(app(minus,x),0) -> x,app(app(minus,x),app(s,y)) -> app(pred,app(app(minus,x),y)),app(app(quot,0),app(s,y)) -> 0,app(app(quot,app(s,x)),app(s,y)) -> app(s,app(app(quot,app(app(minus,x),y)),app(s,y))),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.18.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("double",0),("false",0),("filter",0),("filter2",0),("map",0),("minus",0),("nil",0),("plus",0),("s",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(minus,x),0) -> x,app(app(minus,app(s,x)),app(s,y)) -> app(app(minus,x),y),app(double,0) -> 0,app(double,app(s,x)) -> app(s,app(s,app(double,x))),app(app(plus,0),y) -> y,app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y)),app(app(plus,app(s,x)),y) -> app(app(plus,x),app(s,y)),app(app(plus,app(s,x)),y) -> app(s,app(app(plus,app(app(minus,x),y)),app(double,y))),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.16.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("false",0),("filter",0),("filter2",0),("map",0),("nil",0),("plus",0),("s",0),("times",0),("true",0)], trsVariables = fromList ["f","x","xs","y"], trsRMap = [], trsRules = [app(app(times,x),0) -> 0,app(app(times,x),app(s,y)) -> app(app(plus,app(app(times,x),y)),x),app(app(plus,x),0) -> x,app(app(plus,0),x) -> x,app(app(plus,x),app(s,y)) -> app(s,app(app(plus,x),y)),app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.13.xml" :
TRS {trsSignature = fromList [("0",0),("app",2),("cons",0),("edge",0),("empty",0),("eq",0),("false",0),("filter",0),("filter2",0),("if_reach_1",0),("if_reach_2",0),("map",0),("nil",0),("or",0),("reach",0),("s",0),("true",0),("union",0)], trsVariables = fromList ["f","h","i","u","v","x","xs","y"], trsRMap = [], trsRules = [app(app(eq,0),0) -> true,app(app(eq,0),app(s,x)) -> false,app(app(eq,app(s,x)),0) -> false,app(app(eq,app(s,x)),app(s,y)) -> app(app(eq,x),y),app(app(or,true),y) -> true,app(app(or,false),y) -> y,app(app(union,empty),h) -> h,app(app(union,app(app(app(edge,x),y),i)),h) -> app(app(app(edge,x),y),app(app(union,i),h)),app(app(app(app(reach,x),y),empty),h) -> false,app(app(app(app(reach,x),y),app(app(app(edge,u),v),i)),h) -> app(app(app(app(app(if_reach_1,app(app(eq,x),u)),x),y),app(app(app(edge,u),v),i)),h),app(app(app(app(app(if_reach_1,true),x),y),app(app(app(edge,u),v),i)),h) -> app(app(app(app(app(if_reach_2,app(app(eq,y),v)),x),y),app(app(app(edge,u),v),i)),h),app(app(app(app(app(if_reach_1,false),x),y),app(app(app(edge,u),v),i)),h) -> app(app(app(app(reach,x),y),i),app(app(app(edge,u),v),h)),app(app(app(app(app(if_reach_2,true),x),y),app(app(app(edge,u),v),i)),h) -> true,app(app(app(app(app(if_reach_2,false),x),y),app(app(app(edge,u),v),i)),h) -> app(app(or,app(app(app(app(reach,x),y),i),h)),app(app(app(app(reach,v),y),app(app(union,i),h)),empty)),app(app(map,f),nil) -> nil,app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs)),app(app(filter,f),nil) -> nil,app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs),app(app(app(app(filter2,true),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs)),app(app(app(app(filter2,false),f),x),xs) -> app(app(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}

++ File:".\\tests\\TPDB\\XML_version\\Applicative_first_order_05\\#3.10.xml" :
TRS {trsSignature = fromList [("0",0),("add",0),("app",0),("app'",2),("eq",0),("false",0),("filter",0),("filter2",0),("if_min",0),("if_minsort",0),("if_rm",0),("le",0),("map",0),("min",0),("minsort",0),("nil",0),("rm",0),("s",0),("true",0)], trsVariables = fromList ["f","m","n","x","xs","y"], trsRMap = [], trsRules = [app'(app'(eq,0),0) -> true,app'(app'(eq,0),app'(s,x)) -> false,app'(app'(eq,app'(s,x)),0) -> false,app'(app'(eq,app'(s,x)),app'(s,y)) -> app'(app'(eq,x),y),app'(app'(le,0),y) -> true,app'(app'(le,app'(s,x)),0) -> false,app'(app'(le,app'(s,x)),app'(s,y)) -> app'(app'(le,x),y),app'(app'(app,nil),y) -> y,app'(app'(app,app'(app'(add,n),x)),y) -> app'(app'(add,n),app'(app'(app,x),y)),app'(min,app'(app'(add,n),nil)) -> n,app'(min,app'(app'(add,n),app'(app'(add,m),x))) -> app'(app'(if_min,app'(app'(le,n),m)),app'(app'(add,n),app'(app'(add,m),x))),app'(app'(if_min,true),app'(app'(add,n),app'(app'(add,m),x))) -> app'(min,app'(app'(add,n),x)),app'(app'(if_min,false),app'(app'(add,n),app'(app'(add,m),x))) -> app'(min,app'(app'(add,m),x)),app'(app'(rm,n),nil) -> nil,app'(app'(rm,n),app'(app'(add,m),x)) -> app'(app'(app'(if_rm,app'(app'(eq,n),m)),n),app'(app'(add,m),x)),app'(app'(app'(if_rm,true),n),app'(app'(add,m),x)) -> app'(app'(rm,n),x),app'(app'(app'(if_rm,false),n),app'(app'(add,m),x)) -> app'(app'(add,m),app'(app'(rm,n),x)),app'(app'(minsort,nil),nil) -> nil,app'(app'(minsort,app'(app'(add,n),x)),y) -> app'(app'(app'(if_minsort,app'(app'(eq,n),app'(min,app'(app'(add,n),x)))),app'(app'(add,n),x)),y),app'(app'(app'(if_minsort,true),app'(app'(add,n),x)),y) -> app'(app'(add,n),app'(app'(minsort,app'(app'(app,app'(app'(rm,n),x)),y)),nil)),app'(app'(app'(if_minsort,false),app'(app'(add,n),x)),y) -> app'(app'(minsort,x),app'(app'(add,n),y)),app'(app'(map,f),nil) -> nil,app'(app'(map,f),app'(app'(add,x),xs)) -> app'(app'(add,app'(f,x)),app'(app'(map,f),xs)),app'(app'(filter,f),nil) -> nil,app'(app'(filter,f),app'(app'(add,x),xs)) -> app'(app'(app'(app'(filter2,app'(f,x)),f),x),xs),app'(app'(app'(app'(filter2,true),f),x),xs) -> app'(app'(add,x),app'(app'(filter,f),xs)),app'(app'(app'(app'(filter2,false),f),x),xs) -> app'(app'(filter,f),xs)], trsType = TRSStandard, trsStrategy = Just FULL, signatureBlock = True}
